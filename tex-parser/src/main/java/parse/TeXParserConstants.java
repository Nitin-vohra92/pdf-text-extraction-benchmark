/* Generated By:JavaCC: Do not edit this line. TeXParserConstants.java */
package parse;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
@SuppressWarnings("all")
public interface TeXParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int COMMENT_NEW_LINE = 2;
  /** RegularExpression Id. */
  int BEGIN_TABBING = 4;
  /** RegularExpression Id. */
  int END_TABBING = 5;
  /** RegularExpression Id. */
  int WHITESPACE = 6;
  /** RegularExpression Id. */
  int NEW_LINE = 7;
  /** RegularExpression Id. */
  int NEW_PARAGRAPH = 8;
  /** RegularExpression Id. */
  int STAR = 9;
  /** RegularExpression Id. */
  int UNDERSCORE = 10;
  /** RegularExpression Id. */
  int CIRCUMFLEX = 11;
  /** RegularExpression Id. */
  int GROUP_START = 12;
  /** RegularExpression Id. */
  int GROUP_END = 13;
  /** RegularExpression Id. */
  int OPTION_START = 14;
  /** RegularExpression Id. */
  int OPTION_END = 15;
  /** RegularExpression Id. */
  int COMMAND_PREFIX = 16;
  /** RegularExpression Id. */
  int DEF_COMMAND_PREFIX = 17;
  /** RegularExpression Id. */
  int NEW_COMMAND_PREFIX = 18;
  /** RegularExpression Id. */
  int WELL_DEFINED_DEFAULT_COMMAND = 19;
  /** RegularExpression Id. */
  int WELL_DEFINED_TABBING_COMMAND = 20;
  /** RegularExpression Id. */
  int WELL_DEFINED_COMMON_COMMAND = 21;
  /** RegularExpression Id. */
  int COMMAND_WITH_CHAR_ARG_OPTIONAL_WHITESPACE_DEFAULT = 22;
  /** RegularExpression Id. */
  int COMMAND_WITH_CHAR_ARG_OPTIONAL_WHITESPACE_TABBING = 23;
  /** RegularExpression Id. */
  int COMMAND_WITH_CHAR_ARG_OPTIONAL_WHITESPACE_COMMON = 24;
  /** RegularExpression Id. */
  int COMMAND_WITH_CHAR_ARG_MANDATORY_WHITESPACE = 25;
  /** RegularExpression Id. */
  int COMMAND_WITH_WORD_ARG_OPTIONAL_WHITESPACE = 26;
  /** RegularExpression Id. */
  int COMMAND_WITH_WORD_ARG_MANDATORY_WHITESPACE = 27;
  /** RegularExpression Id. */
  int MARKER = 28;
  /** RegularExpression Id. */
  int UPPERCASE_CHAR = 29;
  /** RegularExpression Id. */
  int LOWERCASE_CHAR = 30;
  /** RegularExpression Id. */
  int DIGIT = 31;
  /** RegularExpression Id. */
  int CHAR = 32;
  /** RegularExpression Id. */
  int AT = 33;
  /** RegularExpression Id. */
  int OTHER_SYMBOL = 34;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_TABBING = 1;
  /** Lexical state. */
  int IN_COMMENT = 2;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"%\"",
    "<COMMENT_NEW_LINE>",
    "<token of kind 3>",
    "<BEGIN_TABBING>",
    "<END_TABBING>",
    "<WHITESPACE>",
    "<NEW_LINE>",
    "<NEW_PARAGRAPH>",
    "\"*\"",
    "\"_\"",
    "\"^\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\"\\\\\"",
    "\"\\\\def\"",
    "<NEW_COMMAND_PREFIX>",
    "<WELL_DEFINED_DEFAULT_COMMAND>",
    "<WELL_DEFINED_TABBING_COMMAND>",
    "<WELL_DEFINED_COMMON_COMMAND>",
    "<COMMAND_WITH_CHAR_ARG_OPTIONAL_WHITESPACE_DEFAULT>",
    "<COMMAND_WITH_CHAR_ARG_OPTIONAL_WHITESPACE_TABBING>",
    "<COMMAND_WITH_CHAR_ARG_OPTIONAL_WHITESPACE_COMMON>",
    "<COMMAND_WITH_CHAR_ARG_MANDATORY_WHITESPACE>",
    "<COMMAND_WITH_WORD_ARG_OPTIONAL_WHITESPACE>",
    "\"\\\\input\"",
    "<MARKER>",
    "<UPPERCASE_CHAR>",
    "<LOWERCASE_CHAR>",
    "<DIGIT>",
    "<CHAR>",
    "\"@\"",
    "<OTHER_SYMBOL>",
  };

}
