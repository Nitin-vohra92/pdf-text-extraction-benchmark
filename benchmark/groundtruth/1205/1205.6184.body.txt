Corollary Proposition Lemma Definition Example Notation Remark Question

On the duals of geometric Goppa codes from norm-trace curves

Introduction

Let r  ≥  2 be an integer and let q denote a prime power (fixed). Consider the field extension [formula] and denote by [formula] the projective plane defined over the field [formula]. Write [formula] and denote by [formula] the curve having

[formula]

as an affine equation. Denote by [formula] and [formula] the [formula]-linear maps (named trace and norm, respectively) defined by

[formula]

The curve Yr is in fact defined by the equation r(x) = r(y) and so it is called the norm-trace curve associated to the integer r. If r = 2 then Y2 is the well-known Hermitian curve. We studied the geometric properties of the dual codes of Goppa codes on Y2 in [\cite=br1], [\cite=br2] and [\cite=br3]. Here we focus on the more complicated case r  ≥  3. In this situation the curve Yr is singular. The only point at infinity, of projective coordinates P∞: = (0:1:0), is also the only singular point of the curve (straightforward computation). Denote by π:Cr  →  Yr the normalization, which is known to be a bijection. The genus of Yr (which is by definition the genus of Cr) is g = (qr - 1 - 1)(c - 1) / 2 and the Weierstrass semigroup associated to P∞ is well studied in [\cite=geo] and known to be

[formula]

The curve Yr carries [formula] rational points and we have already stated that q2r - 1 of them lie in the affine chart {z  ≠  0}. Let Q∞: = π- 1(P∞). For any 0  ≤  s  ≤  cqr a basis of the Riemann-Roch space L(sQ∞) is formed by the (pull-backs of the) monomials

[formula]

(see [\cite=geil]). Since for any prime power q and for any r  ≥  2 we get (qr - 1) / (q - 1) > qr - 1, the degree of Yr is exactly c = (qr - 1) / (q - 1). The pull-backs of the monomials {1,x,y} span the vector space H0(Cr,π*(OYr(1))), which is contained into L(cQ∞). Since we know [formula], we get exactly L(cQ∞) = H0(Cr,π*(OYr(1))), the vector space of the homogeneous degree 1 forms on the curve Yr (we pull-back forms through π in order to work on a smooth curve). More generally, if 0 < d < q then the vector space of the degree d homogeneous forms on the curve Yr, H0(Cr,π*(OYr(d))), is exactly L(dcQ∞) and we will widely use this geometric fact in the paper to get a bond between classical Goppa codes and a new class of evaluation codes. For any 0 < d < qr - 1 a natural basis for the vector space H0(Cr,π*(OYr(d))) of the degree d homogeneous forms on the curve Yr is made of the monomials xiyj such that i,j  ≥  0 and i + j  ≤  d (up to a homogeneization). Indeed, these monomials are linearly independent because they appear also in the cited basis of L(dcQ∞). In general we have an inclusion of vector spaces

[formula]

One-point codes: a first analysis

In this section we study a simple family of evaluation codes on Yr curves. The method will be improved at a second time. First of all, we state a technical result.

Fix integers d > 0, z  ≥  2 and a zero-dimensional scheme [formula] such that deg (Z) = z.

If z  ≤  d + 1, then [formula].

If d + 2  ≤  z  ≤  2d + 1, then [formula] if and only if there is a line L such that [formula].

See [\cite=br1], Lemma 2.

Let 0 < d < qr - 1 - 1 be an integer. Set [formula]. Then C(d) will denote the linear code obtained evaluating the vector space H0(Cr,π*(OYr(d))) on π- 1(B).

By the injectivity of π, from now to the end of the paper we will write S instead of π- 1(S), for any [formula].

If 0 < d < q then the code C(d) is the so-called one-point code Cs (s: = dc) on Yr obtained by evaluating L(sP∞) at the rational points of the curve different from P∞ (see Section [\ref=intr]). For any 0 < d < qr - 1 - 1 we have an inclusion of codes C(d)  ⊆  Cs (the curve Yr is not in general projectively normal) which gives [formula]. Hence the minimum distance of [formula] is at least the minimum distance of [formula] (studied below).

The minimum distance of a [formula] code is d + 2. Moreover, the points in the support of a minimum-weight codewords are collinear. If q  ≤  d < qr - 1 - 1 then the support of a minimum-weight codeword of [formula] is contained into a line which cannot be horizontal.

Consider the line L of equation x = 0. By the properties of the trace map the equation r(y) = 0 has exactly qr - 1 distinct solutions, i.e. [formula]. Since d  ≤  qr - 1 - 2 we can pick out d + 2 distinct affine points

[formula]

from this intersection. They are obviously different from P∞. The natural parity-check matrix of [formula] has at most d + 1 non-zero rows (those associated to the monomials 1,y,...,yd). Hence the columns associated to the points P1,...,Pd + 2 are linearly dependent, i.e. {P1,...,Pd + 2} contains the support of a codeword of [formula] of weight w  ≤  d + 2. It follows that the minimum distance of [formula] is smaller or equal than d + 2. Since 0 < d < qr - 1 - 1 we have in particular d < c =  deg (Yf). Hence the restriction (and pull-back) map

[formula]

is injective. Let S be the support of a minimum-weight codeword. The set S imposes dependent conditions to H0(Cr,π*(OYr(d))); moreover, no proper subset [formula] imposes dependent conditions to that space. Hence the minimum distance of [formula] is exactly [formula]. We already know that [formula]. The set S imposes of course dependent conditions also to the image of ρd. Since this linear map is injective, we get that S imposes dependent conditions also to [formula], i.e. [formula]. By Lemma [\ref=u00.01] we must have that [formula]. Hence [formula] is the minimum distance of [formula]. Lemma [\ref=u00.01] implies also that d + 2 points in the support of a minimum-weight codewords have to be collinear.

Let us prove the second part of the statement. If d  ≥  q then xi∈L(dcP∞) for any i = 0,1,...,d + 1 (while if d < q we do not have xd + 1 in L(dcP∞) as a monomial). If q  ≤  d < qr - 1 - 1 then the minimum distance of [formula] is again d + 2 (reached in any case on vertical lines) but d + 2 columns associated to d + 2 points lying on a horizontal line are in fact always linearly independent (one can immediately find a Vandermonde submatrix of rank d + 2).

The number of the minimum-weight codewords of a [formula] code is at least

[formula]

By Theorem [\ref=te1] we know that the minimum distance of [formula] is d + 2 and that the points of the support of a minimum-weight codeword are collinear. Pick out any [formula] and consider the line Lα of equation x = α. The equation r(y) = α has qr - 1 distinct solutions. Choose any distinct affine d + 2 points P1,...,Pd + 2 in the intersection [formula]. The parity-check matrix of the code [formula] has at most d + 1 linearly independent rows (those associated to the monomials 1,y,...,yd) and so there exist a dependent relation among the columns associated to the points P1,...,Pd + 2, i.e. {P1,...,Pd + 2} is the support of a minimum-weight codewords of [formula] (d + 2 is known to be the minimum distance). In H0(Cr,π*(OYr(d))) we have only monomials xiyj with the property i  ≤  d. Hence we can repeat the proof with horizontal lines and the norm map. In this case we can choose any line of the form y = α, provided that α  ≠  0. The lower bounds in the statement follow.

If d < q then Theorem [\ref=te2] describes in fact one-point codes on norm-trace curves. Indeed, by setting s: = dc we get an identity of vector spaces L(sP∞) = H0(Cr,π*(OYr(d))) and so the one-point code Cs obtained evaluating L(sP∞) on [formula] is in fact C(d). This proves the following result.

Let s  ≥  0 be an integer. Write s = dc - a with 0  ≤  a  ≤  c - 1. Assume 0 < d < qr - 1 - 1. The dual minimum distance of the one-point code Cs obtained evaluating the vector space L(sP∞) on [formula] is d + 2. If d < q then the number of the minimum-weight codewords of [formula] code is at least [formula].

The minimum distance of [formula] is at least the minimum distance of [formula], which is d + 2. Since in L(sP∞) we have only the monomials yi with i  ≤  d this weight is reached on vertical lines as in the proof of Theorem [\ref=te1]. If d < q then apply Theorem [\ref=te2].

Set q: = 2,r: = 3 and d: = 2. The code [formula] can be studied by writing a simple Magma program. The minimum distance is 4. If d: = 1 then C(d) has dual minimum distance 3 and the number of the minimum-weight codewords of [formula] is 3360.

A few remarks on Goppa codes

Let q be a prime power and let [formula] be the projective space of dimension k over the field [formula]. Consider a smooth curve [formula] and a divisor D on it. Take points [formula] avoiding the support of D and set [formula]. The code [formula] is defined to be the code obtained evaluating the vector space L(D) at the points P1,...,Pn (see [\cite=Ste]). These codes were introduced in 1981 by Goppa, who was interested in studying their dual codes. Since a norm-trace curve Yr is not a smooth curve, when writing " Goppa code on Yr " we mean " Goppa code on Cr " (the normalization of Yr). The points of Yr will be identified with those of Cr through the injectivity of the normalization π:Cr  →  Yr.

Let q be a prime power. We say that codes C,D on the same field [formula] and of the same lenght are strongly isometric if there exists a vector [formula] of non-zero components such that

[formula]

The notation will be C  ~  D and this defines of course an equivalence relation.

Take the setup of Definition [\ref=si]. Then C  ~  D if and only if [formula]. Indeed, if [formula] then [formula], where [formula]. A strongly isometry of codes preserves in fact the minimum distance of a code, its weight distribution and the supports of its codewords.

Take the setup of the beginning of the section. Let D and D' be divisors on X and take points [formula] avoiding both the supports of D and D'. Set [formula]. It is known (see [\cite=mp], Remark 2.16) that if D  ~  D' (as divisors) then [formula]. By Remark [\ref=duuu] we have also [formula].

One-point codes

Let 0 < d < qr - 1 - 1 and a  ≥  0 be integers. We denote by C(d,a) the code obtained evaluating H0(Cr,π*(OYr(d)( - aP∞))) on the set [formula].

Let C(d,a) be as in Definition [\ref=def_a]. Assume a = 1. Then the minimum distance of [formula] is d + 1 and the number of the minimum-weight codewords of [formula] is exactly [formula].

Since 0 < a  ≤  d if a monomial xiyj is in the vector space H0(Cr,π*(OYr(d)( - aP∞))) then we must have j  ≤  d - 1 (we work up to a homogeneization). On the other hand, 1,y,...,yd - 1 are in any case in this space. As in the proof of Theorem [\ref=te1], any d + 1 affine points in the intersection of [formula] and a vertical line of equation x = α contain the support of a codeword of [formula]. Hence the minimum distance of [formula] is at most d + 1. Let [formula] be the support of a minimum-weight codeword of [formula]. The minimum distance of this code is exactly [formula]. Since d < qr - 1 - 1 < c the restriction (and pull-back) map

[formula]

is injective. Since S imposes dependent conditions to the vector space H0(Cr,π*(OYr(d)( - P∞))) then it has to impose dependent conditions also to [formula], i.e. [formula]. In particular we have [formula]. Observe that [formula]. By Lemma [\ref=u00.01] we get the existence of a line [formula] such that [formula]. Since [formula] we deduce P∞  ⊆  L (as schemes). Hence L is either the line at infinity, or a vertical line. The line at infinity does not intersect Yr at any affine point, so L has to be a vertical line. It follows

[formula]

Since we have shown that [formula], the minimum distance of [formula] is exactly d + 1 and S consists of d + 1 points on a vertical line.

Let Cs be the one-point code on Yr obtained evaluating the vector space L(sP∞) on the rational points of Yr different from P∞. Divide s by c with remainder and write s = dc - a with 0  ≤  a  ≤  c - 1. Assume 0  <  d  <  qr - 1 - 1 and a  ≤  d.

If a = 0 then the minimum distance of [formula] is d + 2.

If a = 1 then the minimum distance of [formula] is d + 1.

If 1 < a  ≤  d then the minimum distance of [formula] is at least d + 2 - a and at most d + 1.

Since s = dc - a we have a linear equivalence sP∞  ~  dcP∞ - aP∞. Since 0 < d < qr - 1 - 1 the minimum distance of [formula] is at least the minimum distance of [formula], because of the inclusion

[formula]

If a∈{0,1} then as in the proof of Theorem [\ref=te1] and Theorem [\ref=teo_a] this minimum distance is reached on vertical lines (the monomials of the form yi appearing in L(sP∞) and in H0(Cr,π*(OYr(d))( - aP∞)) are the same). If 1 < a  ≤  d then we can repeat the proof of Theorem [\ref=teo_a] into a slightly general context.

It could be pointed out that Corollary [\ref=one] describes in fact also some classical Goppa one-point codes arising from norm-trace curves (and not only the dual codes of such kind of codes). Indeed, norm-trace curves turn out to be a particular case of Castle curves and so ([\cite=cast], Proposition 5) we get a strong isometry of one-point codes [formula], in the sense of Definition [\ref=si], with n = q2r - 1 and 2g - 2 = (qr - 1 - 1)(c - 1) - 2. It follows that the metric properties of Cn + 2g - 2 - s are those of [formula].

Two-point codes

Let P0 denote the point of Yr of projective coordinates (0:0:1). In this section we study codes obtained by using zero-dimensional plane schemes supported by P∞ and P0. The results can be applied to study several two-point codes on norm-trace curves (as we will explain in details).

Let 0 < d < qr - 1 - 1 be an integer. Choose integers a,b  ≥  0. We denote by C(d,a,b) the code obtained evaluating the vector space H0(Cr,π*(OYr(d)( - aP∞ - bP0))) on the set [formula].

Let C(d,a,b) be a code of Definition [\ref=def_ab]. Assume d > 1. If b > d then C(d,a,b) is strongly isometric to the code C(d - 1,a,0). Hence [formula] is strongly isometric to the code [formula] (see Remark [\ref=duuu]).

Keep on mind that C(d,a,b) is the code obtained evaluating H0(Cr,π*(OYr(d)( - aP∞ - bP0))) on [formula]. The curve Yr is smooth at P0 and the tangent line to Yr at P0 has equation y = 0. This line has contact order c with Yr and does not intersect Yr in any rational point different from P0. Since b > d, if f∈H0(Cr,π*(OYr(d)( - aP∞ - bP0))) then (π* is injective) f is a degree d form which is divided by y, the equation of the tangent line. Hence the codes obtained evaluating H0(Cr,π*(OYr(d)( - aP∞ - bP0))) on B and that obtained evaluating H0(Cr,π*(OYr(d - 1)( - aP∞))) on B are in fact strongly isometric.

Let C(d,a,b) be as in Definition [\ref=def_ab]. If b > d then assume d > 1, set b': = 0 and d': = d - 1. Otherwise set b': = b and d': = d. In any case set a': = a. Assume a'∈{0,1}.

If a' = 0 and b' > 0 then the minimum distance of [formula] is d' + 1 and the number of the minimum-weight codewords of [formula] is at least [formula].

If b' = 0 and a' = 1 then the minimum distance of [formula] is d' + 1 and the number of the minimum-weight codewords of [formula] is exactly

[formula]

If a' = 1 and b' > 0 then the minimum distance of [formula] is d' and the number of the minimum-weight codewords of [formula] is exactly [formula]

By Lemma [\ref=reduc] we have C(d,a,b)  ~  C(d',a',b'). Hence we can study the properties of the code C(d',a',b') without loss of generality. If a' = 0 and b' > 0 then d + 1 affine points of the curve different from P0 on the line of equation x = 0 impose dependent conditions to H0(Cr,π*(OYr(d')( - b'P0))) because the monomials y,...,yd∈H0(Cr,π*(OYr(d')( - b'P0))) and yd + 1 does not lie in this space. If a' = 1 and b' = 0 then d' + 1 affine points of the curve Yr on any line of equation x = α ([formula]) and different from P0 impose dependent conditions to H0(Cr,π*(OYr(d')( - P∞))) because 1,y,...,yd - 1 are in the basis of the vector space H0(Cr,π*(OYr(d')( - P∞))) and yd are not. If a' = 1 and b' > 0 then any d' affine points of the curve different from P0 on the line of equation x = 0 impose dependent conditions to H0(Cr,π*(OYr(d')( - a'P∞ - b'P0))) because y,...,yd - 1∈H0(Cr,π*(OYr(d')( - a'P∞ - b'P0))) and 1,yd do not. So in cases (1) and (2) the dual minimum distance of C(d',a',b') is at most d' + 1. In case (3) it is at most d'. Let [formula] be the support of a minimum-weight codeword of [formula]. The minimum distance of this code is exactly [formula]. The set S imposes dependent conditions to the space H0(Cr,π*(OYr(d')( - a'P∞ - b'P0))) and so it imposes dependent conditions also to [formula]. It follows [formula].

Assume to be in case (1) or in case (2). Since [formula], Lemma [\ref=u00.01] gives the existence of a line [formula] such that [formula]. If a' = 0 then [formula]. Otherwise L has to be the tangent line to Yr at P0, which is absurd because a' + b'  ≤  d. If b' = 0 then [formula] because a' = 1. Hence the minimum distance of [formula] is exactly d' + 1. If b = 0 then any d' + 1 affine points of the curve Yr different from P0 on a vertical line are in fact the support of a minimum weight codeword. There are [formula] such points on any such a line different from the line of equation x = 0 and [formula] such points on the line of equation x = 0. If a = 0 and b > 0 then d' + 1 points of the support of a minimum-weight codeword of [formula] lie on a line passing through P0.

Assume to be in case (3). As in the previous part of the proof we get the existence of a line [formula] such that [formula]. Since [formula] and L cannot be the tangent line to Yr at P0, it follows that L is the line of equation x = 0. The number of the minimum-weight codewords trivially follows.

The hypothesis a' + b' > 0 implicitely assumed in Theorem [\ref=teo_ab] is in fact not restrictive. Indeed, if a = b = 0 then, for any d, the code C(d,0,0) is the code C(d,0) without the component corresponding to the evaluation at P0.

The divisor of the rational function y on the curve Yr is (y) = cP0 - cP∞ (see [\cite=geo], Section 3). Hence we get the linear equivalence cP0  ~  cP∞. So if d < q then Theorem [\ref=teo_ab] is very useful to study two-point codes on norm-trace curves (see Example [\ref=ex2] below).

The following is an interesting computational example.

Set r: = 3 and q: = 3, so that c = 13. Let us study the two-point code C on the curve Y3 of equation

[formula]

obtained evaluating the vector space L(12P∞ + 11P0) on the set [formula]. Observe that 12P∞  ~  cP∞ - P∞ and that 11P0  ~  cP0 - 2P0  ~  cP∞ - 2P0. Hence

[formula]

Set d: = 2, a: = 1 and b: = 2. Since d < q the code C is in fact strongly isometric to the code C(2,1,2) of Definition [\ref=def_ab] and its dual minimum distance is 2. Indeed, we can set a': = a, b': = b and d': = d and apply directly Theorem [\ref=teo_ab]. Let us study in details the code [formula]. By using the linear equivalence 12P∞ + 11P0  ~  26P∞ - P∞ - 2P0 we have already seen that

[formula]

The results of Section [\ref=si] assure that we are not changing the metric properties of the code [formula] by using these linear equivalences. Apply the preliminary results of Section [\ref=intr] to compute a vector basis of L(25P∞):

[formula]

The rational function x has a zero at P0 of order 1, while the rational function y has a zero at P0 of order c = 13 (see [\cite=geo], Section 3). Hence 1,x∉L(25P∞ - 2P0) and

[formula]

On the other hand, the Riemann-Roch space L(25P∞ - 2P0) is equal to the vector space

[formula]

(see Section [\ref=intr] again). Set S: = 2P0. The scheme S imposes independent conditions to the vector space H0(C3,π*(OYr(2)( - P∞))). Indeed, if it imposes dependent conditions to this space then it has to impose dependent conditions also to [formula] (use the injectivity of the map ρd,1 as in the proof of Theorem [\ref=teo_a]). By Lemma [\ref=u00.01] there must exist a line [formula] with the property [formula], which is absurd, because deg (S) = 2. This proves that the dimension of H0(C3,π*(OYr(2)( - P∞ - 2P0))) is [formula]. It follows that {y,xy,x2} is in fact a basis of the Riemann-Roch space [formula]. So we have all the explicit data needed to construct the code [formula] in a Magma environment. It can be checked that the minimum distance of [formula] is in fact 2 = d. Hence the number of the minimum-weight codewords of [formula] is exactly [formula] (Theorem [\ref=teo_ab]).

More general evaluation codes

The result of Section [\ref=one] and Section [\ref=two] can be slightly extended by using zero-dimensional schemes whose support is made of arbitrary affine points of the curve Yr.

Let 0 < d < qr - 1 - 1 be an integer. Choose a zero-dimensional subscheme [formula] such that [formula]. We denote by C(d,E) the code obtained evaluating the vector space H0(Cr,π*(OYr(d)( - E))) on the set [formula].

Let [formula] be a zero-dimensional scheme. Denote by L the set of the lines in [formula] different from the line of equation y = 0 and the line at infinity of equation z = 0. Denote by V the set of the vertical lines in [formula]. Define

[formula]

Consider a C(d,E) code as in Definition [\ref=def_E]. Assume deg (E)  ≤  d. The minimum distance of [formula] is at least d + 2 - m(E). If [formula] then the minimum distance of [formula] is exactly [formula] and the number of the minimum-weight codewords of [formula] is at least

[formula]

If [formula] then the thesis trivially follows from Theorem [\ref=te1]. Assume [formula]. There obviously exists a vertical line L such that [formula] and, by definition of [formula], [formula]. The scheme [formula] is reduced. Indeed, if there exists a point [formula] such that [formula] then L has to be the tangent line to Yr at P. The tangent line to Yr at [formula] has equation

[formula]

Since [formula], this line cannot be vertical, a contradiction. Let L be a vertical line which realizes the maximum in the definition of [formula]. Set [formula] and observe that [formula]. Choose [formula] distinct points in [formula] and denote by S their union (as a zero-dimensional scheme). Since d < qr - 1 - 1 < c, the restriction map

[formula]

is injective. As in the proof of Theorem [\ref=te1], the set [formula] (whose degree is d + 2) imposes dependent conditions to H0(Cr,π*(OYr(d))). On the other hand, the set A imposes independent conditions to this space. Indeed, if it imposes dependent conditions, then by Lemma [\ref=u00.01] there must exist a line [formula] such that [formula]. Since deg (A)  ≤   deg (E), this leads to a contradiction. It follows that [formula] imposes dependent conditions to the space H0(Cr,π*(OYr(d)( - A))). In particular, it imposes dependent conditions to H0(Cr,π*(OYr(d)( - E))). In other words, S contains the support of a codeword of [formula]. Hence the minimum distance, say δ, of [formula] has to verify [formula]. Assume that [formula] is the support of a minimum-weight codeword of [formula]. The minimum distance of [formula] is exactly [formula] and [formula]. Since the restriction map

[formula]

is injective (d < qr - 1 - 1  <  c by assumption), the set S has to impose dependent conditions to the space [formula] and in particular we have [formula]. Since [formula] we can apply Lemma [\ref=u00.01] to get the existence of a line [formula] such that [formula]. The line R cannot be neither the line of equation y = 0, or the line at infinity. It follows [formula]. This proves that the minimum distance of [formula] is at least d + 2 - m(E). If [formula] then we have in fact proved that the minimum distance of [formula] is exactly d + 2 - m(E) and any d + 2 - m(E) points on a vertical line avoiding the support of E are the support of a minimum-weight codeword. The theorem is proved.

Remarks on the dimension of two-point codes on norm-trace curves

Let m,n be integers such that m + n > 0. Write m = d1c - a and n = d2c - b with 0  ≤  a,b  ≤  c - 1. Set d: = d1 + d2. On the curve Yr it holds the linear equivalence cP0  ~  cP∞ and so we get

[formula]

If d < q then the two-point code on Yr obtained evaluating the rational functions in the Riemann-Roch space L(mP∞ + nP0) on the set [formula] is in fact the code obtained evaluating H0(Cr,π*(OYr(d)( - aP∞ - bP0))) on B, i.e. C(d,a,b) (see Definition [\ref=def_ab]).

Let 0 < d < q, 0  ≤  a,b  ≤  c - 1 be integers with b > 0. The dimension of C(d,a,b) is h0(Yr,OYr(d)( - aP∞ - bP0)).

The point P∞ is a singular point. We denote by π:Cr  →  Yr the normalization of the norm-trace curve Yr. The map π is known to be a bijection. Let Q0: = π- 1(P0) and Q∞: = π- 1(P∞), which is a nonsingular point of Cr. Since d < q it follows that C(d,a,b) is the code obtained evaluating the vector space L(dcQ∞ - aQ∞ - bQ0) on the set π- 1(B). Since |π- 1(B)| = q2r - 1 - 1 we have

[formula]

It follows that the kernel of the evaluation map :L(dcQ∞ - aQ∞ - bQ0)  →  B is a zero-dimensional vector space and so the image of [formula] (which is exactly C(d,a,b)) has dimension [formula].

The case b = 0 is not of interest. Indeed, a C(d,a,0) code is a shortening of a C(d,a) code (see Definition [\ref=def_a]).

Let 0 < d < q, 0  ≤  a,b  ≤  c - 1 be integers with b > 0. If b > d then C(d,a,b) has dimension h0(Yr,OYr(d - 1)( - aP∞)).

By Lemma [\ref=dim] it is enough to prove that h0(Yr,OYr(d)( - aP∞ - bP0)) = h0(Yr,OYr(d - 1)( - aP∞). A form f∈H0(Yr,OYr(d)( - aP∞ - bP0)) is a degree d homogeneous polynomial on the curve Yr vanishing at P0 with order at least b. Since P0 is a nonsingular point of the curve Yr, f is divided by the equation of the tangent space to Yr at P0, which is y = 0. The division by y defines in fact an isomorphism of vector spaces

[formula]

whose inverse is the multiplication by y (the tangent line to Yr at P0 has contact order c  ≥  b).

The dimension of the Riemann-Roch space L(sP∞) on Yr will be denoted by N(s). If 0  ≤  s  ≤  cqr then N(s) is the number of the pairs [formula] such that

[formula]

The basis for L(sP∞) made of the monomials xiyj (i,j with the cited properties) will be denoted by Bs.

Let 0 < d < q, 0  ≤  a  ≤  c - 1 and 0  ≤  b  ≤  d be integers with b > 0. Set s: = dc - a. Then [formula].

First of all, let us consider the trivial inclusion of Riemann-Roch spaces L(dcP∞ - aP∞ - bP0)  ⊆  L(dcP∞ - aP∞). We have in any case [formula]. Since b  ≤  d in the basis Bs appear the monomials 1,x,...,xb - 1. These rational functions are linearly independent and do not lie in L(dcP∞ - aP∞ - bP0), because x has a zero of order one at P0. Hence the dimension of this space is exactly N(s) - b. Moreover, it is spanned by the monomials in [formula].

Let 0 < d < q, 0  ≤  a,b  ≤  c - 1 be integers with b > 0. Set s: = dc - a.

If b  ≤  d then the dimension of C(d,a,b) is N(s) - b.

If b > d then the dimension of C(d,a,b) is N(s - c).

If b  ≤  d then apply Proposition [\ref=red]. If b > d then use Lemma [\ref=-1].

Acknowledgment

The authors would like to thank the Referees for suggestions that improved the presentation of this work.