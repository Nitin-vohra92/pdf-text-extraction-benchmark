Fast Approximation Algorithms for Art Gallery Problems in Simple Polygons

Lemma

Introduction

The art gallery problem is to find the minimum set of points G such that any point in a polygon P is visible from some point in the set G. The points in G are called guards. Two points x,y are mutually visible if all the points of convex combination of x,y are in the polygon. The art gallery problem is proved as a NP-hard problem first by O'Rourke and Supowit [\cite=Oro83-1] in polygons with holes. Lee and Lin [\cite=Lee86] showed minimum vertex, edge and point guard problem in simple polygon are also NP-hard. It is known that the number of guards needed is at most ⌈n / 3⌉ for stationary point guards in simple polygon [\cite=Chv75]. There are many results about related research [\cite=Avi81] [\cite=Ede84] [\cite=Kah83] [\cite=Oro83-2].

A vertex guard problem and an edge guard problems are restricted version of original art gallery problem called point guard problem. The vertex guard problem(VG problem) is to find the minimum set Gv of vertices of polygon such that any point in the polygon is visible from some vertices in Gv. Edge guards problem(EG problem) is similar to the VG problem but all points in P should be weakly visible from some edges in the minimum set of edges Ge. A point z in P is weakly visible from an edge e of P if there exists a point u on e such that z and u are visible. Ghosh [\cite=Gho87] presents O(n5 log n) time algorithm for VG problem with a approximation ratio of at most O( log n) times the minimum number of VGs. Aggarwal, Ghosh, and Shyamasundar [\cite=Agg88] present O(n4 log n) time algorithm for covering a polygon by star-shaped pieces that is at most O( log n) times the optimal number of star-shaped pieces. Each star-shaped pieces can be visible from one point in its kernel thus the same number of guards can cover the original polygon. Efrat and Har-Peled [\cite=Efr06] give randomized approximation algorithms for VG problem in simple polygons with O(nc2opt log 4n) time complexity and O( log copt) approximation ratio. In polygons with h holes, they present O(nhc3optpolylogn) time algorithm with O( log n log (copt log n)) approximation ratio. copt is optimal number of VGs in the problem, and it can be O(n) in the worst case of input. Therefore, even in expected time, the time complexity is greater than O(n3) in the worst case.

Recently, Ghosh [\cite=Gho10] present new approximation algorithm run in O(n4) time in simple polygons and O(n5) time in polygons with holes for VG and EG problem. The approximation ratio O( log n) is the same as previous results since his algorithm first discretizes the polygon into convex components with respect to visibility of vertices of the polygon, and after that, solves the problem as the set-covering problem with greedy heuristic. Ghosh argue that this type of solving technique, transforming art gallery problem into set-covering problem after discretizing the entire polygon, is the only known one leading to efficient approximation algorithms in terms of worst case running times and approximation bounds. The convex components are similar convex elements concept to the visibility regions [\cite=Bos91] [\cite=Bos02]. Visibility regions are constructed from the windows of vertices thus its edges divide the interior of the polygon whether corresponding vertex is visible or not. On the other hand, convex components are from line segments passing through any two vertices of the polygon. Therefore, there are neighboring components that their sets of visible vertices of polygon are exactly the same and thus these division is redundant from the view of visibility. By the previous work of Bose [\cite=Bos91], the number of visibility regions is O(n3) in simple polygon. Ghosh recognized that the same principles from the lemmas of [\cite=Bos91] are also valid in convex components. O(n4) time complexity in simple polygons naturally comes from O(n3) number of elements, i.e. convex components, and n sets each of which is for a vertex of polygon in set-covering problem.

We focus on the other property of visibility regions that Bose [\cite=Bos91] also discovered. The number of sinks in the simple polygon is O(n2). In this report, we present new faster approximation algorithms for VG and EG problems than previous O(n4) time algorithm in simple polygon. It is based on the theorem that the number of sinks is much smaller than the number of whole visibility regions. From the next part, we define some terminologies and prove lemmas which conclude that the algorithms leads to O(n3) time complexity and O( log n) approximation ratio.

Approximation Algorithm for Vertex Guards

A visibility polygon VP(P,z) denote the set of all points of P that are visible from a point z in P. For following terminologies, we use the same definitions in [\cite=Bos91] [\cite=Bos02]. A maximally connected subset R of P is a visibility region if any two points in R are visible from the same subset of vertices of P. The visibility set MR of R is the subset of vertices of P visible from R. Two visibility regions are neighboring if they share a common edge of their boundary. A sink s is a visibility region that has a visibility set Ms such that Ms  ⊂  Mq for every neighboring visibility regions q of it. A window of a point x denote a segment that is a part of an edge of VP(P,x) and not contained in the boundary of P. The vertex of a window closest to x is a base and the other is an end.

Sink has only incoming edges in the dual graph of the visibility region division. The dual graph of visibility regions is an directed acyclic graph that connects each neighboring visibility regions that share a common edge and its direction towards the visibility region with the smaller visibility set. By one of lemmas and a corollary in [\cite=Bos91], Two visibility regions that share a common edge have the same visibility set except for one vertex and through the direction of corresponding edge of dual graph, there is a loss of visibility from one vertex. Let a VG-sink denote a sink of visibility regions for VG problem

The set of VGs Gv is the optimal solution of VG problem in a simple polygon P if and only if Gv is the minimum set that covers all VG-sinks.

Algorithm Step 1. Find visibility polygons Pi = VP(P,vi) for [formula] where V(P) is the set of all vertices of polygon P. Step 2. Compute all visibility regions [formula] by constructing the planar subdivision of [formula] where ∂Pi is boundary of visibility polygon Pi. Step 3. Construct a dual graph D of visibility regions. Step 4. Find the set of sinks [formula] of G. Step 5. Compute the set of visible vertices VVj for each sink sj∈S. Step 6. Compute the set of visible sinks Ui for each vertex vi∈V(P). Step 7. Solve the set-covering problem of U1,U2,��.,Un.

Analysis Let us analyze the time complexity of Step 1-4. Since VP(P,vi) can be computed by linear algorithm [\cite=Gin81] [\cite=Joe87] [\cite=Lee83], Step 1 requires O(n2) time. The number of intersection pairs in W is O(n3) [\cite=Bos91] [\cite=Bos02] and |W| = O(n2). Thus, the planar subdivision of W can be constructed in O(n2 log n2 + n3) = O(n3) time [\cite=Bal95] [\cite=Cha92]. By the theorem in [\cite=Bos91] [\cite=Bos02] that the number of visibility regions r  ≤  O(n3), Step 3 can be done in O(n3) by considering all the edges of visibility regions from the segments in W. Step 4 can be done easily in O(n3) by searching all the nodes of D. By Lemma [\ref=lemma1], it is enough to compute the minimum set Gv that covers S. Gv can be computed in Step 5-7. In Step 5, since each sj is a convex region [\cite=Bos91] [\cite=Bos02], a certain point pj in sj can be easily computed. Then VVj  =  {v|v∈VP(P,pj),v∈V(P)} can be computed in O(n) time using any linear time visibility polygon algorithm [\cite=Gin81] [\cite=Joe87] [\cite=Lee83]. Since m  ≤  O(n2) [\cite=Bos91] [\cite=Bos02], Step 5 takes O(mn) = O(n3) time. Step 6 can be done easily in O(n3) times by considering all pairs of sj∈S and vi∈V(P). Step 7 can be done in O(mn) = O(n3) time with the approximation ratio of O( log n) [\cite=Chv79].

An approximate solution that is at most O( log n) times the optimal solution can be computed by the approximation algorithm of O(n3) time complexity for VG problem in any simple polygon.

Approximation Algorithm for Edge Guards

The set of all windows for EG is a subset of the set of all windows for VG in simple polygon and has the same orientation in the dual graph.

The set of EGs Ge is the optimal solution of EG problem in a simple polygon P if and only if Ge is the minimum set that covers all VG-sinks.

For the following description of an algorithm for EG problem, we define two more terminologies. E(P) is the set of all edges on the boundary of P. An edge e∈E(P) is partially visible from a convex region R  ⊆  P if all the points in R are weakly visible from e.

Algorithm Step 1. Find visibility polygons Pi = VP(P,vi) for [formula]. Step 2. Compute all visibility regions [formula] by constructing the planar subdivision of [formula]. Step 3. Construct a dual graph D of visibility regions. Step 4. Find the set of sinks [formula] of G. Step 5. Compute the set of partially visible edges VEj from each sink sj∈S. Step 6. Compute the set of weakly visible sinks Uk from each edges ek∈E(P). Step 7. Solve the set-covering problem of U1,U2,��.,Un.

Analysis We can compute S in O(n3) time from the analysis of algorithm for VG problem. By Lemma [\ref=lemma3], it is enough to compute the minimum set Ge that covers S. Ge can be computed in Step 5-7. In Step 5, since each sj is a convex region [\cite=Bos91] [\cite=Bos02], a certain point pj in sj can be easily computed. Then, [formula] can be computed in O(n) time using any linear time visibility polygon algorithm [\cite=Gin81] [\cite=Joe87] [\cite=Lee83]. Since m  ≤  O(n2) [\cite=Bos91] [\cite=Bos02], Step 5 takes O(mn) = O(n3) time. Step 6 can be done easily in O(n3) times by considering all pairs of sj∈S and ek∈E(P). Step 7 can be done in O(mn) = O(n3) time with the approximation ratio of O( log n) [\cite=Chv79].

An approximate solution that is at most O( log n) times the optimal solution can be computed by the approximation algorithm of O(n3) time complexity for EG problem in any simple polygon.

Concluding Remarks

For any simple polygon P of n vertices, an approximation solution of VG, EG problem can be computed in O(n3) time and the size of the solution is at most O( log n) times the optimal. As in [\cite=Gho10], presented algorithms can be adopted for the VG and EG problems in polygons with holes. But, the number of sinks are O(n4) that is the same complexity of all visibility regions in polygons with holes [\cite=Zar05]. Therefore, no further reduction on time complexity than O(n5) algorithms in [\cite=Gho10] can be archived unless there exist some smaller dominant sets as sinks in simple polygons.