=5pt 15.8cm 23.0cm = 0.0cm = 6pt 0.8cm -0.2cm 0.3cm 0.3cm

Theorem Proposition Lemma Corollary Conjecture Question Remark Observation

:;; Corollary [\ref=#1] ([\ref=#1]) Fact [\ref=#1] Lemma [\ref=#1] Observation [\ref=#1] Proposition [\ref=#1] Question [\ref=#1] Remark [\ref=#1] Section [\ref=#1] Theorem [\ref=#1] Example [\ref=#1] §[\ref=#1] [\ref=#1]

:;; Corollaries [\ref=#1] Facts [\ref=#1] Lemmas [\ref=#1] Observations [\ref=#1] Propositions [\ref=#1] Questions [\ref=#1] Remarks [\ref=#1] Sections [\ref=#1] Theorems [\ref=#1] Examples [\ref=#1] Definitions [\ref=#1] [\ref=#1]

<>;; :;;:;;

:<>;; [\ref=#2]:;;

Wiring Switches to Light Bulbs

Introduction

The following problem was posed in the 2008 Irish Intervarsity Mathematics Competition:

In a room there are 2008 bulbs and 2008 buttons, both sets numbered from 1 to 2008. For 1  ≤  i  ≤  2008, pressing Button i changes the on/off status of Bulb i and one other bulb (the same other bulb each time). Assuming that all bulbs are initially off, prove that by pressing the appropriate combination of buttons we can simultaneously light at least 1340 of them. Prove also that in the previous statement, 1340 cannot be replaced by any larger number.

This problem, henceforth referred to as the Prototype Problem, can be generalized in a variety of ways:

Most obviously, "2008" can be replaced by a general integer n.

We can consider more general wirings W, where each button changes the on/off status of a (possibly non-constant) number of bulbs.

We may consider initial configurations c where not all of the bulbs are off.

We however insist that the numbers of buttons and bulbs are equal, and that Button i changes the on/off status of Bulb i, 1  ≤  i  ≤  n.

Such problems are rather closely related to the type of problem known as MAX-XOR-SAT in Computer Science. We discuss this connection in more detail in the next section.

Figure [\ref=Figure1] is a sketch of a typical wiring.

Before we continue, let us introduce a little notation. For a fixed wiring W, where the initial configuration of the bulbs is given by c, let M(W,c) be the maximum number of bulbs that can be lit by pressing any combination of the buttons.

Suppose n,m  ≥  1. Let μ(n,m) be the minimum value of M(W,c) over all wirings W of n buttons and bulbs, where Button i is connected to at most m bulbs, including Bulb i, for each 1  ≤  i  ≤  n, and initially all bulbs are off (which we write as "c = 0"). If additionally n  ≥  m, let μ*(n,m) be the minimum value of M(W,c) over all wirings W of n buttons and bulbs, where Button i is connected to exactly m bulbs, including Bulb i, for each 1  ≤  i  ≤  n, and c = 0. Thus the Prototype Problem is to show that μ*(2008,2) = 1340.

We define μ(n) = μ(n,n), which trivially equals μ(n,m) for all m > n. Thus μ(n) is the minimum value of M(W,0), over all wirings of the n buttons, subject only to condition (d) above.

We also define ν(n,m), ν*(n,m), and ν(n) in a similar manner to μ(n,m), μ*(n,m), and μ(n), respectively, except that we take the minima over all possible initial configurations c, rather than taking c = 0. In this paper, we are mainly interested in μ(n,m) and μ*(n,m), and we compute these functions for m  ≤  3. However the more easily calculated ν-variants will be useful, so we compute them in all cases.

Our first theorem gives formulae for μ(n,2) and μ*(n,2); note that μ(n,2) = μ*(n,2) except when [formula].

Let [formula].

[formula].

If n  ≥  2, then [formula] is the least even integer not less than μ(n,2).

Next we give formulae for μ(n,3) and μ*(n,3).

Let [formula].

μ(n,3)  =  μ(n,2).

If n  ≥  3, then

[formula]

Note that μ*(n,3)  =  μ(n,3) + 1 in the exceptional case n = 6k - 3.

We discuss μ(n,m) and μ*(n,m) in the case n > 3 in a separate paper [\cite=BOF]. Let us note here only that μ(n,m) and μ*(n,m) are no longer asymptotic to 2n / 3 for large n, when [formula]. For instance, we prove in [\cite=BOF] that μ(n,4) is asymptotic to 4n / 7, and that [formula].

After some preliminaries in the next section, where we also discuss the connection between this problem and MAX-XOR-SAT, we prove general formulae for ν(n,m) and ν*(n,m) in S:nu:;;. We then prove T:m=2:;; in S:m=2:;; and T:m=3:;; in S:m=3:;;.

We wish to thank David Malone for pointing out the connection between our results and SAT.

Notation and terminology

The notation and terminology introduced in this section will be used throughout the paper. We begin by recasting our problem. First note that we can replace the twin notions of buttons and bulbs with the single notion of vertices: when a vertex is pressed, the on/off state of that vertex and some other vertices is switched. The vertex set [formula] is associated with a directed graph G: we draw an edge from vertex i to each vertex j  ≠  i whose on/off status is altered by pressing vertex i. Figure [\ref=Figure2] shows a representation of the directed graph corresponding to the wiring in Figure [\ref=Figure1]. Notice that we do not include a loop from each vertex to itself, even though it is understood that a given switch always switches the corresponding bulb.

Associated with a given directed graph G is the edge function F:S  →  2S, where j∈F(i) if j = i or if there is an edge from i to j, and the backward edge function F- 1:S  →  2S, where j∈F- 1(i) if j = i or if there is an edge from j to i. We extend the definitions of F and F- 1 to 2S in the usual way: F(T) and F- 1(T) are the unions of F(i) or F- 1(i), respectively, over all i∈T  ⊂  S. We say that T  ⊂  S is forward invariant if F(T)  ⊂  T, or backward invariant if F- 1(T)  ⊂  T. We denote by GT the subgraph of G consisting of the vertices in T and all edges between them.

If we examine the effect of a finite sequence of vertex presses [formula], on a fixed vertex i0, it is clear that the final on/off state of vertex i0 depends only on its initial state and the parity of the number of indices j, 1  ≤  j  ≤  k, for which i0∈F(ij). In particular, the order of the vertices in our finite sequence is irrelevant to the final state of i0. Since this is true for each vertex, we readily deduce the following:

The order of a finite sequence of vertex presses is irrelevant to the final on/off states of all vertices.

We may as well assume that each vertex is pressed at most once, since pressing it twice produces the same effect as not pressing it at all.

Thus instead of talking about a finite sequence of vertex presses, we can talk about a set of vertex presses and represent this set as an n-dimensional column vector [formula] (where [formula] denotes the field with two elements), with xi = 1 if and only if vertex i is pressed once and xi = 0 if it is not pressed at all. Similarly, we represent the initial on/off state of the vertices by a column vector [formula], with ci = 1 if and only if vertex i is initially lit. Lastly, we represent the wiring W as an element in [formula], the space of n  ×  n matrices over [formula]. Specifically, W = (wi,j), where wi,j = 1 if and only if vertex j affects the on/off status of vertex i; we insist that wi,i = 1 for all i∈S. The degree of vertex i, [formula], is the number of 1s in the ith column of W (or equivalently the cardinality of F(i)), and the degree of W, [formula], equals [formula].

We use a t-superscript for matrix transposition, and In is the n  ×  n identity matrix.

For [formula], we define |u| to be the Hamming "norm" or Hamming distance from u to the origin, i.e. the number of 1 entries in u. With the above definitions for x, c, W, the vector [formula] is such that vi = 1 if and only if vertex i is lit, assuming we have initial configuration c, wiring W, and vertex presses given by x. Moreover, |Wx + c| is the number of lit vertices. The function M(W,c) defined in the Introduction can now be described as [formula].

For n,m  ≥  1, we define A(n,m) to be the set of matrices in [formula] that have 1s all along the diagonal and satisfy [formula]. If also n  ≥  m, we define A*(n,m) to be the set of matrices in A(n,m) for which [formula], for all i∈S. These classes of matrices are the classes of admissible wirings for the functions defined in the Introduction:

[formula]

The largest class of admissible wirings on n vertices that interests us is A(n): = A(n,n). This gives rise to the numbers μ(n): = μ(n,n) and ν(n): = ν(n,n), as defined in the Introduction. It is convenient to define μ(0,m) = 0 for all [formula].

Although the Hamming distance is a central part of the problems under consideration, these problems are on the surface quite different from those in coding theory, since we are looking for wirings that minimize the maximum distance from the origin of Mx, [formula], whereas in coding theory we are looking for codes that maximize the minimum distance between codewords. However, it is shown in [\cite=BOF] that Sylvester-Hadamard matrices, which are known to give rise to Hadamard codes that possess a certain optimality property, also give rise to certain optimal wirings.

We say that a subgraph H of G with k vertices is a complete subgraph (on k vertices) if there is an edge from every vertex of H to every other vertex of H. For brevity, we call a complete subgraph on k vertices a Ck from now on, and a Ck set is just the set of vertices of a Ck.

The problems under consideration in this paper are closely related to MAX-XOR-SAT problems in Computer Science. These problems are in the general area of propositional satisfiability (SAT). Specifically we want to assign values to Booloean variables so as to maximize the number of clauses that are true, where each clause is composed of a set of variables connected by XORs. Since XOR in Boolean logic corresponds to addition mod 2, this problem can be written in our notation as follows: given a matrix [formula], we wish to choose a variables vector [formula] so as to maximize the Hamming norm |Wx|; the N entries in [formula] are the clauses. Thus the goal is to compute M(W,0).

XOR-SAT and MAX-XOR-SAT has been studied extensively in recent years; see for instance [\cite=CD1], [\cite=CD2], [\cite=CDE], [\cite=DR]. Algorithms for solving such problems are useful in cryptanalysis [\cite=DGMMPR], [\cite=SNC].

The relationship between MAX-XOR-SAT and our wiring problem is plain to see, so let us instead mention the differences:

MAX-XOR-SAT is concerned with finding M(W,0) for a fixed but arbitrary W, rather than seeking the minimum of M(W,0) over a class of admissible Ws. The main problems in MAX-XOR-SAT revolve around the efficiency of the computation of M(W,0) for large n rather than the computation of a minimum for all n.

In MAX-XOR-SAT, there is no requirement that N = n, and so no matching of clauses with variables (or bulbs with buttons in our terminology) and no requirement that wii = 1.

In MAX-XOR-SAT and other SAT problems, the typical simplifying assumption is that there are either exactly, or at most, m variables in each clause. Thus in SAT we typically bound the Hamming norms of the rows of W, while in our wiring problem we bound the Hamming norms of the columns of W.

In spite of the differences, we would hope that the lower bounds in M(W,0) given by our results might be of some interest to MAX-XOR-SAT researchers.

Formulae for ν and ν*

Given n  ≥  m, the following inequalities are immediate:

[formula]

We now establish a lower bound for M(W,c).

Let [formula]. For all W∈A(n) and [formula], the mean value of |Mx + c| over all [formula] is n / 2. In particular, M(W,c)  ≥  n / 2 and M(W,c) > n / 2 if the cardinality of [formula] is not n / 2.

Fix W and c. Let [formula] and [formula]. Both Si and Ti have cardinality 2n - 1 and, since pressing vertex i toggles its own on/off status, the number of x∈Si with i lit (i.e. (Wx + c)i = 1) equals the number of x∈Ti with i unlit (i.e. (Wx + c)i = 0). Thus letting x range over [formula], the mean value of vi is 1 / 2, and the mean value of |Wx + c| is n / 2. The last statement in the lemma follows easily.

The above lemma is a key tool in proving the following result which gives the general formula for ν(n,m) and ν*(n,m). In this result, we ignore the case m = 1 since trivially ν(n,1) = ν*(n,1) = n.

Let [formula], m > 1.

[formula].

If n  ≥  m, then

[formula]

In particular, ν*(n,2) = ν*(n) = ν(n) for all n > 1.

We will prove each identity by showing that the right-hand side is both a lower and an upper bound for the left-hand side.

By L:mean:;;, [formula] for all W∈A(n) and [formula]. This global lower bound yields the desired lower bound for ν(n) and a fortiori for ν(n,m) and for ν*(n,m) except in the case where n is even and m is odd.

Fix [formula] and W∈A*(n,m) for some odd m > 1 and n  ≥  m. Each vertex press must change the parity of the number of lit vertices and, since the mean value of |Wx + c| is n / 2, it follows that |Wx + c| > n / 2 for some [formula]. Since ν(n,m) = n / 2 if n is even, we deduce that ν*(n,m)  ≥  ν(n,m) + 1 if n is even and m odd.

To prove the reverse inequalities, we take as our initial configuration the even indicator vector [formula] defined by ei = 1 when i is even, and ei = 0 when n is odd. We split the set of integers between 1 and n into pairs {2k - 1,2k}, 1  ≤  k  ≤  n / 2, with n being unpaired if n is odd; corresponding to the pairs of integers, we have pairs of rows in the wiring matrix W and pairs of vertices. For each proof of sharpness, we will define W = (wi,j) such that M(W,e) equals the desired lower bound. Pressing vertex j has no effect on the pair of vertices 2k - 1 and 2k if w2k - 1,j = w2k,j = 0, and it toggles both of them if w2k - 1,j = w2k,j = 1. Since initially one vertex in each pair is lit, this remains true regardless of what vertices we press if the corresponding pair of rows are equal to each other (as will be the case for most pairs of rows). Thus, in calculating M(W,e), we can ignore all pairs of equal rows, for which the corresponding vertex presses leaves the number of lit vertices unchanged, and we only have to consider the vertices that do not come in equal pairs.

For t∈{0,1}, we denote by tp  ×  q the p  ×  q matrix all of whose entries equal t, and let tp = tp  ×  p. The matrix 1p should not be confused with the identity matrix Ip.

To finish the proof of (a), it suffices to show that [formula]. Define the n  ×  n block diagonal matrix

[formula]

In case n = 9, this matrix corresponds to the wiring of nine switches and bulbs represented by Figure [\ref=Figure3]. In this figure, the boxes labelled by the number 2 represent complete directed graphs on two vertices, and the small circle represents a single vertex. We shall always indicate a Cv subgraph by a box labelled v.

Then W∈A(n,2) and [formula]. To see this, note that rows 2k - 1 and 2k of W are equal to each other for each 1  ≤  k  ≤  n / 2. Thus when n is even, |Wx + e| is independent of x, while it toggles between the two values r and r - 1 when n = 2r - 1 is odd, due to the change in the state of vertex n each time that vertex is pressed.

It remains to prove that the desired formula for ν*(n,m) is also an upper bound for ν*(n,m) when n  ≥  m > 1. Suppose first that n - m is even. First define the block diagonal matrix W'∈A(n,m) by the formula [formula], where there are (n - m) / 2 copies of 12. We modify W' = (w'i,j) to get a matrix W = (wi,j)∈A*(n,m) by adding m - 2 1s to the end of the first n - m columns, i.e. let

[formula]

In case n = 9 and m = 3, the matrix W corresponds to a wiring of the kind indicated in Figure [\ref=Figure4]. In this diagram, the boxes indicate complete subgraphs having two or three vertices, as indicated. A single arrow coming from a C2 box indicates an edge from each of the two vertices in the box and going to the same vertex in the C3. The target vertex may be the same or different for the three C2's, but the vertices in a given C2 share the same target. In general, in our diagrams, we will use the convention that all the switches corresponding to vertices in a given Cv box produce exactly the same effect. Notice that nonisomorphic graphs may correspond to the same box diagram", in view of the fact that a box diagram is not specific about the targets of some arrows.

All paired rows of W are equal, so if n and m are both even, then |Wx + e| = n / 2 for all [formula], whereas if n and m are both odd, the value of |Wx + e| is either (n + 1) / 2 or (n - 1) / 2, depending on the parity of |xi|. In either case, we have found a matrix W∈A*(n,m) with M(W,e) = ν(n,m), and so ν*(n,m) = ν(n,m).

Suppose next that n is odd and m even, with n > m + 1. We first define the block diagonal matrix W'∈A(n,m) by the formula [formula], where there are (n - m - 3) / 2 copies of 12 and

[formula]

and then define W = (wi,j) by the equation

[formula]

The corresponding wiring is indicated schematically in Figure [\ref=Figure5].

The circled subgraph corresponds to the matrix W3.

The first n - 3 rows can be split into duplicate pairs as before, so the associated pairs of vertices will always be of opposite on/off status and the number of them that is lit is always (n - 3) / 2.

Initially two of the last three vertices are lit. Since m is even, the parity of the number of lit vertices is preserved, and so no more than two of the last three vertices can be lit. Thus M(W,e) = (n + 1) / 2 in this case, as required.

The case where m is odd and n > m + 1 is even, is similar. We first define W'∈A(n,m) by the formula [formula], and then define W = (wi,j) from W' by E:WW':;;. The corresponding wiring is indicated schematically in Figure [\ref=Figure6].

There are four unpaired rows, namely rows i, m  ≤  i  ≤  m + 3. By an analysis similar to the previous case, at most three of these vertices can be lit (namely vertex m and at most two of the other three vertices), and half of the remaining n - 4 vertices are always lit. It follows that M(W,e) = (n + 2) / 2, as required.

Finally if n = m + 1, we define W to be the block diagonal matrix

[formula]

See Figure [\ref=Figure7].

The first m or m - 1 rows are paired, depending on whether m is even or odd, respectively. Thus M(W,e)  ≤  1 + m / 2 if m is even, or M(W,e)  ≤  2 + (m - 1) / 2 if m is odd, as required.

Generalizing an idea used in the above proof, we see that if W and c have block forms

[formula]

then

[formula]

This readily yields the following:

If λ is any one of the four functions μ, μ*, ν, or ν*, then it is sublinear in the first variable:

[formula]

as long as this equation makes sense (i.e. we need n1,n2  ≥  m if λ  =  μ* or λ  =  ν*).

The case m = 2

Trivially μ(1,2) = 1, and it is easy to check that μ(2,2) = 2. Taking W3 as in E:W3:;;, we see that M(W3,0) = 2, and so μ(3,2)  ≤  μ*(3,2)  ≤  2. By combining E:sublinear:;; with these facts, we see that for [formula], k  ≥  0, and i∈{0,1,2},

[formula]

Since [formula], this gives the sharp upper bound for μ(n,2). The corresponding sharp upper bound for μ*(n,2) follows similarly when n  ≥  1 has the form 3k or 3k + 2, k  ≥  0. If n = 3k + 1, k  ≥  1, only a small change is required to the μ-proof to get a proof of the sharp μ* upper bound:

[formula]

It remains to show that we can reverse the above inequalities. We first examine the reverse inequalities for μ*, so fix W∈A*(n,2). Writing F:S  →  2S for the edge function, where [formula], we get a well-defined function f:S  →  S by writing f(i) = j whenever there is an edge from i to j in the associated graph G. For a dynamical system on any finite set, every point is either periodic or preperiodic. In our context, this just means that if we apply f repeatedly to any initial vertex i∈S, then we eventually get a repeat of an earlier value, and from then on the iterated values of f go in a cycle.

Note that the topological components of G do not "interfere" with each other: the vertices in any one component affect only the on/off status of vertices in this component, so maximizing the number of lit vertices can be done one component at a time (alternatively, this follows from E:WaWb:;; after reordering of the vertices).

A component of the graph G consists of a central circuit containing two or more vertices, with perhaps some directed trees, each of which leads to some vertex of the circuit, which we call the root of that tree. Starting from the outermost vertices of such a tree (those that are not in the range of f) and working our way down to the root, it is not hard to see that we can simultaneously light all vertices in each of these trees. Having done this, some of the vertices in the central circuit may not be lit up. We follow the vertices around the circuit in cyclic order, pressing each vertex that is unlit when we reach it until we have gone fully around the circuit. It is clear that at this stage at most one vertex in the circuit is unlit, and all the associated trees are still fully lit.

Note that any single vertex press either leaves the number of lit vertices in a given component unchanged, or changes that number by 2. Since initially all vertices are unlit, it follows that the number of lit vertices in a component is always even. It therefore follows that in a component of even cardinality all vertices can be lit, while in a component of odd cardinality all except one can be lit.

Thus it follows that to minimize M(W,0) we need to maximize the number of components of odd cardinality (necessarily at least 3), and that the maximum proportion of lit vertices in any one component is at least 2 / 3 (with equality only for components of cardinality 3). Thus [formula], which gives the required lower bound except when n = 3k + 1, [formula]. Since G has n = 3k + 1 vertices and all components have at least two vertices, it can have at most k - 1 components of odd cardinality, yielding the desired estimate μ*(3k + 1,2)  ≥  3k + 1 - (k - 1) = 2k + 2. Thus μ*(n,2) is given by the stated formula in all cases.

For μ, the above proof goes through with little change, except that components can now be singletons. Singleton components can always be lit, so [formula], as required.

Note that although singleton components do not contribute unlit vertices, they do allow us to get k, rather than just k - 1, components of odd cardinality at least 3 when n = 3k + 1. This accounts for the difference between μ(n,2) and μ*(n,2) in this case.

Pivoting and the case m = 3

In preparation for the proof of T:m=3:;;, we introduce the concept of pivoting. Pivoting about a vertex i, 1  ≤  i  ≤  n, is a way of changing the given wiring W to a special wiring Wi such that M(Wi,c)  ≤  M(W,c). Additionally, pivoting preserves the classes A(n,m) and A*(n,m).

Fixing a wiring W = (wi,j) and initial configuration c, and let F:S  →  2S denotes the edge function associated to W, where [formula]. Given i∈S, let Mi = M(Wi,c) where the pivoted wiring matrix Wi is defined by the condition that its jth column equals the ith column of W if j∈F(i), and equals the jth column of W otherwise. In other words, Wi rewires the system so that pressing the jth vertex has the same effect as pressing the ith vertex in the original system whenever j∈F(i). On the other hand, it is easy to see that Mi is the maximum value of |Wx + c| over all vectors x such that xj = 0 whenever [formula]. In particular, Mi  ≤  M(W,c).

Pivoting about i, as defined above, is a process with several nice properties:

it does not increase the value of M: M(Wi,c)  ≤  M(W,c);

it preserves membership of the classes A(n,m) and A*(n,m);

if Fi is the edge function of Wi, then Fi(i) = F(i) is a forward invariant complete subgraph of the associated graph Gi.

It is sometimes useful to pivot partially about i: given T  ⊂  S, and i∈S, we define W' by replacing the jth column of W by its ith column whenever [formula]. Such pivoting about i with respect to T satisfies the same non-increasing property, preserves membership in A(n,m) and A*(n,m), and [formula] is a (not necessarily forward invariant) complete subgraph of the associated graph G'.

Pivoting is the key trick in the proof of the following lemma.

Let m  ≥  2 and n  ≥  1. Then either μ(n + m,m) = μ(n + m,m - 1), or

[formula]

Suppose μ(n + m,m) < μ(n + m,m - 1), and let W∈A(n + m,m) be such that M(W,0) = μ(n + m,m). Then W has a vertex i of degree m. By minimality of W, pivoting about i gives Wi∈A(n,m) with M(Wi,0)  =  μ(n + m,m) (cf. Figure [\ref=Figure10]. The loop marked n - m just indicates an unspecified subgraph of order n - m.). For the wiring Wi, we first press a set of vertices in

[formula] so as to maximize the number of lit vertices in [formula], and then we press vertex i if fewer than half of the vertices in F(i) are lit. By forward invariance of F(i), the result follows.

Trivially, we have that μ(n,3)  ≤  μ(n,2), with equality if n < 3. It is also immediate that μ(3,3) = μ(3,2) = 2: any wiring that includes a vertex of degree 3 allows us to light all vertices by pressing the degree 3 vertex.

Suppose therefore that μ(n',3) = μ(n',2) for all n' < n, where n > 3. Either this equation still holds when n' is replaced by n, or

[formula]

Here, the first equality follows from T:m=2:;;, the second from the inductive hypothesis, and the first inequality from L:alternative:;;. Since μ(n,2) is at both ends of this line, we must have μ(n,3)  =  μ(n,2), and the inductive step is complete.

For the proof of T:m=3:;;(b), we need another lemma.

Let [formula], with n  ≥  m. Then

[formula]

It suffices to prove the lemma subject to the restriction n'  ≤  n, since this case, the trivial estimate μ*(n,m)  ≤  n, and sublinearity E:sublinear:;; together imply the general case. Let us therefore assume that n'  ≤  n.

Let V = (vi,j)∈A*(n,m) be such that M(V,0) = μ*(n,m). We now define a matrix W = (wi,j)∈A*(n + n',m + 1). First the upper left block of W is a copy of V, i.e. we let wi,j = vi,j for all 1  ≤  i,j  ≤  n. Next, the n'  ×  n block of W below V consists of copies of the n'  ×  n' identity matrix; the last of these copies will be missing some columns unless n is a multiple of n'. Lastly, we define wi,n + j = wi,j for all 1  ≤  j  ≤  n'. It is straightforward to verify that W∈A*(n + m',m + 1); note that the assumption n'  ≤  n ensures that W has 1s along the diagonal. Refer to Figure [\ref=Figure11] for a schematic. Note that vertex 6 + i has the same targets as vertex i, but these edges going to vertices other than 7 to 9 are not shown.

Since all columns after the nth column are repeats of earlier columns, it suffices to consider what happens when we press only combinations of the first n vertices. Such combinations light at most μ*(n,m) of the first n vertices, so we are done.

L:nn'm:;; ensures that if [formula], then μ*(3k + i,3)  ≤  μ*(3k,2) + i  =  2k + i. This is the required sharp upper bound if i = 1,2, since 2k + 1 = μ(3k + i,2) in this case. On the other hand, μ*(3k + i,3)  ≥  μ(3k + i,3) = 2k + i, for all [formula], and this gives the required converse for i = 1,2.

It remains to handle the case where n is a multiple of 3. First we show that the lower bound μ*(3k,3)  ≥  μ(3k,3) = 2k is sharp when k = 2k' is even. Letting

[formula]

we claim that M(W6,0) = 4. Assuming this claim, E:sublinear:;; gives the desired sharpness: μ*(6k',3)  ≤  k'μ*(6,3)  ≤  k'M(W6,0) = 4k'.

To establish the claim, it suffices to consider sets of vertex presses involving only vertices 1, 2, and 4. With this restriction, we proceed to list all eight possible values of x, and deduce that M(W6,0) = 4:

It remains to handle the case where n = 6k' - 3 for some [formula]. It is trivial that μ*(3,3) = 3. Next note that L:nn'm:;; ensures that for k  ≥  2, μ*(3k,3)  ≤  μ*(3k - 3,2) + 3 = 2k + 1, so we need to show that this is sharp if k > 1 is odd.

Supposing μ*(n,3) = 2k for some fixed n = 3k, [formula], k > 1, we will prove that k must be even. Let W = (wi,j)∈A*(n,3) be such that M(W,0) = 2k, let [formula], and let F:S  →  2S be the edge function associated to W.

We can assume that W is additionally chosen so that the associated graph G has a maximal number of (disjoint) C3's among all matrices W'∈A*(n,3) for which M(W',0) = 2n / 3. The maximum number of C3's is always positive since we can get a C3 by pivoting about any one vertex; C3 sets are pairwise disjoint and forward invariant, since each vertex in a C3 uses up its two allowed outbound edges within the same C3.

We define A to be the union of all the C3 sets. If [formula], then [formula] must be nonempty, since otherwise pivoting about i would create an extra C3. Thus each [formula] has at most one edge from it to another vertex in [formula]. Suppose there is such a vertex i with F(i) not a subset of A. Then we can pivot about i relative to A to get a C2, and the only edges coming from this C2 are single edges from both of its vertices to the same element in A. We repeat such pivoting of vertices relative to A to create more such C2s until this is no longer possible. From now on W will denote this modified wiring matrix. We denote by B the union of the C2 vertices and write [formula], and we refer to each vertex in C as a C1 (which it is, trivially).

We already know that there is an edge from each vertex in C to some vertex in A. If there is only a single edge from some i∈C to [formula], then there must be an edge from i to some j∈C. Pivoting about i relative to [formula] (or equivalently, relative to A), we create a new C2, contradicting the fact that this cannot be done. Thus there are two edges from each i∈C to [formula]. See Figure [\ref=Figure13].

We have shown that there are edges from C to [formula], and from B to A, but that both A and [formula] are forward invariant. Also, there are no links between elements in C, or between elements in distinct C2's or in distinct C3's. There are 3s elements in A, 2t elements in B, and u in C, for some integers s,t,u, and we have 3s + 2t + u = n.

The forward invariance of both A and [formula] suggests two algorithms for lighting many of the vertices. The first is to begin by pressing all these vertices in C to light all these vertices. After this first step, we can ensure that at least one vertex in each C2 is lit by pressing a vertex in any C2 without a lit vertex. Finally, we ensure that at least two vertices are lit in each C3 by pressing a vertex in any C3 in which less than two vertices are lit. Having done this, we have at least 2s + t + u lit vertices, so 2s + t + u  ≤  μ*(n,3). Thus 6s + 3t + 3u  ≤  3μ*(n,3) = 2n. When we compare this with the equation 6s + 4t + 2u = 2n, we deduce that t  ≥  u.

An alternative algorithm for lighting the vertices is to first press one vertex in each C2, thus lighting all C2 vertices. As a second step, press a vertex in any C3 in which less than 2 vertices are lit. Having done this, at least two vertices in each C3 are lit as well as both vertices in each C2. Consequently, 2s + 2t  ≤  μ*(n,3) = 2n / 3. Thus 6s + 6t  ≤  2n, while 6s + 4t + 2u = 2n. It follows that u  ≥  t, and so u = t.

Note that the first lighting algorithm gives at least 2s + 2t = 2n / 3 lit vertices, and it actually gives more than this number unless after the first step exactly one vertex in each C2 is lit. Since any larger number contradicts μ*(n,3) = 2n / 3, there must be an edge from C to each C2. But since the numbers of C1's and of C2's are equal, and there is at most one edge from each C1 to B (since at least one edge from each C1 goes to A), it follows that from each C1 there is an edge to a C2, and no other vertex in C is linked to the same C2, i.e. we can pair off each C1 with the unique C2 to which it is linked in the graph. See Figure [\ref=Figure14]. We refer to the subgraph of G given by the union of a C1 and a C2 plus the edge between them as a C1,2; the set of its three vertices is a C1,2 set.

The second lighting algorithm will give more than 2s + 2t = 2n / 3 lit vertices unless the first step ends with one or two lit vertices in each C3. Thus there is an edge from at least one C2 to each C3. Since any one C2 is linked to only a single C3, it follows that t  ≥  s.

We now define the active vertices to be the elements of a collection of vertices consisting of all C1 vertices, together with one vertex from each C2, and the active edges are all the edges coming from active vertices. When considering the effect of pressing sets of vertices in [formula], we can restrict ourselves to considering only sets of active vertices, hence the terminology.

To light more than two thirds of the vertices, it suffices to first light two vertices in every C1,2 set in such a way that there is at least one C3 that is either fully lit or fully unlit, since we can subsequently light two thirds of all vertices in all other C3 sets, together with all vertices in the fully unlit or fully lit C3, by pressing only C3 vertices. Since each C3 is forward invariant, we are done.

But given a C1,2 set with all vertices unlit, pressing one or both of its active vertices leaves exactly two of its vertices lit. This gives us three ways of lighting two thirds of the vertices in that C1,2 set, and this flexibility will be crucial to proving that n must be a multiple of 6. In particular, it means that for any given C3, there must be an associated C1,2 both of whose active vertices have edges leading to that C3, since if this were not so, we could light two vertices in each C1,2 without ever pressing a vertex linked to that C3. Furthermore, even if a C1,2 is doubly linked to a C3, but the two active edges between them connect to the same vertex, then by pressing both active vertices, the on/off status of all vertices in the C3 remains unchanged. Let us therefore say that a C1,2 set with two active links to distinct vertices in a C3 is well linked to that C3 set. We say that they are badly linked if they are linked but not well linked.

It follows that S can be decomposed into a collection of C1,2 sets, each of which is paired off with a distinct C3 set to which it is well linked, plus t - s extra C1,2 sets that have not been paired off with any C3, but are linked (well or badly) to some of the C3's. We claim that if t > s then the residual C1,2 sets always allow us to arrange that at least one C3 is fully lit or fully unlit after we light two vertices in every C1,2. It follows the claim that n cannot be an odd multiple of 3, since then we would have t - s > 0, and we could light more than two thirds of the vertices.

Suppose therefore that t > s, and so there exists some particular C3 with vertex set D = {a,b,c}, say, that has more than one C1,2 linked to it, at least one of which is well linked. We wish to show that we can press one or both of the active vertices in each of the C1,2's linked to D while keeping D in sync (meaning that all three of its vertices are in the same on/off state).

Now D is initially in sync, and we can handle any two well-linked C1,2's while keeping D in sync. To see this, note that if the two pairs of active links go to the same pair of vertices in D, then we press all four active vertices in both C1,2's. If on the other hand, they do not go to the same pair of vertices then without loss of generality, one C1,2 is linked to a and b and the other to b and c. By pressing three of the four active vertices, we can toggle the on/off status of all three vertices in D.

Since we can handle well-linked C1,2's two at a time, and we can handle badly linked ones one at a time, while keeping D in sync, we can reduce to the situation of having to handle only two or three C1,2's, with at least one of them well linked. We have already handled the case of two well-linked C1,2's, so assume that there are two C1,2's and exactly one is well linked, to a and b, say, while the other is badly linked, with either one or two links to a single vertex v∈D. By symmetry, we reduce to either of two subcases: if v = a, then we press one active vertex in both C1,2's that is connected to a, while if v = c, then we press three vertices so as to toggle the on/off status of all of D.

There remains the case of three linked C1,2's. If two are well linked and one badly linked, then we just handle the two well-linked ones together as above, and separately handle the badly linked one. Finally, all three may be well linked. If all three C1,2's link to the same pair of vertices, a and b, say, then we press both active vertices in one of them and one in the other two, to ensure that both a and b are toggled twice (and so unchanged). If two C1,2's link to the same pair of vertices, a and b, say, and the third links to b and c, say, then we can press one vertex in each C1,2 to ensure that all three vertices in D are toggled once. Finally if no two C1,2's leads to the same pair of vertices, then one leads to a,b, another to b,c, and a third to c,a. We can press all six of the active vertices so as to toggle each of a,b,c twice. This finishes the proof of the theorem.

Note that even when n is a multiple of 6, the above argument gives us some extra information: after suitable pivoting, any wiring W∈A*(n,3) with M(W,0) = 2n / 3 must reduce to a collection of C1,2's each of which is well linked to a distinct C3. Each associated subgraph with six vertices is a component of the full graph and is unique (up to relabeling of the vertices). Moreover it is the graph of the wiring W6 in E:W6:;; so, after suitable pivoting, any wiring W∈A*(n,3) with M(W,0)  =  2n / 3 reduces to n / 6 copies of W6.