Random Substitution-Insertion-Deletion (RSID) Model of Molecular Evolution with Alignment-free Parameter Estimation

Introduction

While substitution models of molecular evolution have been well studies and developed, the inclusion of insertions and deletions (indels) into biologically accurate models has enjoyed less success. As remarked in [\cite=Bradley2007], a robust and comprehensive understanding of probabilistic indel analysis (and its relation to sequence alignment) is still lacking. A number of models of molecular evolution that include substitutions, insertions and deletions have been proposed ([\cite=Cartwright2009], [\cite=Miklos2009], [\cite=Miklos2004], [\cite=Thorne1991], [\cite=Thorne1992]), but what is missing is a comprehensive mathematical structure in which can be cast the problem developing of biologically accurate models of molecular evolution. In fact, it is this lack of a well-studied mathematical structure that leads to the analytic intractability of some proposed indel models (as mentioned in [\cite=Miklos2004]). This lack of a unifying structure not only gives rise to computational entities with no biological counterpart such as "fragments" ([\cite=Thorne1991], [\cite=Thorne1992]) and the embedding of a given sequence into an infinite sequence ([\cite=Miklos2004]), but also leads to difficulties in comparing models, their assumptions, and their applicability. For example, the relationships between various substitution models of molecular evolution are well understood and these relationships can be easily compared and contrasted (as in [\cite=Whelan2001] and [\cite=Lio1998]). This is due to most traditional substitution models being stated in terms of instantaneous rate matrices of a finite state Markov chain. Due to the variety of mathematical tools that have been used to implement indels in various applications (for example: HMM's [\cite=Cartwright2009], rate grammars [\cite=Miklos2004], transducers [\cite=Kim2007], birth-death processes [\cite=Thorne1991] [\cite=Thorne1992]) no such immediate comparison of models is possible.

A few structures have been suggested, most notably the framework of a finite state transducer ([\cite=Bradley2007]). While finite state transducers indeed seem promising, we take a slightly different route that comes from the direction of dynamical systems (and so will allow for the application of many well-known dynamical systems' tools).

We present in this paper a comprehensive mathematical theory in which one can explore biologically accurate models of molecular evolution. We also present an alignment-free method of estimating parameters.

Our model allows for the incorporation of substitutions, insertions and deletions of any length less than or equal to a specified length N. We also incorporate rate heterogeneity, and neighboring dependencies (context dependency) up to a specified distance. The model is discrete time (it can be viewed as a generalization of a stochastic grammar) and the assumptions are clearly stated: First, we assume that in one time unit, (possibly different) segments of DNA will not be both deleted and inserted. In one step, only insertions or deletions are allowed, not both. Second, we assume reversibility, though as we will see, this assumption can easily be relaxed. These are the only inherent assumptions in this model, but since our model contains a high degree of flexibility further assumptions can be made if, for example, one insists on using, say, the HKY ([\cite=Hasegawa1985]) model as the underlying substitution model.

The mathematical language in which we cast this model is that of a discrete, time-homogeneous Markov chain on infinitely (countably) many states. This framework Also allows for the possibility of recasting the model in terms of a time-inhomogeneous Markov chain so as to allow for the evolution of the rate of evolution, but in this paper we remain in the time-homogeneous case for notational simplicity. No exotic constructs (like fragments, immortal or normal links, etc.) are used. This will maximize the number of probabilistic and mathematical tools that can be used to analyze this model. In the literature, this kind of mathematical environment is referred to as a "Random Substitution" [\cite=Koslicki2011] as mathematicians refer to a insertions, deletions, and substitutions collectively as "substitutions."

Being that this model is cast in the robust, well studied environment of countable state Markov chains, exact, closed form solutions to many statistical questions become possible. Thus we can in some cases circumvent the nuanced issues introduced with estimation procedures (like the issue of attaining a local maximum versus global maximum for Hidden Markov Model MLE parameter estimation [\cite=Durbin1998], and other such issues mentioned in [\cite=Miklos2009],[\cite=Miklos2004]).

Definition of the Model

We present now the rigorous definition of the model. We proceeded in two steps: First we define an infinite state Markov chain to incorporate insertions and substitutions. Second we construct the induced reversible Markov chain which will incorporate deletions. To construct the first Markov chain, we need:

[formula] a finite set of ordered symbols referred to as an alphabet.

For each letter [formula], (Ωa,Pa) a finite (non-empty) probability space.

For each letter [formula], a function [formula] with the property that if |ga(ω)| > 1, then the word ga(ω) begins with a.

Let [formula] denote all words of length n formed from letters of [formula]. Then [formula] is the set of finite length words formed from [formula]. The alphabet [formula] is usually equal to either {A,C,T,G} for DNA models, or [formula] for amino acid models. The probability spaces (Ωa,Pa) encapsulate the probabilities of insertion and substitution. In particular, the cardinality of Ωa gives the number of different substitution, insertion, and deletion types that are allowed to occur at the letter [formula]. The functions [formula] (and particularly, the ranges of functions ga) specify the set of allowable substitutions and insertions. In particular, if one wishes to allow the substitution of the letter [formula] to occur at the letter [formula], then the function ga should evaluate to b on some Pa-non-zero element ω1 of Ωa: ga(ω1) = b. If one wishes to allow the insertion of the n-length word [formula] to occur after the letter [formula], then the function ga should evaluate to [formula] on some Pa-non-zero element ω2 of Ωa: [formula]. Notice that the word [formula] is preceded by a in [formula], this is to assure that [formula] has been genuinely inserted into the sequence. Lack of the initial a would cause the net effect of a being deleted, then [formula] being inserted into the created gap.

We now define the Markov chain representing random substitutions and insertions.

A random substitution-insertion (RSI) (with fixed [formula], [formula], and [formula]) is an infinite state Markov chain [formula] with transition operator P defined in the following way. For [formula] a word, we let [formula] and [formula]. We define [formula] via concatenation of words: for [formula], [formula]. Now define P by

[formula]

So one can think of the given model in the following way: instead of modeling the evolution of individual nucleotides (or fragments) the Markov transition operator P operates on entire sequences. Indeed, the state space of this model is [formula]: the set of all sequences. The transition operator P(u,v) (probability of transition from the sequence u to the sequence v) takes into consideration every insertion and substitution possible in one time unit to compute the appropriate probability.

We now construct the induced reversible Markov chain, which will serve to incorporate deletions. Recall first the definition of a reversible Markov chain:

A Markov chain (X,P) with state space X and transition operator P, is said to be reversible if there exists a function m:X  →  (0,  ∞  ) such that for all x,y∈X,

[formula]

We now define the Markov chain which will serve as our comprehensive model of molecular evolution.

we define the random substitution, insertion, deletion (RSID) model [formula] to be the Markov chain with the transition matrix given by

[formula]

This Markov chain is reversible with m(x) given by [formula]. Since any random substitution has finite range |{y:P(x,y) > 0}| <   ∞  , the above is well defined. Note that as mentioned in the introduction, we can completely circumvent the reversibility criterion (and simultaneously allow for different rates for insertions and deletions) by modifying the above definition in the following way. If we wish insertions to have a rate πi and deletions to have a rate of πd (one can easily make these rates depend on time, or location in a given sequence), then we can use the RSID model [formula] with R given by

[formula]

Summarizing, [formula] is an infinite state, discrete-time Markov chain, with the state space representing entire DNA or amino acid sequences. We have implemented this RSID model as a discrete-time Markov since we wish to model mutations that occur due to inherent DNA replication infidelities, not mutations due to environmental factors. Such mutations can be accurately modeled in a discrete time fashion. The transition probability R(u,v) between two sequences u and v takes into account every possible substitution that could have happened when evolving the sequence u into v in one evolutionary step (the time unit can be taken to be a single replication). The transition probability R(u,v) also takes into account all possible substitution and insertion paths leading from u to v, as well as all possible substitution and deletion paths leading from u to v. Again, the first assumption is that both insertions and deletions do not simultaneously happen in one step. Rather, to allow insertions and deletions, one needs to consider the n-th step transition matrix: R(n)(u,v) which is the (u,v)th entry in the nth matrix product of R with itself. This n-step transition probability represents the probability (summed over all possible paths) of evolving the sequence u into the sequence v in n time units. So for the purpose of measuring the total evolutionary distance from u to v, one considers the so called Green's function:

[formula]

The Green's function represents the total measure of ever evolving the sequence u into the sequence v. The function G(  ·  ,  ·  ) can then be used as a measure of evolutionary distance between sequences (with the obvious applications to say, phylogenetics).

Example

We present here a toy example to elucidate the above definitions. We also present notation that succinctly summarizes given model. In this example, say we wish to have a mathematical object that represents a model where substitutions are described by Kimura's two parameter model [\cite=Kimura1980] with transition probability equal to 0.2 and transversion probability equal to 0.1. Thus the instantaneous rate matrix for substitutions has the form:

[formula]

Say we also desired the model to allow only one letter insertions or deletions, with the probability of an indel occurring being 0.01, and the choice of the particular indel type being given by the uniform distribution. Thus, transitions occur with probability 0.2 * (1 - 0.01) = 0.198, transversions occur with probability 0.1 * (1 - 0.01) = 0.099 and insertions and deletions both occur with probability 0.01 / 4 = 0.0025.

Using the notation introduced in section [\ref=definitions], the alphabet is given by [formula]. Each of the probability spaces Ωa consist of eight elements. We provide the details regarding ΩA,PA, and gA since the other definitions are completely analogous. Now as stated ΩA  =  {1,2,3,4,5,6,7,8} since there are eight allowable events that can happen at the base A: substitution to one of four other bases, plus four possible indels. Also, PA and gA are defined by

So, for example, we have that PA(1) = 0.594 and gA(1) = A. Note that the last four rows of the above table represent the insertion or deletion of A,C,T, or G respectively. To succinctly represent the probability spaces and functions for this particular example, we use the following notation: let Σ represent the n-th coordinate process random variable corresponding to the Markov chain given in definition [\ref=reversible] whose parameter values were determined above. Then we can represent Σ utilizing the notation given in table [\ref=notation_example].

Flexibility of the Model

In this section we present the flexibility of the RSID model given in definition [\ref=reversible_Markov_chain].

Traditional Substitution Models of Molecular Evolution

The RSID model allows for the implementation of most previous substitution models of molecular evolution. For example, by using the alphabet [formula], and for each [formula], letting Ωa  =  {1,2,3,4}, and ga(Ωa) = {A,C,T,G}, and choosing the probabilities Pa appropriately, the RSID model given in definition [\ref=reversible] completely encompasses the JC [\cite=Jukes1969], HKY [\cite=Hasegawa1985], FEL81 [\cite=Felsenstein1981], K2P [\cite=Kimura1980], and REV [\cite=Tavare1986] models. In fact, in this particular case the RSID model is a generalization of all possible homogeneous rate Markov models of DNA or amino acid evolution. This is due to the fact that if [formula] for each [formula], then the RSID model simply becomes a traditional finite state Markov chain (with as many states as the cardinality of the alphabet [formula]).

Heterogeneous rates

Models utilizing heterogeneous rates of evolution can be introduced by slightly modifying definition [\ref=rand_sub_def] and consequently [\ref=reversible_Markov_chain]. Instead of fixed probability spaces (Ωa,Pa), we allow the probability space to change. Let [formula] denote the set of probability measures on ga(Ωa). Then the desired heterogeneity can be introduced with a random probability (also known as a random element in the literature [\cite=Billingsley1968]) i.e. a probability-valued random variable: [formula]. Then definitions [\ref=rand_sub_def] and [\ref=reversible] work just as before, but instead by utilizing the spaces (Ωa,Xa). Hence, the RSID model can also incorporate heterogeneous evolution rates. This is similar in spirit to the idea of the "variety of fragments" utilized in [\cite=Thorne1992].

Neighboring Dependencies

We can introduce neighboring dependencies by again slightly modifying definition [\ref=rand_sub_def]. For [formula], instead of using the probability [formula], we can use a different probability Pu whose marginal distributions correspond to the [formula]. This is simply a utilization of a coupling. A coupling between two probability spaces (Ω1,P1) and (Ω2,P2) is a probability C on the space Ω1  ×  Ω2 whose marginal distributions are P1 and P2. Hence the original definition [\ref=rand_sub_def], which assumes that what happens at a specific nucleotide (be it substitution, insertion, or deletion) is independent of its neighbors, simply uses the null coupling. Of course, the specific coupling to be used depends on the situation at hand, we are simply elucidating the various mathematical constructs that may be used to implement the desired biological properties.

Parameterization

Now the RSID model is not meant to be implemented in its most general form, but rather parameterized to a certain degree taking into consideration the problem at hand. For example, we sketch here a possibility of parameterizing the indel appearance rate to depend only on a two parameter α,β power law αL-  β on the length L of the particular indel. To accomplish this, all one needs to do is define the Pa in the following way: for ω∈Ωa, let Pa(ω) = α|ga(ω)|-  β. Such an RSID would then be able to accurately model, for example, the human ribosomal protein pseudogene evolution as studies in [\cite=Zhang2003]. Further nuanced parameterizations are possible and easily implemented into the RSID model. For example, one can easily use a distribution on the possible indels that not only takes length into consideration, but also GC content.

Implementable Biological Phenomena

Due to the flexibility of this model, we summarize here the various biological phenomena that can be implemented by using the RSID model and its variants mentioned above. The RSID model provides a systematic framework for studying models of molecular evolution that implement heterogeneous rates, conservation of reading frame (through careful selection of the functions ga), variation in conservation, differing rates of insertion and deletion, customizable parameterization of the probabilities and types of substitutions, insertions, and deletions available (through the specification of the probabilities (Ωa,Pa)), as well as neighboring dependencies.

Algorithms and Implementation

The aim of this paper is not to present a preprogrammed set of algorithms, but rather a comprehensive framework to be adapted to the specific situation at hand. So instead of enumerating a plethora of algorithms that can be used in a variety of implementations, we rather present a general method for producing efficient algorithms useful for computation. We later will also show how setting the model on a firm mathematical footing allows for the possibility for general theorems to be applied. This will present new avenues for algorithmic implementations.

One of the computational difficulties is in the calculation of the transition probabilities (see equation [\ref=transition_probability]). Rewriting equation [\ref=transition_probability], we obtain

[formula]

Now the above equation [\ref=expanded_transition_probability] is an example of the so called sum-product algorithm: since the underlying factor graph is a tree, the results of Kschischange et al. [\cite=Kschischang2001] can be applied to develop an algorithm that calculates this sum in linear time. Hence the full RSID transition probability in equation [\ref=R] can also be calculated in linear time. Dynamical programming methods can also be used at this step.

Now if one wishes to measure the total (evolutionary) distance between the sequences u and v by using the Green's function G(u,v) found in equation [\ref=Green's_function], it is typically intractable to attempt to compute the entire infinite sum [formula], but in [\cite=Koslicki2011], it is proved that the approximation

[formula]

converges to the full summation G(u,v) exponentially quickly. So in practice one needs only calculate Gn(u,v) for some adequately large value of n (representing one to n generations of mutations from u to v). Then [\cite=Koslicki2011] provides error estimates for this approximation. Now Gn(  ·  ,  ·  ) is an infinite matrix, but the entire basis of [formula] need not be used. In fact, at worst, in the computation of Gn(u,v) one needs only the basis elements [formula] for [formula]. In practice, this large of a basis is not needed and one can utilize far fewer elements. Since DNA sequences are not free to explore the entire space [formula] one can use, for example, GC-content or entropy requirements to eliminate extraneous basis elements. After obtaining an appropriate basis, the matrix sum Gn(u,v) can be computed using, for example, the [formula] algorithm found in [\cite=Hu1982] and [\cite=Hu1984].

Again, since this article is meant to introduce an analytic environment in which to study biologically accurate models of molecular evolution, we do not provide explicit algorithms, but have rather indicated that such algorithms can be developed and tailored to the specific problem at hand. Being that the transition probabilities can be calculated in linear time, and then Green's function in loglinear time, the main computational issue is determining an appropriate basis of "biologically viable" sequences for the computation of Gn. This basis determination can be accomplished by a combination of various techniques including GC-content and entropy methods.

Alternative Algorithms

We now demonstrate the advantage of having a well-developed mathematical background underlying the RSID model by presenting an alternative method of implementing the calculation of the Green's function G(u,v). Utilizing a slight modification of the proof of the spectral theorem for self-adjoint compact operators ([\cite=Dunford1988], Theorem 1, pg. 895), it can be shown that R is diagonalizable. Utilizing this diagonalizability, on can compute R(n) and hence G in a straightforward theoretical fashion. This provides another avenue for investigating the possible algorithmic implementations of the RSID model.

Parameter Estimation

Once a particular parameterization choice has been made, the problem of parameter estimation can be approached in a number of ways. While parameters can be estimated using MLE methods via counting indel and substitution types and frequencies over a number of optimal and sub-optimal alignments (or all alignments), we present here a new alignment free method of parameter estimation. The method is based on frequencies of occurrence of subwords and follows the exposition of [\cite=Koslicki2011]. The main argument is based on the fact that while one may assume the independence of substitution and indel events that occur at neighboring nucleotides, this does not in general imply the independence of the frequency of occurrence of neighboring nucleotides (or n-mers of nucleotides) due to the inclusion of indels. This fact can be taken advantage of to estimate parameters. Briefly, the frequencies can be calculated explicitly (as in [\cite=Koslicki2011]), and then these are used to assist in a maximum likelihood estimation. We begin by sketching how one can calculate the expected frequency of n-mers.

First we need a vector of occurrences: For [formula], [formula], let [formula] denote the column vector of occurrences of single letters in the sequence w. Let also Σm denote the nth coordinate process associated to [formula] where letters are taken m at a time with overlaps (detail in [\cite=Koslicki2011]. We also define the matrices

For a given RSID Markov chain [formula] and integers m,n, define the m-th substitution matrix entry wise as follows: for [formula],

[formula]

Here |w|i means the number of occurrences (with overlap) of i in w, and the [formula] denotes expectation taken with unit mass on the Markov state corresponding to j. Let Λ denote the dominant eigenvalue of M(1)Σ1. The following was proved in [\cite=Koslicki2011]

For an RSID Markov chain [formula], the sequence of vectors [formula] converges almost surely and exponentially quickly to the strictly positive eigenvector of M(1)Σ1 corresponding to Λ with this eigenvector being independent of [formula].

Normalizing the strictly positive eigenvector of M(1)Σ1 corresponding to Λ gives the expected frequency of appearance of the letter [formula]. This implies that the observation frequencies converge exponentially quickly to the expected frequencies. Similar theorems in [\cite=Koslicki2011] are proved for arbitrary n-mers of letters from [formula]. These frequencies are given in terms of the various parameters that were chosen for the probabilities Pa in the definition of [\ref=rand_sub_def]. For single letters frequencies in the DNA case, this results in four constraints (linear in the entires of M(1)Σ1), and hence can estimate up to four parameters. Counting couplets of nucleotides gives 16 quadratic constraints; in general, counting n-mers gives 4n equations of degree n in the entires of M(1)Σ1. Setting these equations equal to the observed frequencies, one can then use standard nonlinear optimization techniques.

For example, if one was given a data set and wished to model it using an RSID that used the Kimura two parameter γ,δ model ([\cite=Kimura1980]) to describe the substitutions and a two parameter power law (Pa(ω) = α|ga(ω)|-  β) to describe the indel distribution, one would only need to count single letter frequencies to obtain four equations in the four parameters α,β,γ,δ. The maximal likelihood parameter estimator can then be found using any preferred optimization technique.

It is important to note that this method of parameter estimation is completely alignment free. This circumvents the myriad issues involved when, for example, estimating parameters in a classical substitution model of molecular evolution: choosing a particular alignment algorithm, a particular alignment parameterization (linear, log-linear, affine), particular mismatch, match, gap opening, and gap extensions penalties. It is hard to overstate the advantages of having an alignment-free parameterization technique. This is mainly due to the fact that choosing a particular alignment scheme is a nuanced endeavor where slight changes in implementation can lead to large changes in alignment outcome. Furthermore, it has been observed that various algorithms have potential to introduce hidden bias (see [\cite=Lunter2008], [\cite=Lunter2007], [\cite=Metzler2003], [\cite=Metzler2001], [\cite=Fleissner2000], [\cite=Vingron1994], [\cite=Fitch1983]).

Application to Human Ribosomal Protein Pseudogenes

We applied a simple implementation of the RSID model to the data set used in [\cite=Zhang2003] to measure the indel length distribution in human ribosomal protein pseudogenes. Note that we wish to measure the underlying intrinsic indel length distribution in the evolution of human ribosomal protein pseudogenes, not (as [\cite=Zhang2003] did) to estimate this distribution via comparison with a different species. We used the Kimura two-parameter model ([\cite=Kimura1980]) for the substitutions and a two parameter power law (Pa(ω) = α|ga(ω)|-  β) to describe the indel distribution. We also assumed reversibility and time homogeneity. Using the parameter estimation technique detailed above, we obtained a power law of indel length L distribution of .4955L- 1.4040. Compare this to the result of [\cite=Zhang2003] which gave a deletion distribution of .48L- 1.51 and insertion distribution of .53L- 1.60. The discrepancy is most likely due to the fact that we considered insertions and deletions together as well as assumed reversibility, whereas the results of [\cite=Zhang2003] clearly indicate different rates for insertions and deletions. However, the basic power-law similarity indicates the feasibility of our alignment free parameter estimation technique.

Conclusion

We have presented a comprehensive new framework for handling biologically accurate models of molecular evolution. As we have demonstrated, the number of implementable biological phenomenon is vast. One profound advantage of stating the RSID in the language of an infinite state Markov chain is that one can utilize the vast mathematical literature to rigorously analyze a given implementation. We used such theorems to develop an alignment-free parameter estimation technique. This alignment-free parameter estimation technique circumvents many nuanced issues related to alignment-dependent estimation.

We then applied one possible implementation of the RSID model to analyze the power-law governing the indel distribution in human ribosomal protein pseudogene sequences [\cite=Zhang2003]. Our analysis corroborated the observations of [\cite=Zhang2003]. It is of great interest to note that when it comes to indel length distribution, our RSID model gave similar power law parameters as [\cite=Zhang2003] without needing to consider the complicated alignments described in the "Sequence Alignment" section of [\cite=Zhang2003].