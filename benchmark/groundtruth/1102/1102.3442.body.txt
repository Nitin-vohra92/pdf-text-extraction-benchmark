Generating Transition Paths by Langevin Bridges

Introduction

The problem of finding the pathway of chemical or biological reactions is of utmost importance for the understanding of their underlying mechanisms, as it allows to have better control on these reactions [\cite=1]. For instance, in the realm of proteins, understanding the pathway between the unfolded state and the native state, or between two native states of the protein (allostery) may help prevent certain reactions or on the contrary favor them. Recent progress in single molecule experiments have allowed to monitor the spontaneous thermal folding and unfolding of single proteins, or the force induced unfolding of proteins [\cite=3] [\cite=4] [\cite=5].

In the following, we will study the spontaneous or the driven transition between an initial state denoted A and a final state denoted B.

This problem has been addressed mainly by stochastic methods which start from an initial path and deform it by sampling the vicinity of the path. These are the path sampling methods [\cite=6] [\cite=7] [\cite=8]. The main drawback of these methods is that they are time consuming, and they generate strongly correlated trajectories. As a consequence, the space of sampled trajectories depends strongly on the initial used path. The same kind of problem exists for the Dominant Pathway method [\cite=9] [\cite=10], where the minimal action path depends strongly on the initial guess.

From now on, we assume that the system is driven by stochastic dynamics in the form of an overdamped Langevin equation

[formula]

For the sake of simplicity, we illustrate the method on a one-dimensional system, the generalization to higher dimensions or larger number of degrees of freedom being straightforward. In this equation, x(t) is the position of a point at time t in a potential U(x), γ is the friction coefficient, related to the diffusion constant D through the relation D = kBT / γ, where kB is the Boltzmann constant and T the temperature of the thermostat. In addition, η(t) is a Gaussian white noise with moments given by

[formula]

[formula]

It is well known that the probability distribution P(x,t) for the particle to be at point x at time t is given by a Fokker-Planck equation [\cite=11]

[formula]

where β = 1 / kBT is the inverse temperature. In this one dimensional model, the initial state A is characterized by its position x0 at time 0 and the final state B by its position xf at time tf. This equation is thus to be supplemented by a boundary condition P(x,0) = δ(x - x0) where x0 is the initial position of the particle.

It is convenient to go to the Schrödinger representation, by defining

[formula]

The function Ψ(x,t) satisfies the imaginary time Schrödinger equation

[formula]

with

[formula]

Using the standard notations of quantum mechanics, one can conveniently write

[formula]

where the Hamiltonian H is given by

[formula]

In eq.([\ref=eq:matrix]), we have denoted by P(xf,tf|x0,0) the probability for a particle to start at x0 at time 0 and end at xf at time tf, to emphasize the boundary conditions.

It is well-known that the ground state of H, which has 0 energy, is [formula] where Z is the partition function of the system, and all eigenstates Ψα of H have strictly positive energies Eα > 0. The spectral expansion of P can be written as

[formula]

We see that for large tf the system converges to the Boltzmann distribution, and that its relaxation time is given by the inverse of the first eigenvalue τR = 1 / E1. In systems with high energy barriers, such as proteins, the gap E1 may be very small, and consequently the time τR which in this case is identified with the folding time, can be very long.

Using the Feynman path integral representation, we may thus write eq.([\ref=eq:matrix]) as [\cite=12]

[formula]

In the following, we will be mostly interested in problems of energy or entropy barrier crossing, which are of utmost importance in many chemical, biochemical or biological reactions. As we already mentioned before, the archetype of such reactions is protein folding, a model we will use in the rest of this paper. A protein is a small biopolymer, which essentially may exist in two states, namely the native state (with biological activity) and the denatured state (with no biological activity) [\cite=13]. The protein being a small system (up to a few hundred amino-acids), it never stays in one of the two states, but rather makes rare stochastic transitions between the two states (see fig.[\ref=fig1]). The picture which emerges is that of the system staying for a long time in one of the two states and then making a rapid transition to the other state.

It follows that for most of the trajectory, the system makes uninteresting stochastic oscillations in the well, and can be described by normal mode analysis. Rarely, there is a very short but interesting physical phenomenon, which is the fast transition from one minimum to the other.

This picture has been confirmed by single molecule experiments [\cite=3] [\cite=4], where the waiting time in one state can be measured, but the time for crossing from one state to the other is so short that it cannot be resolved. This scenario has also been confirmed recently by very long millisecond molecular dynamics simulations [\cite=14] which for the first time show spontaneous thermal folding-unfolding events.

According to Kramers theory, the total transition time τK (waiting + crossing) scales like the exponential of the barrier energy

[formula]

The "Kramers time" τK is the sum of two times:

the waiting time in the potential well

the crossing time over the barrier τC

It is well known that the crossing time τC is small compared to τK and indeed, Hummer [\cite=15] and subsequently Szabo [\cite=16] have shown that

[formula]

These Kramers and crossing times are averages. In fact, these times are distributed (random variables) and single molecule experiments or long molecular dynamics simulations allow to compute their probability distributions.

However, it seems a bit wasteful to simulate proteins over huge time scales (milliseconds), during which only small conformational vibrations occur, just to observe interesting physical crossing events which occur very rarely, on the sub-microsecond scale.

The goal of this paper is to show how one can generate a representative sample of transition paths, starting in state A at time 0 and ending in state B at some arbitrary time tf. The typical times of interest are not the (long) folding times, but rather the (very short) transition or barrier crossing times. In mathematical terms, we are looking for the paths starting from A at time 0 and conditioned to end in state B at time tf <  < τK.

The conditional probability

Using the path integral representation of eq.([\ref=PI1]), we see that the probability for a path {x(t)} starting at x0 at time 0, to end at xf at tf is given by

[formula]

where

[formula]

The conditional probability over all paths starting at x0 at time 0 and ending at xf at time tf, to find the system at point x at an intermediate time t is given by

[formula]

where

[formula]

[formula]

The equation satisfied by P is given by ([\ref=eq:FP]), whereas that for Q is given by

[formula]

It follows easily that the equation for the conditional probability P(x,t) is given by

[formula]

Comparing this equation with the initial Fokker-Planck ([\ref=eq:FP]) and Langevin ([\ref=eq:langevin]) equations, one sees that it can be obtained from a Langevin equation with a modified potential

[formula]

This equation has been previously obtained using the Doob transform [\cite=17] and is known in the probability literature as a Langevin bridge: the paths {x(t)} generated by ([\ref=eq:bridge1]) are conditioned to end at (xf,tf). It is the new term in the Langevin equation that guarantees that the trajectory starting at (x0,0) will end at (xf,tf).

Using eq.([\ref=eq:matrix]) for Q, one can write equation ([\ref=eq:bridge1]) as

[formula]

Using the analogous of the correspondence principle of quantum mechanics [\cite=18], i.e. [formula], this equation can also be rewritten in the form

[formula]

where by definition

[formula]

Note that for large time tf, the matrix element in eq.([\ref=eq:bridge2]) is dominated by the ground state of H, namely [formula] and as expected one recovers the standard (unconditioned) Langevin equation.

Since we have a natural splitting of the Hamiltonian H as H = H0 + V1 with [formula] and V1 = V / 4γkBT, it is convenient to rewrite the above equation as

[formula]

Note that the first term in the r.h.s. above is singular at t = tf and is thus responsible for driving the system to (xf,tf) whereas the second one is regular. It follows that the first term is the only term which can drive the system to (xf,tf), and any approximation which keeps the second term finite for t = tf will not affect this property.

This nice bridge equation cannot be used as is, since we don't know how to compute the function Q or equivalently the matrix element in the above equation. There are many ways to approximate this function. It is important however, to preserve detailed balance as well as possible, that the approximation retains the symmetry of the matrix element.

The modified Langevin equation and reweighting

The only approximation we found which remains local in time, i.e. which does not give rise to an integro-differential stochastic equation is the symmetric form of the Trotter approximation, commonly used in quantum mechanics [\cite=12]. Indeed, for short times t, a very simple and convenient symmetric approximation for Q is given by

[formula]

which translates into

[formula]

It would be nice to relate the range of validity of this equation to the spectrum of H. Indeed, as was shown before, the spectrum of H corresponds to all the dynamical times of the system (folding times, transition times, etc...). We have not succeeded in finding such a relation except in the solvable case of the harmonic oscillator. In that case, it can easily be shawn that the natural expansion parameter is tΔ where Δ is the constant gap between the energy levels of H. As mentioned before, in the case of protein folding, the folding time which is the inverse of the first gap of the system can be very long, and we might expect the above approximation to be valid for times much smaller than this time. In particular, this approximation would allow to investigate the crossing times, much shorter than the folding time.

Plugging eq.([\ref=eq:trotter]) in eq.([\ref=eq:newbridge]) we obtain the approximate Langevin bridge equation which in arbitrary dimension (or with arbitrary number of degrees of freedom) reads

[formula]

where [formula] is a white noise vector whose components satisfy the relations ([\ref=eq:noise1]) and ([\ref=eq:noise2]) and

[formula]

The first term in the r.h.s of eq.([\ref=eq:approx]) is the one which drives the particle to reach xf at time tf. The potential which governs this bridge equation is not the original U(x) but rather the effective potential V(x). Note also that the force term is proportional to (tf - t) and thus becomes small as the particle gets close to its target site.

In order to build a representative sample of paths starting at (x0,0) and ending at (xf,tf), one must simply solve this equation for many different realizations of the random noise. Only the initial boundary condition is to be imposed, as the singular term in the equation imposes the correct final boundary condition. An important point to note is that all the trajectories generated by eq.([\ref=eq:approx]) are statistically independent. From a numerical point of view, this means that this equation can be fully parallelized, and from a statistical point of view, it implies that all trajectories can be used in the representative sample. This last important point is to be contrasted with most existing methods where the sample are generated by some stochastic (Monte Carlo) methods which generate highly correlated trajectories.

Before presenting examples of application of this method, let us discuss how to correct for the fact that the total time tf should be small for the approximation to be valid.

Due to this restriction, the statistic of trajectories is not exact for larger times. Indeed, if eq.([\ref=eq:approx]) were exact, each trajectory would be generated with its correct weight, and if one wanted to calculate observables, one would just have to compute simple white averages over all trajectories. However, as the equation is approximate, one needs to resample the ensemble of trajectories, that is, assign them a new weight. As we will show, the resampling weight is easily obtained.

Indeed, if we consider the sample of trajectories generated using eq.([\ref=eq:approx]) between (x0,0) and (xf,tf), the weight of each trajectory should be given by eq.([\ref=eq:pro1]). However, it is clear from eq.([\ref=eq:approx]) that, using the Ito prescription, the weight with which it was generated is given by

[formula]

Up to a normalization, the reweighting factor for a trajectory is thus given by

[formula]

This quantity is easily calculated and allows for a correct evaluation of averages over paths.

This reweighting technique can also be used to generate paths statistically exactly sampled according to eq.([\ref=eq:bridge1]). Indeed, consider eq.([\ref=eq:bridge3]). The expectation value [formula] can be computed by generating at each time t an ensemble of (approximate) trajectories starting from the current point x at time t and ending at xf at time tf by using eq.([\ref=eq:approx]). By reweighting them using the weights of eq.([\ref=eq:reweight]), we can reliably compute [formula] and thus solve eq.([\ref=eq:bridge3]). Note that this procedure which generates correctly weighted trajectories might seem computationally costly. However, since all trajectories are independent, they can efficiently be generated using massive parallelization.

The native state

Eq.([\ref=eq:trotter]) is in fact not quite valid between non normalizable states like |x >  and |xf  >  , in that it is not true to order O(t3). However it is true between a normalizable state and |x > . Assume that the final state of the system is defined by a probability distribution φ(x). For instance, for the case of a protein, φ(x) could represent the Boltzmann weight around the native state of the protein. The probability for the system to start at x at time t and end at time tf in the native state is given by

[formula]

or using ([\ref=eq:matrix])

[formula]

where φ restricts the integration over y to the vicinity of the native state.

With this definition of Q, it is straightforward to see that eq.([\ref=eq:FTadj]) and ([\ref=eq:bridge1]) are still valid.

Using the approximation ([\ref=eq:trotter]) we can write

[formula]

where [formula].

As the function φ restricts the integration in ([\ref=eq:native3]) to the vicinity of the native state, we can approximate the potential U(x) in this region by a quadratic expansion in terms of the normal modes

[formula]

It follows that V and V1 are also quadratic and thus the integral ([\ref=eq:native3]) can be performed. Although we will consider only one-dimensional cases in the examples, we present the results for the multi-dimensional case.

Denoting by [formula] the Hessian matrix of normal modes around the native state, the potential U can be written in that region as

[formula]

and thus

[formula]

where the symbol Tr denotes the trace of the normal mode matrix and

[formula]

The function Q can be easily calculated as

[formula]

where

[formula]

where I is the unit matrix and

[formula]

The bridge equation becomes then

[formula]

Including the solvent

In many cases, in particular protein folding, one wants to include explicitly the solvent molecules, most often water. It is thus desirable to generate trajectories which are conditioned for the protein coordinates, but not for the water molecules.

Denoting by Xi the set of coordinates of the water molecules, the conditional probability, over all paths starting at {x0,X0} at time 0 and ending at xf at time tf (irrespective of the position of the solvent molecules), for the system to be at {x,X} at time t is given by

[formula]

where

[formula]

The coordinates Xf of the solvent are integrated over since the trajectories are not conditioned over the solvent molecules.

Using the method described in the previous sections, the exact generalized Langevin equations satisfied by the coordinates are

[formula]

where D1 and D2 are resp. the diffusion constants for protein and water molecules and the Gaussian noises η(1,2)i(t) satisfy the relation

[formula]

Consider eq.([\ref=Q]). Let us show that the additional force term vanishes. Indeed,

[formula]

because of space and time translation invariance. Due to the integration over Xf in eq.([\ref=integral]), we see that Q(x,X,t) does not depend on X, and thus the new drift term in ([\ref=solvent]) is absent. Therefore the exact equations for the conditional probability in presence of solvent are

[formula]

Using the Trotter approximation ([\ref=eq:trotter]), these equations become (using vector notations)

[formula]

where the noises are Gaussian, correlated according to eq.([\ref=noise]).

We thus conclude that in presence of the solvent, the protein is evolved through a modified Langevin equation with the effective potential [formula], whereas the solvent molecules are evolved according to the standard Langevin equation in presence of the original potential [formula].

Extension of this method to the case of the native state (see previous section) is immediate.

Example: The quartic double-well

We now illustrate the method on the example of barrier crossing in 1d (quartic potential).

[formula]

This potential has two minima at [formula], separated by a barrier of height 1/4. Note that at low enough temperature, the potential V(x) has two minima at points close to [formula] and one minimum at x = 0 (from eq.([\ref=potential])). Note that V(x) is much steeper than U(x) and thus more confining, around its minima.

The model can be solved exactly by solving numerically the Fokker-Planck equation or by diagonalizing the Hamiltonian. All the examples are performed at low temperature T = 0.05, where the barrier height is equal to 5 in units of kBT and the Kramers relaxation time, given by the inverse of the smallest non-zero eigenvalue of H, is equal to τK = 366.39.

On fig.[\ref=fig:Full-Langevin-trajectory], we present a long trajectory (tf = 1000) obtained by solving the Langevin eq.([\ref=eq:langevin]) for a particle starting at x0 =  - 1 at time 0. The general pattern described in the introduction can be easily checked: the particle stays in the left well for a time of the order of 550, then jumps very rapidly into the right well, where it stays for a time of the order of 200, then jumps back to the left well where it stays again a time equal to about 250.

The two crossings times are very short, and we display an enlargement of the first transition in fig.[\ref=fig:Enlargement-of-the].

As can be seen, the crossing time for this specific trajectory is approximately [formula], much smaller than the Kramers time.

In fig.[\ref=fig:another-set-of], we plot two examples of two trajectories conditioned to cross the barrier during a time tf = 5. The trajectory in black is obtained by solving the exact bridge eq.([\ref=eq:bridge2]) by computing exactly (using a spectral decomposition) the matrix element of the evolution operator, while the trajectory in red is obtained by solving the approximate eq.([\ref=eq:approx]) with the exact same sequence of noise η(t). In the left figure, the 2 trajectories are barely distinguishable, whereas the agreement is not as spectacular on the right figure.

Next we look at some observables, obtained by averaging over many trajectories.

In fig.[\ref=f3], we plot: in black the exact average x(t) (obtained by a full expansion over the eigenstates of H), in red the average x(t) over 2000 trajectories obtained by solving eq.([\ref=eq:approx]), and in blue, the average x(t) obtained by reweighting the trajectories according to eq.([\ref=eq:reweight]) . Plot (a) is obtained for tf = 2, plot (b) for tf = 5 and plot (c) for tf = 10.

As expected, we see that the discrepancy between the exact (black) and the approximate (red) average x(t) increases with tf. For times shorter than the transition time τC, the agreement is excellent, whereas for tf = 10 > τC, the agreement is not as good. However, we see that the reweighting procedure, although not perfect, improves drastically the quality of the average for large tf.

One of the main defects which appears in the approximate theory is the following: In the exact theory, the transition between the 2 minima can take place at any time between 0 and tf. By contrast, it seems that in the approximate theory, the transition is driven by the final state and takes place only in the end of the trajectory. This effect remains negligible as long as [formula] but becomes important for tf  >  τc. We illustrate this problem in fig.[\ref=f4] for tf = 10. On the left figure, the exact and approximate trajectories make their transition in the last part of the time, whereas in the right figure, the real trajectory crosses in the beginning while the approximate trajectory still crosses in the last part.

However, as we are interested quantitatively only in the region where the particle crosses the barrier, one can make long runs of approximate trajectories: They will not be good approximations of the real trajectories, except in the end of the trajectory where the transition to the final state occurs.

Conclusion

We have presented in this paper a novel method to generate paths following the Langevin overdamped dynamics, starting from an initial configuration and conditioned to end in a given final configuration (point or region of configuration space). We propose an approximation which is valid for small times. We have not been able to quantify how small should the time be, but the approximate dynamics seems to correctly reproduce the transition through a barrier. The approximate dynamics seems to have a tendency to confine the system in its initial configuration, and to allow for the transition only in the final stages. But this is not really a drawback since if we evolve approximately the system over long times, it will remain close to its initial condition, thus generating unreliable trajectories. However in the latest stages, the system will make its transition to the final state during a short time for which our approximation is reliable.

One of the great advantages of this method is that all generated trajectories are statistically independent. It is thus very easy to generate many of these trajectories using parallel computers. In addition, the trajectories can be reweighted to provide a faithful sample of the exact stochastic dynamics. Finally, this reweighting technique allows for the calculation of the matrix element of the evolution operator, and thus allows for the generation of adequately sampled paths.

The paths generated by our method can also be used either as initial paths to perform Monte Carlo transition path sampling, or as initial conditions for path minimization to determine Dominant Folding Paths.

The method is as simple to implement as ordinary Langevin dynamics, and its application to simple models of protein folding is currently under way.