=2500

A New Method for Variable Elimination in Systems of Inequations

Introduction

The FME Method was first introduced by Fourier [\cite=six] in 1827 and was rediscovered in Motzkin's thesis in 1936 [\cite=seven]. Considering the set of inequations Ax  ≤  b,A∈Rm,n,b∈Rn the method provides a scheme for determining the existence of a real or integer solution to the given problem. The method uses a step by step algorithm, in which each step reduces the dimension of the answer space by projecting the answer space on a hyperplane. The procedure continues until the dimension is reduced to one; if the one dimensional answer is feasible, then the solution exists. A dual mode for FME was introduced in 1972 by Dantzik [\cite=eight].

The FME method is widely used in solving rate region problems since there is often the need to eliminate the auxiliary variables introduced into the problem from the resulting inequations and hence reduce the dimension of the solution space by finding its projection on a given plane. The complexity of calculation in each step is of the order of [formula], with k being the number of constraints in the system of inequalities. This complexity makes the method unfeasible for high dimensional problems. There have been many attempts to decrease the calculation time of the method. In 1996, Kebler [\cite=nine] introduced a parallel computation method which was more efficient when solving the elimination problem on a computer.

In this paper, we present a new method for eliminating auxiliary variables in inequations which is much faster than the FME method. In our method, we first introduce a linear Diophantine problem which is dual to the original problem. We then proceed by solving this new Diophantine system, next we calculate the final result by finding the dual inequations system. Our new method uses the algorithm Normaliz to find the Hilbert basis of the solution space of the given Diophantine problem.

Normaliz was first introduced as a program in 1997 by R. Koch. In 2003, the algorithm was presented in Koch's thesis [\cite=ten]. Normaliz was originally introduced to compute the lattice points in a lattice polytope and the integral closure of a monomial ideal. Koch mentions in his thesis that the algorithm may be extended to find the Hilbert basis of the solution space of a system of linear Diophantine equations. However, applying the algorithm introduced in [\cite=ten] to information theoritic problems is still time-consuming. In 2010, Bruns and Ichim [\cite=eleven] introduced a dual algorithm which is much faster when applied to problems with a greater number of constraints than auxiliary variables. Since this is the case in almost all information theory problems, we use this method to find the desired Hilbert Basis solution.

One of the most important fundamental channels in communication systems is the Interference Channel (IC). The IC was initiated by Shannon [\cite=one]. Simple outer bounds for the IC were established by Ahlswede [\cite=two]. Later, Carlieal [\cite=three], using superposition encoding and sequential decoding, characterized an achievable rate region for general discrete memoryless IC. In the IC each receiver is only interested in the message from its corresponding sender. However, it might decode messages from other senders to reduce the interference effect. Han and Kobayashi (HK) utilized rate splitting techniques in [\cite=four], and applied simultaneous superposition coding techniques to establish the largest inner bound introduced for the general IC to date. Computing the capacity region of general IC is still an open problem, but in special cases such as strong interference regime the capacity region has been established, and the region was the same as the HK rate region [\cite=five]. In the method used to achieve the HK rate region, the messages are split into two parts, the private and common parts; private messages are decoded by the corresponding receiver, while the common messages are decoded by all receivers.

Rate splitting has become a prominent tool for solving rate region problems. However, there is a drawback to the method in that solving the channel with the new split messages yields a system of inequations based on the split-rates. Since we are interested in each sender's total rates, the auxiliary variables must be eliminated. The FME method is needed to eliminate these auxiliary rates.

The rest of the paper is organized as follows: In Section II, we first introduce our model of an l transmitter-receiver interference channel. In Section III, we introduce a problem in the IC. In this section, we use some simplifying assumptions, since the goal of the section is to explain the new elimination method. In Section IV, we solve the problem with our new method. In Section V, we present a generalized algorithm for our new method which could be applied to any problem involving FME. In Section VI, we present results of applying our new method to several problems which were solved previously using the FME method. Section VII concludes the paper.

Channel Moddel

In this section, we introduce our model of IC. We denote random variables by upper case letters e.g. X, their realizations are presented by lower case letters e.g. x in finite sets denoted by [formula]. We use xki to denote the vector xi,xi + 1,...,xk. We denote xk if i=1, while for i=1 and k=l, we show the vector by [formula]. Also, if i=1 and k=2l, we show the vector by x. Furthermore ni is the compact form of (i,i + 1,...,n) where i = (xi1,...,xil).

A discrete Interference Channel, with [formula] senders and [formula] receivers is the 2[formula]+1 tuple (,p(|),) where [formula] are the input alphabets, [formula] are the output alphabets for i=1,2,...,[formula] and p(|) is the conditional probability of the channel. Each decoder is only interested in decoding its corresponding sender's message; however, in order to reduce the interference effect, receivers might decode the message from other senders as well. The channel is memoryless and time invariant in the sense that A [formula] code consists of (i) [formula] message sets [formula], (ii) [formula] encoding functions [formula], (iii)[formula] decoding functions gu(.) where Ŵu = gu(Ynu),u∈[null]. We define the average probability of error for this code as [formula]. A nonnegative rate [formula]-tuple [formula] is said to be achievable if there exists a code [formula] for which P(n)e  →  0 as n tends to infinity.

Problem Statement

In this section, we present our coding strategy which is a generalization of the method used in [\cite=four]. We describe the problem in solving the resulting inequations with the conventional FME method. After stating the problem, we introduce our method and compare the results with the former procedure.

Since our goal in this paper is to introduce an alternative elimination method for the FME method, we use some simplifying assumptions in the channel. We consider the channel to be symmetric in the sense that the ith sender sends the same amount of information to all receivers other than its own corresponding receiver. This allows each sender to send the same common message to all receivers. We split each message Wi into common and private parts (Wic,Wip). The common part of the message is decoded by all receivers while the private part is decoded only by the ith receiver. Another suitable assumption would have been to assume a sense of degradedness between the receivers in the following way: assume that receiver i1 receives all the common massages sent by sender i; receiver i2 receives all the common messages received by the receivers other than i1, and so on. In this case we had to split the message in each sender to [formula] common parts and one private part in the following way: split the message Wi into [formula]). [formula] is decoded by the receiver with the least information about the massage from sender i; the reciever with the second least information about this message decodes [formula], and so on. The rest of the solution would stay the same. Clearly, the symmetric case mentioned above is a special case of this latter case. Since the two cases have the same solution, and for the sake of simplicity, we solve the channel for the symmetric case in this paper. Codebook Generation:

Let [formula], where Q is the time-sharing variable. Let [formula] denote the set of all jont p.m.fs p1 on Z1, which can be written in the form For any p1 defined above, generate 2nRic,i∈[1:l], i.i.d unic(wic) where wic∈[1:2nRic]. For each unic(wic), generate 2nRip, i.i.d xni(wip,wic). The time-sharing variable has no impact on the rest of the proof and for the sake of brevity, we ignore it until the end of the proof where we bound its cardinality. Encoding:

At the beginning of each block, the ith sender picks related (unic,xni) according to [formula] and sends it. Decoding:

At the end of each block, the ith receiver finds (xni,un1c,un2c,...,unlc) such that: Without loss of generality we consider the case where all senders have sent index 1 as their messages. We investigate all possible scenarios in the first decoder. The decoder must decode messages (w1p,w1c,w2c,...,wlc), the decoding is errorless if ŵ = (ŵ1p,ŵ1c) = (1,1). Using the same method as in [\cite=twelve] and by the AEP rule, it is clear that the probability of error approaches zero as n  →    ∞   (e.g. rate l-tuple is achievable) iff the rates satisfy the following set of equations:

[formula]

where

and Ui∈US if αi = 1; also, for αi = 0, we have Ui∈USc. We note that R1 - R1c = R1p, substituting into [\eqref=eq] we have These are the inequations for decoder 1. We rewrite the inequations for all decoders in matrix form:

[formula]

If we denote A as the matrix whose rows are all possible binary l-tuples starting from (0, 0, ..., 0) in an increasing order, then Ai is the matrix formed by multiplying the ith column in A by -1. We show the rate coefficients matrix in [\eqref=eqq] with Cl. We show the rate vector with t, and the mutual information vector with Il, so we may write [\eqref=eqq] in compact form as Clt  ≤  Il. To clarify the method of forming the above mentioned inequations, we give the following example, which illustrates the inequations for a two sender-receiver interference channel: Note that these are the same inequations given in [\cite=twelve]. To solve this system with the conventional FME method, one must eliminate all of the variables Ric,i∈[1:l]; this process takes l rounds of applying FME to the matrix. According to [\cite=twelve], the size of the matrix grows at a worst case rate of [formula] each round. This complexity renders the aforementioned method impractical for l larger than 2, since, after applying FME, one must eliminate the redundant inequations in the resulting matrix using an exhaustive search. Finding the redundant inequalities often needs more time than eliminating the auxiliary variables, which itself is a time-consuming process.

Our New Method

Here, we present a new method for solving [\eqref=eqq] which not only requires much less calculation in comparison with the FME but also produces no redundant inequations assumning the mutual-informations on the right side of the inequations are independant. Before proceeding with the solution, we present some definitions. We show the matrixes resulting from l rounds of FME by C*l and I*l, so the resulting inequations can be written in the form C*lt  ≤  I*l. Note that the second l columns of C*l are zero. It is also clear that if we show the rows of Cl by Cl(l,α1,α2,...,αl), then all rows of C*l and I*l can be shown by where Let GCl be the solution space of the inequations in [\eqref=eqq] for rates R1,R2,...,Rl, and let GC*l be the solution space of C*lt  ≤  I*l. Furthermore, we define the matrix D as the matrix whose rows are formed by all of the linear combinations of Cl(i,α1,α2,...,αl) with positive coefficients and with the property that the second l columns of D are zero. In other words, [formula] is a row of D iff

[formula]

with the following conditions:

[formula]

We define GDl as the solution space of the following inequations:

[formula]

where

GC*l is equal to GDl.

The proof is straightforward. Since all rows of Dl are linear combinations of rows of Cl with positive coefficients, all inequations in [\eqref=eqqq] result from inequations in [\eqref=eqq]. Hence, we have GCl  ⊆  GDl, and by the FME, we know that GCl is equal to GC*l for (R1,R2,...,Rl), we have GC*l  ⊆  GDl. On the other hand, since all the rows of C*l are linear combinations of rows of Cl with the property that for each row *, C * 2ll + 1 = 0, any row * of C*l is a row of Dl, and so GDl  ⊆  GC*l and the proof is complete.

Now, we propose that instead of finding GC*l, we try to find GDl. From [\eqref=column], we know that for every D in [\eqref=D] we have

[formula]

Now we need to choose inequations in [\eqref=eqqq] whose linear combinations with positive coefficients produce all inequations in [\eqref=eqqq]. Without loss of generality, we consider aj,α1,α2,...,αl∈Z+. We give the following definition as in [\cite=fifteen]; Definition: We call a set of vectors H, generator vectors of S, if every vector in S can be expressed as a linear combination of vectors in H with positive coefficients and no vector in H may be expressed in such a way by other vectors in H. Such a set of vectors is called the Hilbert Basis of the vector space S.

The problem of finding a Hilbert Basis for the solutions of a Diophantine system of equations such as [\eqref=So] has many solutions. One solution is to use an algorithm called Normaliz introduced by Koch in [\cite=ten]. We use this method to solve [\eqref=So]. If the set of aj,α1,α2,...,αl, j = 1,...,l,αi∈{0,1} is an answer for [\eqref=So], then we have the following inequation for R1,...,Rl: Since Normaliz provides a Hilbert Basis solution for the equations in [\eqref=So], and since each solution for [\eqref=So] represents a unique equation in [\eqref=eqqq] and adding two answers from [\eqref=So] with positive coefficients is equivalent to adding two inequations in [\eqref=eqqq] with positive coefficients, the resulting inequations contain all the non-redundant inequations in [\eqref=eqqq]. Hence, by applying Normaliz, we can calculate the solution to our original problem. Since the dimension of the Diophantine space in [\eqref=So] is much greater than the number of constraints we have, it is better to use Normaliz Dual as suggested in [\cite=eleven]. Our results for the two sender-receiver IC are the same as HK rate region in [\cite=four].

To this point, we have found the rate region by eliminating the auxiliary variables. Since, in the case of the above channel, all the mutual-informations Il(i,α1,α2,...,αl) are independent of each other (i.e. they don't have a clear relation with each other), there are no redundant inequations in our final system of inequations and so by the Caratheodory theorem [\cite=sixteen] Q is bounded by the number of resulting inequations after applying Normaliz and finding the dual system.

Generalization to Other Problems

The method proposed above may be used in any other problem which could be solved using the FME. The following algorithm is used: 1- Define the encoding and decoding schemes. 2- Find the inequations matrix corresponding to the defined schemes. 3- Write the Diophantine equations of the matrix. 4- Use Normaliz to solve the Diophantine problem. 5- For each answer vector for the Diophantine problems, write the corresponding inequation.

Simulation and Results

Here, we use our method to solve some problems which have been solved using the FME method previously. The simulation results are illustrated in [\eqref=tab:SystemParameters]:

The results are obtained from running Normaliz 2.2 on a 2.4 i5 CPU. The 4th column indicates the number of inequations resulting from applying our method while the 5th column indicates the number of non-redundant constraints. Note that in cases such as [\cite=thirteen] and [\cite=fourteen] where there are certain relations between mutual-informations on the right side of the inequations, there may be redundant answers in our method. However all these redundant answers will be present in the FME case as well. Table [\eqref=tab:SystemParameters] shows the efficiency of our method in comparison to the FME method. There are several features of our method that make it more efficient in comparison with the former method. One feature is that the FME method eliminates one variable at a time, while our method eliminates all variables in one step. Another feature is that our method is much faster compared to the previous method. Another important advantage of the new method is that it doesn't introduce many of the redundant inequation present in the FME solution. Note that one of the most time-consuming parts of the FME method is the removal of inequations which are linear combinations of previous inequations with positive coefficients. This process uses an exhaustive search and is very inefficient. Our method doesn't introduce any such redundant answers.

Conclusion

In this paper, we introduced a new method for performing variable elimination in systems of inequations. We illustrated the implementation of our new method on a special case of IC. A generalization of the method was presented and in the end some simulation results were compared with the actual results after applying FME and removing redundant answers. It was shown that our new method is much faster and more efficient than the FME method. Our method eliminates all variables in one step while the FME method uses a step by step approach. Also, our method produces fewer redundant inequations in comparison to the FME method.

Acknowledgments

We would like to express our appreciation for the ISSL Group of Sharif University of Technology and specially B. Akhbari and M. Mirmohseni for their valuable comments.