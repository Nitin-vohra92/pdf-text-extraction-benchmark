Lemma Proposition Corollary Definition Claim Example Conjecture Observation

Any FIP real computes a 1-generic

Introduction

One of the classic versions of the axiom of choice (for example Rubin and Rubin [\cite=RR]) is called the finite intersection property. In the following definition we will think of reals as being subsets of [formula]. We will often abuse notation and refer to reals interchangeably as sets or vice-versa.

A set (or sequence) of reals has the finite intersection property if given any finite subset of the reals (or any finite set of reals that appear in the sequence) that set has a nonempty intersection.

In [\cite=DM12] [\cite=DM13], Dzhafarov and Mummert began a systematic study of the proof-theoretical and computability-theoretical strength of various incarnations of the axiom of choice and related principles of finite character. Of concern to the present paper, Dzhafarov and Mummert initiated an investigation of such properties for the finite intersection principle. The point is that from the fine grained lens of computability theory, classically equivalent forms of the axiom of choice can turn out to have rather different strengths. In this paper we will be concerned with the computability of the situation. Thus we will consider the following.

Let [formula] be a uniformly computable sequence of computable reals. Let [formula]. Then, f is FIP with respect to [formula] if {Xf(i)} is maximal with respect to the finite intersection property, that is to say, {Xf(i)} has the finite intersection property, and if [formula], then {Xg(i)} does not have the finite intersection property. In this case, we will frequently abuse notation and say that 〈Xf(i)〉 is FIP.

A related principle is called nIP, and it is the same as the above, except it only seeks each n-tuple of sets to have nonempty intersection. The principle 2IP thus says that every family of sets has a maximal subfamily where each pair of sets in the family has nonempty intersection.

In [\cite=DM13], Dzhafarov and Mummert showed that there was a computable instance of FIP with no computable solution.

A degree [formula] is FIP (or FIP-bounding) if given any computable [formula] as above, [formula] can compute a function f that is FIP with respect to [formula]. Similarly we can define a degree to be nIP.

It is easy to see that [formula] is FIP and nIP, simply by taking a computable family and making a maximal FIP subfamily one set at a time, noting that nonempty intersection of computable sets is Σ01. Dzhafarov and Mummert established each FIP degree is also nIP for all n, and any (n + 1)IP degree is also nIP. One of the fundamental questions left open by Dzhafarov and Mummert was whether any of these implications are proper. One of the corollaries of the work in the present paper is that the answer is, somewhat surprisingly, no. Dzhafarov and Mummert also established the following.

Every FIP degree is hyperimmune. The following are FIP degrees.

All nonzero c.e. degrees.

Degrees that are [formula]-hyperimmune.

Degres that compute 1-generics which meet a prescribed sequence of dense Π01 sets of strings.

Dzhafarov and Mummert also partially classified how the FIP degrees relate to other bounding degrees such as the atomic model bounding degrees and prime model bounding degrees (see, e.g. [\cite=CHKS] [\cite=HSS]).

In view of this, the precise classification of the FIP and nIP degrees seems a very intriguing problem. Recently, Diamondstone, Downey, Greenberg and Turetsky [\cite=DDGT] took up this question. They showed that the FIP and 2IP degrees have acceptable universal families, meaning that if a degree computes a solution to the universal family, then it will compute a solution to any family. They also proved that if G is 1-generic then the Turing degree of G is 2IP and hence FIP. Those authors also looked at finite variations of FIP and nIP showing that the principles differed in strength for some such variations, and also looked at the situation where infinite intersection was asked for. In this last formulation, the precise strength needed was found. (Namely [formula] can compute a solution with infinite intersection property for all computable families iff    ≥   0'').

Diamondstone, Downey, Greenberg and Turetsky [\cite=DDGT] gave a complete answer to the question of FIP and 2IP bounding in a limited setting.

A Δ02 degree is FIP iff it is 2IP iff it computes a 1-generic.

The goal of the present paper is to give a complete classification of the FIP and nIP degrees.

A degree [formula] is FIP iff it is 2IP iff it computes a 1-generic.

In view of the [\cite=DDGT] results, it is enough to prove that if [formula] if FIP (2IP) then it computes a 1-generic. We remark that Theorem [\ref=main] gives the first example of a classical theorem whose strength aligns exactly with the ability to construct a 1-generic.

We will split the proof into the easier FIP case and modify this proof to establish the 2IP case. We remark that the proofs from [\cite=DDGT] heavily used approximations and were uniform in the sense that a single procedure Φ was constructed which took the given Δ2 solution S to the 1-generic G. Preliminary analyses show that no such uniform solution is possible for the global case. Our proof is nonuniform, and constructs infinitely many possible functionals and we will argue that at least one works.

The FIP case

In this section, we construct such an [formula] such that any FIP f can compute a 1-generic. We will use one primary Turing functional Φ to compute a 1-generic from f, and a countable collection of secondary functionals Ψi to compute the halting set, K, from f. The Turing degree of K is [formula], which can be used to compute a 1-generic. The outputs of the functionals will depend only on the range of f. (Intuitively, this means that the 1-generic will depend only on the FIP set, not on the FIP sequence.) We will guarantee that for any FIP f, at least one of these functionals succeeds at its task.

We produce a collection of labels that we will place onto the tree 2<  ω. Each σ in 2<  ω will have either one label, or an infinite countable collection of labels on it. Each label will be a name for a computable real, and the sequence 〈Xi〉 will be the sequence of labels that are used in our construction, in the order that they first appear. The construction will ensure that for any finite or infinite path through 2<  ω, the sequence of reals whose labels appear on the path has the finite intersection property (but is, perhaps, not maximal with respect to having the finite intersection property.)

The labels that we will use, are as follows.

Our structural labels will be of the form Aσ. For each σ∈2<  ω, the label Aσ will be placed on σ and in no other location. The purpose of these labels will be to help f recover the path through T that it took. They will be the labels that Φ uses to attempt to compute a 1-generic.

We will also have labels of the form Bi,j. These labels will be placed on 2<  ω in a Σ01 way, although for simplicity of the construction, we will assume we are able to place a countable computable set of B labels on one node during a single stage of the construction. They will be the labels that the Ψi use to attempt to compute K.

These will be the only labels that we place.

At each stage, s, of the construction, for each [formula] of length < s, we choose some new [formula], and put n into every set whose label is on an initial segment of σ at stage s. That number n will not go into any other sets. Thus, labeling 2<  ω will be equivalent to defining (and producing computations of) all of the sets Xi.

Throughout the construction, we will frequently wish to alternate between objects that we construct and the sets of reals whose labels appear on those objects. To this end, we make a collection of notational definitions.

First, the labels will also be constant symbols for the reals that they label. So, for instance, we begin the construction by placing the label Aλ onto the empty node λ. Since this is the first label that we use, that means the label of X0 will be Aλ. This convention will allow us to treat Aλ as a symbol for a real (and in particular, have that X0 = Aλ).

If [formula] is a function, then [formula].

A node in 2<  ω is an element of 2<  ω.

A finite path in 2<  ω is a sequence of successive nodes in 2<  ω. If the finite path begins at the root of T, then it is the set of [formula] for some σ∈T. This finite path will also sometimes be denoted σ.

If P∈2ω is a real, regarded as an infinite path through 2<  ω, then [formula] is the set of reals whose labels appear on initial segments of P.

If σ∈2<  ω, then [formula] is the set of reals whose labels appear on initial segments of σ. This set will also be referred to as the sequence of reals along the finite path σ.

All of the functionals that we define in the construction will depend only on the range of their oracle, f. Thus, the following definition will be well defined. If θ is a Turing functional that we define during this construction (so θ is either Φ or one of the Ψi), and if S is an infinite subset of the reals that we construct during the construction, then θS  =  θf where f is any function such that [formula].

If σ∈2<  ω, and if θ is a functional that we define during the construction, then θσ is the maximal finite string α such that for any [formula], [formula]. In other words, θσ is the initial segment of the output of θ that is determined by σ. In the construction, our functionals will be defined such that for any σ∈T, θσ will always be defined.

Now that we have established this notation, note the following lemmas that can be proved entirely from the above heuristics, without appeal to the specific manner in which we decide how place our B labels onto 2<  ω.

Given any finite set, S, of reals from among the reals that we build, those reals have the finite intersection property if and only if there is a node σ∈2<  ω such that [formula].

S is finite, and so, if there is such a σ∈2<  ω, then at some finite stage of the construction, the label of every real in S has appears on an initial segment of σ. At that stage (and every stage thereafter), a common element is placed into all the reals in [formula].

Conversely, if S has the finite intersection property, then in particular, the reals in S must have a common intersection (because S is a finite set, and so a finite subset of itself). Thus, there must be some n that is in all of the reals. That n was chosen at some finite stage to go exactly into the reals along some [formula]. Thus, all the reals in our set must be in [formula].

Given any infinite path, P through 2<  ω, [formula] has the finite intersection property.

Note that this lemma does not claim that [formula] is FIP with respect to the sequence of all reals that we build.

Given any finite number of reals in [formula], there is a finite path that they are all on. By Lemma [\ref=L:finitepaths], those reals have the finite intersection property, and so they intersect.

Let S be an FIP set of reals for the sequence [formula], that we build. Then there exists a unique infinite path Y through 2<  ω such that [formula].

First, we prove existence.

Note first that if σ and τ are incomparable in 2<  ω, then Aσ and Aτ do not intersect, because those labels only appear on σ and τ respectively. Thus, all of the A labels that are in S must have comparable σ values.

Secondly, if Aσ∈S, and if [formula], then Bi,j∈S. This is because any finite path containing Aσ also contains Bi,j, and so by Lemma [\ref=L:finitepaths], if S has the finite intersection property, and Aσ∈S, then [formula] has the finite intersection property. By maximality of S, we may conclude that [formula]

It remains to show that there exist infinitely many σ such that Aσ∈S, because then Y can be the union of those σ.

Assume this is not the case, and let σ0 be maximal such that Aσ0∈S. Let [formula], the left branch off of σ0, and let [formula], the right branch off of σ0. Because S is maximal, and by choice of σ0, we have that [formula] does not have the finite intersection property. So fix a finite set F1  ⊆  S such that [formula] has an empty intersection. Likewise, fix a finite set F2  ⊆  S such that [formula] has an empty intersection.

Let [formula]. Then F is a finite subset of S, and so it has the finite intersection property, so by Lemma [\ref=L:finitepaths], there is some σ such that [formula]. By construction, Aσ0∈F, and so [formula]. For i = 1,2, [formula] does not have the finite intersection property, so by Lemma [\ref=L:finitepaths], σ is incomparable to both σ1 and σ2. This is a contradiction, because every extension of σ0 is comparable to either σ1 or σ2.

We define ΦS to be the Y satisfying Lemma [\ref=L:containsapath]. Note that this is uniformly computable from any f such that [formula] because, to compute the first n bits of Y, we need only wait to find some σ of length n such that Aσ is in [formula].

Construction

We now describe the way that the B labels get placed onto 2<  ω, and the way that our Ψ functionals use them to compute K in the event that Φf is not 1-generic.

To make our notation simpler, we will assume that the c.e. sets Wi always enumerate strings in 2<  ω. Under this convention, a real Y is 1-generic if and only if, for every i, either Wi enumerates an initial segment of Y, or there is an initial segment of Y such that Wi never enumerates any extensions of that initial segment.

The construction is as follows. At stage s of the construction, let Ks be the sth approximation to the halting set K. Then, for each i < s, if Wi enumerates σ in ≤  s steps, and if Wi has not enumerated an initial segment of σ at a previous stage, then for every j such that j∉Ks, we place the label Bi,j onto the node σ. This completes the construction.

We now define Ψi so that ΨSi(j) = 1 if j∈K, and ΨSi(j) = 0 if Bi,j∈S.

More formally, to determine Ψfi(j), search for some value of s such that one of the following holds.

j∈Ks

There is some t < s such that the labels for [formula] have been determined by stage s of the construction and

[formula]

If an s satisfying (1) is found first, then halt and output 1. If an s satisfying (2) is found first, then halt and output 0. (The primary reason for the formalism here is that the informal definition is not a definition, because both of the two "if" clauses could be true. In the conditions where Ψi is supposed to work, exactly one of the two "if" clauses will be true, and the informal definition will be all we need.)

This completes the labeling of 2<  ω, and thus of [formula], and also Ψi for each i. We now move on to prove that the construction functions as desired.

Let f be FIP for [formula]. Let Y = Φf and assume Y is not 1-generic. Then there exists some i such that Ψfi is a computation K.

To explain how this will be proved, note the following lemma which shows the only mechanism by which reals that are not in [formula] might still be able to be in [formula].

Let Y be a path through 2<  ω. Let Bi,j be a B label that is not in [formula]. Then [formula] has the finite intersection property if and only for every initial segment σ of Y, there is an extension [formula] such that [formula].

Let Y be an infinite path through 2<  ω. Let Bi,j be a B label that is not in [formula].

Assume that [formula] has the finite intersection property, and let [formula]. Then [formula] and so it must intersect Bi,j. By Lemma [\ref=L:finitepaths], there must be some τ such that [formula]. Because [formula], we have that [formula].

Conversely, assume that for every [formula], there exists a [formula] such that [formula]. We must prove that [formula] has the finite intersection property. So let F be a finite subset of [formula]. Let [formula]. Because F0 is a finite subset of [formula], we have that there is a [formula] such that [formula]. By assumption, extend σ to a τ such that [formula]. Then [formula], and so, by Lemma [\ref=L:finitepaths], F has nonempty intersection.

We now move on to prove Lemma [\ref=L:main]

Let f be FIP for [formula]. Let Y = Φf, the unique path through 2<  ω such that [formula]. (Note that such a Y is guaranteed to exist by Lemma [\ref=L:containsapath], and is equal to Φf by the comment after the proof of the lemma.)

If Y is not 1-generic, then [formula], as follows. Let i be such that Y neither meets nor avoids Wi. Fix j∉K. Then Bi,j is not in [formula]. This is because Y does not meet Wi, and so we never put any Bi labels onto initial segments of Y.

Furthermore, every initial segment σ of Y has an extension [formula] such that [formula]. This is because Y does not avoid Wi, and so every initial segment of Y has an extension τ that is in Wi, and every time such a τ enters Wi, we put the label Bi,j onto that τ. (Note, this uses the fact that j∉K, and K is c.e., so we we have that [formula].)

By Lemma [\ref=L:cofinal], [formula] has the finite intersection property, and so [formula] is not FIP, because it is not maximal. Thus, [formula].

So now, let [formula]. Then we claim that [formula]. (No A-labeled sets can be in [formula], because A-labels each occur only once, so if they are not in [formula], then there is an A-labeled node in [formula] that they do not intersect.)

To see this, first of all, note that j0∉K. Otherwise, Bi0,j0 only occurs at finitely many locations, and so by Lemma [\ref=L:cofinal], [formula] cannot have the finite intersection property.

Note also that there is no j such that [formula]. This is because j0∉K, and so, at any stage, if we put any Bi0,j onto any initial segment of Y, we would have placed Bi0,j0 onto that same location, contradicting our choice of Bi0,j0.

If j∉K, then Bi0,j occurs at exactly the locations where Bi0,j0, and so Bi0,j has finite intersection with exactly the sets that Bi0,j0 does, so if [formula], then [formula]. (In this construction, Bi0,j0 = Bi0,j. If this is concerning to the reader, the construction could be modified so that we use the construction we present to add odd numbers to our sets, and we use the even numbers to give each set a single element that is in no other set. This does not change our FIP sequences, and ensures that our sets are all distinguished.)

If j∈K, then Bi0,j occurs at finitely many locations, and so by Lemma [\ref=L:cofinal], [formula] does not have the finite intersection property, and so [formula].

Thus, [formula], and so Ψfi0 is a computation of K.

We now prove the main result of this section.

Let X be a real that can compute an FIP function for any uniformly computable sequence of reals. Then X can compute a Cohen 1-generic.

The sequence of reals that we constructed is uniformly computable. Let f be an FIP function for the sequence that we constructed. By Lemma [\ref=L:main], either Φf computes a 1-generic, or there is some i such that Ψfi computes K. We know that K can be used to compute a 1-generic, and so it follows that in either case, f can compute a 1-generic.

Thus, if X can compute such an f, then X can compute a 1-generic.

The 2IP Case

In this section we will modify the proof of the previous section to work with the more delicate property of 2IP in place of FIP. The problems are caused by the B sets from the previous construction. Because they can appear multiple times on 2<  ω in incomparable locations, it is possible there to be a finite set involving B sets (and potentially other sets as well) such that any two of them appear together along some path, but such that they do not all appear together anywhere on 2<  ω on a single finite path.

In this modification, we will produce a construction in which every 2IP set is, in fact, FIP. To do this, we will need to enforce additional intersections among the sets: given any finite set with the 2-intersection property, we must have that all finite subsets of our original finite set have a nonempty intersection. We will accomplish this by adding a priority system to the construction, allowing us greater control over which B labels occur in which locations.

The new construction is as follows.

In this construction, we assume that for every i, Wi never enumerates the empty node λ. The set of such Wi is uniformly computable, so this does not change the computability of the construction, and every real trivially meets every Wi that enumerates λ, so meeting or avoiding those that do not is sufficient to be 1-generic.

We use the same A labels as before.

The B labels will now be indexed Bi,j,ν, with i,j∈ω, and [formula]. We use these labels in the same way that we used Bi,j previously, except that the ν is used to keep track of where higher priority strategies have acted: At stage s, for each i < s, in order, if Wi enumerates σ in ≤  s steps, then let [formula] be the longest initial segment of σ such that ν has no extensions τ with a Bi' label on it for i' < i. If no such ν exists, then do nothing.

Note, in particular, that this implies that lower priority labels never get placed onto initial segments of nodes that already have higher priority labels, except by the actions described in the next paragraph. Otherwise, if no initial segments of σ except possibly the empty string λ have a Bi label yet, then for every j such that j∉Ks, we place the label Bi,j,ν onto the node σ.

In addition, however, when we ever place a label Bi0,j0,ν0 onto a node σ, for every i > i0, for every j, and for every [formula], we place the label Bi,j,ν on the empty node, λ. (In essence, we discard any label we know we will never use again.)

We build our reals Xi as before, except using this differently labeled tree.

This completes the construction.

We first prove that the modifications introduced achieve the desired result: that at the end of the construction, every 2IP set is FIP.

Given any finite set, S, of reals from among the reals that we build, those reals have the 2-intersection property if and only if there is a node σ∈2<  ω such that [formula].

From this, by Lemma [\ref=L:finitepaths], we may conclude that for this set [formula] that we build, a set is 2IP if and only if it is FIP.

Note first that if there is a node σ∈2<  ω such that [formula], then S has the finite intersection property, and so S has the 2-intersection property.

We prove the converse by induction on the size of S, and secondarily by induction on the number of B-labeled sets in S.

If |S| = 2, then the lemma holds because the two sets in S intersect if and only if some element was placed into both of them. At the stage when that element was placed into both the sets, it must be because there was some path σ∈2<  ω such that both those sets were in [formula].

If S has no B-labeled set, then the lemma holds because A labels still appear at most once each on 2<  ω. Thus, either there is some pair of them on incomparable nodes, and so S does not have the 2-intersection property, or all of their nodes are comparable, and so one of those nodes is an extension of all the other nodes.

If S has one B-labeled set, then the lemma holds because that label must occur on a node that is comparable to the maximal node among those with A labels (otherwise, the S would not have the 2-intersection property). Thus, that maximal node can be extended to (or is already an extension of) a path including a node labeled with that B-label.

Otherwise, let |S| > 2, and let Bi0,j0,ν0 and Bi1,j1,ν1 be two sets in S. We now consider three cases.

Case 1: i0 < i1, and at some point, label Bi1,j1,ν1 is placed on to λ.

Then, by induction, there is a σ such that [formula]. But then [formula], because [formula].

Case 2: i0 < i1, and Bi1,j1,ν1 is never placed on to λ.

In this case, first note that because S has 2IP, Bi0,j0,ν0 and Bi1,j1,ν1 have nonempty intersection, and so Bi1,j1,ν1 must at some point be placed on a node that is comparable to a node that already has the label Bi0,j0,ν0.

Let σ0 be a node with the label Bi0,j0,ν0 that at at some point has an extension with the label Bi1,j1,ν1. (If Bi0,j0,ν0 were on an extension of Bi1,j1,ν1, then Bi1,j1,ν1 would be placed on λ.)

Then we have that [formula] by definition of how ν values are chosen when B labels are placed. For the same reason, the label Bi1,j1,ν1 is only ever placed on extensions of σ0. (Instances of Bi1 labels that are not on extensions of σ0 would have a different ν value.) We proceed as in Case 1, but with i0 and i1 reversed:

By induction, there is a σ such that [formula]. But then [formula], because Bi1,j1,ν1 is only ever placed on extensions of σ0, and so [formula]. By choice of σ0, σ0 has the label Bi0,j0,ν0.

Case 3: i0 = i1.

If either Bi0,j0,ν0 or Bi1,j1,ν1 is ever placed onto λ, then we proceed as in Case 1.

If ν0  =  ν1, then by symmetry, assume either that j0 enters K before j1 or that neither j0 nor j1 is in K. Then every node with the label Bi0,j0,ν0 also has the label Bi1,j1,ν1. By induction, we may let σ be such that [formula]. Bi0,j0,ν0 is in [formula], and so Bi1,j1,ν1 is also in [formula].

We now claim that it is not possible that ν0  ≠  ν1, and neither Bi0,j0,ν0 nor Bi1,j1,ν1 is ever placed onto λ.

Let σ0 be any path whose labels include Bi0,j0,ν0 and Bi1,j1,ν1. Then ν0 and ν1 are each the respective shortest initial segments of σ0 that had no higher priority extensions when the respective labels were placed. Thus in between when the two labels were placed, one of them, by symmetry ν0 must have had a higher priority B label placed on an extension of it. But then Bi0,j0,ν0 is placed on λ, providing a contradiction.

With this lemma, we have that for this new construction, the FIP sets are exactly the 2IP sets, because the finite intersection property and the 2-intersection property agree on finite sets.

The construction is defined as before, and we define Φ as before, so every lemma from the previous two sections holds except possibly Lemma [\ref=L:main], which is the only Lemma that references the specifics of how the B sets are placed, and also the only lemma that references the specifics of how the Ψi were defined. We now define our analogues of the Ψi that we will need for this construction.

Let Ψi,ν be the functional such that that ΨSi,ν(j) = 1 if j∈K, and ΨSi,ν(j) = 0 if Bi,j,ν∈S. Formalize this in the same way as for the Ψi of the previous construction.

Let f be FIP (or equivalently 2IP) for [formula]. Let Y = Φf and assume Y is not 1-generic. Then there exist some i,ν such that Ψfi,ν is a computation K.

As a reminder, in this construction, we assume that for every i, Wi never enumerates λ.

Let f be FIP for [formula]. Let Y = Φf, the unique path through 2<  ω such that [formula].

If Y is not 1-generic, then let i1 be minimal such that Y neither meets nor avoids Wi1. Let i0 be minimal such that there is no Bi0 label on an initial segment of Y besides λ, and such that every initial segment of Y has an extension with a Bi0 label. We claim that i0 exists. To prove this, we show that if every i < i1 does not satisfy the property that i0 must satisfy, then i1 satisfies that property:

Assume that every i < i1 does not satisfy this property, and let σ1 be the shortest initial segment of Y such that for every i < i1 there is no extension of σ1 with a Bi label. Then, because Y neither meets nor avoids Wi1, there are cofinally many locations along Y where a Bi1 label will want to be placed. If those locations are extensions of σ1, then that label will actually be placed, because a ν value will be found, and so every initial segment of Y has an extension with a Bi1 label. Furthermore Y does not meet Wi, and so no Bi1 label will be placed on an initial segment of Y besides λ.

Therefore, i0 exists. Let ν0 be the shortest initial segment of Y such that for every i < i1 there is no extension of ν0 with a Bi label. We now claim that Ψfi0,ν0 is a computation of K.

To prove this, we first show that for every j, [formula]. By choice of i0, we know that Bi0,j,ν0 does not appear on an initial segment of Y besides λ, and by choice of ν0, Bi0,j,ν0 is never put on λ.

Next we show that if [formula], then Bi,j,ν occurs on extensions of all initial segments of Y if and only if i = i0, ν  =  ν0, and j∉K.

By assumption, every initial segment of Y has an extension with a Bi0 label. If that label was placed after the stage at which every [formula] is seen to have an extension with a Bi label for some i < i0, then that Bi0 label has ν value ν0. If j∉K, then the label Bi0,j,ν0 is placed at that location together with the aforementioned label. Thus, if i = i0, ν  =  ν0, and j∉K, then Bi,j,ν occurs on extensions of all initial segments of Y.

We prove the converse in cases. Assume [formula].

If i < i0, then by choice of i0, Bi,j,ν does not occur on extensions of all initial segments of Y.

If j∈K, then Bi,j,ν appears at only finitely many locations, and so Bi,j,ν does not occur on extensions of all initial segments of Y.

If i = i0, and j∉K, and ν  ≠  ν0, then after the stage at which every [formula] is seen to have an extension with a Bi label for some i < i0, the only ν value used for Bi labels is ν0, so Bi,j,ν does not occur on extensions of all initial segments of Y.

Finally, if i > i0, then first note that if Bi,j,ν does not occur on λ, then Bi,j,ν only occurs on extensions of ν, and so if Bi,j,ν occurs on extensions of all initial segments of Y, then [formula]. So then, choose [formula] such that [formula]. By assumption on i0, at some stage, a Bi0 label is placed on an extension of σ. At that stage, Bi,j,ν is placed on λ, and so [formula], providing a contradiction.

Therefore, we may conclude that [formula] has the finite intersection property, and no other reals may be added to [formula] while preserving the finite intersection property.

Thus Ψfi0,ν0 is a computation K.

As before, we may now conclude our desired result.

Let X be a real that can compute an 2IP function for any uniformly computable sequence of reals. Then X can compute a Cohen 1-generic.

Reverse Mathematics

In this section, we discuss the reverse mathematical consequences of our work from the previous sections. We discuss the reverse mathematical principles FIP and 2IP, defined by Dzhafarov and Mummert in [\cite=DM13], we define the principle "1-GEN," and we use work from this paper as well as from [\cite=DDGT] to prove that FIP and 1-GEN are equivalent over RCA0.

In [\cite=DM13], it was proved that FIP implies 2IP over RCA0, and our work from Section [\ref=2ip] shows that 2IP also implies 1-GEN, and therefore FIP. However, this implication appears to require IΣ2 for the proof. Our proof utilizes IΣ2 in one location, and BΣ2 in two others.

FIP is the principle of 2nd order arithmetic that says:

"Let [formula] be a real, thought of as coding the sequence 〈Xi〉 of reals that are its columns. Then there exists an f such that {Xf(i)} is maximal with respect to the finite intersection property."

(Our original definition of an FIP real was over computable values of [formula]. This statement can thus be thought of as the statement "every [formula], computable or not, has an f that is FIP with respect to [formula].")

nIP is the same principle of 2nd order arithmetic, except with "finite intersection property" replaced with "n-intersection property."

1-GEN is the principle of 2nd order arithmetic that says:

"For every X, there exists a Y such that Y is Cohen 1-generic over X.

We begin by demonstrating the equivalence between FIP and 1-GEN.

In [\cite=DDGT], it was proven that any Turing degree that can compute a 1-generic is also an FIP degree. We summarize this proof, observe that the proof relativizes and verify that the details can be carried out in RCA0 to prove that 1-GEN implies FIP over RCA0.

RCA[formula] 1-GEN →   FIP.

Given a sequence of sets [formula], let f be a generic for the forcing in which conditions are partial functions g, with finite domain, such that {Xg(i)} has nonempty intersection.

If f is generic for this forcing, then {Xf(i)} clearly has the finite intersection property. Furthermore, it is maximal by the following argument.

If, for some n, [formula] has the finite intersection property, then at every stage during the forcing, it would have been possible to extend g to have n in the range of g. In this case, by genericity of f, n must be in the range of f.

This argument is readily formalized in RCA0.

The converse to Proposition [\ref=1direction] follows from the work in this paper.

RCA[formula] FIP →   1-GEN.

The proofs in Sections [\ref=fip1] and [\ref=fip2] are mostly finitary in nature, and so readily formalized in RCA0. The infinitary arguments mostly follow from the definitions, and so require no induction. (For instance, a label appears on cofinally many extensions of the path precisely if a given c.e. set of nodes is dense along that path.)

The only use of induction is in Lemma [\ref=L:containsapath], which states that an FIP sequence must contain {Aσ} for σ in a unique infinite path through 2<  ω. This conclusion requires Σ0 induction: an infinite path is a collection of nodes that are all comparable including one node at each level. We show that the nodes are all comparable directly, and we show that there is one node at each level because the nodes are downward closed and there cannot be a last node.

This can all be formalized in RCA0.

In [\cite=DM13], it was proved that FIP implies 2IP over RCA0. We sketch the proof for completeness.

For every n > m, RCA[formula] nIP →   mIP.

For every n, RCA[formula] FIP →   nIP.

In particular, RCA[formula] FIP →   2IP.

We sketch the proof that RCA[formula] FIP →   2IP.

Given [formula], we create a new sequence [formula] where, whenever we see a finite set of the Xi having the 2-intersection property, we take an element, and put that element into every [formula] in the corresponding set of [formula], and nowhere else. This ensures that the finite intersection property for [formula] is equivalent to the 2-intersection property for [formula], and hence that any FIP sequence for [formula] is a 2IP sequence for [formula].

The proofs of the other statements are similar.

From our construction, we are able to obtain a partial converse, but our construction appears to require Σ2 induction.

RCA[formula] 2IP →   1-GEN.

Lemma [\ref=L:2ipisfip] is a proof that uses induction, and even after simplification appears to require Δ2 induction. By a result of Slaman [\cite=S], Δ2 induction is equivalent to Σ2 bounding. The statement in question is the statement that says that given any finite set of labels used in the second construction, those labels have the 2-intersection property if and only if they appear together on some finite path.

A priori, a label being used in the construction is a Σ1 event, but we may rephrase the lemma to be quantified over all labels that could potentially be used, and only over sets of size 2 or greater. In this case, the lemma would vacuously true for labels not used in the construction: they neither appear on paths, nor have the 2-intersection property with anything.

Furthermore, the "if" part of the statement can be proven globally without induction: If the labels appear along a finite path, then they have an element in all of them, and so they have the 2-intersection property.

Thus, induction is only used to prove that if the labels have the 2-intersection property then they appear together along some path. This is still a Σ1  →  Σ1 statement, which is a Δ2 statement.

Lemma [\ref=L:main2] also requires induction for two reasons, and this is where we use Σ2 induction (or, more precisely, LΠ2, which is equivalent to IΣ2).

First we need a highest priority i0 that acts infinitely often along extensions of initial segments of Y. Strategy i acting infinitely often along extensions of initial segments of Y is Π2:

[formula]

Next we need to know that after some initial segment of Y, strategy i0 can stop changing its ν values. This apparently requires Σ2 bounding: if each i < i0 acts on extensions of only finitely many initial segments of Y, then we need to know that there is some initial segment of Y after which strategy i0 will no longer need to change its ν value on extensions of that segment, allowing it to act infinitely often with the same labels and achieving its infinitary requirement. This is an instance of Σ2 bounding.

A note on the proof:

It is tempting to attempt to remove the first instance of Σ2 induction by letting i1 be any i such that Y neither meets nor avoids Wi, and then claiming that either some higher priority strategy acts infinitely often or we can win with strategy i1. Unfortunately, this does not seem to work, because we need the higher priority strategy to act infinitely often and also to not have any even higher priority strategies act infinitely often.

Without Σ2 induction, one could potentially imagine a cut below which every strategy acts finitely often, and above which every strategy acts infinitely often, but gets injured infinitely often by higher priority strategies that are also above that cut.

Synthesizing the results of this section, we obtain the following implications.

RCA[formula] FIP ↔   1-GEN.

RCA0 + IΣ2 proves the following are equivalent.

FIP

1-GEN.

nIP (for any value of n)

In particular, the below statements are all equivalent in ω models of RCA0. We do not know whether these equivalences hold over RCA0 in general.

Does RCA0 prove FIP ↔   2IP?

Indeed, we have an entire tower of open questions, although a positive answer to Question [\ref=q1] would resolve all of them simultaneously.

Do there exist n,m such that RCA0 proves nIP ↔   mIP?

What about RCA0 + BΣ2?