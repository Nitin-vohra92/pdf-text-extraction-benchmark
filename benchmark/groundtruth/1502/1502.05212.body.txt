IAT - Image Annotation Tool: Manual

Introduction

The annotation of image and video data of large datasets is a fundamental task in multimedia information retrieval [\cite=Datta06] [\cite=Hu2011] and computer vision applications [\cite=Everingham10] [\cite=Maybank2004] [\cite=Wang2013]. In order to support the users during the image and video annotation process, several software tools have been developed to provide them with a graphical environment which helps drawing object contours, handling tracking information and specifying object metadata [\cite=halaschek2005photostuff] [\cite=labelme] [\cite=labelmevideo] [\cite=vatic] [\cite=viper] [\cite=flowboost] [\cite=bianco2014interactive-tool]. For a survey on image and video annotation tools interested readers can refer to [\cite=Dasiopoulou11]. Here we introduce a preliminary version of the image annotation tools developed at the Imaging and Vision Laboratory.

The application

IAT is an application for the annotation of digital images. It allows the users to annotate regions on the images in several ways (predefined or free), and to associate to the selected regions labels depending on the application context chosen from a predefined taxonomy. The application allows to choose whether annotate a single image, or start a project to annotate several images in a sequential manner. The results are saved and stored in files in textual format. It is possible for the user to load the results and resume the annotation process from the last saved state. The annotations are editable either by moving the reference points that characterize them allowing the user to annotate in the best way the portion of the image. Three different shapes of annotation are provided: rectangular, elliptical and polygonal. These three shapes are able to cover a large range of region shapes.

To facilitate the annotation process, the labels to be associated to the annotated regions are organized in a three-level taxonomy: Class, Type and Name. The Class is used to groups entities that share similar macro properties (e.g. vehicles, foods, people). Within a class we can have entities of different types (e.g. car, bicycle, vegetable, fruit, male, female). Finally the name is a unique identifier of an entity present in the current image being annotated. Class and Type are predefined and depend on the application domain in which the image annotation are used.

The application has been built with the requirement of being cross-platform in mind. For this reason the Qt environment and C++ languages were used. Qt [\cite=qt] is an environment for open source software development. It is based on multi-platform libraries, and for this reason Qt is used when applications using graphical interfaces are needed.

The following images illustrate an example of the application user interface and the image annotation process.

Usability

A usability test phase has been performed at the end of program development. The objective was to assure the quality of the GUI, evaluating if the program properly reacts to the inputs and user's needs.

To this end, several tester have been engaged in the evaluation phase. They were charged to perform several tasks o increasing difficulty to cover all the aspects of the application such as annotate an image, load an image annotation file, edit or delete some annotations, create polygonal annotations, start a new project.

None of the chosen testers have found difficulties to complete the simple tasks. There have been slight difficulties in creating polygonal annotations. Testers with little and medium experience in using computer, found difficulties to start a new project. Expert users found all the aspects pretty simple and practical despite some initial doubts.

At the end of the test, users were given a short questionnaire to evaluate some aspects of the program using a 1 (one) to 5 (five) scale. They were given 14 statements and asked if they strongly disagree (1), disagree (2), are neutral (3), agree (4), or strongly agree (5).

Table [\ref=tab:feedbacks] shows the statements and the average user feedback for each statement. It should be noted that some results must be considered positive for low feedback values (e.g. 1, 4, 6, 8, 10, and 13) while other for high feedback values (2, 3, 5, 7, 9, 11, 12, and 14).

On the overall, the system proved to be intuitive considering that all the users, except one, were able to accomplish all the goals proposed. The only failure was due to a program crash during the achievement of a single goal. The testers also provided valuable suggestions. For example, some users asked to provide the possibility to create and edit the files that contain the taxonomy of labels to be used during annotation.

Conclusion

IAT is our first step toward a more complete image annotation tool. Its initial functionality and graphical user interface have been demonstrated to be efficient and effective. Our aims is to add more functionality to make the annotation process simpler and faster. For example we plan to add advanced image processing algorithms to help the user to semi-automatically annotate regions of interest.

IAT can be freely downloaded from . Also, at the same page, a video demo illustrating the image annotation process is provided.