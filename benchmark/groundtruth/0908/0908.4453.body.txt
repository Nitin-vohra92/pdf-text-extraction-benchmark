Lemma Corollary Proposition

Proof of :

="2D

Depth-Independent Lower bounds on the Communication Complexity of Read-Once Boolean Formulas

Hartmut Klauck

Shengyu Zhang

Introduction

A read-once Boolean formula f:{0,1}n  →  {0,1} is a function which can be represented by a Boolean formula involving [formula] and [formula] such that each variable appears, possibly negated, at most once in the formula. An alternating [formula] tree is a layered tree in which each internal node is labeled either [formula] or [formula] and the leaves are labeled by variables; each path from the root to the any leaf alternates between [formula] and [formula] labeled nodes. It is well known (see eg. [\cite=HeimanW91]) that given a read-once Boolean formula f:{0,1}n  →  {0,1} there exists a unique alternating [formula] tree, denoted Tf, with n leaves labeled by input Boolean variables [formula], such that the output at the root, when the tree is evaluated according to the labels of the internal nodes, is equal to [formula]. Given an alternating [formula] tree T, let fT denote the corresponding read-once Boolean formula evaluated by T.

Let x,y∈{0,1}n and let [formula] represent the bit-wise [formula] of the strings x and y respectively. For f:{0,1}n  →  {0,1}, let [formula] be given by [formula]. Similarly let [formula] be given by [formula]. Recently Leonardos and Saks [\cite=LeonardosS09], investigated the two-party randomized communication complexity, denoted [formula], of [formula] and showed the following. (Please refer to [\cite=KushilevitzN97] for familiarity with basic definitions in communication complexity.)

In the theorem, the depth of a tree is the number of edges on a longest path from the root to a leaf. Independently, Jayram, Kopparty and Raghavendra [\cite=JayramKR09] proved randomized lower bounds of Ω(n / 2Ω(d log d)) for general read-once Boolean formulas and Ω(n / 4d) for a special class of "balanced" formulas.

It follows from results of Snir [\cite=Snir85] and Saks and Wigderson [\cite=SaksW86] (via a generic simulation of trees by communication protocols [\cite=BCW98]) that for the read-once Boolean formula with their canonical tree being a complete binary alternating [formula] trees, the randomized communication complexity is [formula], the best known so far. However in this situation, the results of [\cite=LeonardosS09] [\cite=JayramKR09] do not provide any lower bound since d  =   log 2n for the complete binary tree. We complement their result by giving universal lower bounds that do not depend on the depth. Below [formula] represents the two-party quantum communication complexity.

Remark:

Note that the maximum in Thoerem [\ref=fact:LS09] and [\ref=thm:AND-OR] is necessary since for example if f is the [formula] of the n input bits then it is easily seen that [formula] is 1.

This fact is easy to observe for balanced trees, as is also remarked in [\cite=LeonardosS09].

Proofs

In this section we show the proof of Theorem [\ref=thm:AND-OR]. We start with the following definition.

We say that a function g1:{0,1}r  ×  {0,1}r  →  {0,1} can be embedded into a function g2:{0,1}t  ×  {0,1}t  →  {0,1}, if there exist maps ha:{0,1}r  →  {0,1}t and hb:{0,1}r  →  {0,1}t such that [formula].

It is easily seen that if g1 can be embedded into g2 then the communication complexity of g2 is at least as large as that of g1.

Let us define the Disjointness problem [formula] as [formula] (where the usual negation of the variables is left out for notational simplicity). Similarly the Non-Disjointness problem [formula] is defined as [formula]. We shall also use the following well-known lower bounds.

[formula].

[formula].

Recall that for the given read-once Boolean formula f:{0,1}n  →  {0,1} its the canonical tree is denoted Tf. We have the following lemma which we prove in Section [\ref=sec:_lemma]. With this lemma, we can prove the lower bounds on [formula] and [formula] as follows. For an arbitrary read-once formula f with n variables, consider the sets of leaves

[formula]

At least one of the two sets has size at least n / 2; without loss of generality, let us assume that it is Lodd. Depending on whether the root is [formula] or [formula], this set consisting only of [formula] gates or [formula] gates, corresponding to case 1 or 2 in Lemma [\ref=lem:main]. Then by the lemma, either [formula] or [formula] can be embedded in f (by setting the leaves in Leven to 0's). By Fact [\ref=fact:_random_lb] and [\ref=fact:_quantum_lb], we get the lower bounds in Theorem  [\ref=thm:AND-OR].

Proof of Lemma  [\ref=lem:main]

We shall prove the first statement; the second statement follows similarly. We first prove the following claim.

For an n-leaf (n > 2) alternating [formula] tree T such that all its internal nodes just above the leaves have exactly two children (denoted the x-child and the y-child), let s(T) denote the number of such nodes directly above the leaves. Let m0(T) be the largest integer such that [formula] can be embedded into fT and m1(T) be the largest integer such that [formula] can be embedded into fT. Then m0(T)m1(T)  ≥  s(T).

The proof is by induction on depth d of T. When n > 2, the condition of the tree makes d > 1, so the base case is d = 2. Base Case d = 2: In this case T consists either of the root labeled [formula] with s(T) (fan-in 2) children labeled [formula]s or it consists of the root labeled [formula] with s(T) (fan-in 2) children labeled [formula]s. We consider the former case and the latter follows similarly. In the former case fT is clearly [formula] and hence m0(T)  =  s(T). Also m1(T)  ≥  1 as follows. Let us choose the first two children v1,v2 of the root. Further choose the x child of v1 and the y child of v2 which are kept free and the values of all other input variables are set to 0. It is easily seen that the function (of input bits x,y) now evaluated is [formula]. Hence m0(T)m1(T)  ≥  s(T).

Induction Step d  >  2: Assume the root is labeled [formula] (the case when the root is labeled [formula] follows similarly). Let the root have r children [formula] which are labeled [formula] and let the corresponding subtrees be [formula] rooted at [formula] respectively. Let without loss of generality the first r' (with 0  ≤  r'  ≤  r) of these trees be of depth 1 in which case the corresponding s(  ·  )  =  0. It is easily seen that

[formula]

For i > r', we have from the induction hypothesis that m1(Ti)m0(Ti)  ≥  s(Ti). It is clear that [formula], since we can simply combine the Disjointness instances of the subtrees. Also we have [formula], because we can either take any one of the subtree instances (and set all other inputs to 0), or at the very least can pick a pair of x,y leaves (as in the base case above) and fix the remaining variables appropriately to realize a single [formula] gate which amounts to embedding [formula]. Now,

[formula]

Now we prove Lemma [\ref=lem:main]: Let us view [formula] as a read-once Boolean formula, with input (x,y) of [formula] corresponding to the x- and y- children of the internal nodes just above the leaves. Note that in this case [formula] satisfies the conditions of the above claim and [formula]. Hence the proof of the first statement in Lemma [\ref=lem:main] finishes.

Concluding Remarks

The randomized communication complexity varies between Θ(n) for the [formula] function (a read-once Boolean formula whose canonical tree has depth 2) [\cite=JKS03] and [formula] for functions corresponding to completely balanced [formula] trees (which have depth log n). It will probably be hard to prove a generic lower bound much larger than [formula] for all read-once Boolean formulas f:{0,1}n  →  {0,1}, since the best known lower bound on the randomized query complexity of every read-once Boolean formula is Ω(n.51) [\cite=HeimanW91] and communication complexity lower bounds immediately imply slightly weaker query complexity lower bounds (via the generic simulation of trees by communication protocols [\cite=BCW98]).

Ambainis et al. [\cite=AmbainisCRSS07] show how to evaluate any alternating [formula] tree T with n leaves by a quantum query algorithm with slightly more than [formula] queries; this also gives the same upper bound for the communication complexity of [formula]. On the other hand, it is easily seen that the parity of n bits can be computed by a formula of size O(n2) involving [formula]. Therefore it is easy to show that the function Inner Product modulo 2 i.e. the function [formula] given by [formula], with [formula] can be reduced to the evaluation of an alternating [formula] tree of size O(n) and logarithmic depth. Since it is known that [formula] [\cite=CleveDNT99], we get an example of an alternating [formula] tree T with n leaves and log n depth such that [formula]. Since the same lower bound also holds for shallow trees such as [formula], hence [formula] might turn out to be the correct bound on [formula] for all alternating [formula] trees T with n leaves regardless of the depth.

Acknowledgments: Research of Rahul Jain and Hartmut Klauck is supported by the internal grants of the Centre for Quantum Technologies (CQT), which is funded by the Singapore Ministry of Education and the Singapore National Research Foundation. Research of Shengyu Zhang is partially supported by the Hong Kong grant RGC-419309, and partially by CQT for his research visit.