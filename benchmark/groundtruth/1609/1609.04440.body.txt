[formula]-posets

by Lawrence Valby

September, 2016

lvalby@iu.edu, lawrence.valby@gmail.com

Abstract

We investigate a certain class of posets arising from semilattice actions. Let S be a semilattice with identity. Let S act on a set C. For c,d∈C put c  ≤  d iff there is some s∈S with ds = c. Then (C,  ≤  ) is a poset. Let's call the posets that arise in this way [formula]-posets. We give a reasonable second order characterization of [formula]-posets and show that there is no first order characterization.

Introduction

The original motivation for this paper came from Seth Yalcin and Daniel Rothchild and their work on the semantics and pragmatics of natural language conversations [\cite=Yalcin], but the results described here are of a purely mathematical character, and may be of interest to people who study posets, combinatorial topologists ([formula]-functions below are related to deformation retractions), and logicians or computer scientists (e.g. is recognizing a [formula]-poset [formula] or [formula]-complete?). In addition to thanking Seth Yalcin for bringing the problem to my attention, I would also like to thank George Bergman for valuable input.

A semilattice with identity is a set S together with a binary operation S  ×  S  →  S (written concatenatively) and an element 1∈S satisfying the following universal equations:

ss = s (idempotent)

st = ts (commutative)

(st)u = s(tu) (associative)

1s = s (identity)

The quintessential example of a semilattice with identity is a subset S of the powerset of some set W, i.e. S  ⊆  P(W), and the operation is given by intersection, i.e. [formula], and the identity element is the whole set W, i.e. 1: = W. Indeed, it is straightforward to prove that every semilattice with identity is isomorphic to such a semilattice with identity.

Let S be a semilattice with identity. We describe what it means for S to act on a set C. It means that there is a function C  ×  S  →  C (the action, written concatenatively) that satisfies the following universal equations.

c(st) = (cs)t (and so we may write simply cst)

c1 = c

Notice that we generally use lowercase letters like c,d,e to denote elements of the set C, and lowercase letters like s,t,u to denote elements of the semilattice S.

Let S act on C. We define a binary relation ≤   on C as follows. We put c  ≤  d iff there is some s∈S such that ds = c. Any such ≤   is in fact a poset; as an example we verify antisymmetry. Let cs = d and dt = c. Then ct = dtt = dt = c and so c = dt = cst = cts = cs = d. We call the posets that arise in this way (or isomorphic to such a poset) [formula]-posets. Intuitively, we think of elements of C as states of some system, the elements of S as specific acts that may be performed that change the state of the system, and then c  ≤  d means that it is possible to transition from state d to state c.

The quintessential example of a [formula]-poset is one that arises as follows. The set C is a subset of the powerset of some set W, i.e. C  ⊆  P(W), the semilattice S is a sub-semilattice of [formula], the action C  ×  S  →  C is given by intersection, and the induced order on C matches ⊆  . In fact, every [formula]-poset is isomorphic to one that arises in this way.

For example, let W = {1,2,3,4}, C = {c,d,e,f,g}, and [formula] where

[formula]

d = {1}

e = {2}

f = {1,2,3}

g = {1,2,4}

[formula]

t = {1}

u = {2}

[formula]

Figure [\ref=not_semilattice_yes] is a picture of the resulting [formula]-poset (up the page is up in the poset).

This paper is concerned with the question of characterizing which posets are [formula]-posets. Every semilattice is a poset (via x  ≤  y iff xy = x), and every semilattice is a [formula]-poset, but not every [formula]-poset is a semilattice. Figure [\ref=not_semilattice_yes] furnishes an example of a [formula]-poset that is not a semilattice. Furthermore, not all posets are [formula]-posets. For example, consider the poset in Figure [\ref=not_semilattice_not]. If it were a [formula]-poset, then there would be some action C  ×  S  →  C that gave rise to this order. In particular, we would have es = c and et = d for some s,t∈S. But then c = est = ets = d, a contradiction.

To give the reader a sense of the problem, consider the poset in Figure [\ref=not_down_poset] and see if you can tell whether it is a [formula]-poset or not. We will answer this question in the next section, using our second order characterization of [formula]-posets.

Second Order Characterization

Let (C,  ≤  ) be a poset. We call a function f:C  →  C a [formula]-function when

f(c)  ≤  c (decreasing)

c  ≤  d implies f(c)  ≤  f(d) (monotone)

c  ≤  f(d) implies f(c) = c ("below-image-fixing")

An example of a [formula]-function is, in the context of a [formula]-poset and a fixed s∈S, the function c  ↦  cs. In detail, this is decreasing because cs  ≤  c by the definition of ≤  , it is monotone because dt = c implies dst = dts = cs, and it is below-image-fixing because dst = c implies cs = dsts = dst = c.

By way of introduction to [formula]-functions, we discuss how the definition of [formula]-function is similar to that of interior operator in topology or box operator in modal logic, yeat also different. Let [formula] be a poset with finite meets. A function [formula] is an interior operator when for x,y∈C:

[formula]

[formula]

[formula]

[formula]

Both [formula]-functions and interior operators are decreasing, and both are monotone (in the case of [formula] this follows from preservation of [formula]). Binary meets [formula] might not exist in the case of an arbitrary poset, but all binary meets that do exist are preserved by [formula]-functions, so they have this in common as well. Furthermore, because f(c)  ≤  f(c), we get ff(c) = f(c) as a special case of below-image-fixing. However, on the other hand, a [formula]-function might not preserve 1, even if 1 exists, and so this is a difference. Another difference is that [formula] might not satisfy below-image-fixing. E.g., consider the usual topology on [formula] and note that [formula], but [formula].

A poset (C,  ≤  ) is a [formula]-poset iff whenever c  ≤  d there is a [formula]-function f:C  →  C such that f(d) = c (we say "there are enough [formula]-functions").

Suppose first that (C,  ≤  ) is a [formula]-poset. Let c  ≤  d. Then there is some s such that ds = c, and the function e  ↦  es is a [formula]-function.

Now conversely suppose that (C,  ≤  ) is a poset with enough [formula]-functions. Let S be the set consisting of the [formula]-functions of C. We claim that S is a semilattice with identity where the product is the usual composition of functions and 1 is the identity function. This is easy to verify; we include as an example a proof that the composition of [formula]-functions is commutative. Let f and g be [formula]-functions. We wish to show [formula]. It suffices to show that fgc  ≤  gfc for each c∈C. Because g is decreasing, gc  ≤  c. Then, because f is monotone, fgc  ≤  fc. Because g is monotone, we in turn get gfgc  ≤  gfc. We claim gfgc  =  fgc, which will establish fgc  ≤  gfc. Becausef is decreasing, fgc  ≤  gc. So, because g is below-image-fixing, gfgc  =  fgc.

This semilattice with identity S acts on C in the obvious way. Finally, the [formula]-poset (C,  ≤  ') this action induces is the same as the original poset (C,  ≤  ). As a relation ≤  ' is a subset of ≤   because [formula]-function are decreasing, and ≤   is a subset of ≤  ' because of the assumption that there are enough [formula]-functions.

To illustrate this theorem, let's return to the poset of Figure 3 and see why it's not a [formula]-poset. If it were, then there would be a [formula]-function α such that α(i) = h. Because d,e  ≤  h and h is in the image of α, and α is below-image-fixing, we get that α(d) = d and α(e) = e. As d,e  ≤  f, by monotonicity of α we get d,e  ≤  α(f). Thus, α(f) = f because α is decreasing. This implies that α(g) = g (by below-image-fixing), and so because g  ≤  i we get by monotonicity g = α(g)  ≤  α(i) = h, which is a contradiction.

I note that the [formula]-functions of any poset form a semilattice with identity as in the proof of Theorem [\ref=second_order], whether or not the original poset was a [formula]-poset. In this way, every poset (C,  ≤  ) has a canonical [formula]-poset (C,  ≤  ') inside of it, in the sense that ≤  ' is a subset of ≤  . The nature of these canonical [formula]-posets and their relationship to the original posets is a matter for further study. Some basic observations about the situation are as follows. First, ≤  ' is not always a maximal subset of ≤   that makes C into [formula]-poset. Second, although every ≤  -[formula]-function is a ≤  '-[formula]-function, the reverse is not always true.

No First Order Characterization

While there is a succinct second order characterization of [formula]-posets, there is no first order characterization. The class of [formula]-posets is closed under ultraproducts (as it is definable by an existential second order sentence, implicit in Theorem [\ref=second_order]), but its complement is not closed under ultrapowers.

There is no first order axiomatization of [formula]-posets (in the signature only containing ≤  ).

One can give an example of a poset that is not a [formula]-poset, but has an ultrapower that is. The poset pictured in Figure [\ref=not_first_order] is such a poset. The basic idea of the example is that if f were a [formula]-function with f(b) = a, then f(n) = n for each [formula] (using zn and the u's and x's), and as f(w) must be 0, there is nothing that f(y) can be. On the other hand, a suitable ultrapower of this poset will have an "infinite natural number" below y that can work as f(y). Of course, one has to carefully check that there are no other obstructions to the ultrapower being a [formula]-poset.

Further Questions

Some questions for further study include the following.

Is there a first order sentence that is satisfied by a finite poset iff it is a [formula]-poset?

Relatedly, is there a polynomial time algorithm that decides whether a finite poset is a [formula]-poset? (The second order characterization gives an [formula] algorithm.)

Investigate the connection between [formula]-functions and the deformation retractions of combinatorial topology.

Every poset has a canonical [formula]-poset inside it. Investigate this.

Does this result have any bearing on models for the semantics and pragmatics of natural languages?