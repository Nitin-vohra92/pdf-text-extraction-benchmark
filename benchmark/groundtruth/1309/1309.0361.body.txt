Lemma

Definition

Proposition

Corollary

Examples

Remark

Notation

Diagrammatics

Girard's !( ) as a reversible fixed-point operator

Introduction

Logical background

The Curry-Howard isomorphism [\cite=CH] (also known as the 'proofs as programs' correspondence) and later categorical extensions [\cite=LS] provide a natural way of looking at logical systems as computing systems and vice versa. For applications to reversible and quantum computing, it is common to consider computational interpretation of reversible logics - in particular, J.-Y. Girard's Linear Logic [\cite=LL]. This provided a finer-grained decomposition of natural deduction in which the structural operations of copying and contraction (i.e. deletion against a copy) were either forbidden, or severely restricted by a strong typing system. As a natural consequence of this, Linear Logic is an essentially reversible logical system, and the computational interpretation provided by extensions of the Curry-Howard isomorphism is in terms of reversible computation.

The computational core of (a significant fragment of) Linear Logic was isolated in the Geometry of Interaction series of papers [\cite=GOI1] [\cite=GOI2] [\cite=GOI3]. Although the system described was logically degenerate (i.e. conjunction and disjunction were identified, as were universal and existential quantification, and propositions and their negations), the computational core remained -- indeed, as demonstrated in [\cite=HA] [\cite=AHS], the system described had a natural interpretation as untyped combinatory logic and hence (via the standard embedding of untyped lambda calculus into combinatory logic) was computationally universal, despite being entirely based around reversible primitives.

Typing systems in Linear Logic, and untyped computation

The demonstration of the computational universality of the Geometry of Interaction system given in [\cite=AHS] was via an encoding of (untyped) combinatory logic. Indeed, in [\cite=GOI1], Girard states that the system presented 'forgets types'. A very natural question is then, 'where does this leave the strong typing system used to restrict the structural rules of logic?'

Linear Logic itself uses two unary operations, frequently described as modalities, denoted !( ) and ?( ), commonly called 'of course' and 'why not' respectively, or more whimsically 'bang' and 'whimper'. These are used to provide a typing system that restricts the applicability of potentially irreversible structural rules.

Both these operations survive the passage from Linear Logic to the Geometry of Interaction system (by contrast, it must be noted, with the distinction between conjunction and disjunction, which is lost). This raises the natural question of how an operator, which is supposed to provide a typing system that accommodates irreversible structural operations, can possibly have an interpretation within an entirely reversible, untyped system.

The objectives of this paper

The substantial claims of this paper are the following:

The interpretation of the !( ) operation (and by duality, the ?( ) operation) within the Geometry of Interaction system is as a fixed-point operation.

This fixed-point operation, in stark contrast to fixed-point constructions generally, lives within an entirely reversible setting.

This is possible precisely because the logical/computational interpretation is as an untyped system.

We take a categorical approach, and - as is standard - work within the category of partial injections on sets. We first give explicit description of a monoidal tensor [formula] that models the (identified) multiplicative conjunction / disjunction of Linear Logic. This is a single-object (i.e. untyped) analogue of the disjoint union within the category of partial injections.

A 'splitting' of this, derived from the quasi-projections and quasi-injections of the category of partial injections, gives rise to an embedding of an algebraic structure known as Girard's dynamical algebra within the same category, and it is shown how iterating this splitting gives rise to a single-object analogue of the Cartesian product at the same object.

We then describe how the !( ) operation is defined in terms of this single-object analogue of the Cartesian product, and demonstrate that it is both functorial and satisfies the 'fixed-point' condition [formula] -- this condition, of course, can only be satisfied within an untyped setting. Finally, the ?( ) operation is shown to be defined in terms of !( ) and a categorical symmetry isomorphism; and an explicit description of this is also given.

As the above constructions and results rely on a category with two monoidal tensors satisfying a distributivity law, we discuss the similarities and differences between this approach, and an alternative application [\cite=PH13a] of the !( ) operation of linear logic found in quantum computation (and heavily used in Shor's quantum factorisation algorithm) that also relies on categorical distributivity.

Categorical preliminaries

The category of partial bijections

The interpretation of the Geometry of Interaction system takes place within the category [formula] of partial bijections on sets, defined as follows:

The category [formula] of partial injections has as objects the proper class of all sets. For all [formula], the homset [formula] is the subset of Y  ×  X satisfying

[formula]

Composition is inherited from the category of relations, and it is straightforward that [formula] is closed under this composition. It is common to use functional notation, and write f(x) = y for (y,x)∈f.

The category [formula] has a very strong notion of duality:

A dagger on a category is simply a duality that is the identity on objects - i.e. a contravariant endofunctor [formula] satisfying [formula] and [formula], for all A∈Ob(C) and f∈C(A,B).

An inverse category is a category C where every arrow f∈C(X,Y) has a unique generalised inverse f‡∈C(Y,X) satisfying ff‡f = f and f‡ff‡ = f‡.

The generalised inverse of an inverse category is (unsurprisingly) an example of a dagger operation. It is folklore that [formula] is an inverse category, with generalised inverse defined by

[formula]

This operation exhibits the self-duality [formula].

In contrast to dagger-equipped categories generally, inverse categories have a naturally defined partial order on their hom-sets.

Let [formula] be an inverse category. For all A,B∈Ob(C), the relation [formula] is defined on C(A,B), as follows:

[formula]

For all A,B∈Ob(C), the relation [formula] is a partial order on C(A,B), called the natural partial order. When it is clear from the context, it is standard to omit the subscript on [formula].

The category [formula] is the 'prototypical' inverse category, in that all inverse categories arise as subcategories of [formula] (See [\cite=CH] for this result, and [\cite=RC] for similar in small categories. These results are based on the classic Wagner-Preston representation theorem for inverse semigroups [\cite=GP] [\cite=VW], which itself generalises Cayley's result for groups).

Monoidal tensors on [formula]

The category [formula] has two monoidal tensors, the Cartesian Product _  ×  _, and the Disjoint Union [formula]. Neither of these are products (& hence, by duality, nor coproducts). Further, [formula] is not closed; however, it does have a categorical trace [\cite=JSV] with respect to disjoint union, and this trace provides the dynamics of the cut-elimination process [\cite=SA96] [\cite=AHS] [\cite=PH97]. Thus, we may consider the dynamics of the Geometry of Interaction system to be give by composition within the compact closed category [formula]. This is equivalent to the [formula] of [\cite=SA96]; however, we wish to distinguish between Girard's GoI system, and Abramsky's GoI categorical construction, so use Joyal, Street, & Verity's terminology throughout.

GoI connectives as untyped monoidal tensors

The Geometry of Interaction system (at least, the first two parts [\cite=GOI1] [\cite=GOI2]) is based on the multiplicative fragment of Linear Logic [\cite=LL] only, essentially without quantifiers and units. Thus, in a categorical setting, we may work with monoidal categories that are not assumed to have a unit object (see definition [\ref=semicat] below).Two further aspects of the GoI system are particularly relevant:

As stated in [\cite=GOI1], the system "forgets types". Categorically, as with the untyped lambda calculus, the interpretation takes place within a single-object category, or monoid.

The connectives tensor and par are identified. Thus the categorical interpretation requires a single connective (i.e. semi-monoidal tensor) and corresponding adjoint notion of closure (internal hom, or trace).

The requirement that the GoI system 'forgets types' means that - taking the standard 'types as objects within a category' interpretation - the action takes place within a single-object category. For a single-object monoidal category to be non-trivial, the unique object cannot be a unit object for the tensor; this is axiomatised within the theory of semi-monoidal categories below.

Single-object and unitless monoidal categories

The following straightforward definition, taken from [\cite=PH13d], axiomatises categories that have all the structure of a monoidal category except perhaps for a unit object:

Let C be a category. We say that C is semi-monoidal when there exists a functor [formula] that we call the tensor, together with a natural object-indexed family of associativity isomorphisms

[formula]

satisfying MacLane's pentagon condition

[formula]

When there also exists a natural object-indexed natural family of symmetry isomorphisms [formula] satisfying MacLane's hexagon condition [formula] we say that [formula] is a symmetric semi-monoidal category. A semi-monoidal category [formula] is called strictly associative when  τA,B,C is an identity arrow, for all A,B,C∈Ob(C). A functor Γ:C  →  D between two semi-monoidal categories [formula] and [formula] is called (strictly) semi-monoidal when [formula]. A semi-monoidal category [formula] is called monoidal when there exists a unit object I∈Ob(C), together with, for all objects A∈Ob(C), distinguished isomorphisms [formula] and [formula] satisfying MacLane's triangle condition [formula] for all U,V∈Ob(C).

Clearly, any single-object monoidal category is trivial; the unique object must be the unit object, with all that entails. However, single-object semi-monoidal categories may have a much richer theory.

we define an untyped monoidal category to be a single-object semi-monoidal category.

A natural question is whether MacLane's coherence theorems are still applicable in the unitless or semi-monoidal setting? Based on the theory of Saavedra units, an appendix to [\cite=PH13d] gives a method of adjoining a (strict) unit object to a semi-monoidal category that is right-inverse to the obvious forgetful functor. Thus, all the standard theories of coherence for associativity, symmetry, distributivity, &c. remain applicable.

The single untyped connective of GoI

Up to the embedding [formula], the constructions of the Geometry of Interaction system (parts I, II) take place within the endomorphism monoid of a single countably infinite set -- for simplicity we will take this to be the natural numbers [formula]. The significant feature of [formula] that allows its use in this setting is the fact that it is self-similar.

Let [formula] be a semi-monoidal category. An object S∈Ob(C) is called self-similar when it satisfies [formula]. Making the arrows exhibiting this self-similarity explicit, we define a self-similar structure [formula] to be an object S∈Ob(C), together with two mutually inverse arrows

(code) [formula].

(decode) [formula].

satisfying [formula] and [formula].

It is proved in [\cite=PH13d] that self-similar structures are unique up to unique isomorphism; however, actual uniqueness forces a collapse to the unit object.

It is straightforward from simple 'Hilbert hotel' style reasoning that [formula] is self-similar with respect to both disjoint union and Cartesian product, so

[formula]

The particular self-similar structure that Girard uses to exhibit the self-similarity [formula] is given by the Cantor pairing:

Using the explicit description of the disjoint union as [formula], the Cantor pairing [formula] is the bijection [formula].

Its (global) inverse [formula] is given by

[formula]

(We will demonstrate in Section [\ref=internal_times] how a self-similar structure exhibiting the self-similarity [formula] may be derived from the above Cantor pairing).

The single connective of [\cite=GOI1] [\cite=GOI2] is then modelled by the following operation:

We define

[formula]

by, for all [formula],

[formula]

Diagramatically,

[formula]

As shown in [\cite=PH97] [\cite=PH99], this gives [formula] all the structure of a symmetric monoidal category apart from the unit object; giving what [\cite=PH13d] refers to as a unitless monoidal category. We refer to [\cite=PH13b] for coherence results relating associativity, self-similarity, and untypedness, and [\cite=PH13c] for elementary arithmetic proofs that the associativity and symmetry isomorphisms

[formula]

satisfy MacLane's Pentagon and Hexagon conditions [\cite=MCL].

The Geometry of Interaction and models of λ-calculus

So far, the categorical interpretation of Girard's GoI system has lead to a single-object semi-monoidal closed category; there is an obvious comparison to be made with the C-monoids (single-object Cartesian closed categories without unit objects) modelling the pure untyped λ- calculus. Significant differences are that the single-object tensor in Girard's system is neither a product nor a coproduct, and the form of categorical closure is compact closure rather than Cartesian closure. The absence of the universal property associated with categorical products translates into the failure of copying (and, by the dualities of [formula], the failure of contraction).

The untyped !( )

The computational power of GoI is recovered by the use of the !( ) operation, giving (as shown in [\cite=AHS]) the computationally universal linear combinatorial algebra. We now give a categorical description of how Girard modelled the !( ) operation in this untyped setting, together with the interaction between the !( ) and the single untyped tensor used to model the connectives.

Let us denote the endomorphism monoid [formula] by [formula]. Recall the untyped monoidal tensor

[formula]

defined in terms of the Cantor pairing (Definition [\ref=cantor_pairing]) by

[formula]

The key to the untyped version of the !( ) is 'splitting' the Cantor pairing (and hence the untyped tensor) into a construction based on two partial injections.

Splitting the untyped tensor

Although disjoint union [formula] is neither a product nor a coproduct is nevertheless has 'quasi-projections'

[formula]

defined in the obvious way by

[formula]

Taking generalised inverses gives the 'quasi-injections'

[formula]

Together, these satisfy the relations

[formula]

We may again use the Cantor pairing to construct untyped analogues of these quasi- projections/injections at the endomorphism monoid of [formula].

We define the untyped quasi-projections [formula] as follows:

[formula]

Taking generalised inverses of the above diagram gives the untyped quasi-injections [formula], as follows:

[formula]

We may give explicit descriptions of the above partial injections, as follows:

Let [formula] be the untyped quasi- projections/injections defined in terms of the Cantor pairing, as above. Then [formula] are the following bijections:

[formula]

and similarly [formula] are the following partial bijections:

[formula]

This follows immediately by expanding out the above definitions. [formula]

The above explicit form makes it apparent how p,q (resp. p‡,q‡) may be thought of as a 'splitting' of the Cantor pairing (resp. its inverse). The untyped quasi- projections/injections give rise to Girard's dynamical algebra, as we now demonstrate:

Let [formula] be as defined above. Then

[formula]

Further, when we consider the partial order on [formula] provided by the inverse category structure (Definition [\ref=nat_po]),

[formula]

These are all immediate from the explicit description of the untyped quasi- projections/injections given in Lemma [\ref=simplesums] above. [formula]

The untyped tensor, modelling the sole connective of the GoI system, may also be given in these terms:

Let [formula] be as in Definition [\ref=star_def]. Then for all [formula], the join (with respect to the natural partial order [formula] induced by the generalised inverse) [formula] exists, and satisfies

[formula]

This again simply follows by expanding out the basic definitions. [formula]

Untyped analogues of the Cartesian product

The splitting of the Cantor pairing (and hence the untyped tensor) given in Section [\ref=split] above may be used to construct an isomorphism [formula] in terms of the Cantor pairing exhibiting the isomorphism [formula].

we define the exponential bijection to be the isomorphism [formula] given by

[formula]

where [formula] are the untyped quasi-projections given in Definition [\ref=dynamical]. Using the explicit description of p,q from Lemma [\ref=simplesums] gives the following formula:

[formula]

The construction of a self-similar structure [formula] of [formula] from a self-similar structure [formula] of [formula] given above clearly relies on the fact that [formula] is countable. Although we may perform similar constructions with uncountable self-similar objects of [formula] - such as the Cantor set [formula] - this does not in general result in isomorphisms exhibiting the self-similarity [formula]; rather, we get a bijection [formula].

Even when working with countably infinite objects such as [formula], we need to ensure that any self-similar structure [formula] used satisfies the 'no-residue' condition

[formula]

This condition is, of course, satisfied by the Cantor pairing.

The untyped tensor [formula] of Definition [\ref=star_def] may be thought of as a single-object analogue of the disjoint union; in a similar way, we may use the bijection [formula] to form an untyped analogue of the Cartesian product:

We define the exponential tensor [formula] in terms of the exponential bijection of Definition [\ref=psidef] above, as follows:

[formula]

Diagramatically,

[formula]

This is again a unitless monoidal tensor on [formula] satisfying associativity and symmetry up to canonical isomorphisms (see [\cite=PH13d] for a general construction, of which this is a special example, and [\cite=PH97] for an explicit description of the associativity and symmetry isomorphisms.

Constructing the !( )

The operation used in [\cite=GOI1] [\cite=GOI2] to model the !( ) operation may be defined in terms of the above 'exponential tensor' as follows:

We define the bang operation [formula] by

[formula]

Basic properties of [formula] follow by functoriality.

The operation [formula] defined above is a monoid homomorphism.

By the functoriality of [formula],

[formula]

Thus !( ) is a monoid homomorphism. [formula]

From the explicit description of [formula], and hence of [formula] in terms of the Cantor pairing, we may write !(f) explicitly in terms of the untyped quasi-projections (i.e. the generators of the dynamical algebra) as follows:

Given arbitrary [formula], then [formula] may be given explicitly as an infinite join in the natural partial order, as follows:

[formula]

Again, this is simply by expanding out the definition. [formula]

As a corollary of the above explicit description, the !( ) operation provides a natural, functorial 'fixed-point' for the untyped tensor:

The interaction between the bang operation, and the untyped tensor is the following:

[formula]

From the explicit description of the untyped tensor in terms of the untyped quasi- projections/injections,

[formula]

Combining this with the above explicit description of the bang, and using the distributivity of composition over join in the natural partial order of [formula] gives

[formula]

[formula]

The dual connective to the bang, [formula] is modelled similarly; Girard simply uses

[formula]

The properties of this may be derived from the properties of the bang !( ) and the canonical symmetry map [formula] for the untyped analogue of the Cartesian product, by the identity

[formula]

However, it is interesting also to give an explicit description of the ?( ) operation in terms of the generators of the dynamical algebra. Let us define a countably infinite set of arrows [formula] by

[formula]

These arrows satisfy the following relations:

[formula]

giving an infinitary analogue of the generating relations of Girard's dynamical algebra. By construction, for arbitrary [formula], the dual connective to the bang may be given an explicit form as: [formula]. If we adopt the notational convention that [formula] when g(n) is undefined, we may simply write

[formula]

The exponentials of GoI, and categorical distributivity

The constructions in this paper live within the category [formula], and rely on the fact that a self-similar structure [formula] in [formula] may be 'split and iterated' to produce a self-similar structure [formula] in [formula]. The untyped analogue of the Cartesian product [formula] then provides a 'fixed-point' operation for [formula], the untyped analogue of the disjoint union.

A key point is that the typing of this fixed-point condition, [formula], forces the semi-monoidal tensor [formula] to live within an untyped setting.

A very natural question is then: what is the relationship of this construction with the categorical theory of distributivity, and in particular, the approach to finitary analogues of !( ) given in [\cite=PH13a]? The category [formula] is a distributive category in the sense of [\cite=ML1] [\cite=ML2], and (up to canonical isomorphisms satisfying the required coherence isomorphisms) satisfies

[formula]

It is, of course, possible to use similar techniques to those of [\cite=PH13d] to construct a single-object semi-monoidal category with two tensors satisfying untyped analogues of Laplaza's coherence conditions for distributivity.

However, it seems that the actual constructions of !( ) and ?( ) described above do not rely on this categorical distributivity in an essential way. Certainly, none of the constructions or proofs seems to require distributivity.

This is in sharp contrast with the system presented in [\cite=PH13a], where - based on Shor's quantum algorithm - the unit objects in a distributive category are used to define an operation

[formula]

on unitary maps in finite-dimensional Hilbert space (in fact, within the quantum circuit paradigm). This differs from the constructions described above in a number of ways; the most significant is that it relies on the unit objects in an essential way, via an iterated analogue of the fan-out operation [\cite=FANOUT], whereas the constructions based on the Geometry of Interaction necessarily take place within an untyped (i.e. single-object) category, where we cannot have unit objects for either tensor.

Conclusions

It is frequently assumed that the computational content of reversible logics must be severely restricted; it is equally common to claim that fixed-point operations must introduce some essential irreversibility into computing systems. It is interesting to observe how the Geometry of Interaction provides a counterexample to both these inaccurate assumptions.

Of equal interest is the fact that this reversible fixed-point operation necessarily lives within an untyped system. As well as raising interesting and deep questions about categorical models (see [\cite=PH13d] for implications for MacLane's theory of coherence for associativity and [\cite=PH13c] for unexpected concrete applications to modular arithmetic), this raises practical questions about the sort of type systems that may be imposed on any reversible programming language that uses a fixed-point operation as a computational primitive.