Quantum search algorithms on the hypercube

J. Phys. A: Math. Theor. 42 (2009) 085303

Introduction

The recent interest in quantum random walks and quantum search algorithms is fuelled by the discovery that wave systems can perform certain tasks more efficiently than classical algorithms. Leaving aside issues about the implementation of such algorithms, it is essentially wave interference which acts here as an additional resource. The prime example is Grover's search algorithm [\cite=Gro96] [\cite=NC00] which performs a search in a data-base of N items in [formula] steps whereas classical search algorithms need of order N steps.

In Grover's algorithm it is assumed that one can act on all data points directly. In many physical situations, interactions between points in the network may be restricted and the search can only take place between nodes which are directly connected. Classical search algorithms are then typically based on (weighted) random walks exploring the network through jumps from one node to another with prescribed probabilities. The quantum analogue - a quantum random walk - has been introduced recently. It can be shown that for certain network topologies improvements on transport speed or hitting times compared to classical random walks can be achieved - see [\cite=kempe] [\cite=Amb03] for overviews. The connection between quantum random walks and quantum graph theory [\cite=SS06] has been pointed out in [\cite=ST04] [\cite=Tan07].

In [\cite=AA03] [\cite=AKR05] quantum random walk algorithms have been introduced which lead to speed-up in a spatial search on an n-dimensional regular grid; a continuous-time version of such a quantum search algorithm has been given in [\cite=CG04]. In [\cite=SKW03], an algorithm for a search on the n dimensional hypercube has been presented; we will focus on this algorithm in what follows, reinterpreting and generalising the results in [\cite=SKW03] as well as giving improved estimates for the search time.

The discrete time search algorithms listed above have in common that they are based on quantum walks on regular (quantum) graphs [\cite=ST04]. The quantum walk itself is defined by a regular graph, a 'quantum coin flip' (equivalent to a local scattering matrix at each vertex), and a 'shift operation' [\cite=kempe] [\cite=Tan07]. A marked vertex is then introduced in the form of a local perturbation of the quantum random walk. Typically, this is achieved by modifying the coin flip at this vertex; the quantum search algorithm will localise at the target vertex after T time steps.

This paper is organised as follows: first we will introduce the algorithm and give the eigenvalues of the unperturbed walk in terms of a unitary propagator U. Then we will introduce a symmetry reduced space and proceed to the spectrum of a quantum search algorithm Uλ; here, λ characterises the perturbation strength at the marked vertex extrapolating between the unperturbed walk (λ  =  0) and a maximal perturbation (λ  =  1); the latter corresponds to the search algorithm in [\cite=SKW03]. The spectrum of Uλ shows several avoided crossings - each of these crossings can be used to construct a search algorithm in the reduced space. We will give estimates for the vectors spanning the two-level subsystems at each crossing and derive the leading asymptotics for the search times. We show in particular that the search algorithm for the central crossing at λ  =  1 finds the marked vertex in [formula] time steps where N  =  2n and n is the dimension of the hypercube. We will return to the search on the full hypercube space in the last section.

The Shenvi-Kempe-Whaley search algorithm on the hypercube

The vertices of the n-dimensional hypercube can be encoded using binary strings with n digits. All vertices whose strings are equal for all but one digit are connected, as shown in Fig. [\ref=fig:3-d_hypercube]. Hence, each vertex is connected to n neighbouring vertices. Since the position space has 2n dimensions and the coin space has n dimensions, the Hilbert space H is of size 2nn. We denote the corresponding unit vectors in the position representation as [formula] with [formula] specifying the direction at each vertex and [formula] gives the coordinates of the vertex, see Fig. [\ref=fig:3-d_hypercube].

We will start from the quantum walk previously defined in [\cite=SKW03]. A coin flip C acting simultaneously on the internal degrees of freedom at all vertices defines the direction in which the walk will be shifted. The shift operator S shifts the walk to neighbouring vertices. The (unperturbed) walk is then given as U = SC.

The local coin flip is specified by a unitary coin matrix C0 which connects n incoming with n outgoing channels at each vertex and acts effectively as a vertex scattering matrix. We use the uniform distribution in coin space [formula] to define the local coin flip on each vertex as [formula]. Using the tensor product and the identity matrix in position (vertex) space, [formula], the global coin flip is defined as [formula].

The shift operator moves the quantum walk to one of the neighbouring vertices. The state in [formula] is shifted to [formula], where [formula] is the unit vector in direction d and hence

[formula]

The relevant eigenvectors and eigenvalues of U = SC are

[formula]

[\cite=SKW03] [\cite=ref11], where the vector [formula] consist of n entries that can take the values 0 or 1 and [formula] denotes the Hamming weight of this vector, i.e. the sum of all entries. Furthermore,

[formula]

and kd is the d-th component of [formula]. Note that for k = 0 or n the two cases ±   are equivalent. The eigenvalues eiωk are [formula] times degenerate. All other eigenvalues of U are ±  1; the corresponding eigenvectors are not affected by the perturbation and are related to the spectrum of the coin space, see [\cite=ref11]. We do not need to consider this trivial eigenspace in what follows.

We now employ this quantum walk to construct a quantum search algorithm. We mark the target vertex v with a different coin flip, that is, we choose a local coin matrix at v with [formula]. The marked coin acting on the full Hilbert space is then given as

[formula]

This defines a 'perturbed' quantum walk [formula], which can be written as

[formula]

where [formula] is a state localised at the marked vertex and uniformly distributed in coin space. Note that |sv〉 is orthogonal to all trivial eigenvectors [\cite=ref11]. Eqn. ([\ref=uprime]) is obtained using the definition of C0 and C1, that is,

[formula]

where we use C0|s〉  =  |s〉. The search algorithm is now started in the eigenstate [formula] of the unperturbed walk which is uniformly distributed over the whole Hilbert space, see Eqn. ([\ref=eigenv]). It has been shown in [\cite=SKW03] that the state [formula] localises on the marked vertex after [formula] steps with N  =  2n, the total number of vertices. In what follows, we will present an alternative derivation of this result which provides additional insight into the localisation process and offers improved estimates for the localisation time.

Introduction of Uλ and the reduced space [formula]

We first note that the operator U' is close to U in the sense that we can write [formula]. The additional term [formula] changes only a few entries in U. In fact, we can choose a basis where U and [formula] are identical in all but one entry.

We may thus regard the additional term as a localised perturbation of U. In order to study how this perturbation effects the spectrum, we consider a family of operators Uλ changing continuously from U to [formula] as λ is varied from 0 to 1. The following definition

[formula]

fulfils this condition, that is, Uλ is a continuous matrix valued function in λ and equals U and [formula] for λ = 0 and λ = 1, respectively. Uλ is in addition periodic with period 2 and is unitary for all λ.

In order to understand the effect of the perturbation on the spectrum of U', we consider the symmetries of the hypercube; they can be described in terms of two types of symmetry operations, Pi and Pij with [formula]. Writing the set of vertices as n-digit strings containing 0s and 1s, Pi is defined as the operation that flips the ith digit from 0  →  1 or [formula], respectively, and Pij is the operator exchanging the ith and the jth digit. Note that Pi changes the Hamming weight of the vertex whereas Pij does not. The group of symmetry operations on the hypercube is generated by Pi and Pij. Both operators represent reflections at an n - 1 dimensional manifold orthogonal to [formula] and [formula] respectively, where [formula] is defined as the unit vector pointing in the ith direction.

Let us assume that the marked vertex sits at [formula]. Such a perturbation breaks all symmetries created by Pi. The marked vertex (with coin C1) is, however, at a fixed point of Pij and the corresponding symmetries are not affected by the perturbation. As a result, not all symmetries of the unperturbed spectrum are lifted and the analysis can be done in a symmetry reduced space.

In particular, all eigenvectors of U orthogonal to [formula] are also eigenvectors of Uλ and their corresponding eigenvalues remain unchanged when varying λ in ([\ref=Ulam]). Since these eigenvectors are not affected by the perturbation introduced by the marked vertex, we concentrate our investigation on eigenvectors that are not orthogonal to [formula]. We reorganise the eigenvectors such that there is only one eigenvector in each degenerate eigenspace which is not orthogonal to [formula]. These vectors are given by [formula] which after normalisation yields

[formula]

where [formula] are the coordinates of the marked vertex v; this definition is not independent of v. In the following, we will assume that the marked vertex is at [formula]. We discuss the general case in Sec. [\ref=sec:orgspac]. We then obtain

[formula]

as the set of 2n normalised eigenvectors of U containing the marked vertex v. These vectors span a 2n-dimensional subspace [formula] of the full Hilbert space [\cite=SKW03]. Note, that the marked state [formula] is in [formula] and that the trivial eigenvectors are orthogonal to [formula] [\cite=ref11]. Thus, [formula] is mapped onto itself under the map Uλ. That implies, that the definition of Uλ in Eqn. ([\ref=Ured]) holds for the reduced space,

[formula]

where U, Uλ are the quantum walks restricted to the reduced space in the basis ([\ref=eigenfred]).

Spectrum of Uλ

We start by describing main features of the spectrum of Uλ. Fig. [\ref=fig:eigenphases] shows the eigenphases of the unitary matrix Uλ as a function of λ in the 2n dimensional reduced space [formula]. To simplify notation, we define a new index m replacing k and ±   such that m∈{ - n + 1,n} and [formula]. We furthermore write the eigenvalues and eigenvectors as e±  iωk  =  eiωm and [formula], respectively.

The numerical results indicate that the eigenphases ωm of the unperturbed walk, corresponding to λ  =  0 or 2 and given in Eqn. ([\ref=eigenw]), remain largely unchanged when changing λ. In addition, there are "perturber" states with eigenphases roughly parallel to the line [formula]. One finds avoided crossings at points where the eigenphases related to ωm 'cross' the perturber states. In the following we will concentrate on the perturber state |uλ〉 causing an avoided crossing at ω = 0 and λ = 1; this is called the m = 0-th crossing.

The dynamics at an avoided crossing can essentially be described in terms of a two level system where the interaction induced by the map Uλ between the states at the crossing is much larger than that with any of the other unperturbed eigenstates. At the m-th crossing at λ  =  λm, say, we can construct a two-level dynamics between the unperturbed eigenvector |ωm〉 given in ([\ref=eigenfred]) and a perturber state |um〉 to be determined below. These two states have a large overlap with the exact eigenvectors |w±m〉 at λ  =  λm. We can in fact write the eigenvectors in good approximation as [formula] for a suitable choice of phases.

Performing the walk in the two dimensional subspace spanned by [formula] and [formula] makes it possible to rotate the start state [formula] into the target state [formula]. The latter has a large overlap with the state of the marked vertex [formula] and its nearest neighbours. (It will be shown that [formula]).

The time it takes to perform the rotation from [formula] to [formula] by applying Uλ at λ  =  λm is determined by the gap Δm between the two levels at the m-th avoided crossing. One finds

[formula]

When choosing the time t  =  Tm, such that [formula], that is,

[formula]

we have

[formula]

In practise, Tm is the nearest integer to [formula]. This procedure is very much in analogy to Grover's algorithm [\cite=Gro96] [\cite=NC00] except that the relation between the exact eigenstates and the start and target states is only an approximation here. Note, that increasing the gap Δm leads to a speed up of the search.

The quantum search algorithm [\cite=SKW03] works at λ  =  1, that is, at the m = 0 crossing starting with the initial distribution [formula]; it localises at the marked vertex after [formula] time steps where N = 2n is the number of vertices of the hypercube. Note that [formula] corresponds to the uniform distribution in the full space. The quantum walk for n = 12 and m = 0 is shown in Fig. [\ref=fig:simulation] starting on [formula]. One clearly sees a strong localisation at the marked vertex |0〉 after roughly 70 steps.

The origin of the gap is discussed at length in [\cite=SKW03] ; we see here that it emerges through an avoided crossing. In fact, every avoided crossing can potentially be exploited as a search algorithm in the reduced space.

Approximate eigenvectors and eigenvalues of Uλ

We will now derive an approximation for the perturber state |uλ〉 as well as the spectral gaps Δm. Starting from the definition of Uλ and |ωm〉 in Eqs. ([\ref=eigenfred]), ([\ref=Ured]), one obtains for

[formula]

where [formula] and βm is given in ([\ref=beta]). Thus, [formula] is already an approximate eigenvector of Uλ with exponentially small remainder term of the order O(2- n / 2) for m close to 0 or n. The eigenvalues of these vectors correspond to the horizontal lines in Fig. [\ref=fig:eigenphases]

We now come to the construction of the perturber state |uλ〉; let [formula] be the eigenphase of the perturber state, that is, the eigenvalues of Uλ are [formula]. We expect that g(λ) is roughly given by [formula]. We set

[formula]

for some yet unknown set of coefficients am. Writing [formula] in the [formula]-basis, one finds

[formula]

The scalar product [formula] gives

[formula]

where b is defined as

[formula]

The aim is to construct [formula] such that [formula]. Using the representation ([\ref=def:v]), we obtain

[formula]

We can thus choose

[formula]

so that the second part of Eqn. ([\ref=expansion]) vanishes. Note that b still depends on the coefficients am and Eqn. ([\ref=a_m]) represents thus a homogeneous set of coupled linear equations. A solution of this set of equations exists only if the determinant of the coefficient matrix vanishes. Inserting ([\ref=a_m]) in ([\ref=defb]) we may write this condition in terms of a 'sum rule'

[formula]

which implicitly defines the eigenphases g(λ). The coefficient b thus remains undetermined. So far, we have only rewritten the eigenvalue equation and we thus expect n different solutions for g(λ) for every value of λ. Note, that the singular behaviour whenever ωm  ≈  g(λ) indicates that the corresponding coefficient am dominates the expansion (except near an avoided crossing or for the perturber states).

For the corresponding eigenvector, we find

[formula]

and we identify b as a normalisation constant. Note, that the vector [formula] coincides with the basis vectors [formula] for λ = 2j, [formula] and g(λ)  ≈  ωm.

We are here mostly interested in finding the states forming the two level system at an avoided crossing. The corresponding eigenspace at the m-th crossing will be spanned by the unperturbed eigenstate [formula] (which is already exponentially close to the true eigenvalue, see ([\ref=unpert])) and a second approximate eigenvector. This second vector may be found by defining a local vector near the m-th crossing [formula] orthogonal to [formula]; we set

[formula]

If b  ≪  23 / 2n, we can assume that the neglected term is small and [formula] is a good local approximation to the true eigenvalue. An estimate for b verifying this assumption will be given below.

The compatibility condition ([\ref=summenformel]) then takes on the form of a local sum rule (setting al = 0),

[formula]

We can use ([\ref=lokale_summenformel]) to obtain local approximations of the phase g(λ) near the m-th crossing. We will concentrate here on the main crossing at λ = 1 for m=0. Neglecting interaction with the unperturbed state [formula] (taken into account in the next section), we set [formula] at the crossing, that is, we demand [formula].

We will show that

[formula]

at λ  =  1, that is, Eqn. ([\ref=lokale_summenformel]) is fulfilled up to an exponentially small error term.

Using that the spectrum is symmetric with respect to 0, that is, for every l∈[ -  n  +  1,n] there exists one k∈[ -  n  +  1,n] such that eiωk =  - eiωl and writing S(λ) in terms of ωl∈(0,π) only, we obtain

[formula]

Using [formula], we may write

[formula]

Setting [formula], we find S(1) = 1 + 2- n. By expanding S(λ) in a power series in λ and demanding that the derivatives of S(λ) vanish at λ = 1, we obtain conditions for the derivatives of [formula]; in particular, one finds,

[formula]

with

[formula]

The last estimate is obtained asymptotically by using the de Moivre-Laplace theorem and Poisson summation. Note, that for n  →    ∞  , this result coincides with [formula] as stated in the beginning of the section. Similarly, we can construct functions g(λ) at crossings m  ≠  0.

From Eqn. ([\ref=lokale_summenformel]), we determine the normalisation constant b by writing

[formula]

and thus

[formula]

The sum can be calculated using Eqn. ([\ref=lokale_summenformel]) (and neglecting exponentially small terms). The derivative of ([\ref=lokale_summenformel]) with respect to λ leads to

[formula]

and hence [formula]. We are free to choose a phase for the vector |um〉 and set

[formula]

Therefore the condition b  ≪  23n / 2 stated after Eqn. ([\ref=u_k]) is fulfilled for large n and [formula] is an approximative eigenvector of Uλ.

Matrix elements of Uλ.

To calculate the size of the gap Δm between the two eigenvalues at the m-th avoided crossing, we consider how Uλ acts on the 2  ×  2 space spanned by |ωm〉 and |um〉. At the mth crossing, we find [formula] and the corresponding matrix elements of Uλ are

[formula]

The 2  ×  2 matrix [formula] characterises the avoided crossings in Uλ to a good approximation. Note that we have |A|  ~  |D|  ~  1 and [formula] for small m / n.

The gap Δm in the spectrum is given by the difference of the two eigenphase; for small differences, this is in leading order given by the difference between the two eigenvalues of W.

We thus obtain

[formula]

By construction, we have [formula] at the crossing, and thus

[formula]

neglecting terms of the order 2- n both in the matrix elements and in the 'sum rule' ([\ref=sum]).

In Fig. [\ref=fig:luecke] we compare the leading order term, Eqn.  ([\ref=luecke-f]), with numerical results for the first four crossings as a function of the dimension of the hypercube. Clearly, our estimate captures the behaviour of the gap very well, even at intermediate values of n down to n  ≈  10  -  15. We note in particular that the size of the gap increases with the order of the crossing |m|.

Time of the search

The quantum algorithm takes place in the two dimensional subspace spanned by the two approximate eigenvectors involved in the avoided crossing, [formula] and [formula]. In analogy to Grover's algorithm [\cite=Gro96] [\cite=NC00], the search corresponds to a rotation from an initial state |ωm〉 to a final state localised at the marked item and its nearest neighbours; see the discussion in Sec. [\ref=sec:spec]. Direct calculation using ([\ref=matrix]) and ([\ref=b-est]) yields,

[formula]

where [formula] for large n and we approximate uλ by um at the crossing. That is, the target state [formula] has a large overlap with the marked vertex |sv〉 or its immediate neighbours, U|sv〉. Any measurement will thus yield with a high probability either |sv〉 or one of its neighbouring vertices when done after Tm time steps. This implies, that we can define a quantum search algorithm for every avoided crossing m (as long as the dynamics effectively takes place in a two-level system). The search time Tm is given by Eqn. ([\ref=time]), that is

[formula]

In particular, the Tm decreases with increasing m thus making search algorithms at higher order crossings potentially more effective.

Fig. [\ref=fig:nebenkreuzungen] shows the probability to measure the quantum walk in the reduced space at the marked vertex as a function of time and n  =  25. It is evident from the figure, that the quantum search localises on the marked vertex with a 50% probability for all algorithms shown (corresponding here to the crossings m = 0,1,2). In particular, the search becomes faster with increasing m in accordance with ([\ref=time-m]). For the search algorithm for m = 2, we find the marked vertex in 1 / 10th of the time compared to a search with m = 0 and only a small loss in amplitude. If we proceed to higher m, one looses more and more amplitude and the search becomes inefficient; in our example (n  =  25) this happens for m > 4. In general, we find that the quantum search algorithm fails to localise at the marked vertex when the gap is of the size of the distance between two adjacent (unperturbed) eigenvalues.

Results in the original space H for general v

The class of search algorithms considered in the previous section act in the reduced space finding the marked vertex in [formula] time. To start the search, one needs to know the parameter values λm and the initial state |ωm〉. The former can in principle be obtained to arbitrary accuracy for a given dimension n or are known explicitly as in the case m = 0. The starting vectors |ωm〉 defined in Eqn. ([\ref=red-basis]) depend, however, on the choice of the marked vertex v for m  ≠  0. In fact, the reduction of the space itself as described in Sec.  [\ref=reduced_space] is not independent of the marked vertex; when simplifying Eqn. ([\ref=red-basis]) to Eqn. ([\ref=eigenfred]), we explicitly put the marked vertex at [formula]. Any other choice of v will, however, change the starting vectors |ωm〉 for m  ≠  0 or equivalently change the point of origin for the symmetry operations Pi, Pij (see Sec., [\ref=reduced_space]).

We are ultimately interested in search algorithms on the full hypercube. This can be achieved directly by employing the m = 0 crossing. The corresponding initial vector |ω0〉 is independent of v with λ0  =  1; this yields the search algorithm in [\cite=SKW03]. It is, however, the slowest algorithm of the ones discussed in the previous section. To make use of any of the other search algorithms, we need the starting vector |ωm〉 given in Eqn.  ([\ref=red-basis]), which depends, however, on the marked vertex itself.

This optimal starting vector is embedded in the [formula] dimensional vector space related to the eigenvalue m in the unperturbed space H. This space is spanned by the vectors [formula], (where [formula]), given in Eqn. ([\ref=eigenv]). So, in addition to finding the marked vertex, one also needs to search for the state |ωm〉. We have not succeeded in devising an efficient method for finding this optimal starting vector for arbitrary v, that is, a method that would not wipe out any gains made by improving the search time Tm in Eqn. ([\ref=time-m]).

We conclude that the algorithms introduced above have search times which are all of the same order in the reduced space; only the original algorithm devised in [\cite=SKW03] is, however, useful for searches on the full hypercube as no extra efforts are needed in finding both the values for λm andi, more importantly, the optimal starting vector |ωm〉. The technique presented here provides an improved estimate for the search time and offers a new point of view by studying quantum random walks in terms of avoided crossings. Acknowledgements: We thank Fritz Haake and Brian Winn for carefully reading the manuscript and for valuable comments.