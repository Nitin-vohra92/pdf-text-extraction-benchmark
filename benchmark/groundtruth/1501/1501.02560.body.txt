|Wiem.Maalel@gmail.com| |kzhoumath@163.com| |Arnaud.Martin@univ-rennes1.fr| |Zied.Elouedi@gmx.fr|

Belief Hierarchical Clustering

Introduction

Due to the increase of imperfect data, the process of decision making is becoming harder. In order to face this, the data analysis is being applied in various fields.

Clustering is mostly used in data mining and aims at grouping a set of similar objects into clusters. In this context, many clustering algorithms exist and are categorized into two main families: The first family involves the partitioning methods based on density such as k-means algorithm [\cite=MacQueen67a] that is widely used thanks to its convergence speed. It partitions the data into k clusters represented by their centers. The second family includes the hierarchical clustering methods such as the top-down and the Hierarchical Ascendant Clustering (HAC) [\cite=Hastiea]. This latter consists on constructing clusters recursively by partitioning the objects in a bottom-up way. This process leads to good result visualizations. Nevertheless, it has a non-linear complexity.

All these standard methods deal with certain and precise data. Thus, in order to facilitate the decision making, it would be more appropriate to handle uncertain data. Here, we need a soft clustering process that will take into account the possibility that objects belong to more than one cluster.

In such a case, several methods have been established. Among them, the Fuzzy C-Means [\cite=Bezdek03a] which consists in assigning a membership to each data point corresponding to the cluster center, and the weights minimizing the total weighted mean-square error. This method constantly converges. Patently, Evidential c-Means (ECM) [\cite=Denoeux04a], [\cite=Masson04a] is deemed to be a very fateful method. It enhances the FCM and generates a credal partition from attribute data. This method deals with the clustering of object data. Accordingly, the belief k-Modes method [\cite=Sarra06a] is a popular method, which builds K groups characterized by uncertain attribute values and provides a classification of new instances. Schubert has also found a clustering algorithm [\cite=Schubert03] which uses the mass on the empty set to build a classifier.

Our objective in this paper is to develop a belief hierarchical clustering method, in order to ensure the membership of objects in several clusters, and to handle the uncertainty in data under the belief function framework.

This remainder is organized as follows: in the next section we review the ascendant hierarchical clustering, its concepts and its characteristics. In section 3, we recall some of the basic concepts of belief function theory. Our method is described in section 4 and we evaluate its performance on a real data set in section 5. Finally, Section 6 is a conclusion for the whole paper.

Ascendant hierarchical clustering

This method consists on agglomerating the close clusters in order to have finally one cluster containing all the objects xj (where j = 1,..,N). Let's consider PK  =  {C1,...,CK} the set of clusters. If K = N, C1 = x1,...,CN = xN. Thereafter, throughout all the steps of clustering, we will move from a partition PK to a partition PK - 1. The result generated is described by a hierarchical clustering tree (dendrogram), where the nodes represent the successive fusions and the height of the nodes represents the value of the distance between two objects which gives a concrete meaning to the level of nodes conscripted as "indexed hierarchy". This latter is usually indexed by the values of the distances (or dissimilarity) for each aggregation step. The indexed hierarchy can be seen as a set with an ultrametric distance d which satisfies these properties: i) [formula]. ii) d(x,y) = d(y,x). iii) [formula].

The algorithm is as follows:

Initialisation: the initial clusters are the N-singletons. We compute their dissimilarity matrix.

Iterate these two steps until the aggregation turns into a single cluster:

Combine the two most similar (closest) elements (clusters) from the selected groups according to some distance rules.

Update the matrix distance by replacing the two grouped elements by the new one and calculate its distance from each of the other classes.

Once all these steps completed, we do not recover a partition of K clusters, but a partition of K - 1 clusters. Hence, we had to point out the aggregation criterion (distance rules) between two points and between two clusters. We can use the Euclidian distance between N objects x defined in a space [formula]. Different distances can be considered between two clusters: we can consider the minimum as follows:

[formula]

with j,j' = 1,...,i. The maximum can also be considered, however, the minimum and maximum distances create compact clusters but sensitive to "outliers". The average can also be used, but the most used method is Ward's method, using Huygens formula to compute this:

[formula]

where mCj and mCj' are numbers of elements of Cj and Cj' respectively and ij,Cij' the centers. Then, we had to find the couple of clusters minimizing the distance:

[formula]

Basis on the theory of belief functions

In this Section, we briefly review the main concepts that will be used in our method that underlies the theory of belief functions [\cite=Shafera] as interpreted in the Transferable Belief Model (TBM) [\cite=Smets94a]. Let's suppose that the frame of discernment is [formula]. Ω is a finite set that reflects a state of partial knowledge that can be represented by a basis belief assignment defined as:

[formula]

The value m(A) is named a basic belief mass (bbm) of A. The subset A∈2Ω is called focal element if m(A) > 0. One of the important rules in the belief theory is the conjunctive rule which consists on combining two basic belief assignments m1 and m2 induced from two distinct and reliable information sources defined as:

[formula]

The Dempster rule is the normalized conjunctive rule:

[formula]

In order to ensure the decision making, beliefs are transformed into probability measures recorded [formula], and defined as follows [\cite=Smets94a]:

[formula]

Belief hierarchical clustering

In order to set down a way to develop a belief hierarchical clustering, we choose to work on different levels: on one hand, the object level, on the other hand, the cluster level. At the beginning, for N objects we have, the frame of discernment is [formula] and for each object belonging to one cluster, a degree of belief is assigned. Let PN be the partition of N objects. Hence, we define a mass function for each object xi, inspired from the k-nearest neighbors [\cite=Denoeux95a] method which is defined as follows:

[formula]

where i  ≠  j, α and γ are two parameters we can optimize [\cite=Zouhal98a], d can be considered as the Euclidean distance, and the frame of discernment is given by [formula].

In order to move from the partition of N objects to a partition of N - 1 objects we have to find both nearest objects (xi,xj) to form a cluster. Eventually, the partition of N - 1 clusters will be given by [formula] where [formula]. The nearest objects are found considering the pignistic probability, defined on the frame Ωi, of each object xi, where we proceed the comparison by pairs, by computing firstly the pignistic for each object, and then we continue the process using [formula]. The nearest objects are chosen using the maximum of the pignistic values between pairs of objects, and we will compute the product pair one by one.

[formula]

Then, this first couple of objects is a cluster. Now consider that we have a partition PK of K clusters [formula]. In order to find the best partition PK - 1 of K - 1 clusters, we have to find the best couple of clusters to be merged. First, if we consider one of the classical distances [formula] (single link, complete link, average, etc), presented in section [\ref=CAH], between the clusters, we delineate a mass function, defined within the frame Ωi for each cluster Ci∈PK with Ci  ≠  Cj by:

[formula]

where [formula]. Then, both clusters to merge are given by:

[formula]

and the partition PK - 1 is made from the new cluster (Ci,Cj) and all the other clusters of PK. The point by doing so is to prove that if we maximize the degree of probability we will have the couple of clusters to combine. Of course, this approach will give exactly the same partitions than the classical ascendant hierarchical clustering, but the dendrogram can be built from [formula] and the best partition ( i.e. the number of clusters) can be preferred to find. The indexed hierarchy will be indexed by the sum of [formula] which will lead to more precise and specific results according to the dissimilarity between objects and therefore will facilitate our process.

Hereafter, we define another way to build the partition PK - 1. For each initial object xi to classify, it exists a cluster of PK such as xi∈Ck. We consider the frame of discernment [formula], m, which describes the degree that the two clusters could be merged, can be noted mΩand we define the mass function:

[formula]

In order to find a mass function for each cluster Ci of PK, we combine all the mass functions given by all objects of Ci by a combination rule such as the Dempster rule of combination given by equation [\eqref=DempsterRule]. Then, to merge both clusters we use the equation [\eqref=PartDec] as before. The sum of the pignisitic probabilities will be the index of the dendrogram, called [formula] index.

Experimentations

Experiments were first applied on diamond data set composed of twelve objects as describe in Figure [\ref=diamondRes].a and analyzed in [\cite=Masson04a]. The dendrograms for both classical and Belief Hierarchical Clustering (BHC) are represented by Figures [\ref=diamondRes].b and [\ref=diamondRes].c. The object 12 is well considered as an outlier with both approaches. With the belief hierarchical clustering, this object is clearly different, thanks to the pignistic probability. For HAC, the distance between object 12 and other objects is small, however, for BHC, there is a big gap between object 12 and others. This points out that our method is better for detecting outliers. If the objects 5 and 6 are associated to 1, 2, 3 and 4 with the classical hierarchical clustering, with BHC these points are more identified as different. This synthetic data set is special because of the equidistance of the points and there is no uncertainty.

We continue our experiments with a well-known data set, Iris data set, which is composed of flowers from four types of species of Iris described by sepal length, sepal width, petal length, and petal width. The data set contains three clusters known to have a significant overlap.

We increase then the the initial cluster number by k-means from 10 to 13 and we notice that the best situation is also when the pignistic is equal to 0.3 as shown in the figure 2 because it describes the fact that the data set is composed of 3 clusters. In order to reduce the complexity and present distinctly the dendrogram, we first used the k-means method to get initial few clusters for our algorithm. It is not necessary to apply this method if the number of objects is not high.

Several experiments have been used with several number of clusters. We present in Figure [\ref=1013] the obtained dendrograms for 10 and 13 clusters. We notice different combinations between the nearest clusters for both classical and belief hierarchical clustering. The best situation for BHC is obtained with the pignistic equal to 0.5 because it indicates that the data set is composed of three significant clusters which reflects the real situation. For the classical hierarchical clustering the results are not so obvious. Indeed, for HAC, it is difficult to decide for the optimum cluster number because of the use of the euclidean distance and as seen in Figure 2.c it indistinguishable in terms of the y-value. However, for BHC, it is more easy to do this due to the use of the pignistic probability.

In order to evaluate the performance of our method, we use some of the most popular measures: precision, recall and Rand Index (RI). The results for both BHC and HAC are summarized in Table 1. The first three columns are for BHC, while the others are for HAC. In fact, we suppose that Fc represents the final number of clusters and we start with Fc = 2 until Fc = 6. We fixed the value of kinit at 13. We note that for Fc = 2 the precision is low while the recall is of high value, and that when we have a high cluster number (Fc = 5 or 6), the precision will be high but the recall will be relatively low. Thus, we note that for the same number of final clusters ( e.g. Fc = 4), our method is better in terms of precision, recall and RI.

Tests are also performed to a third data base, Congressional Voting Records Data Set. The results presented in Figure [\ref=vote] show that the pignistic probability value increased at each level, having thereby, a more homogeneous partition. We notice different combinations, between the nearest clusters, that are not the same within the two methods compared. For example, cluster 9 is associated to cluster 10 and then to 6 with HAC, but, with BHC it is associated to cluster 4 and then to 10. Although, throughout the BHC dendrograms shown in Figure [\ref=vote].c and Figure [\ref=vote].d, the best situation indicating the optimum number of clusters can be clearly obtained. This easy way is due to the use of the pignistic probability.

For this data set, we notice that for Fc = 2 and 3, the precision is low while the recall is high. However, with the increasing of our cluster number, we notice that BHC provides a better results. In fact, for Fc = 3,4,5 and 6 the precision and RI values relative to BHC are higher then the precision and RI values relative to HAC, which confirmed the efficiency of our approach which is better in terms of precision and RI.

Conclusion

Ultimately, we have introduced a new clustering method using the hierarchical paradigm in order to implement uncertainty in the belief function framework. This method puts the emphasis on the fact that one object may belong to several clusters. It seeks to merge clusters based on its pignistic probability. Our method was proved on data sets and the corresponding results have clearly shown its efficiency. The algorithm complexity has revealed itself as the usual problem of the belief function theory. Our future work will be devoted to focus on this peculiar problem.