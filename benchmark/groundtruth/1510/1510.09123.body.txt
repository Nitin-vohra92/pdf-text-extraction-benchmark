Subsampling in Smoothed Range Spaces

Introduction

This paper considers traditional sample complexity problems but adapted to when the range space (or function space) smoothes out its boundary. This is important in various scenarios where either the data points or the measuring function is noisy. Similar problems have been considered in specific contexts of functions classes with a

[formula]

Main contributions.

We next summarize the main contributions in this paper.

We define a general class of smoothed range spaces (Sec [\ref=sec:smooth-RS]), with application to density estimation and noisy agnostic learning, and we show that these can inherit sample complexity results from linked non-smooth range spaces (Corollary [\ref=cor:inher-sample]).

We define an [formula]-net for a smoothed range space (Sec [\ref=sec:et-net]). We show how this can inherit sampling complexity bounds from linked non-smooth range spaces (Theorem [\ref=thm:inher-net]), and we relate this to non-agnostic density estimation and hitting set problems.

We provide discrepancy-based bounds and constructions for [formula]-samples on smooth range spaces requiring significantly fewer points than uniform sampling approaches (Theorems [\ref=thm:epssample] and [\ref=thm:epssample-d]), and also smaller than discrepancy-based bounds on the linked binary range spaces. These are useful for batched active learning, where a prespecified batch of (not uniform at random) samples can be then asked for labels to be used for learning.

Definitions and Background

Recall that we will focus on geometric range spaces [formula] where the ground set [formula] and the family of ranges [formula] are defined by geometric objects. It is common to approximate a range space in one of two ways, as an [formula]-sample (aka [formula]-approximation) or an [formula]-net. An [formula]-sample for a range space [formula] is a subset Q  ⊂  P such that

[formula]

An [formula]-net of a range space [formula] is a subset Q  ⊂  P such that

[formula]

Given a range space [formula] where |P| = m, then [formula] describes the maximum number of possible distinct subsets of P defined by some [formula]. If we can bound, [formula] for absolute constant C, then [formula] is said to have shatter dimension ν. For instance the shatter dimension of [formula] halfspaces in [formula] is d, and for [formula] balls in [formula] is d + 1. For a range space with shatter dimension ν, a random sample of size [formula] is an [formula]-sample with probability at least 1 - δ [\cite=VC71] [\cite=LLS01], and a random sample of size [formula] is an [formula]-net with probability at least 1 - δ [\cite=HW87] [\cite=Path95].

An [formula]-sample Q is sufficient for agnostic learning with generalization error [formula], where the best classifier might misclassify some points. An [formula]-net Q is sufficient for non-agnostic learning with generalization error [formula], where the best classifier is assumed to have no error on P.

The size bounds can be made deterministic and slightly improved for certain cases. An [formula]-sample Q can be made of size [formula] [\cite=Mat95] and this bound can be no smaller [\cite=Mat99] in the general case. For balls [formula] in [formula] which have shatter-dimension ν = d + 1, this can be improved to [formula] [\cite=Bec87] [\cite=Mat99], and the best known lower bound is [formula]. For axis-aligned rectangles [formula] in [formula] which have shatter-dimension ν = 2d, this can be improved to [formula] [\cite=Lar11].

For [formula]-nets, the general bound of [formula] can also be made deterministic [\cite=Mat95], and for halfspaces in [formula] the size must be at least [formula] [\cite=PT13]. But for halfspaces in [formula] the size can be [formula] [\cite=MSW90] [\cite=HKSS14], which is tight. By a simple lifting, this also applies for balls in [formula]. For other range spaces, such as axis-aligned rectangles in [formula], the size bound is [formula] [\cite=AES10] [\cite=PT13].

Kernels

A kernel is a bivariate similarity function [formula], which can be normalized so K(x,x)  =  1 (which we assume through this paper). Examples include ball kernels (K(x,p)  =  {1 if [formula] and 0 otherwise}), triangle kernels ([formula]), Epanechnikov kernels ([formula]), and Gaussian kernels ([formula], which is reproducing). In this paper we focus on symmetric, shift invariant kernels which depend only on [formula], and can be written as a single parameter function K(x,p)  =  k(z); these can be parameterized by a single bandwidth (or just width) parameter w so [formula].

Given a point set [formula] and a kernel, a kernel density estimate [formula] is the convolution of that point set with K. For any [formula] we define [formula].

A kernel range space [\cite=JoshiKommarajuPhillips2011] [\cite=Phillips2013] [formula] is an extension of the combinatorial concept of a range space [formula] (or to distinguish it we refer to the classic notion as a binary range space). It is defined by a point set [formula] and a kernel K. An element Kx of [formula] is a kernel K(x,  ·  ) applied at point [formula]; it assigns a value in

[formula]

(or more generally [formula]). A kernel range space where the linked binary range space has bounded shatter-dimension ν is said to have bounded V-dimension [\cite=Vap89] (see [\cite=ABCH97]) of ν. Given a ground set X, then for [formula] this describes the largest subset Y of X which can be shattered in the following sense. Choose any value s∈[0,1] for all points y∈Y, and then for each subset of Z  ⊂  Y there exists a function [formula] so f(y)  >  s if y∈Z and f(y)  <  s if y∉Z. The best sample complexity bounds for ensuring Q is an [formula]-sample of P based on V-dimension are derived from a more general sort of dimension (called a P-dimension [\cite=Pol90] where in the shattering definition, each y may have a distinct s(y) value) requires [formula] [\cite=LLS01]. As we will see, these V-dimension based results are also general enough to apply to the to-be-defined smooth range spaces.

New Definitions

In this paper we extend the notion of a kernel range spaces to other smoothed range spaces that are "linked" with common range spaces, e.g., halfspaces. These inherent the construction bounds through the linking result of [\cite=JoshiKommarajuPhillips2011], and we show cases where these bounds can also be improved. We also extend the notion of [formula]-nets to kernels and smoothed range spaces, and showing linking results for these as well.

Smoothed Range Spaces

Here we will define the primary smoothed combinatorial object we will examine, starting with halfspaces, and then generalizing. Let [formula] denote the family of smoothed halfspaces with width parameter w, and let [formula] be the associated smoothed range space where [formula]. Given a point p∈P, then smoothed halfspace [formula] maps p to a value vh(p)∈[0,1] (rather than the traditional {0,1} in a binary range space).

We first describe a specific mapping to the function value vh(p) that will be sufficient for the development of most of our techniques. Let F be the (d - 1)-flat defining the boundary of halfspace h. Given a point [formula], let [formula] describe the point on F closest to p. Now we define

[formula]

These points within a slab of width 2w surrounding F can take on a value between 0 and 1, where points outside of this slab revert back to the binary values of either 0 or 1.

We can make this more general using a shift-invariant kernel [formula], where [formula] allows us to parameterize by w. Define vh,w(p) as follows.

[formula]

For brevity, we will omit the w and just use vh(p) when clear. These definitions are equivalent when using the triangle kernel. But for instance we could also use a Epanechnikov kernel or Gaussian kernel. Although the Gaussian kernel does not satisfy the restriction that only points in the width 2w slab take non {0,1} values, we can use techniques from [\cite=Phillips2013] to extend to this case as well. This is illustrated in Figure [\ref=fig:smhalf]. Another property held by this definition which we will exploit is that the slope ς of these kernels is bounded by ς  =  O(1 / w)  =  c / w, for some constant c; the constant c  =  1 / 2 for triangle and Gaussian, and c  =  1 for Epanechnikov.

Finally, we can further generalize this by replacing the flat F at the boundary of h with a polynomial surface G. The point [formula] replaces pF in the above definitions. Then the slab of width 2w is replaced with a curved volume in [formula]; see Figure [\ref=fig:smhalf]. For instance, if G defines a circle in [formula], then vh defines a disc of value 1, then an annulus of width 2w where the function value decreases to 0. Alternatively, if G is a single point, then we essentially recover the kernel range space, except that the maximum height is 1 / 2 instead of 1. We will prove the key structural results for polynomial curves in Section [\ref=sec:match], but otherwise focus on halfspaces to keep the discussion cleaner. The most challenging elements of our results are all contained in the case with F as a (d - 1)-flat.

[formula]-Sample in a Smoothed Range Space

It will be convenient to extend the notion of a kernel density estimate to these smoothed range space. A smoothed density estimate [formula] is defined for any [formula] as

[formula]

An [formula]-sample Q of a smoothed range space [formula] is a subset Q  ⊂  P such that

[formula]

Given such an [formula]-sample Q, we can then consider a subset w of [formula] with bounded integral (perhaps restricted to some domain like a unit cube that contains all of the data P). If we can learn the smooth range [formula], then we know [formula], where [formula], since [formula]. Thus, such a set Q allows us to learn these more general density estimates with generalization error [formula].

We can also learn smoothed classifiers, like scenario (S2) in the introduction, with generalization error [formula], by giving points in the negative class a weight of - 1; this requires separate [formula]-samples for the negative and positive classes.

[formula]-Net in a Smoothed Range Space

We now generalize the definition of an [formula]-net. Recall that it is a subset Q  ⊂  P such that Q "hits" all large enough ranges ([formula]). However, the notion of "hitting" is now less well-defined since a point q∈Q may be in a range but with value very close to 0; if a smoothed range space is defined with a Gaussian or other kernel with infinite support, any point q will have a non-zero value for all ranges! Hence, we need to introduce another parameter [formula], to make the notion of hitting more interesting in this case.

A subset Q  ⊂  P is an [formula]-net of smoothed range space [formula] if for any smoothed range [formula] such that [formula], then there exists a point q∈Q such that vh(q)  ≥  τ.

The notion of [formula]-net is closely related to that of hitting sets. A hitting set of a binary range space [formula] is a subset Q  ⊂  P so every [formula] (not just the large enough ones) contains some q∈Q. To extend these notions to the smoothed setting, we again need an extra parameter [formula], and also need to only consider large enough smoothed ranges, since there are now an infinite number even if P is finite. A subset Q  ⊂  P is an [formula]-hitting set of smoothed range space [formula] if for any [formula] such that [formula], then [formula].

In the binary range space setting, an [formula]-net Q of a range space [formula] is sufficient to learn the best classifier on P with generalization error [formula] in the non-agnostic learning setting, that is assuming a perfect classifier exists on P from [formula]. In the density estimation setting, there is not a notion of a perfect classifier, but if we assume some other properties of the data, the [formula]-net will be sufficient to recover them. For instance, consider (like scenario (S1) in the introduction) that P is a discrete distribution so for some "event" points p∈P, there is at least an [formula]-fraction of the probability distribution describing P at p (e.g., there are more than [formula] points very close to p). In this setting, we can recover the location of these points since they will have probability at least τ in the [formula]-net Q.

Linking and Properties of [formula]-Nets

First we establish some basic connections between [formula]-sample, [formula]-net, and [formula]-hitting set in smoothed range spaces. In binary range spaces an [formula]-sample Q is also an [formula]-net, and a hitting set is also an [formula]-net; we show a similar result here up to the covering constant τ.

For a smoothed range space [formula] and [formula], an [formula]-hitting set Q is also an [formula]-net of [formula].

The [formula]-hitting set property establishes for all [formula] with [formula], then also [formula]. Since [formula] is the average over all points q∈Q, then it implies that at least one point also satisfies vh(q)  ≥  τ. Thus Q is also an [formula]-net.

In the other direction an [formula]-net is not necessarily an [formula]-hitting set since the [formula]-net Q may satisfy a smoothed range [formula] with a single point q∈Q such that vh(q)  ≥  τ, but all others [formula] having vh(q')  ≪  τ, and thus [formula].

For [formula], an [formula]-sample Q in smoothed range space [formula] is an [formula]-hitting set in [formula], and thus also an [formula]-net of [formula].

Since Q is the [formula]-sample in the smoothed range space, for any smoothed range [formula] we have [formula]. We consider the upper and lower bound separately.

If [formula], when [formula], we have

[formula]

And more simply when [formula] and [formula], then [formula]. Thus in both situations, Q is an [formula]-hitting set of [formula]. And then by Lemma [\ref=lem:hit-net] Q is also an [formula]-net of [formula].

Relations between Smoothed Range Spaces and Linked Binary Range Spaces

Consider a smoothed range space [formula], and for one smoothed range [formula], examine the range boundary F (e.g. a (d - 1)-flat, or polynomial surface) along with a symmetric, shift invariant kernel K that describes vh. The superlevel set (vh)τ is all points [formula] such that vh(x)  ≥  τ. Then recall a smoothed range space [formula] is linked to a binary range space [formula] if every set {p∈P|vh(p)  ≥  τ} for any [formula] and any τ  >  0, is exactly the same as some range [formula] for [formula]. For smoothed range spaces defined by halfspaces, then the linked binary range space is also defined by halfspaces. For smoothed range spaces defined by points, mapping to kernel range spaces, then the linked binary range spaces are defined by balls.

Joshi  [\cite=JoshiKommarajuPhillips2011] established that given a kernel range space [formula], a linked binary range space [formula], and an [formula]-sample Q of [formula], then Q is also an [formula]-kernel sample of [formula]. An inspection of the proof reveals the same property holds directly for smoothed range spaces, as the only structural property needed is that all points p∈P, as well as all points q∈Q, can be sorted in decreasing function value K(p,x), where x is the center of the kernel. For smoothed range space, this can be replaced with sorting by vh(p).

Consider a smoothed range space [formula], a linked binary range space [formula], and an [formula]-sample Q of [formula] with [formula]. Then Q is an [formula]-sample of [formula].

We now establish a similar relationship to [formula]-nets of smoothed range spaces from [formula]-nets of linked binary range spaces.

Consider a smoothed range space [formula], a linked binary range space [formula], and an [formula]-net Q of [formula] for [formula]. Then Q is an [formula]-net of [formula].

Let |P|  =  n. Then since Q is an [formula]-net of [formula], for any range [formula], if [formula], then [formula].

Suppose [formula] has [formula] and we want to establish that [formula]. Let [formula] be the range such that [formula] points with largest vh(pi) values are exactly the points in A. We now partition P into three parts (1) let P1 be the [formula] points with largest vh values, (2) let y be the point in P with [formula]th largest vh value, and (3) let P2 be the remaining [formula] points. Thus for every p1∈P1 and every p2∈P2 we have vh(p2)  ≤  vh(y)  ≤  vh(p1)  ≤  1.

Now using our assumption [formula] we can decompose the sum

[formula]

and hence using upper bounds vh(p1)  ≤  1 and vh(p2)  ≤  vh(y),

[formula]

Solving for vh(y) we obtain

[formula]

Since [formula] is linked to [formula], there exists a range [formula] that includes precisely [formula] (or more points with the same vh(y) value as y). Because Q is an [formula]-net of [formula], Q contains at least one of these points, lets call it q. Since all of these points have function value vh(p)  ≥  vh(y)  ≥  τ, then vh(q)  ≥  τ. Hence Q is also an [formula]-net of [formula], as desired.

This implies that if [formula] for any constant c  <  1, then creating an [formula]-net of a smoothed range space, with a known linked binary range space, reduces to computing an [formula]-net for the linked binary range space. For instance any linked binary range space with shatter-dimension ν has an [formula]-net of size [formula], including halfspaces in [formula] with ν  =  d and balls in [formula] with ν  =  d + 1; hence there exists [formula]-nets of the same size. For halfspaces in [formula] or [formula] (linked to smoothed halfspaces) and balls in [formula] (linked to kernels), the size can be reduced to [formula] [\cite=MSW90] [\cite=HKSS14] [\cite=pyrga2008new].

Min-Cost Matchings within Cubes

Before we proceed with our construction for smaller [formula]-samples for smoothed range spaces, we need to prepare some structural results about min-cost matchings. Following some basic ideas from [\cite=Phillips2013], these matchings will be used for discrepancy bounds on smoothed range spaces in Section [\ref=sec:smhalf].

In particular, we analyze some properties of the interaction of a min-cost matching M and some basic shapes ([\cite=Phillips2013] considered only balls). Let [formula] be a set of 2n points. A matching M(P) is a decomposition of P into n pairs {pi,qi} where pi,qi∈P and each pi (and qi) is in exactly one pair. A min-cost matching is the matching M that minimizes [formula]. The min-cost matching can be computed in O(n3) time by [\cite=Edm65] (using an extension of the Hungarian algorithm from the bipartite case). In [formula] it can be calculated in O(n3 / 2 log 5n) time [\cite=Var98].

Following [\cite=Phillips2013], again we will base our analysis on a result of [\cite=BE93] which says that if P  ⊂  [0,1]d (a unit cube) then for d a constant, [formula], where M is the min-cost matching. We make no attempt to optimize constants, and assume d is constant.

One simple consequence, is that if P is contained in a d-dimensional cube of side length [formula], then [formula].

We are now interested in interactions with a matching M for P in a d-dimensional cube of side length [formula] [formula] (call this shape an [formula]-cube), and more general objects; in particular Cw a (w,d)-cube and, Sw a slab of width 2w, both restricted to be within [formula]. Now for such an object Ow (which will either be Cw or Sw) and an edge {p,q} where line segment [formula] intersects Ow define point pB (resp. qB) as the point on segment [formula] inside Ow closest to p (resp. q). Note if p (resp. q) is inside O then pB  =  p (resp. qB  =  q), otherwise it is on the boundary of Ow. For instance, see C20w in Figure [\ref=fig:w2cost].

Define the length of a matching M restricted to an object [formula] as

[formula]

Note this differs from a similar definition by [\cite=Phillips2013] since that case did not need to consider when both p and q were both outside of Ow, and did not need the [formula] term because all objects had diameter 2.

Let [formula], where d is constant, and M be its min-cost matching. For any (w,d)-cube [formula] we have ρ(Cw,M)  =  O(wd).

We cannot simply apply the result of [\cite=BE93] since we do not restrict that P  ⊂  Cw. We need to consider cases where either p or q or both are outside of Cw. As such, we have three types of edges we consider, based on a cube C20w of side length 20w and with center the same as Cw.

Both endpoints are within C20w of edge length at most [formula].

One endpoint is in Cw, the other is outside C20w.

Both endpoints are outside C20w.

For all (T1) edges, the result of Bern and Eppstein can directly bound their contribution to ρ(Cw,M) as O(wd) (scale to a unit cube, and rescale). For all (T2) edges, we can also bound their contribution to ρ(Cw,M) as O(wd), by extending an analysis of [\cite=Phillips2013] when both Cw and C20w are similarly proportioned balls. This analysis shows there are O(1) such edges.

We now consider the case of (T3) edges, restricting to those that also intersect Cw. We argue there can be at most O(1) of them. In particular consider two such edges {p,q} and {p',q'}, and their mappings to the boundary of C20w as pB,qB,p'B,q'B; see Figure [\ref=fig:w2cost]. If [formula] and [formula], then we argue next that this cannot be part of a min-cost matching since [formula], and it would be better to swap the pairing. Then it follows from the straight-forward net argument below that there can be at most O(1) such pairs.

We first observe that [formula]. Now we can obtain our desired inequality using that [formula] (and similar for [formula]) and that [formula] by triangle inequality (and similar for [formula]).

Next we describe the net argument that there can be at most O(d2  ·  22d)  =  O(1) such pairs with [formula] and [formula]. First place a 5w-net [formula] on each (d - 1)-dimensional face f of C20w so that any point x∈f is within 5w of some point [formula]. We can construct [formula] of size O(2d) with a simple grid. Then let [formula] as the union of the nets on each face; its size is O(d  ·  2d). Now for any point p∉C20w let [formula] be the closest point in [formula] to pB. If two points p and p' have η(p)  =  η(p') then [formula]. Hence there can be at most O((d  ·  2d)2) edges with {p,q} mapping to unique η(p) and η(q) if no other edge {p',q'} has [formula] and [formula].

Concluding, there can be at most O(d2  ·  22d)  =  O(1) edges in M of type (T3), and the sum of their contribution to ρ(Cw,M) is at most O(wd), completing the proof.

Let [formula], where d is constant, and let M be its min-cost matching. For any width 2w slab Sw restricted to [formula] we have [formula].

We can cover the slab Sw with [formula] (w,d)-cubes. To make this concrete, we cover [formula] with [formula] cubes on a regular grid. Then in at least one basis direction (the one closest to orthogonal to the normal of F) any column of cubes can intersect Sw in at most 4 cubes. Since there are [formula] such columns, the bound holds. Let [formula] be the set of these cubes covering Sw.

Restricted to any one such cube Cw, the contribution of those edges to ρ(Sw,M) is at most O(wd) by Lemma [\ref=lem:match-cube]. Now we need to argue that we can just sum the effect of all covering cubes. The concern is that an edge goes through many cubes, only contributing a small amount to each ρ(Cw,M) term, but when the total length is taken to the dth power it is much more. However, since each edge's contribution is capped at (2w)2, we can say that if any edge goes through more than O(1) cubes, its length must be at least w, and its contribution in one such cube is already Ω(w), so we can simply inflate the effect of each cube towards ρ(Sw,M) by a constant.

In particular, consider any edge [formula] that has p∈Cw. Each cube has 3d - 1 neighboring cubes, including through vertex incidence. Thus if edge [formula] passes through more than 3d cubes, q must be in a cube that is not one of Cw's neighbors. Thus it must have length at least w; and hence its length in at least one cube Cw must be at least w / 3d, with its contribution to ρ(Cw,M)  >  wd / (3d2). Thus we can multiply the effect of each edge in ρ(Cw,M) by 3d22d  =  O(1) and be sure it is at least as large as the effect of that edge in ρ(Sw,M). Hence

[formula]

We can apply the same decomposition as used to prove Lemma [\ref=lem:match-slab] to also prove a result for a w-expanded volume Gw around a degree g polynomial surface G. A degree g polynomial surface can intersect a line at most g times, so for some [formula] the expanded surface [formula] can be intersected by [formula] (w,d)-cubes. Hence we can achieve the following bound.

Let [formula], where d is constant, and let M be its min-cost matching. For any volume Gw defined by a polynomial surface of degree g expanded by a width w, restricted to [formula] we have [formula].

Constructing [formula]-Samples for Smoothed Range Spaces

In this section we build on the ideas from [\cite=Phillips2013] and the new min-cost matching results in Section [\ref=sec:match] to produce new discrepancy-based [formula]-sample bounds for smoothed range spaces. The basic construction is as follows. We create a min-cost matching M on P, then for each pair (p,q)∈M, we retain one of the two points at random, halving the point set. We repeat this until we reach our desired size. This should not be unfamiliar to readers familiar with discrepancy-based techniques for creating [formula]-samples of binary range spaces [\cite=Mat99] [\cite=Cha01]. In that literature similar methods exist for creating matchings "with low-crossing number". Each such matching formulation is specific to the particular combinatorial range space one is concerned with. However, in the case of smoothed range spaces, we show that the min-cost matching approach is a universal algorithm. It means that an [formula]-sample Q for one smoothed range space [formula] is also an [formula]-sample for any other smoothed range space [formula], perhaps up to some constant factors. We also show how these bounds can sometimes improve upon [formula]-sample bounds derived from linked range spaces; herein the parameter w will play a critical role.

Discrepancy for Smoothed Halfspaces

To simplify arguments, we first consider [formula] extending to [formula] in Section [\ref=sec:extd].

Let χ:P  →  { - 1, + 1} be a coloring of P, and define the discrepancy of [formula] with coloring χ as [formula]. Restricted to one smoothed range [formula] this is [formula]. We construct a coloring χ using the min-cost matching M of P; for each {pi,qi}∈M we randomly select one of pi or qi to have χ(pi)  =   + 1, and the other χ(qi)  =   - 1. We next establish bounds on the discrepancy of this coloring for a ς-bounded smoothed range space [formula], i.e., where the gradient of vh is bounded by ς  ≤  c1 / w for a constant c1 (see Section [\ref=sec:smooth-RS]).

For any smoothed range [formula], we can now define a random variable Xj  =  χ(pj)vh(pj)  +  χ(qj)vh(qj) for each pair {pj,qj} in the matching M. This allows us to rewrite [formula]. We can also define a variable Δj  =  2|vh(pj)  -  vh(qj)| such that Xj∈{  -  Δj / 2,Δj / 2}. Now following the key insight from [\cite=Phillips2013] we can bound [formula] using results from Section [\ref=sec:match], which shows up in the following Chernoff bound from [\cite=DP09]: Let [formula] be independent random variables with [Xj] = 0 and Xj  =  {  -  Δj / 2,Δj / 2} then

[formula]

Assume [formula] is contained in some cube [formula] and with min-cost matching M defining χ, and consider a ς-bounded smoothed halfspace [formula] associated with slab Sw. Let [formula] for constant c2 (see definition of ρ in Section [\ref=sec:match]). Then [formula] for any δ  >  0 and constant [formula].

Using the gradient of vh is at most ς  =  c1 / w and [formula] we have

[formula]

where the second inequality follows by Lemma [\ref=lem:match-slab] which shows that [formula].

We now study the random variable [formula] for a single [formula]. Invoking ([\ref=eq:CH]) we can bound [formula]. Setting [formula] and [formula] reveals [formula].

From a Single Smoothed Halfspace to a Smoothed Range Space

The above theorems imply small discrepancy for a single smoothed halfspace [formula], but this does not yet imply small discrepancy [formula], for all choices of smoothed halfspaces simultaneously. And in a smoothed range space, the family [formula] is not finite, since even if the same set of points have vh(p) = 1, vh(p)  =  0, or are in the slab Sw, infinitesimal changes of h will change [formula]. So in order to bound [formula], we will show that there are polynomial in n number of smoothed halfspaces that need to be considered, and then apply a union bound across this set.

For [formula] of size n, for [formula], and value [formula] for δ  >  0, we can choose a coloring χ such that Pr [null]  ≤  δ.

We define a net of smoothed halfspaces [formula] where any smoothed halfspace [formula] assigns a value vh(p) to a point p∈P, then there always exists a smoothed halfspace [formula] such that [formula]. Since there are only |P|  =  n points, the difference [formula] is no more than nας . By setting α  =  1 / nς we can ensure that [formula]. Thus if all [formula] have small discrepancy, then all smoothed halfspaces in [formula] have small discrepancy.

We now describe a construction of [formula] (illustrated in Figure [\ref=fig:stripnet]) of size at most O(n4) and then apply the union bound in Lemma [\ref=lem:discK2d] to only increase the discrepancy in that bound by a [formula] factor. First consider the halfspace with boundary passing through each pair of points p,p'∈P. For each such halfspace, and for each point (p or p') it passes through, consider 4w / α rotations around that point (wlog p). Make the increment of the rotation such that the closest point p'F on the rotated boundary F increases a distance [formula] of α / 2 in each next rotation. That is, the projection distance [formula] on each rotation around p is a distance of α / 2,α,3α / 2,...,2w; this is repeated in each direction. Now, for each rotated halfspace, consider 4w / α translations in the direction normal to the halfspace. There are 2w / α translations in the normal direction, and its opposite, at increments of α / 2 (e.g., α / 2, α, 3α / 2, ... 2w).

Since α  =  1 / nς and w  =  O(1 / ς), then 4w / α = O(n). Thus the size of [formula] is O(n4): for each of O(n2) pairs, there are O(n) rotations and for each rotations there are O(n) translations.

We now show for any [formula] how to map to the smoothed halfspace in [formula] such that for all p∈P that |vh(p)  -  vs(p)|  ≤  ας. First consider all points [formula], where Sw is the slab defined by h. If the slab is empty then the closest two points p,p'∈P would generate one translation and rotation s∈Sα that moved both of them out of the slab, causing all of the same values vh(pi)  =  vs(pi)∈{0,1}. Otherwise, for any point p in the slab, there exists some rotation moving pF by at most α / 2 and another rotation moving pF by at most α / 2 resulting in [formula]. However, we need to ensure this holds for all points simultaneously. The translations affect [formula] for all points the same (at most α / 2), but the rotations can affect further away points by more. Thus, we choose the two points p,p'∈Sα that maximize [formula], and consider the closest rotation of h to one of the smoothed halfspaces [formula] that they generate. The rotation will affect all other points less than it will those two, and thus at most α / 2, as desired.

Finally we set the probability of failure in Lemma [\ref=lem:discK2d] as [formula] for each smoothed halfspace. This implies that for [formula], the Pr [null]  ≤  δ.

[formula]-Samples for Smoothed Halfspaces

To transform this discrepancy algorithm to [formula]-samples, let [formula] be the value of [formula] in the [formula]-samples generated by a single coloring of a set of size n. Solving for n in terms of [formula], the sample size is [formula]. We can then apply the MergeReduce framework [\cite=CM96]; iteratively apply this random coloring in O( log n) rounds on disjoint subsets of size [formula]. Using a generalized analysis (c.f., Theorem 3.1 in [\cite=phillips2008algorithms]), we have the same [formula]-sample size bound.

For [formula], with probability at least 1 - δ, we can construct an [formula]-sample of [formula] of size [formula].

To see that these bounds make rough sense, consider a random point set P in a unit square (so [formula]). Then setting w  =  1 / n will yield roughly O(1) points in the slab (and should roughly revert to the non-smoothed setting); this leads to [formula] and an [formula]-sample of size [formula], basically the random sampling bound. But setting [formula] so about [formula] points are in the slab (the same amount of error we allow in an [formula]-sample) yields [formula] and the size of the [formula]-sample to be [formula], which is a large improvement over [formula], and the best bound known for non-smoothed range spaces [\cite=Mat99].

Adaptive Bounds for Non-Uniform Distributed Data

However, the assumption that [formula] (although not uncommon [\cite=Mat99]) can be restrictive. In this section, we attempt to relax this assumption. We do not see how to completely remove some such assumption using our suite of techniques since it could be all of the data lies very close to a line l, and then a halfspace boundary similar to that line l will have all of the points within the slab. In this case, we should not expect much better than with binary range spaces unless we make w much larger than the average deviation of points from the line l.

However, we can do better, if the data is "well-clustered". That is, consider partitioning the data into subsets [formula] so that each Pi is contained in an [formula]-cube. Then we can replace [formula] in the previous bound with a value [formula]. In particular, let Φ  =   min k  ≥  1 max Φk. We can then bound the contribution of each [formula] cube towards ρ(Sw,M) as [formula] using Lemma [\ref=lem:match-slab], and the sum of them as [formula] since there will at most k - 1 edges between these k boxes. In Lemma [\ref=lem:discK2d] this yields [formula], and eventually with probability 1 - δ an [formula]-sample of size [formula] in place of Theorem [\ref=thm:epssample].

Consider a partition of [formula] for [formula], so each Pi is in a [formula]-cube, and letting [formula] and Φ  =   min k  ≥  1Φk. Then with probability at least 1 - δ, we can construct an [formula]-sample of [formula] of size [formula].

We can compute a [formula]-approximation to Φ in O(nk2max) time, where kmax is the largest value of k we consider (kmax  =   log n may be a good choice). Our algorithm will only use axis-aligned cubes which is a [formula]-approximation to more generally allowing rotated cubes to fit each Pi. We simply run the k-clustering of [\cite=Gon85] using the L∞ metric. That is, we start with an arbitrary point p∈P to place in a set W1; this represents the center of the smallest [formula]-cube that fits all data. Then we inductively, choose [formula], and create [formula]. At any stage [formula], and [formula].

Non-linear clusters.

We can also observe a slightly tighter bound. If there are k [formula]-cubes, but they are not all near a single line, then they cannot all contribute to the discrepancy. Given a partition [formula] where each Pi is in a [formula]-cube, let κk describe the maximum number of these cubes that a single slab Sw can intersect. Then we can use [formula] in place of Φk. However, it is less clear the best way to construct an approximation to k and [formula].

As another thought experiment, consider all of the points are in [formula]. We can now decompose this square into w2 smaller squares, each of side length [formula]. Any slab Sw can only pass through O(w) smaller squares; thus [formula]. So we recover the original non-adaptive bound.

One may wonder if this can be improved if many of the w2 squares are empty. If there are O(1) non-empty squares, then Φ already captures this improved bound. If there is still a slab Sw pass through Ω(w) squares, then this [formula] bound again does not improve over the non-adaptive one. However if there are Θ(w) non-empty squares, and no slab Sw passes through more than O(1) of them (e.g., they are all on the boundary of [formula]), then [formula] improves the bound over Φ by a factor of w. Thus the [formula] approach can improve the bound in certain settings.

Generalization to d Dimensions

We now extend from [formula] to [formula] for d  >  2. Using results from Section [\ref=sec:match] we implicitly get a bound on [formula], but the Chernoff bound we use requires a bound on [formula]. As in [\cite=Phillips2013], we can attain a weaker bound using Jensen's inequality over at most n terms

[formula]

Replacing this bound and using [formula] in Lemma [\ref=lem:discK2d] and considering ς  =  c1 / w for some constant c1 results:

Assume [formula] is contained in some cube [formula] and with min-cost matching M, and consider a ς-bounded smoothed halfspace [formula] associated with slab Sw. Let [formula] for constant c2. Then [formula] for any δ  >  0, where [formula] is a constant.

Using the gradient of vh is at most ς  =  c1 / w and [formula] we have

[formula]

where second inequality follows by Lemma [\ref=lem:match-slab] that [formula]. Hence, by Jensen's inequality (i.e. ([\ref=eq:Jensen]))

[formula]

We now study the random variable [formula] for a single [formula]. Invoking ([\ref=eq:CH]) we can bound

[formula]

Setting [formula] and

[formula]

reveals

[formula]

For all choices of smoothed halfspaces, applying the union bound, the discrepancy is increased by a [formula] factor, with the following probabilistic guarantee,

[formula]

Ultimately, we can extend Theorem [\ref=thm:epssample] to the following.

For [formula], where d is constant, with probability at least 1 - δ, we can construct an [formula]-sample of [formula] of size [formula].

If the data is "well-clustered" in high dimension, we can get a similar adaptive bounds as Theorem [\ref=thm:phi-epssample].

Consider a partition of [formula] for [formula], so each Pi is in a [formula]-cube, and letting [formula] and Φ  =   min k  ≥  1Φk. Then with probability at least 1 - δ, we can construct an [formula]-sample of [formula] of size [formula].

Note these results address scenario (S3) from the introduction where we want to find a small set (the [formula]-sample) so that it could be much smaller than the [formula] random sampling bound, and allows generalization error [formula] for agnostic learning as described in Section [\ref=sec:e-sample-SRS]. When [formula] (or Φ / w) is constant, the exponents on [formula] are also better than those for binary ranges spaces (see Section [\ref=sec:definitions]).