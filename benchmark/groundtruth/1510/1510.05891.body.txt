On the Book Thickness of 1-Planar Graphs

Supported in part by the Deutsche Forschungsgemeinschaft (DFG), grant Br835/18-1.

Introduction

Graph embeddings and linear layouts of graphs play an important role in graph drawing, parallel processing, matrix computation, VLSI design, and permutation sorting. A linear layout prescribes the order in which the vertices are processed and the embedding of the edges reveals structural properties of the given graph. A particular example is a book embedding in which the edges are assigned to pages such that edges in the same page nest and do not cross. Equivalently, the vertices are visited in the linear order and the edges are processed in stacks. The concept of a book embedding of a graph was introduced by Ollmann [\cite=ollmann1973book] and by Kainen [\cite=Kainen74] and can be formalized as follows. A k-page book embedding of a graph G = (V,E) is defined by a linear order of the vertices of G and a partition of the edges into k sets [formula], so that the vertices of G are placed on a line in the given order and edges in Ei are drawn on page i (typically with circular arcs), so that no two edges on the same page cross. The book thickness of the graph G is the smallest number of pages needed, also known as stack number or page number.

The book thickness of planar graphs has been studied for over 40 years. Bernhart and Kainen [\cite=bk-btg-79] characterized the graphs with book thickness one as the outerplanar graphs and the graphs with book thickness two as the sub-Hamiltonian planar graphs. Deciding whether a general planar graph has book thickness two is NP-hard [\cite=chung1987embedding]. It is known that planar graphs require 3 pages and a series of improvements brought down the upper bound from 9 [\cite=buss1984pagenumber], to 7 [\cite=heath1984embedding], and 4 [\cite=Yanna89]. Although in an earlier version of his 1989 paper Yannakakis in 1986 [\cite=YannaSTOC86] claimed 4 pages are necessary, and later Dujmovic and Wood in 2007 [\cite=dujmovic2007graph] also conjectured the same lower bound, there is still no conclusive evidence that this is indeed the case.

More recently there has been a greater interest in studying non-planar graphs which extend planar graphs by restrictions on crossings. A particular example are 1-planar graphs which can be drawn in the plane with at most one crossing per edge. Such graphs were first defined by Ringel in the context of simultaneously drawing a planar graph and its dual [\cite=ringel-65]. In many respects, 1-planar graphs generalize planar graphs. There are 1-planar embeddings as witnesses of 1-planarity, in which the crossings are treated as special vertices of degree four, and which then result in planarizations. Like n-vertex planar graphs which have at most 3n - 6 edges, n-vertex 1-planar graphs have at most 4n - 8 edges [\cite=PT97]. Both planar and 1-planar 3-connected graphs admit straight-line drawings in O(n2) area (with the exception of one edge in the outer face for the densest 1-planar graphs) [\cite=ABK13]. However, there is a major difference in the complexity of the recognition of planar and 1-planar graphs, which can be done in linear time for planar graphs while it is NP-hard for 1-planar graphs [\cite=GB07] [\cite=KorzhikMohar13]. On the other hand, there is a cubic time recognition algorithm for hole-free map graphs [\cite=CGP06], which for 3-connected graphs coincide with planar-maximal 1-planar graphs (i.e., where no edge can be added without creating more crossing).

In this paper, we address the problem of book embedding of 1-planar graphs. Recently Bekos et al. [\cite=BBKR15] gave a constant upper bound of 39 on the book thickness of 1-planar graphs. Here we prove that 1-planar graphs have book thickness at most 16 and 3-connected 1-planar graphs have book thickness at most 12. If the planar skeleton is Hamiltonian, then four pages suffice, and we have found 1-planar graphs which need four pages.

Preliminaries

A drawing of a graph G is a mapping of G into the plane such that vertices are mapped to distinct points and edges are Jordan arcs between their endpoints. A drawing is planar if the edges do not cross and it is 1-planar if each edge is crossed at most once. Hence in a 1-planar drawing the crossing edges come in pairs. For example, K5 and K6 are 1-planar graphs. An embedding of a graph is planar (resp. 1-planar) if it admits a planar (resp. 1-planar) drawing. An embedding specifies the faces, which are topologically connected regions. The unbounded face is the outer face. Accordingly, a 1-planar embedding E(G) specifies the faces in a 1-planar drawing of G including the outer face. A 1-planar embedding is a witness for 1-planarity. In particular, E(G) describes the pairs of crossing edges, the faces where the edges cross, and the planar edges.

Augment a given 1-planar embedding E(G) by adding as many edges to E(G) as possible so that G remains a simple graph and the newly added edges are planar in E(G). We call such an embedding a planar-maximal embedding of G and the operation planar-maximal augmentation. Then each pair of crossing edges is augmented to a K4. The planar skeleton P(E(G)) consists of the planar edges of a planar-maximal augmentation. It is a planar embedded graph, since all pairs of crossing edges are omitted. Note that the planar augmentation and the planar skeleton are defined for an embedding, not for a graph.

The normal form for an embedded 3-connected 1-planar graph E(G) is obtained by first adding the four planar edges to form a K4 for each pair of crossing edges while routing them close to the crossing edges and then removing old duplicate edges if necessary. Such an embedding of a 3-connected 1-planar graph is a normal embedding of it. A normal planar-maximal augmentation for an embedded 3-connected 1-planar graph is obtained by first finding a normal form of the embedding and then by a planar-maximal augmentation.

Given a 1-planar embedding E(G), the normal planar-maximal augmentation of E(G) can be computed in linear time [\cite=ABK13]. We say that an embedded 3-connected 1-planar graph is a normal planar maximal 1-planar graph if a normal planar maximal augmentation of the graph yields the same graph. In a 3-connected normal planar-maximal 1-planar graph, each pair of crossing edges (a,c) and (b,d) crosses each other either inside or outside the boundary of the quadrangle abcd of the planar edges, and these define the so-called augmented X- and augmented B-configurations [\cite=ABK13].

For a 3-connected 1-planar graph G, Alam et al. [\cite=ABK13] proved the following:

[\cite=ABK13] Let G be a 3-connected 1-planar graph with a 1-planar embedding E(G). Then the normal planar-maximal augmentation of E(G) gives a planar-maximal 1-planar embedding E(G*) of a supergraph G* of G so that E(G*) contains at most one augmented B-configuration in the outer face and each augmented X-configuration in E(G*) contains no vertex inside its skeleton.

Book Embeddings of 3-Connected 1-Planar Graphs

If a graph can be embedded in a given number of pages, the same is true for its subgraphs. Given an embedded 3-connected 1-planar graph G, we therefore assume that G is a normal planar maximal 1-planar graph. Lemma [\ref=lem:embedding] implies that the planar skeleton of a normal planar maximal 3-connected 1-planar graph G contains only triangular and quadrangular faces. Furthermore if we remove exactly one crossing edge (arbitrarily) from each pair of crossing edges in G, then the resulting graph is a maximal planar graph.

Our algorithm uses the a "peeling technique" similar to Yannakakis [\cite=Yanna89] and iteratively removes the vertices on the outer cycle of the planar skeleton P(E(G)) of G. This partitions the vertices of G into levels according to their "distance" from the outer face of the planar skeleton P(E(G)). Vertices on the outer face of P(E(G)) are at level 0. Deleting these vertices from P(E(G)) yields the level 1 graph; the vertices that lie now on the outer face are at level 1. In general, the level t graph is obtained by deleting all vertices at levels less than t; the vertices that lie on the outer face of this graph are at level t. The edges of G (including the crossing edges) are partitioned into level edges at level i, edges that connect vertices at the same level i, and binding edges, edges that connect vertices at different levels. The fact that a level i vertex is not on the outer face after deleting the first i - 2 levels implies that every level i vertex lies in the interior of some cycle composed of level i - 1 vertices. This means in particular that a level i vertex cannot be adjacent to a level j vertex with j  <  i - 1 and binding edges connect only consecutive levels.

Similar to Yannakakis [\cite=Yanna89] we first place level 0 vertices in the clockwise order (cw-order) as they appear on the outer cycle, assigning the edges on the outer cycle on the same page. Then we place the level 1 vertices and assign the following edges to some pages: (i) the level edges of each cycle on the outer boundary of the level 1 graph (ii) the binding edges between levels 0 and 1 (iii) the crossing edges either at level 0 or binding between level 0 and 1. Level 1 vertices are placed in such a way that the vertices on each level 1 cycle are in the counterclockwise order (ccw-order) around the cycle. Now the rest of the graph is in the interior of level 1 cycles. The algorithm takes each level 1 cycle in turn and lays out its interior in a similar way.

We therefore next consider a 2-level subgraph H of G defined as follows. The vertices of H are the vertices on a level i cycle Ci and all the level i + 1 vertices Vi + 1 interior to Ci. The edges of H are all the planar and crossing edges inside the region between Ci and the outer boundaries of all the level i + 1 components inside Ci (including the edges on Ci and the level i + 1 boundaries). Fig. [\ref=fig:2-level] shows a 2-level subgraph inside a cycle [formula]. We denote this 2-level subgraph of H inside Ci as H(Ci). We assume that Ci has already been embedded where the vertices of Ci are placed in the cw (or ccw, resp.) order around Ci. We then extend this embedding to a book embedding of H(Ci), by placing the remaining vertices of H(Ci) and assign the remaining edges of H(Ci) to seven pages. The book embedding of G is obtained by repeatedly computing the book embeddings of H(Ci) and reusing the same seven pages for all odd (even) i.

Drawing 2-Level Subgraphs

In this section we prove the following lemma.

Let H(Ci) be a 2-level subgraph of G inside a level i cycle Ci. Then there exists a book embedding Γ of H(Ci) on seven pages where the vertices of Ci are placed in the cw (or ccw) order around Ci.

We give a construction of a book embedding where the vertices of Ci are placed in the cw-order (for ccw-order we flip the embedding of H(Ci)). Let [formula] be the vertices of Ci in the cw-order around Ci. For the remaining part of this section, we call the vertices on Ci as the outer vertices and the level i + 1 vertices of H(Ci) as the inner vertices. We first obtain a planar graph H' from H(Ci) by removing exactly one edge from each pair 〈(a,b),(c,d)〉 of crossing edges. Let X be the set of crossing edges that we remove. From each crossing edge pair 〈(a,b),(c,d)〉, we take one edge to be in X as follows; see Fig. [\ref=fig:2-level].

Case S1. If both (a,b), (c,d) are level edges at level i, then we take the edge adjacent to the vertex farthest from v1 in cw-order on Ci to be in X. In particular if the two level i edges forming the crossing pair are (vp,vr), (vq,vs) with p < q < r < s, then we take the edge (vq,vs) to X; for example we take the edge (C,E) to X in Fig. [\ref=fig:2-level].

Case S2. If both (a,b), (c,d) are binding edges, then we again choose the edge adjacent to the vertex farthest from v1 in cw-order on Ci to be in X. In particular, if the two binding edges forming the crossing pair are (vp,u), (vq,u'), where p < q and u,u' are level i + 1 vertices, then we take the edge (vq,u') to be in X; for example we take the edge (I,u2,6) to X in Fig. [\ref=fig:2-level].

Case S3. If one of (a,b), (c,d) is a level edge at level i, and the other is a binding edge, then we choose the binding edge to be in X; for example we take the edge (G,u2,6) to X in Fig. [\ref=fig:2-level].

Case S4. If one of (a,b), (c,d) is a level edge at level i + 1, and the other is a binding edge, then we choose the level edge at level i + 1 to be in X; for example we take the edge (u1,5,u2,6) to X in Fig. [\ref=fig:2-level].

Case S5. If one of (a,b), (c,d) is a level edge at level i, and the other is at level i + 1, then we choose the level edge at level i to be in X; for example we take the edge (K,R) to X in Fig. [\ref=fig:2-level].

Note that due to the construction of H(Ci), the pair of crossing edges cannot both be level edges at level i + 1. Thus the above cases account for all possible pairs.

We then use the algorithm by Yannakakis [\cite=Yanna89] to obtain a book embedding of H' on three pages, and we add the crossing edge from X on four additional pages so that no two edges assigned to the same page cross each other on that page. Before we describe how to add the crossing edges, we describe the 3-page embedding of H'. Denote the three pages as p1, p2 and p3, and denote the four additional pages for the crossing edges as c1, c2, c3 and c4. Denote by D the subgraph of H(Ci) induced by the vertices at level i + 1. Assume without loss of generality that D induces a connected graph, since otherwise each connected component of D would be inside a different cycle induced by the vertices of Ci and these can be handled separately. By construction then, each biconnected block of D is a simple cycle (i.e., D is a cactus graph). Let [formula] be these blocks of D and let T be the block-cut tree for D. We now show how we place all the level i + 1 vertices and assign the edges in H' and in X to the seven pages p1, p2, p3, c1, c2, c3 and c4.

Placement of Vertices

We say that a vertex u sees an edge (v,w) if uvw forms a triangular face in H'. We say that an outer vertex sees a block Bj of D if it sees an edge of the block. Consider the triangular inner face containing the edge (v1,vt) of Ci. The third node of this face u1,1 is called the first inner node and assume the block B1 containing u1,1 is the first block. Then consider the block-cut tree T as a rooted tree by taking B1 as its root.

For each block Bj of D, define the leader of Bj to be the first vertex of Bj in any path from u1,1 to any vertex of Bj. Thus, the leader of the root block B1 is u1,1; for any other block Bj, the leader of Bj is the common vertex between Bj and its parent in T. Although an inner vertex of H' (in particular a cutpoint of D) may belong to more than one block, we assign each inner vertex u to a unique block by assigning it to the highest (i.e., closest to the root) block in the tree T that contains it. Thus, the root block B1 of T is assigned all its vertices; each remaining block is assigned all its vertices except its leader. The dominator of a block Bj is the first outer vertex (in the order [formula]) adjacent to a vertex assigned to Bj.

We first place the outer vertices in the order [formula] in Γ. Next we place the inner vertices in between these outer vertices using the vertex placement order in [\cite=Yanna89], which we describe here. The inner vertices assigned to each block Bj are placed right after the outer node vk that dominates Bj (i.e., between vk and vk + 1). If an unique block Bj is dominated by vk, then its vertices are placed between vk and vk + 1 in the ccw-order around its boundary. If more than one block has a common dominator vk, this set S of blocks forms a directed path in T. Vertices in these blocks are placed between vk and vk + 1 using one of two methods. In the nested method, the vertices are placed in the order they are first encountered while traversing the boundary of the subgraph induced by the blocks in S in ccw-order, starting with the leader of the highest block in S. In the consecutive method, the vertices assigned to each block are placed consecutively in ccw-order around its boundary; the blocks are ordered one after the other in top-down order of T: first the vertices assigned to the highest block, then the ones assigned to its child, and so on. For the following description, assume that we follow the consecutive method, (the algorithm is analogous with the nested method). We thus obtain the ordering of the vertices of H' for the book embedding Γ; see Fig. [\ref=fig:embedding-planar].

Assigning Edges in H' to Pages

Next we assign the edges of H(Ci) to the seven pages. For a vertex v of H(Ci), let Γ(v) denote its rank in the ordering of Γ. Consider two edge (a,b), (c,d) of H(Ci) with Γ(a) < Γ(b) and Γ(c) < Γ(d). We say that there is a conflict between these two edges in Γ if Γ(a) < Γ(c)  <  Γ(b) < Γ(d) or Γ(c)  <  Γ(a)  <  Γ(d)  <  Γ(b). We now assign the edges of H(Ci) on seven pages such that there is no conflict between any two edges assigned to the same page.

First we assign the edges of H' to the three pages p1, p2 and p3. In order to see this assignment of edges to pages, consider H' as a directed (acyclic) graph by taking the following orientation of edges. The level edges (vp,vq) at level i, with p < q are oriented from vp to vq (including the edge (v1,vt), which is oriented from v1 to vt). On the other hand, each inner cycle is traversed in ccw-order, starting from its leader and the edges are oriented accordingly, with the exception of the final edge, which is oriented away from the leader. Each binding edge is oriented from the inner vertex to the outer vertex. The orientation of edges along with the placement of the vertices in Γ partitions all the edges of H' in two types: forward edges have sources placed before their sinks in Γ (the edge orientation is forward); the remaining edges are backward edges (the edge orientation is backward).

Consider an assignment of the blocks of D to the pages p2 or p3. The root block is assigned to p2. In the nested method, for each non-root block Bi, if Bi has a different dominator than its parent then it is assigned to the opposite page (p2 or p3) than that of its parent, otherwise it is assigned to the same page as its parent. In the consecutive method each non-root block Bi is assigned a different page (p2 or p3) than that of its parent. Again we use the consecutive method for illustration. We assign all the edges of H' to the three pages p1, p2, p3 as follows; also see Fig. [\ref=fig:embedding-planar].

The edges of Ci and all the backward binding edges of H' is assigned to page p1. (These are the only edges of H' assigned to p1.)

For each block Bj the level edges in Bj are assigned to the page that the block itself is assigned to.

For each forward binding edge e = (u,v), where v is on Ci and u is on some block Bj, edge e is assigned to page p2 or p3, opposite to the one assigned to block Bj.

This assignment of edges of H' creates no edge conflicts in any of the three pages [\cite=Yanna89].

Assigning Edges in X to Pages

We now assign the edges in X to the four pages c1, c2, c3 and c4. We consider the following cases of a crossing edge (a,b) in X.

Case D1: (a,b) is a binding edge. A binding edge in X is called forbidden for some block Bj if it is between two vertices d and vk + 1, where d is the leader of Bj, vk is the dominator of Bj, vk + 1 is the outer vertex just after vk and vk is not the dominator of any child block of Bj in T. We assign a binding edge (a,b) to page c1 if it is not forbidden for some block; see Fig. [\ref=fig:embedding-crossing]; otherwise we assign it to either page c3 or page c4 in Case D4.

Case D2: (a,b) is a level i edge. In this case we assign (a,b) to page c1; see Fig. [\ref=fig:embedding-crossing].

Case D3: (a,b) is a level i + 1 edge. In this case (a,b) is crossed by a binding edge (c,d), where one vertex (say c) is an outer vertex, and the other vertex (say d) is a cutvertex in D. The four vertices a,b,c,d form a K4 in H(Ci) with skeleton acbd whose interior is vertex-empty. Let Bj and Bj' be the two blocks of D containing a and b, respectively, with the common vertex d. Then, either one of Bj and Bj' is the parent of the other in T, where d is the leader for the child block, or both Bj and Bj' are the children of a common parent block in T and d is the leader for both of them. In either case, assume without loss of generality that the dominator of Bj comes before the dominator of Bj' in the cw-order around Ci (i.e., the dominator of Bj is placed before that of Bj' in Γ). This implies that the vertices of Bj are all placed before the vertices of Bj' except for its leader. Since b is adjacent to the leader d in Bj', b is either the first or the last vertex of Bj' (except for its leader) in Γ. We call the edge (a,b), the first (resp. last) crossing edge for the block Bj'. Note that if (a,b) is the last crossing edge for Bj', then c is the dominator for Bj'. We assign a crossing edge in X at level i + 1 to page c2 if it is the first crossing edge for some block Bj'; see Fig. [\ref=fig:embedding-crossing]. The last crossing edges of the blocks are assigned to either page c3 or page c4 in Case D4.

Case D4: the other case: (a,b) is a forbidden binding edge for some block or the last crossing edge for some block. Since the edges in X do not cross each other, for each block Bj, there is at most on edge, which is either a last crossing edge or a forbidden binding edge for Bj. These edges are assigned to page c3 or c4 as follows. Consider the rooted block-cut tree T for the blocks, rooted at B1. For each block at the even (resp. odd) level of T, we assign its forbidden binding edge or last crossing edge (if any) to page c3 (resp. c4); see Fig. [\ref=fig:embedding-crossing].

We now prove Lemma [\ref=lem:2-level] by showing that for any of the seven pages, there is no conflict between the edges assigned to it. This follows directly from [\cite=Yanna89] for the three pages p1, p2 and p3, since the edges assigned to these three pages forms the planar graph H' and the order of the vertices and the edge assignment on these three pages for H' is exactly the same as in [\cite=Yanna89]. For the edges assigned to the remaining four pages c1, c2, c3, c4, we have the following Lemmas.

There is no conflict between edges assigned to page c1.

Proof. The edges assigned to c1 are the level i edges and the binding edges in X, not incident to the leader of any block. We show that no two of them create a conflict. Since the vertices of Ci are placed in circular (clockwise) order of its boundary, and no two edges in X crosses each other in the embedding H(Ci) (only one edge from each crossing pair is taken), no two level i edges in X are in conflict with each other. Therefore it is sufficient to show that no binding edge in X is in conflict with any other binding edge or level i edge in X.

Consider a binding edge (x,vx) assigned to page c1, where vx is an outer vertex and x is an inner vertex; see Fig. [\ref=fig:binding]. Let x is assigned to the block Bj. Let vk be the dominator of Bj and d be the leader of Bj. Also consider a path P from the first inner vertex u1,1 to d in the planar skeleton of H(Ci) (the trivial path if j = 1). The block Bj, the two edges (x,vx) and (d,vk), along with the path P and the two edges (u1,1,v1), (u1,1,vt) partitions the interior of Ci in the following parts: (i) the interior of Bj, (ii) the interior of the triangle (u1,1,v1,vt) and (iii) the three regions marked by I, II and III in Fig. [\ref=fig:binding]. Since the path P and the boundary of Bj belongs to the planar skeleton of H(Ci) and since the edge (x,vx) is a crossing edge, each edge assigned to page c1 is embedded in the interior of one of the three regions I, II or III.

All the level i vertices in region I are placed on or before vk in Γ. Since vk is the dominator of Bj, it is placed before any vertex assigned to Bj, including x. Thus any level i edge in X lying in region I has both their end-vertices placed before both x and vx, and hence does not create a conflict with (x,vx). One the other hand, all level i + 1 vertices y in region I including the ones on P are also placed before x. Indeed if Bj' is the block to which y is assigned to, then either Bj' is dominated by an outer vertex placed before vk, or Bj' is dominated by vk, but its vertices are placed before those of Bj, following the consecutive (or the nested) method of placement. Thus both end-vertices of any binding edge in X lying in region I are also placed before x and vx and hence does not create any conflict with (x,vx).

Again all the level i vertices in region II except for vk are placed after x and before vx. Similarly all the level i + 1 vertices in region II except for d are placed on or after x and before vx. Due to the way, we select the edges in X, no binding edge or level i edge in X lying in region II is incident to vk. Furthermore no binding edge incident to d are assigned to page c1. Thus all the binding edges and level i edges assigned to page c1 have end-vertices placed between x and vx; hence they create no conflict with (x,vx).

All the level i vertices in region III are placed on or after vx. Thus all level i edges in X lying in region III have both their end vertices placed after both x and vx, and hence they create no conflict with (x,vx). On the other hand, the level i + 1 vertices on P or on the boundary of Bj lying region III are placed before x and the binding edge incident to them does not create conflict with (x,vx). Finally all the level i + 1 blocks strictly in region III are dominated by the vertices placed on or after vx. Indeed, the only possible planar edge crossing the region boundary would have been incident to the level i vertex vx - 1 just before vx, and it would have crossed the edge (x,vx). However in that case, the other end vertex of such an edge would have been on a block dominated by vx - 1 and x would have been its leader, which is a contradiction since the edge (x,vx) is assigned to page c1. Thus all the binding edges in region III incident to some level i + 1 vertex neither on P nor Bj, have both the end-vertices placed after x and vx, and hence they do not create conflict with (x,vx).

For a planar Hamiltonian graph, the order of the vertices from a Hamiltonian cycle induces a 2-page book embedding [\cite=bk-btg-79]. Furthermore if the graph is outerplanar, then this order of the vertices on the outer cycle induces a 1-page book embedding. We use these two facts to show that there is no conflict on the pages c2, c3 and c4.

There is no conflict between edges assigned to the pages c2, c3 and c4.

Consider a cycle C defined by the vertex order in Γ; i.e., the vertices of C are all the vertices of H(Ci), and for each consecutive vertex in Γ, there is an edge in C, along with an edge between the first and the last vertex on Γ. We show that all the edges assigned to page c2 along with this cycle C forms an outerplanar graph with C as the outer cycle. We also show that all the edges assigned to pages c3, c4, along with C forms a planar graph with the Hamiltonian cycle C. The claim thus follows.

First, consider a fixed planar embedding of C induced from the embedding of H(Ci). Delete all the edges from H(Ci) except for the edges on Ci and the edges on the boundary of each block Bj. For each block Bj, delete the edge between its leader and the last vertex (in the counterclockwise order). Finally also delete each edge (vk,vk + 1) for each outer vertex vk, which is a dominator of some block. Finally add the following edges for each dominator vk. If vk dominates only a single block Bj, then add the edge between vk and the first vertex assigned to Bj, and the edge between vk + 1 and the last vertex assigned to Bj. These two edges can be routed without a crossing near the (now removed) edge between the leader and the last vertex of Bj; see Fig. [\ref=fig:hamil-c234]. If vk dominates more than one blocks Bj1, Bj2, [formula], Bjt in this cw-order, then we add the edge from vk to the first vertex of Bj1, and an edge from vk + 1 to the last vertex of Bjt. Also for 1  ≤  l < t, add an edge from the last vertex of Bjl to the first vertex of Bj(l + 1). Again all these edges can be routed near the (now removed) edges between the leader and the last vertex of the blocks. This gives a planar embedding of C.

We now show that all the edge assigned to page c2 can be added in the interior of C without crossing. The edges assigned to c2 are the first crossing edges of the blocks. For any block B, with leader d, its first crossing edge (if any) is between the first vertex u1 assigned to B and the vertex x of B' preceding d, where B' is either the parent of B in T or the sibling of B in T just clockwise of it (Note that, in the later case, x is the last vertex of B'). We route such an edge as follows. We follow the boundary of B in cw-order from u1 to d, then cross the boundary of B' if it is a sibling of B. Finally we follow the boundary of B' (counterclockwise in B' is the parent of B; clockwise otherwise) to x; see Fig. [\ref=fig:hamil-c234]. The routed edges are planar and are in the interior of C. Hence they induce an outerplanar embedding, implying that edges assigned to c2 can be embedded on a single page.

Finally, the edges assigned to page c3, c4 are the last crossing edges and the forbidden edges of the blocks. We show how we route them in the embedding of C without crossings. Consider a block B with the leader d and a last crossing edge e. Then e is between the last vertex of B and the vertex x on the parent of B in T following d in the counterclockwise order. If B is at an even level in T, we route the edge outside of C, following the edge to its dominator. Then we follow the boundary of C until we reach the last vertex of B'. Finally we follow the inside of the boundary of B' to x. If B is in the odd level, we route e inside following the boundary of B in the cw-order until d, then cross the boundary and finally follow the boundary of B' in the ccw-order to x; see Fig. [\ref=fig:hamil-c234]. For each block, if its last crossing edge follows its outside boundary, then the edges from its children blocks following its inside boundary and vice versa. Furthermore for the children of a block B in cw-order, their leaders also appear in the clockwise order on B and the edges from each child only covers the boundary of B only up to its leader. Thus these edge do not create crossing. Finally for a forbidden edge e of a block B, between it leader and its dominator, we route e in the same route for the last crossing edge; see Fig. [\ref=fig:hamil-c234]. Thus all these edges along with C forms a planar graph with the Hamiltonian cycle C, and hence the can be embedded in the two pages c3, c4.

Drawing 3-Connected 1-Planar Graphs

Here we describe a 12-page book embedding algorithm for any 3-connected 1-planar graph G. We first show how we order the vertices of G using the vertex placement order for 2-level subgraphs from the previous section. We then show how we assign the edges of G into a small number of pages.

As we described in the previous Section, we may assume that G is a normal planar-maximal 1-planar graph. We use a "peeling" technique to find a linear order for the vertices of the graph G level-by-level using the algorithm for Lemma [\ref=lem:2-level]. We first find and order of the vertices on the outer cycle C0 (level 0 vertices) such that the vertices are placed in the cw-order around C0. We then traverse the graph outside in and iteratively use the algorithm for Lemma [\ref=lem:2-level] to place the internal vertices. For the 2-level graphs between levels i and i + 1, we consider that the vertices of level i have already been placed and we place the vertices of level i + 1 using the algorithm for Lemma [\ref=lem:2-level].

Consider a 2-level graph H(Ci) between levels i and i + 1, where [formula] is the outer boundary of H(Ci). If the cycle Ci is the first block in a 2-level graph between levels i - 1 and i, then the interval between the vertices of Ci does not contain any other vertex and we can use the algorithm in the previous section to place the level i + 1 vertices inside H(Ci) between the already placed vertices of Ci. Otherwise there is some vertex of level j < i between v1 and v2, but the remaining vertices ([formula]) are in a consecutive interval. In this case we again place the level i + 1 vertices inside H(Ci) as in the algorithm for Lemma [\ref=lem:2-level], but we place the vertices of level i + 1 blocks dominated by v1, just before v2 (after all possible vertices of level j < i). In either case, the vertices on each level i + 2 cycles are placed in an interval with no vertices of level j  ≤  i in between. Call this Algorithm Order-Vertices. We thus have the following lemma, whose proof follows from the above discussion; also see [\cite=Yanna89]:

Let Γ be the vertex order for a normal planar-maximal 1-planar graph G, obtained by Algorithm Order-Vertices. Let Ci be some level i cycle in G. Then all vertices at level i + 1 inside Ci are placed strictly between two consecutive level i + 1 vertices vj and vj' in Γ.

Lemma [\ref=lem:independent] implies that with this vertex order, no level i + 1 edge of G conflicts with any level j edge with j < i. We thus can iteratively use the drawing algorithm in Lemma [\ref=lem:2-level] to obtain a book embedding of G as follows:

Every 3-connected 1-planar graph G has a book embedding on 14 pages.

Let G be a normal planar-maximal 1-planar graph. Using Algorithm Order-Vertices we find a linear order of the vertices in G. We now again use the "peeling" technique to embed the edges of G level-by-level following the algorithm for Lemma [\ref=lem:2-level]. Let [formula], [formula] denote the 14 pages. We first embed the outer cycle C0 (level 0 vertices) in a single page (page p1). Then for each 2-level graph between levels i and i + 1, we iteratively use the pages p1, p2, p3, and c1, c2, c3, c4 to embed all the edges, when i is even; and we use the pages p4, p5, p6, and c5, c6, c7, c8 when i is odd. By Lemma [\ref=lem:2-level], each 2-level subgraph is drawn without conflict, and by Lemma [\ref=lem:independent], the edge in any 2-level does not create conflict with any 2-level subgraph in a deeper level.

We can actually reduce the number of pages a little.

Every 3-connected 1-planar graph G has a book embedding on 12 pages.

We can obtain a book embedding of G on 12 pages as a corollary of the construction in Theorem [\ref=th:14-page] after a post processing step. We note that all the 2-level planar graphs H' at all levels i of G, together induce a planar subgraph H of G, and are embedded on the six pages [formula]. Furthermore the order of the vertices in this book embedding is the same as the one obtained by the algorithm by Yannakakis [\cite=Yanna89] for a book embedding of H. Thus we use the algorithm by Yannakakis [\cite=Yanna89] to embed H on only four pages, resulting in a total of 12 pages.

Book Embedding of General 1-Planar Graphs

For the general case we may assume that the input graph is a planar-maximal graph and hence is 2-connected. We first extend the procedure of the normalization to the case of a planar-maximal 1-planar graph G. A pair of vertices {u,v} of G share more than two crossing edge pairs if and only if {u,v} form a separation pair in G [\cite=ABK13]. During the normalization, for any separation pair {u,v}, we route the edge (u,v) such that all the crossing edge pairs with u, v as end-vertices falls on the same side of (u,v); see Fig. [\ref=fig:separation].

Suppose there is a separation pair {u,v}, with a decomposition [formula] for some k  ≥  1. For any such component Hj, let H*j be the subgraph of G induced by the vertices of Hj and {u,v}. Then for at most one component Hj, u and v are not on the outerface of H*j. Assume thus without loss of generality that H*1, [formula], H*k all have u, v on the outerface. We call H0 the main component and H1, [formula], Hk the inner components for {u,v}. Also call H*1, [formula], H*k the extended inner components. The edge (u,v) is called separating edge. Note that the inner components can be permuted and flipped at {u,v}. In a normalized planar maximal embedding E(G) of G, the inner components H1, [formula], Hk are attached to (u,v) and are embedded on one side of (u,v), say in this ccw-order at u. The components are separated by one or two pairs of crossing edges; see Fig. [\ref=fig:separation], and they may also be separated by copies of the separation edge [\cite=Bran-vis-14] [\cite=Bran-map-15]. The embeddings of the extended inner components are B- or W-configurations, defined by [\cite=thomassen88], and hence the boundaries of the inner components are triangles and quadrangles.

We now extend our 14-page book embedding of 3-connected 1-planar graphs and the "peeling technique" from Section [\ref=sec:3-connected].

Every 1-planar graph G has a book embedding on 16 pages.

We proceed as in the case of 3-connected graphs. However we extend the peeling technique here to deal with the inner components for the separation pairs. Let the main graph G0 be obtained from G by deleting all the inner components for all the separation pairs. Clearly G0 is 3-connected. For each separation pair {u,v}, the edge (u,v) is a planar edge and if (u,v) is an edge of the main graph, then by the peeling technique, u, v are on the same level or on consecutive levels. Let H1, [formula], Hk be the inner components for u,v. We then assign the vertices on the outer boundary Oj for each inner component Hj on the higher (i.e., deeper) of the two levels for u and v. For the remaining vertices of Hj we proceed with the peeling technique recursively and assign them to subsequent levels. Let u, v belong to some 2-level subgraph H(Ci) of the main graph. Then the vertices on the outerboundary for each inner component for u,v and the edges between these outer vertices vertices and u, v are on the 2-level subgraph for G. We now show how we place these vertices and assign the edges to augment the book embedding Γ of G0. In addition to the 14 pages used in Γ, we use two more pages q1 and q2 for 2-level subgraphs at odd and even levels, respectively.

For each separating edge (u,v) on the main graph, with u placed before v in Γ, insert the vertices on the outerboundary of each inner component for u,v consecutively, to the immediate left of v (in cw-order if v is on odd level and in ccw-order otherwise). If there is more than one inner component for u,v, the order of their placement is arbitrary. If several separating edges are incident to v, with the other end-vertex, say w1, [formula], wq, all placed before v and in this order in Γ, insert the vertices of the corresponding inner components in reverse order (i.e., the inner components for wq, [formula], the inner components for w1).

The edges on the outerboundary are assigned to c1 or c5 for odd and even levels, respectively; they do not create conflicts because they form simple cycles of length 3 or 4 and the vertices are consecutive. For each inner component Hj for separation pair {u,v}, the edges from u to the vertices on Oj are assigned to the same page as (u,v), and the edges from v to the vertices of Oj are assigned to page q1 (resp. q2) for odd (resp. even) levels. Here the edges to v do not create conflicts with each other since they are all incident to v, and they do not create conflicts with other edges on q1 (or q2) since they are all placed immediately before v. Similarly the edges to u do not cross each other since they are all incident to u and they do not create conflicts with other edges in the same page since they follow the planar edge (u,v) assigned to the same page.

We recursively place the vertices inside each inner component during the computation for 2-level subgraphs on subsequent levels. Since we assign edges from 2-level subgraphs at odd and even levels on disjoint pages, following the argument of Lemma [\ref=lem:independent] the edges assigned to each of the 16 pages do not create conflicts.

It is NP-hard to determine whether a planar graph (which is a subclass of 1-planar graph) is sub-Hamiltonian. Hence, the minimum number of pages of a 1-planar graph cannot be computed efficiently. However, our algorithm takes only linear time, given a 1-planar embedding.

There is a linear time algorithm to construct book embedding of a general and a 3-connected 1-planar graph on 16 and 12 pages, respectively, given a 1-planar embedding.

Given the 1-planar embedding, the normal planar maximal augmentation can be obtained in linear time. The crossing edges to be removed are selected in constant time per edge. Yannakakis algorithm for planar graphs runs in linear time, and the assignment of a removed edge to a page takes constant time per edge. Since there are at most 4n - 8 edges, the algorithm runs in linear time.

If the input graph is planar and Hamiltonian, the order of the vertices from a Hamiltonian cycle induces a 2-page book embedding [\cite=bk-btg-79]. We can use this as follows.

A 1-planar graph G has a 4-page book embedding if the planar skeleton is Hamiltonian.

Let P(G) be the planar skeleton of G with Hamiltonian cycle C. For each pair (a,b) and (c,d) of crossing edges assign (a,b) to a set X1 and (c,d) to X2 arbitrarily. By slight the abuse of notation, denote with X1 (X2) the subgraphs of G induced by X1 (X2). Both [formula] and [formula] contain Hamiltonian cycle C. Using the linear order of C we can embed G1 in 2 pages and G2 in 2-pages, yielding a book embedding for G on 4-pages with duplicate edges of P(G) removed.

Conclusion

We showed that general and 3-connected 1-planar graphs have a book embedding on 16 and 12 pages, respectively, and the book embedding can be computed in linear time from a given 1-planar embedding. Our bound improves upon the bound of 39 given by Bekos et al. [\cite=BBKR15]. The extended wheel graphs XW2k for k = 4,5,6 require 4 pages; see Fig. [\ref=fig:counter]. This was shown using a program which exhaustive searches all possible vertex orders and assignments of edges to pages. The natural open problem is to close the gap between the lower and upper bounds. Specifically, are there 1-planar graphs that require even 5 pages? What is the lowest number of pages that suffices for 1-planar graphs, or 3-connected 1-planar graphs? These questions mirror the remaining big open problem for planar graphs: are there planar graphs that require 4 pages, or are all planar graphs embeddable on 3 pages?