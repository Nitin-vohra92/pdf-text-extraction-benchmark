On the Gap Between [formula] and [formula]

Introduction

Determining the smallest CNF formula for a given Boolean function f is a difficult problem that has been studied for many years. (See [\cite=twolevel] for an overview of relevant literature.) Recently, epek et al. introduced a combinatorial quantity, [formula], which lower bounds [formula], the minimum number of clauses in a CNF formula representing f [\cite=cepek]. The quantity [formula] is equal to the size of the largest set of falsepoints of f, no two of which falsify the same implicate of f.

For certain subclasses of Boolean functions, such as the monotone (i.e., positive) functions, [formula]) is equal to [formula]. However, epek et al. demonstrated that there can be a gap between [formula] and [formula]. They constructed a Boolean function f on n variables such that there is a multiplicative gap of size Θ( log n) between [formula] and [formula]. Their constructed function f is a Horn function. Their results leave open the possibility that [formula] could be a close approximation to [formula].

We show that this is not the case. We construct a Boolean function f on n variables such that there is a multiplicative gap of size 2Θ(n) between [formula] and [formula]. Note that such a gap could not be larger than 2n - 1, since [formula] for all functions f.

We also construct a Horn function f such that there is a multiplicative gap of size [formula] between [formula] and [formula]. We show that no gap larger than Θ(n) is possible.

If one expresses the gaps as a function of [formula], rather than as a function of the number of variables n, then the gap we obtain with both the constructed non-Horn and Horn functions f is [formula]. Clearly, no gap larger than [formula] is possible.

We briefly explore a natural generalization of the quantity [formula], which we call [formula], which is the largest set of falsepoints, no k of which falsify a common implicate of f. The quantity [formula] is a lower bound on CNF-size, for any k  ≥  2.

The above results concern the size of CNF formulas. Analogous results hold for DNF formulas by duality.

Preliminaries

Definitions

A Boolean function [formula] is a mapping {0,1}n  →  {0,1}. (Where it does not cause confusion, we often use the word "function" to refer to a Boolean function.) A variable xi and its negation [formula] are literals (positive and negative respectively). A clause is a disjunction ([formula]) of literals. A term is a conjunction ([formula]) of literals. A CNF (conjunctive normal form) formula is a formula of the form [formula], where each ci is a clause. A DNF (disjunctive normal form) formula is a formula of the form [formula], where each ti is a term.

A clause c containing variables from [formula] is an implicate of f if for all x∈{0,1}n, if c is falsified by x then f(x)  =  0. A term t containing variables from Xn is an implicant of function [formula] if for all x∈{0,1}n, if t is satisfied by x then f(x)  =  1.

We define the size of a CNF formula to be the number of its clauses, and the size of a DNF formula to be the number of its terms.

Given a Boolean function f, [formula] is the size of the smallest CNF formula representing f. Analogously, [formula] is the size of the smallest DNF formula representing f.

An assignment x∈{0,1}n is a falsepoint of f if f(x)  =  0, and is a truepoint of f if f(x)  =  1. We say that a clause c covers a falsepoint x of f if x falsifies c. A term t covers a truepoint x of f if x satisfies t.

A CNF formula φ representing a function f forms a cover of the falsepoints of f, in that each falsepoint of f must be covered by at least one clause of φ. Further, if x is a truepoint of f, then no clause of φ covers x. Similarly, a DNF formula φ representing a function f forms a cover of the truepoints of f, in that each truepoint of f must be covered by at least one term of φ. Further, if x is a falsepoint of f, then no term of φ covers x.

Given two assignments x,y∈{0,1}n, we write x  ≤  y if [formula]. An assignment r separates two assignments p and q if [formula], pi  =  ri or qi  =  ri.

A partial function f maps {0,1}n to [formula], where [formula] indicates that the value of f is not defined on the assignment. A Boolean formula φ is consistent with a partial function f if φ(a)  =  f(a) for all a∈{0,1}n where [formula]. If f is a partial Boolean function, then [formula] and [formula] are the size of the smallest CNF and DNF formulas consistent with the f, respectively.

A Boolean function [formula] is monotone if for all x,y∈{0,1}n, if x  ≤  y then f(x)  ≤  f(y). A Boolean function is anti-monotone if for all x,y∈{0,1}n, if x  ≥  y then f(x)  ≤  f(y).

A DNF or CNF formula is monotone if it contains no negations; it is anti-monotone if all variables in it are negated. A CNF formula is a Horn-CNF if each clause contains at most one variable without a negation. If each clause contains exactly one variable without a negation it is a pure Horn-CNF. A Horn function is a Boolean function that can be represented by a Horn-CNF. It is a pure Horn function if it can be represented by a pure Horn-CNF. Horn functions are a generalization of anti-monotone functions, and have applications in artficial intelligence [\cite=norvig].

We say that two falsepoints, x and y, of a function f are independent if no implicate of f covers both x and y. Similarly, we say that two truepoints x and y of a function f are independent if no implicant of f covers both x and y. We say that a set S of falsepoints (truepoints) of f is independent if all pairs of falsepoints (truepoints) in S are independent.

The set covering problem is as follows: Given a ground set [formula] of elements, a set [formula] of subsets of A, and a positive integer k, does there exist S'  ⊆  S such that [formula] and |S'|  ≤  k? Each set Si∈S is said to cover the elements it contains. Thus the set covering problem asks whether A has a "cover" of size at most k.

A set covering instance is r-uniform, for some r  >  0, if all subsets Si∈S have size r.

Given an instance of the set covering problem, we say that a subset A' of ground set A is independent if no two elements of A' are contained in a common subset Si of S.

The quantity [formula]

We begin by restating the definition of [formula] in terms of independent falsepoints. We also introduce an analogous quantity for truepoints. (The notation [formula] refers to the fact that this is a dual definition.)

Let f be a Boolean function. The quantity [formula] denotes the size of the largest independent set of falsepoints of f. The quantity [formula] denotes the largest independent set of truepoints of f.

As was stated above, epek et al. introduced the quantity [formula] as a lower bound on [formula]. The fact that [formula] follows easily from the above definitions, and from the following facts: (1) if φ is a CNF formula representing f, then every falsepoint of f must be covered by some clause of φ, and (2) each clause of φ must be an implicate of f.

Let f' denote the function that is the complement of f, i.e. [formula] for all assignments a. Since, by duality, [formula] and [formula], it follows that [formula].

Consider the following decision problem, which we will call ESS: "Given a CNF formula representing a Boolean function f, and a number k, is [formula]?" Using Property 1, this problem is easily shown to be in co-NP [\cite=cepek].

We can combine the fact that ESS is in co-NP with results on the hardness of approximating CNF-minimization, to get the following preliminary result, based on a complexity-theoretic assumption.

If co-NP ≠  ΣP2, then for some γ  >  0, there exists an infinite set of Boolean functions f such that [formula], where n is the number of variables of f.

Consider the Min-CNF problem (decision version): Given a CNF formula representing a Boolean function f, and a number k, is [formula]? Umans proved that it is ΣP2-complete to approximate this problem to within a factor of nγ, for some γ  >  0, where n is the number of variables of f [\cite=Umans99]. (Approximating this problem to within some factor q means answering "yes" whenever [formula], and answering "no" whenever [formula]. If [formula], either answer is acceptable.)

Suppose [formula] for all Boolean functions f. Then one can approximate Min-CNF to within a factor of nγ in co-NP by simply using the co-NP algorithm for ESS to determine whether [formula]. Even if [formula] for a finite set S of functions, one can still approximate Min-CNF to within a factor of nγ in co-NP, by simply handling the finite number of functions in S explicitly as special cases. Since approximating Min-CNF to within this factor is ΣP2-complete, ΣP2  ⊆   co-NP. By definition, co-NP  ⊆  ΣP2, so ΣP2  =   co-NP.

The non-approximability result of Umans for Min-CNF, used in the above proof, is expressed in terms of the number of variables n of the function. Umans also showed [\cite=Umans98] that it is ΣP2 complete to approximate Min-CNF to within a factor of mγ, for some γ  ≥  0, where [formula]. Thus we can also prove that, if NP ≠   ΣP2, then for some γ  >  0, there is an infinite set of functions f such that [formula].

The assumption that ΣP2  ≠   co-NP is not unreasonable, so we have grounds to believe that there is an infinite set of functions for which the gap between [formula] and [formula] is greater than nγ (or [formula]) for some γ. Below, we will explicitly construct such sets with larger gaps than that of Proposition 1, and with no complexity theoretic assumptions.

We can also prove a proposition similar to Proposition 1 for Horn functions, using a different complexity theoretic assumption. (Since the statement of the proposition includes a complexity class parameterized by the standard input-size parameter n, we use N instead of n to denote the number of inputs to a Boolean function.)

If NP [formula] co-NTIME(npolylog(n)), then for some ε such that 0  <  ε  <  1, there exists an infinite set of Horn functions f such that [formula], where N is the number of input variables of f.

Consider the following Min-Horn-CNF problem (decision version): Given a Horn-CNF φ representing a Horn function f, and an integer k  ≥  0, is [formula]? Bhattacharya et al. [\cite=Bhattacharya_onapproximate] showed that there exists a deterministic, many-one reduction (i.e. a Karp reduction), running in time O(npolylog(n)) (where n is the size of the input), from an NP-complete problem to the problem of approximating Min-Horn-CNF to within a factor of 2log 1 - εN, where N is the number of input variables of f .

Suppose that [formula] is at most 2log 1 - εN for all Boolean functions f. It is well known that given a Horn-CNF f, the size of the smallest (functionally) equivalent Horn-CNF is precisely [formula]. Thus given a Horn-CNF φ on N variables, and a number k, if there does not exist a Horn-CNF equivalent to φ of size less than 2log 1 - εN  ×  k, this can be verified non-deterministically in polynomial time (by verifying that [formula]). Thus the complement of Min-Horn-CNF is approximable to within a factor of 2log 1 - εN, in deterministic time npolylog(n) (where n is the size in bits of the input Horn-CNF, and N is the number of variables in the input Horn-CNF). Combining this fact with the reduction of Bhattacharya et al. implies that the complement of an NP-complete problem can be solved in non-deterministic time npolylog(n). Thus NP is contained in co-NTIME(npolylog(n)). The same holds if [formula] is at most 2log 1 - εn for all but a finite set of Boolean functions f.

Constructions of functions with large gaps between [formula] and [formula]

We will begin by constructing a function f, such that [formula]. This is already a larger gap than the multiplicative gap of log (n) achieved by the construction of epek et al. [\cite=cepek], and the gap of nγ in Proposition 1. We describe the construction of f, prove bounds on [formula] and [formula], and then prove that the ratio [formula] = Θ(n).

We will then show how to modify this construction to give a function f such that [formula], thus increasing the gap to be exponential in n.

At the end of this section, we will explore [formula], our generalization of [formula].

Constructing a function with a linear gap

There exists a function [formula] such that [formula].

We construct a function f such that [formula]. Theorem [\ref=linear] then follows immediately by duality.

Our construction relies heavily on a reduction of Gimpel from the 1960's [\cite=gimpel], which reduces a generic instance of the set covering problem to a DNF-minimization problem. (See Czort [\cite=czort] or Allender et al. [\cite=circuits] for more recent discussions of this reduction.)

Gimpel's reduction is as follows. Let [formula] be the ground set of the set covering instance, and let S be the set of subsets A from which the cover must be formed. With each element ei in A, associate a Boolean input variable xi. For each S∈S, let xS denote the assignment in {0,1}m where xi  =  0 iff ei∈S. Define the partial function [formula] as follows:

[formula]

There is a DNF formula of size at most k that is consistent with this partial function if and only if the elements ei of the set covering instance A can be covered using at most k subsets in S (cf.  [\cite=czort]).

We apply this reduction to the simple, 2-uniform, set covering instance over m elements where S consists of all subsets containing exactly two of those m elements. The smallest set cover for this instance is clearly ⌈m / 2⌉. The largest independent set of elements is only of size 1, since every pair of elements is contained in a common subset of S. Note that this gives a ratio of minimal set cover to largest independent set of Θ(m).

Applying Gimpel's reduction to this simple set covering instance, we get the following partial function [formula]:

[formula]

Since the smallest set cover for the instance has size ⌈m / 2⌉,

[formula]

Allender et al. extended the reduction of Gimpel by converting the partial function f to a total function g. The conversion is as follows:

Let t  =  m + 1 and let s be the number of [formula]'s in f(x). Let y1 and y2 be two additional Boolean variables, and let z = [formula] be a vector of t more Boolean variables. Let S  ⊆  {0,1}t be a collection of s vectors, each containing an odd number of 1's (since s  ≤  2m, such a collection exists). Let χ be the function such that χ(x)  =  0 if the parity of x is even and χ(x)  =  1 otherwise.

The total function g is defined as follows:

[formula]

Allender et al. proved that this total function g obeys the following property:

[formula]

Let ĝ be the total function obtained by setting f  =   in the above definition of g.

We can now compute [formula]. Let n be the number of input variables of [formula]. The total function ĝ is defined on n  =  2m  +  3 variables. Since [formula], we have

[formula]

where s is the number of assignments x for which (x)  =    *  .

We will upper bound [formula] by dividing the truepoints of ĝ into two disjoint sets and upper-bounding the size of a maximum independent set of truepoints in each. (Recall that two truepoints of ĝ are independent if they do not satisfy a common implicant of ĝ.)

The set of all truepoints of ĝ whose x component has the property [formula].

Let a1 be a maximum independent set of truepoints of ĝ consisting only of points in this set. Consider two truepoints p and q in this set that have the same x value. It follows that they share the same values for y1 and y2. Let t be the term containing all variables xi, and exactly one of the two yj variables, such that each xi appears without negation if it set to 1 by p and q, and with negation otherwise, and yj is set to 1 by both p and q. Clearly, t is an implicant of ĝ by definiton of ĝ, and clearly t covers both p and q. It follows that p and q are not independent.

Because any two truepoints in this set with the same x value are not independent, |a1| cannot exceed the number of different x assignments. There are s assignments such that [formula], so |a1|  ≤  s.

The set of all truepoints of ĝ whose x component has the property (x)  =  1.

Let a2 be a maximum independent set consisting only of points in this set. Consider any two truepoints p and q in this set that contain the same assignment for z. We can construct a term t of the form [formula] such that w contains exactly m - 2 xi's that are set to 1 by both p and q, and all zis that are set to 1 by p and q appear in [formula] without negation, and all other zis appear with negation. It is clear that t is an implicant of ĝ and that t covers both p and q. Once again, it follows that p and q are not independent truepoints of g.

Because any two truepoints in this set with the same z value are not independent, |a2| cannot exceed the number of different z assignments. There are s assignments to z such that z∈S, so |a2|  ≤  s.

Since a maximum independent set of truepoints of ĝ can be partitioned into an independent set of points from the first set, and an independent set of points from the second set, it immediately follows that

[formula]

Hence, the ratio between the DNF size and [formula] size is:

[formula]

Note that the above function gives a class of functions satisfying the conditions of Proposition 1, for γ  =  1.

There exists a function f such that [formula] for an ε  ≥   0.

In the previous construction, [formula] for exactly [formula] + 1 points, yielding s = Θ(n2). Hence, the DNF size is Θ(m3), making the ratio between [formula] and [formula] at least [formula]. The CNF result follows by duality.

Constructing a function with an exponential gap

There exists a function f on n variables such that [formula].

As before, we will reduce a set covering instance to a DNF-minimization problem involving a partial Boolean function f. However, here we will rely on a more general version of Gimpel's reduction, due to Allender et al., described in the following lemma.

[\cite=circuits] Let [formula] be a set of subsets of ground set [formula]. Let t  >  0 and let [formula] and [formula] be sets of vectors from {0,1}t such that for all [formula] and [formula],

[formula]

Let [formula] be the partial function such that

[formula]

Then S has a minimum cover of size k iff [formula].

(Note that the construction in the above lemma is equivalent to Gimpel's if we take t = m, V  =  {v∈{0,1}m|v contains exactly m - 1 1's }, and W  =  {xS|S∈S}, where xS denotes the assignment in {0,1}m where xi  =  0 iff ei∈S.)

As before, we use the simple 2-uniform set covering instance over m elements where S consists of all subsets of two of those elements. The next step is to construct sets V and W satisfying the properties in the above lemma for this set covering instance. To do this, we use a randomized construction of Allender et al. that generates sets V and W from an r-uniform set-covering instance, for any r  >  0. This randomized construction appears in the appendix of  [\cite=circuits], and is described in the following lemma.

Let r  >  0 and let [formula] be a set of subsets of [formula], where each Si contains exactly r elements. Let t  ≥  3r(1 +  ln (pm)). Let [formula] be a set of m vectors of length t, where each vi∈V is produced by randomly and independently setting each bit of vi to 0 with probability 1 / r. Let [formula], where each wj = the bitwise AND of all vi such that ei∈Sj. Then, the following holds with probability greater than 1/2: For all [formula] and [formula], ei∈Sj iff vi  ≥  wj.

By Lemma [\ref=random], there exist sets V and W, each consisting of vectors of length 6(1 +  ln (m2(m - 2) / 2))  =  O( log m), satisfying the conditions of Lemma [\ref=lemma:generalizeG] for our simple 2-uniform set covering instance. Let [formula] be the partial function on O( log m) variables obtained by using these V and W in the definition of f in Lemma [\ref=lemma:generalizeG],

The DNF-size of [formula] is the size of the smallest set cover, which is ⌈m / 2⌉, and the number of variables n = Θ(log m); hence the DNF size is 2Θ(n).

We can convert the partial function (x) to a total function (x) just as done in the previous section. The arguments regarding DNF-size and [formula] remain the same. Hence, the DNF-size is now [formula] and [formula] is again at most 2s.

The ratio between the DNF-size and [formula] is therefore at least 2Θ(n). Once again, the CNF result follows.

The quantity [formula]

We say that a set S of falsepoints (truepoints) of f is a "k-independent set" if no k of the falsepoints (truepoints) of f can be covered by the same implicate (implicate) of f.

We define [formula] to be the size of the largest k-independent set of falsepoints of f, and [formula] to be the size of the largest k-independent set of truepoints of f.

If S is a k-independent set of falsepoints of f, then each implicate of f can cover at most k - 1 falsepoints in S. We thus have the following lower-bound on CNF-size: [formula].

Like ess(f), this lower bound is not tight.

For any arbitrary 2  ≤  k  ≤  h(n), where h(n)  =  Θ(n), there exists a function f on n variables, such that the gap between [formula] and [formula] is at least [formula].

Consider the k-uniform set cover instance consisting of all subsets of [formula] of size k. Construct V and W randomly using the construction from the appendix of [\cite=circuits] described in Lemma [\ref=random], and define a corresponding partial function [formula], as in Lemma 1. Note that according to the definition of [formula], there can be no k vi for any k values of [formula], such that all vi ≥  wj for some [formula] The maximum size k-independent set of truepoints of [formula] consists of k - 1 truepoints.

We can convert the partial function [formula] to a total function [formula] according to the construction detailed in Section [\ref=linear]. Once again, we introduce s new truepoints such that [formula], yielding a maximum of s pairwise independent truepoints. The definiton of k-independence, however, allows k - 1 "copies" of these truepoints that differ in the assignments to z for each of the s points. Hence, the largest k-independent set of these points can contain a maximum of s(k - 1) points.

We have previously mentioned that there exist k - 1 k-independent ground elements (i.e., (x)  =  1 truepoints). Once again, when we consider the s [formula] portion of the term, where no two [formula] portions can be covered by the prime implicate, we can include a total of s(k - 1) of these truepoints. Hence, the largest independent set for points of this type is of size is of size no greater than s(k - 1). Since these two types of truepoints are independent, [formula].

The lower bound on DNF size, [formula], is, for this [formula], [formula]. The ratio between that and the actual DNF size is

[formula]

The CNF result clearly follows.

Size of the gap for Horn Functions

Because Horn-CNFs contain at most one unnegated variable per clause, they can be expressed as implications; eg. [formula] is equivalent to a  →  b. Moreover, a conjunction of several clauses that have the same antecedent can be represented as a single meta-clause, where the antecedent is the antecedent common to all the clauses and the consequent is comprised of a conjunction of all the consequents, eg. ([formula] can be represented as [formula].

Bounds on the ratio between [formula] and [formula]

Angluin, Frazier and Pitt [\cite=angluin] presented an algorithm (henceforth: the AFP algorithm) to learn Horn-CNFs, where the output is a series of meta-clauses. It can be proven [\cite=ariaslattice] [\cite=ariasgdNew] that the output of the algorithm is of minimum implication size (henceforth: [formula]) - that is, it contains the fewest number of meta-clauses needed to represent function f. Each meta-clause can be a conjunction of at most n clauses; hence, each implication is equivalent to the conjunction of at most n clauses. Therefore,

[formula]

The learning algorithm maintains a list of negative and positive examples (falsepoints and truepoints of the Horn function, respectively), containing at most [formula] examples of each.

The set of negative examples maintained by the AFP algorithm is an independent set.

The proof for this lemma relies heavily on [\cite=ariaslattice]; see there for further details.

Let us consider any two negative examples, ni and nj, maintained by the algorithm. There are two possibilities:

ni  ≤  nj or nj  ≤  ni. (These two examples are comparable points; one is below the other on the Boolean lattice.)

ni and nj are incomparable points (Neither is below the other on the lattice).

Let us consider the first type of points: Without loss of generality, assume that ni  ≤  nj. Arias et al. define a positive example [formula] for each negative example ni. This example [formula] has several unique properties; amongst them, that [formula] for all negative examples ni (Section 3 in [\cite=ariaslattice]). They further prove (Lemma 6 in [\cite=ariaslattice]) that if ni  ≤  nj, then [formula] as well. Hence, any attempt to falsify both falsepoints, ni and nj, with a common implicate of the Horn function would falsify the positive example ([formula]) that lies between them as well. Therefore, these two points are independent.

Now let us assume that ni and nj are incomparable. Any implicate that falsifies both points is composed of variables on which the two points agree. Clearly, this implicate would likewise cover a point that is the componentwise intersection of ni and nj. However, Arias et al. prove (Lemma 7 in [\cite=ariaslattice]) that [formula] is a positive point if ni and nj are incomparable. Hence, any implicate that falsifies both ni and nj would likewise falsify the truepoint [formula] that lies between them. Therefore, these two points cannot be falsified by the same implicate and they are independent.

For any Horn function f, [formula]

For any Horn function f, there exists a set of negative examples of size at most min _imp(f), and these examples are all independent. Hence, [formula]. We have already stated that [formula] is at most a factor of n times larger than the minimum CNF size for this function.

Hence, [formula].

Moreover, since Lemma [\ref=lemmaHorn] holds for general Horn functions in addition to pure Horn [\cite=ariasgdNew], this bound holds for all Horn functions.

Constructing a Horn function with a large gap between [formula] and [formula]

There exists a definite Horn function f on n variables such that [formula].

Consider the 2-uniform set covering instance over k elements consisting of all subsets of two elements. We can construct a definite Horn formula φ corresponding to this set covering according to the construction in [\cite=bookDraft], with modifications based on [\cite=Bhattacharya_onapproximate].

The formula φ will contain 3 types of variables:

Element variables: There is a variable x for each of the k elements.

Set variables: There is a variable s for each of the [formula] subsets.

Amplification variables: There are t variables [formula].

The clauses in φ fall into the following 3 groups:

Witness clauses: There is a clause sj  →  xi for each subset and for each element that the subset covers. There are 2[formula] such clauses.

Feedback clauses : There is a clause [formula] for each subset. There are [formula] such clauses.

Amplification clauses: There is a clause zh  →  sj for every [formula] and for every subset. There are [formula] such clauses.

It follows from [\cite=bookDraft] that any minimum CNF for this function must contain all witness and feedback clauses, along with tc amplification clauses, where c is the size of the smallest set cover.

This particular function f has a minimum set cover of size k / 2; hence, [formula]

We will upper bound [formula] by dividing the falsepoints of f into three disjoint sets and finding the maximum independent set for each.

The set of all falsepoints of f that contain at least one xi = 0 for [formula] and some sj = 1 for a subset sj that covers xi.

Let a1 be the largest independent set of f consisting of points in this set. These points can be covered by an implicates of the form sj  →  xi, of which there are [formula]. We will define the function f' whose falsepoints are just the Type 1 points. Since these points are covered by the sj  →  xi implicates, [formula] is no more than the number of sj  →  xi implicates. We have earlier said that [formula], hence it follows that [formula]. [formula] is precisely the size of a1; hence, a1 can contain no more than [formula] points.

The set of all falsepoints that are not in the first set, have xi  =  1 for all [formula], and at least one sj = 0 for some [formula].

Let a2 of f be the largest independent set consisting of points in this set. These points can be covered by implicates of the form [formula]. There are [formula] such implicates. Hence, by the same argument as above, a2 can contain no more than [formula] points.

The set of all falsepoints that are not in the first two sets, and therefore have zh = 1 for some [formula], xi = 0 for some [formula], and yj  =  0 for all subsets yj covering xi.

Let a3 be the largest independent set of f consisting of points in this set. Let us fix h  =  1. Consider a falsepoint p in this set where xi  =  0 for at least one [formula] If p contained a yj  =  1 such that the subset yj covers xi, that point would be a point in the first set. Hence, the only points of this form in this set have yj  =  0 for all k - 1 subsets yj that cover xi.

Now consider another falsepoint q in this set, where xa  =  0 for at least one [formula]. Once again, the only points in this set must set yb  =  0 for all k  -  1 subsets yb that cover xa.

Because the set covering problem included a set for each pair of xi points, there exists some yj that covers both xi and xa. By the previous argument, that yj is set to 0 in all assignments that set xi or xa = 0. For a fixed k, all of these points can be covered by the implicate zk  →  yj. Hence, points p and q are not independent.

In fact, any two falsepoints chosen that are not in the first set and contain zh  =  1 for the same h and at least one xi  =  0 are not independent. Because there are t values of h, a3 therefore has size t.

The largest independent set for all falsepoints cannot exceed the sum of the independent sets for these three disjoint sets, hence

[formula]

The gap between [formula] and [formula] =

[formula]

Let us set [formula]. The difference is now:

[formula]

We have k element variables, [formula] set variables, and [formula] amplification variables, yielding n  =  Θ(k2) variables in total. The difference between [formula] and [formula] is therefore [formula].

We earlier posited that if Σ2p  ≠   co-NP, there exists an infinite set of functions for which [formula] for some γ  >  0. We can now prove a stronger theorem:

There exists an infinite set of Horn functions f for which [formula].

See construction above. Because [formula], [formula]

Acknowledgements

This work was partially supported by the US Department of Education GAANN grant P200A090157, and by NSF Grant CCF-0917153.