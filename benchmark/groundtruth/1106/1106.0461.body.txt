Random hyperplane search trees in high dimensions

School of Computer Science, McGill University, Montreal, Canada H3A 2A7 Department of Physics, University of Oxford, Clarendon Laboratory, Parks Road, Oxford, UK OX1 3PU

Introduction

Point sets in [formula] can be partitioned recursively by a number of possible trees. The early, and still most popular, choices are the k-d tree and the quadtree. The k-d tree takes a point from the set and partitions the space into two sets with a hyperplane containing the point that is perpendicular to one of the axes. In a quadtree, the split is into 2d quadrants obtained by shifting the origin to the point in question. A lot of ink has been spilled on the analysis of the shapes of the trees for random point sets--for a summary and mini-survey, see Devroye [\cite=devroye99].

In this paper, we focus on deterministic point sets, outside the control of the user, and random partitions that are built on them. For example, in either of the two trees mentioned above, one could choose a splitting point uniformly at random, and make independent choices recursively on the subsets. We assume throughout that points are in general position (no three on a line, no four on a plane, and so forth). In both examples, if the set of data points lies on the moment curve [formula], then the tree thus obtained is statistically equivalent to a random binary search tree.

Analysis of random tree data structures typically focusses on two functions that quantify the level of balance: the depth (specifically, the mean point depth) and the height (, the maximum point depth). These values are of particular practical importance--when searching for point in the tree, they correspond respectively to the average-case and worst-case query times. For a perfectly balanced binary search tree, using D*n and H*n to denote the depth and the height, we have

[formula]

which is the best we can hope for when dealing with binary trees.

A random k-d tree in any dimension has the same shape as a random binary search tree--notably, the distribution does not depend on the structure of the point set, only its size. We use Hn and Dn to denote the height and depth of a tree storing n points. It is known that [formula] in probability [\cite=lynch65] [\cite=knuth73] [\cite=devroye88]. The limit law for Dn was derived by Devroye [\cite=devroye88]: [formula]. Robson [\cite=robson79], Pittel [\cite=pittel84], and Devroye [\cite=devroye86] [\cite=devroye87] showed that [formula] in probability. See Mahmoud [\cite=mahmoud92] for more background.

Random hyperplane search trees

For a given set S of n points in general position in [formula], a random hyperplane search tree is constructed as follows. If n  ≥  d, it selects at the root level d points uniformly at random without replacement from the n data points, and considers the hyperplane through these points, , their affine hull. These d pivot points are associated with the root node and remain there. The hyperplane splits the remaining n - d points into two sets that are handled recursively and independently. If n  <  d, no splitting is applied, and all n points are associated with the root, which becomes a leaf. This construction guarantees that each internal node holds d data points and each leaf node holds between 0 and d - 1 data points. See Figure [\ref=fig:hst] for an example.

A key feature of hyperplane search trees is that they are constructed independently of the axes and are therefore robust to affine transformations of the underlying point set. If the set of points contained by a k-d tree undergoes a rotation, the k-d tree would have to be reconstructed, however this is not the case for hyperplane search trees.

Applications

Hyperplane search trees have been used since the 1970s in many applications of statistics. For example, Mizoguchi et al. [\cite=mizoguchi77] highlighted their use in pattern recognition and You and Fu [\cite=you76] considered their use as tree classifiers. Tree-based decisions in pattern recognition are popular because they take small computational efforts in terms of n. This is especially crucial when decisions must be made on-line, in real-time. Not only does the logarithmic behavior in n matter, but also the asymptotic constants. For an introduction to tree classification, see chapter 20 of Devroye, Györfi and Lugosi [\cite=devroye96]. In computational geometry, trees based upon partitions of space by means of hyperplanes are ubiquitous. See for example the survey of Edelsbrunner and Van Leeuwen [\cite=edelsbrunner83], or the work of Haussler and Welzl [\cite=haussler87] on simplex range queries. For more examples and references, see section 2 of our previous paper [\cite=devroye09].

Results

Define [formula]. For a set S∈Sn,d we use H(S) and D(S) to denote the height and mean data point depth of a random hyperplane search tree built on S. H(S) and D(S) are random variables. By a trivial coupling argument we have that H(S) stochastically dominates D(S), , [formula] for any value of t. In order to more cleanly express bounds on H(S) and D(S), we define

[formula]

The phenomenon that we wish to investigate is that uniformly over all sets S∈Sn,d, the behavior of H(S) and D(S) is nearly optimal when d is large. It is already known [\cite=devroye09] that [formula] and that CH(d)  <  CH(1) for d  ≥  3, thus showing that hyperplane search trees outperform random binary search trees or k-d trees for all dimensions, with the improvement being strict when d  ≥  3. The present note makes this more precise, and shows that in fact, lim d  →    ∞CH(d)  =  1. Thus, by pushing up d, we can ensure almost perfectly balanced trees almost all the time, as we have the trivial lower bound H(S)  ≥   log 2n. We also derive expressions and bounds on CH(d) and CD(d) as we proceed.

It is natural to go beyond this result and ask how quickly random hyperplane search trees become perfectly balanced as d increases. We find that the constants corresponding to height and average depth decay at different rates. The main contribution of this paper is proving asymptotically optimal bounds for these rates, stated in the following two theorems:

[formula].

This bound is asymptotically optimal since there exists a function [formula] such that

[formula]

[formula].

This bound is asymptotically optimal since there exists a function [formula] such that

[formula]

Outline

In Section [\ref=sec:momentcurve] we examine random hyperplane search trees built on moment curve point sets. These point sets are conjectured to yield the most unbalanced random hyperplane splits. We discuss their connection with median-of-(2t + 1) trees and give simple, closed-form asymptotic lower bounds for the constants governing the height and depth of these trees. These provide the tightness parts of Theorems [\ref=thm:height] and [\ref=thm:depth].

In Section [\ref=sec:auxiliary], we propose several simple lemmas that are good enough to provide tight asymptotics for the height. In Section [\ref=sec:height] we consider the height of dominated trees and prove Theorem [\ref=thm:height] using our simple lemmas from Section [\ref=sec:auxiliary].

In Section [\ref=sec:dominated] we introduce two lemmas providing simple and powerful bounds for the analysis of random split trees. The first lemma bounds the logarithmic moment of a class of random variables that often arise in the analysis of random split trees. The second lemma bounds the depth of a random split tree using a dominating split variable. We apply these lemmas to obtain an almost-tight depth bound using our simple geometric lemmas from the previous section.

Finally, in Section [\ref=sec:kfacets] we introduce a stronger balance lemma proved by Wagner [\cite=wagner06] and restate it in the language of this paper. Using this stronger balance lemma, we prove an asymptotically tight depth bound.

Moment curve point sets and median-of-(2t + 1) trees

The tightness parts of Theorems [\ref=thm:height] and [\ref=thm:depth] can be shown for the moment curve data [formula] where

[formula]

The points on the moment curve are parametrically ordered, and thus we can order them by first coordinate and refer to the points by their index between 1 and n.

Analysis of random hyperplane splits on such point sets is quite clean. Choose d integers uniformly at random. This yields d + 1 (possibly empty) intervals into which the other points fall. Number the intervals. One side of the hyperplane corresponds to all odd-numbered intervals, and the other side to the even-numbered ones. If the intervals catch [formula] points (with sum n - d, of course), then one subtree of the root has size [formula] data points, and the other one [formula] data points. A statistically equivalent description yielding the same interval sizes uses n i.i.d. uniform

[formula]

, which we call [formula]. Then "throw" the remaining n - d points into the intervals. The cardinalities are distributed as [formula], and are multinomial [formula]. The size of the odd side of the hyperplane thus is distributed as a sum of multinomial components--it is binomial [formula]. It is well-known that uniform spacings are identically distributed and that their distribution is permutation-invariant (see, e.g., Pyke, 1965). Thus, the odd side of the hyperplane is of size distributed as a binomial [formula] if d is odd and as a binomial [formula] if d is even. But [formula] is distributed as a beta (k,d + 1 - k) random variable. Thus, the root split for the moment curve data yields a left subtree that is binomial [formula] when d is odd. For d even, we have with equal probability a binomial [formula] and a binomial [formula]. One can verify that this is in turn distributed as a binomial [formula]. If we wish to consider the fraction of points on one side of the hyperplane as n  →    ∞   for some fixed d, the expression is even cleaner--the limiting distribution is simply beta[formula] (see, , Devroye [\cite=devroye90m-ary] or King [\cite=king2010thesis]).

This tree is indistinguishable from the fringe-balanced, or median-of-(2t + 1) search tree which has been studied quite extensively in the data structure literature. First suggested by Bell [\cite=bell65] and Walker and Wood [\cite=walker76], it is a binary tree constructed on real-valued data. It samples 2t + 1 data points uniformly without replacement from the n data points, where t is an integer. It then chooses the middle (median) element, and partitions the remaining data points into two sets by using this median point. Assuming without loss of generality that the data points are [formula], as above, we see that the leftmost set in the split is precisely binomial [formula]. Depending upon the implementation, the 2t unused pivot points can also be reused in the partition, thus inflating the subtree sizes by t each. For first-order asymptotics, this is an irrelevant choice. If they are not reused, then the median-of-(2t + 1) tree is distributed as the hyperplane search tree for the moment curve if we take odd d  =  2t + 1. As we observed above, the moment curve hyperplane search tree for d = 2t + 2 is nearly identical, i.e., at least the beta components are of identical parameters. Thus, we will only consider odd d.

A lower bound for the depth

The depth Dn has been studied by the theory of Markov processes or urn models in a series of papers, notably by Poblete and Munro [\cite=poblete85], Aldous et al. [\cite=aldous88]. See also Gonnet and Baeza-Yates [\cite=gonnet91] and Devroye [\cite=devroye99], where a central limit theorem for Dn can be found. Poblete and Munro [\cite=poblete85] showed that

[formula]

Here we give a clean lower bound for Λ(t) that proves the second half of Theorem [\ref=thm:depth].

For all t sufficiently large,

[formula]

We know that the nth partial sum in the harmonic series is

[formula]

where [formula] is the Euler-Mascheroni constant. Thus, the limit of Dn  /   log n is

[formula]

For odd d, this is [formula], thus proving the second half of Theorem [\ref=thm:depth].

The law of large numbers for the height is due to Devroye (1993). We have

[formula]

where C(t) is the unique solution c greater than Λ(t) of the equation

[formula]

and λ(c) is defined by the implicit equation

[formula]

We have C(t)  →  1 /  log 2 as t  →    ∞  . A table of numerical values is given in Devroye (1993). For example, for the moment curve in dimensions 1 and 2, the behavior is as for random binary search trees: Dn  /   log n  →  2 in probability and [formula] in probability. In dimension 3, we have a beta(2,2) parameter in the split vector, and obtain Dn  /   log n  →  12 / 7 in probability and [formula] in probability. For d = 2, this is optimal as shown by Devroye, King and McDiarmid [\cite=devroye09]. For d = 3, the moment curve yields indeed the worst point configuration, thanks to a result of Welzl [\cite=welzl01].

To show the last part of Theorem [\ref=thm:height], we need to show that [formula] for some positive constant c and all t large enough.

For any constant [formula] and all t sufficiently large,

[formula]

We reparametrize with respect to t as follows. Define [formula] and [formula]. We plug this back into the definitions of λ and c, and note that it suffices to show that as t  →    ∞  , β tends to a positive constant. First note that

[formula]

Thus, [formula]. The second equation relating λ to c can be rewritten

[formula]

With the reparametrization, and dividing by [formula], this yields

[formula]

Assuming α remains bounded, the last term is

[formula]

Putting things together, our equation becomes

[formula]

The main term is [formula] if

[formula]

This happens if [formula], and thus [formula].

Simple balance lemmas

We need some preliminary results on polytopes. In particular, for a polytope P of [formula] with n vertices, let fk(P) denote the number of k-faces. A special place is occupied by Cn,d, the cyclic polytope in [formula] having n vertices. As a canonical example of such a polytope we can consider the convex hull of the points [formula].

McMullen's Upper Bound Theorem (McMullen, 1970; McMullen and Shephard, 1971) [\cite=mcmullen70] [\cite=mcmullen71convex] states that for all 1  ≤  k  ≤  d - 1,

[formula]

For more on this, and alternate proofs, see, , Mulmuley (1994) [\cite=mulmuley94], Ziegler (1995) [\cite=ziegler95], or Kalai (1997) [\cite=kalai97]. Exact expression are well-known for fk(Cn,d). The one that is of most interest to us is

[formula]

This counts the number of full (d - 1)-dimensional faces (, facets) of Cn,d. For example, when n = d + 2, one can readily verify these formulas:

[formula]

We also note (see, , Grünbaum (2003) [\cite=grunbaum03]) that if we are given n  =  d + 2 points in convex position and in general position, then their convex hull P is a simplicial polytope with n  =  d + 2 vertices. Such a polytope must be combinatorially equivalent to Cn,d: in particular, fk(P)  =  fk(Cn,d) for all 1  ≤  k  ≤  d - 1. The following lemma is fundamental.

Consider d + 2 points in general position in [formula]. Let H be the hyperplane through d of them, chosen uniformly at random. Let A be the event that the two remaining points are on the same side of H. Then

[formula]

If the points are in convex position as well, then by remarks from the previous section (combinatorial equivalence with the cyclic polytope Cn,d for n = d + 2), we see that

[formula]

If the points are not in convex position, then d + 1 of them form a simplex, and one point is strictly inside it. We see that [formula] now equals the probability that if we choose d points uniformly at random, we fail to pick that interior point. Thus,

[formula]

Combining cases, we note that

[formula]

Even though it is very simple, we already note that hyperplane splits in sets as small as d + 2 are roughly balanced for large d. Next, we derive an inequality for hyperplane splits for general n  >  d.

Consider n  ≥  d + 1 points in general position in [formula]. Let H be the hyperplane through d of them, chosen uniformly at random. This splits the remaining n - d points into two sets, S and S'. Let N  =  |S|ξ  +  |S'|(1 - ξ), where ξ∈{0,1} is [formula]. Then, for x  ≥  0,

[formula]

When n = d + 1, then the upper bound is more than 1 / 2 when x  ≤  (n - d) / 2. For x  >  (n - d) / 2, the left-hand-side is zero. So assume n  ≥  d + 2. Let H denote the random set of d points (instead of the hyperplane that passes through them). For [formula], let A(xi,H) denote the event that xi is at the same side of H as the origin (or any other arbitrary fixed point in general position with the others). Set Y(Xi,H)  =  1 if A(xi,H) is true and Y(Xi,H)  =   - 1 otherwise. Thus,

[formula]

Thus, [formula], and

[formula]

where W,Z are randomly drawn without replacement from [formula]. Continuing,

[formula]

Now, after first conditioning on the set [formula], which has cardinality d + 2, Lemma [\ref=lem:small_balance] gives us

[formula]

By the Chebyshev-Cantelli inequality, we have

[formula]

Plugging in the upper bound on [formula] gives the result.

It is convenient to have a simpler bound than that of Lemma [\ref=lem:balance], in which the sample size n is removed. For example, this suffices for our main result:

With notation from Lemma [\ref=lem:balance], for x  >  1 / 2 we have

[formula]

The 1 / 2 bound follows from the symmetry in the definition of N. We begin by formally replacing x in Lemma [\ref=lem:balance] by n(x - 1 / 2) + d / 2  =  (n - d)(x - 1 / 2) + dx, and noting that this is ≥  (n - d)(x - 1 / 2):

[formula]

Dominated binary trees

We consider the following general set-up. A tree with 1  ≤  n  ≤  d data points is not split and consists of a single node, the root, which "holds" all data points. if n  >  d, the root is split in some manner, resulting in left and right subtree sizes L,R, satisfying L + R  =  n - d, and (L / n,R / n) stochastically dominated by (Z,1 - Z), where Z∈[0,1] is a given random variable symmetric about 1 / 2. By stochastic domination, we mean that

[formula]

From Marshall and Olkin (1979), we recall that for any convex function ψ,

[formula]

This splitting property is recursively applied to each subtree, and given a subtree size (like L), and given the data points that are in the subtree, we require the inequality uniformly over all point sets. To save space, we say that we have a tree . Let us give two examples.

In the random binary search tree, where d = 1, we know that [formula], where U is uniform

[formula]

The hyperplane search tree in [formula]. Let the largest of the two subtrees of the root have size N. By the union bound and Lemma [\ref=lem:simplified], for x  >  1 / 2,

[formula]

Let W∈[1  /  2,1] be a random variable with distribution function given by

[formula]

That is, W is supported on [formula] and has an atom of weight 2 / (d + 1) at 1. It takes a moment to verify that

[formula]

Thus, the Z in the preceding discussion can be taken

[formula]

where σ∈{ - 1, + 1} is a random equiprobable sign. We will see a stronger domination result for hyperplane search trees further on.[formula]

Height of dominated trees and a proof of Theorem [\ref=thm:height]

We recall the notion of a tree dominated by Z, and define

[formula]

For constant γ > 0, if

[formula]

then

[formula]

Let [formula]. By domination, we know that both subtrees of the root are stochastically not larger than nZ*. By repeating this observation as we descend away from the root following any path of length t, we deduce that the size of the subtree at that node is stochastically not larger than

[formula]

where [formula] is an i.i.d. sequence distributed as Z*. Therefore, by the union bound, and the fact that we have a binary tree, using Markov's inequality, and a constant λ  >  0,

[formula]

The upper bound is not more than

[formula]

which tends to zero if

[formula]

Let us take

[formula]

where E is standard exponential and a,b  >  0. Then

[formula]

Choose λ  =  1 / (2a), and define [formula]. Then

[formula]

provided

[formula]

In particular, if [formula], then this, along with Lemma [\ref=lem:height], would imply Theorem [\ref=thm:height]. But Example [\ref=ex:hyperplane] implies that a hyperplane search tree is dominated by precisely such a Z*, with [formula] and b  =   log 8.

Logarithmic moments and depth of dominated trees

The depth of a random node in a tree dominated by Z is determined by the

[formula]

where Y is a random variable defined as follows:

[formula]

Note that since x log x is bounded on

[formula]

-valued, and σ∈{ - 1, + 1} is a random independent equiprobable sign,

[formula]

where [formula].

Note that

[formula]

where

[formula]

We check that f(0)  =  f'(0)  =  0, f''(v)  =  1 / (1 - v)2  ≥  0, so f is convex and increasing to f(1)  =   log 2. On

[formula]

f(v) ≤ ×.

[formula]

, we have f(v)  ≤   log (2)  ≤  (v / b)2 log 2. Combining this and choosing [formula], we see that

[formula]

In a random binary tree dominated by Z, having logarithmic moment μ  >  0, we have for every ε  >  0,

[formula]

Let us begin with a small observation. Let λ  >  0 be a parameter and let X  ≤  0 be a nonpositive random variable. Then

[formula]

This is best seen by noting that (eλx  -  1) / λ  ≥  x, which provides a lower bound. Since (eλX  -  1) / λ  ≤  0, we have by Fatou's lemma,

[formula]

Thus, as [formula],

[formula]

Let us show by induction on the integers t that for all λ  ≥  0, n  ≥  1,

[formula]

Assuming this for a moment, then we have with t  =  ⌈(1 / μ  +  ε) log n⌉,

[formula]

if we choose λ  >  0 small enough but fixed. This would complete the proof.

For the proof by induction, note that for t = 0, the inequality is trivial. So, we consider a general t  >  0. Then denoting by X(L) and X(R) the subsets of data points that end up in the left and right subtrees of the root, and by DL and DR the depths of random nodes (relative to their subtree roots) of data points randomly selected from X(L) and X(R), respectively, then

[formula]

The inequalities of Section [\ref=sec:auxiliary] are powerful enough to obtain a depth bound that is almost asymptotically tight. Our proof is of independent interest since it uses only Section [\ref=sec:auxiliary], the previous two lemmas, and simple textbook arguments.

Consider a hyperplane search tree for a collection of points [formula] that are in general position. For fixed d, there exists a constant C(d) such that for all ε  >  0,

[formula]

Furthermore, as d  →    ∞  ,

[formula]

Observe that in the definition of μ, we can take

[formula]

where

[formula]

By Lemma [\ref=lem:symmetric], for this Z,

[formula]

Combining Lemma [\ref=lem:domination] with this then completes the proof.

Stronger bounds on (  ≤  k)-facets and a proof of Theorem [\ref=thm:depth]

Analysis of random hyperplane splits is directly related to the problem of counting k-facets in discrete geometry. For a set of n points in general position in [formula], a subset of d points, along with an orientation, defines an oriented hyperplane with an associated positive open halfspace. If this halfspace contains exactly k of the remaining n - d points, we say that the oriented set of d points is a k-facet. Thus each subset of d points defines, for some 0  ≤  k  ≤  ⌊(n  -  d)  /  2⌋, a k-facet with one orientation and an (n - d - k)-facet with the other orientation. A (  ≤  k)-facet is simply a j-facet for some j  ≤  k. Knowing the probability mass function of N is equivalent to knowing the number of (  ≤  k)-facets for every 0  ≤  k  <  ⌊(n  -  d)  /  2⌋. For a thorough treatment of k-facets we direct the reader to Wagner's 2008 survey [\cite=wagner08].

A significant open conjecture in discrete geometry is the Spherical Generalized Upper Bound Conjecture, or sgubc. Forms of this conjecture were proposed independently by Eckhoff [\cite=eckhoff93], Linhart [\cite=linhart94], and Welzl [\cite=welzl01]. Wagner [\cite=wagner06] proposes the conjecture in full generality. Here we state a slightly weaker form of the conjecture in the language of this paper, which would be implied by sgubc.

For a set of n  ≥  d points in general position in [formula], define random variable N as the number of points on the larger side of a random hyperplane split. Define N* as the analogous random variable for the larger side of a random hyperplane split for the moment curve data in [formula]. Then, for any x  >  (n - d) / 2,

[formula]

The sgubc conjecture is trivially true for d = 1. For d = 2, it was proved by Peck [\cite=peck85] and Alon and Gyri [\cite=alon86]. Welzl [\cite=welzl01] proved Conjecture 1 for d = 3. Inequalities for the far right tail of N were obtained by Clarkson and Shor [\cite=clarkson89]. For general d  ≥  1, Wagner [\cite=wagner06] proved a relaxed form of a conjecture closely related to the sgubc that implies Lemma [\ref=lem:wagner] below.

With N and N* defined as above, for any x  >  (n - d) / 2,

[formula]

Clarkson and Shor [\cite=clarkson89] proved a somewhat similar result many years earlier, but their bound only holds for the extreme tail of the distribution, , as x approaches 1. It is therefore insufficient for our purposes. Wagner's bound, on the other hand, is valid for the entire range of x that concerns us. In order to exploit this result using the machinery of the previous section, we must first bound [formula] in an appropriate manner.

For a set of n distinct points on the moment curve in [formula], we have

[formula]

After first fixing x  ≥  1 / 2, for the sake of analysis we introduce random variables

[formula]

and ξd,x with a binomial (d,x) distribution. It is known (see Devroye [\cite=devroye90m-ary]) that [formula] for all y  ≥  0, , N* / n is stochastically dominated by max (B,1 - B). It is also known that the c.d.f.'s of B and ξd,x are duals: for x∈(0,1),

[formula]

Thus,

[formula]

concluding the proof.

Let E be a standard exponential random variable, let σ∈{ - 1, + 1} be a random equiprobable sign, and define

[formula]

Note that for 1  ≥  x  ≥  1 / 2,

[formula]

and thus the hyperplane search tree is dominated by this Z.

The logarithmic moment μ of Z is easily bounded using Lemma [\ref=lem:symmetric]. With α  =  2(1  +   log 8)2 we have

[formula]

This implies that [formula] and therefore Theorem [\ref=thm:depth] follows from Lemma [\ref=lem:domination]. Thus, the sharper estimates for domination that flow from Wagner's inequality give the optimal rate of convergence with respect to d.