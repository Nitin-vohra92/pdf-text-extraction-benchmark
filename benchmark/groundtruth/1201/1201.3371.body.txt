Numerical convergence in self-gravitating shearing sheet simulations and the stochastic nature of disc fragmentation

1DAMTP, University of Cambridge, Wilberforce Road, Cambridge CB3 0WA,

Introduction

The notion that gaseous planets may form by gravitational instability (GI) dates back to [\cite=kuiper51] and [\cite=cameron78]. Although revived by [\cite=boss97], the disc instability model suffered a blow when it was realised that very efficient cooling was needed for it to operate [\citep=gammie01]. This makes GI ineffective in planet forming regions (1 - 20 AU) of typical protoplanetary discs [\citep=rafikov05] [\citep=matzner05]. The recent discovery of planets orbiting at very large distances from their central star [\citep=kalas08] [\citep=la10], where cooling time scales are sufficiently short, has sparked new interest in the possibility of planet formation via disc instability [\citep=boley09]. For a review of gravitational instability and its applications in planet formation theory, see [\cite=durisen07].

A razor-thin self-gravitating disc is unstable to axisymmetric perturbations when [\citep=safronov60] [\citep=toomre64]:

[formula]

where [formula] is the sound speed, κ is the epicyclic frequency, G is the gravitational constant and Σ is the surface density. For Keplerian discs, κ equals the angular velocity of the disc Ω. Discs are in fact unstable to non-axisymmetric perturbations at slightly higher values of Q [\citep=papa91]. Dissipation of the resulting spiral waves provides a source of heating, which can balance radiative cooling. An equilibrium can then be set up [\citep=pac78], in which gravitational and Reynolds stresses are such that the energy losses due to cooling are compensated for by dissipation. If we parametrise the cooling time scale as

[formula]

then in equilibrium we must have that [\citep=pringle81] [\citep=gammie01]:

[formula]

where α is the usual stress parametrisation [\citep=shakura78] and γ is the ratio of specific heats. This equilibrium of gravito-turbulence can therefore lead to significant transport of angular momentum in regions of the disc where cooling is efficient and Q  ~  1.

The above parametrisation assumes angular momentum transport is local, i.e. that the spiral waves damp close to their location of excitation [\citep=cossins09] [\citep=forgan11]. In principle, there can be a non-local part in the transport [\citep=balbus99], but Smoothed Particle Hydrodynamics (SPH) simulations find that transport is essentially local for low disc masses [formula] [\citep=lodato04] [\citep=lodato05]. In the present work, we restrict ourselves to local simulations, for which the boundary conditions ensure local transport [\citep=balbus99].

Naturally, the critical value for [formula], which can be translated into a critical value of β, [formula], through equation ([\ref=eqtcool]), below which fragmentation is inevitable, has received much attention, since this defines the region in discs where planets can form by GI. [\cite=gammie01] found that [formula] for 2D local simulations with γ = 2. [\cite=rice05] interpreted the critical value for β as a maximum value of α the disc can sustain (see equation ([\ref=eqalpha])). They found [formula], which is in agreement with the [formula] found by [\cite=gammie01]. Note that this implies that [formula] depends on γ.

The simple parametrisation of the cooling time scale in terms of the local dynamical time scale is of course an oversimplification. There have been several attempts to improve on the simple cooling law of equation ([\ref=eqtcool]). [\cite=nelson00] discuss an implementation of photospheric cooling, while the simulations of [\cite=boss01] and [\cite=boley06] include full radiative transfer in their global models. [\cite=johnson03] pointed out that care has to be taken in applying the simple cooling criterion [formula] to discs with realistic cooling. The development of non-linear structures in the disc can cause the cooling time scale to change significantly from that of the initial state. More recently, [\cite=kratter11] and [\cite=rice11] studied the effect of irradiation by the central star on disc fragmentation. It is generally agreed that for these more complicated models, similar to the case of a simple cooling law, fast cooling is needed to trigger fragmentation.

Recently, numerical convergence of the critical cooling time scale was questioned in [\cite=meru11], who found fragmentation at much higher values of β than previously found at lower resolution. It was pointed out in [\cite=conv] that this behaviour can at least partly be explained by the effect of starting from smooth initial conditions. In global simulations with constant β, where the cooling time scale therefore depends on radius through Ω in equation ([\ref=eqtcool]), the inner parts of the disc get turbulent before the outer parts. The edge between the turbulent and non-turbulent region of the disc can trigger fragmentation at longer cooling times. In local simulations, both β and [formula] are constant, and therefore no edges appear. However, even in this case one has to worry about initial conditions: if the time scale to set up gravito-turbulence is longer than the cooling time scale, the disc will quickly cool down to Q  <  1, which triggers the strong linear instability, possibly leading again to artificial fragmentation.

The influence of artificial viscosity on fragmentation in SPH simulations was discussed in [\cite=lodato11], who suggested that artificial heating could play a major role in fragmentation even if it constitutes only 5% of the total heating. [\cite=pickett07] showed that in locally isothermal, grid-based three-dimensional simulations, artificial viscosity affects the survival of clumps. It is clear that disc fragmentation is a difficult problem to handle numerically, and therefore it makes sense to go back to the simplest possible set-up in which fragmentation can be studied, namely, the two-dimensional shearing sheet.

Numerical convergence in local simulations with respect to [formula] has not been thoroughly discussed so far. [\cite=gammie01] showed convergence with respect to the value of α measured in the simulations, but it remains to be seen if the fragmentation criterion is independent of numerical resolution. This is the subject of the present work. The paper is organised as follows: in Sect. [\ref=secEq], we present the basic equations in the framework of the shearing sheet, and outline the numerical method used to solve these equations in Sect. [\ref=secNum]. We discuss the performance of the numerical method on two test problems in Sect. [\ref=secTest]. In Sect. [\ref=secInit], we discuss the initial conditions used, and present the results in Sect. [\ref=secRes]. We discuss the results in Sect. [\ref=secDisc] and conclude in Sect. [\ref=secCon].

Basic equations

Following [\cite=gammie01], we use the shearing sheet approximation [\citep=gold65], in which we follow a patch of the disc centred at cylindrical coordinates (R,φ) = (R0,φ0  +  Ωt), where Ω is the angular velocity at R = R0. On this patch, we define a Cartesian coordinate frame defined by x = R - R0 and y = R0(φ  -  φ0  -  Ωt), and expand the equations of motion to first order in |x| / R0. This leads to a linear shear in the patch. The basic equations then are the continuity equation:

[formula]

with Σ the surface density and [formula] the 2D velocity vector, Euler's equation:

[formula]

where p is the 2D pressure, q is the shear parameter (q = 3 / 2 in a Keplerian disc), Ω is the angular velocity of the coordinate frame, and Φ is the self-gravity potential. Finally, we have the equation for internal energy density:

[formula]

where the last term represents our simple cooling law. We will assume a perfect gas throughout so that p = (γ - 1)ε.

The self-gravity potential of a three-dimensional density distribution ρ can be found from

[formula]

Taking ρ  =  Σ(x,y)δ(z - δ), we get

[formula]

from which we see that Φ(z = 0) gives the potential due to a surface density Σ, but smoothed over a length δ. Such a potential would arise when integrating the three-dimensional equations in the vertical direction over the thickness of the disc.

For a surface density that is periodic in all directions and for a single Fourier component [formula], the above equation has the solution

[formula]

The smoothing affects Fourier components on scales smaller than δ. Note that both [\cite=gammie01] and [\cite=rice11] use δ = 0, allowing for small scales in the potential (up to the grid scale).

We assume a background state that has constant surface density Σ0 and sound speed [formula]. This defines both a Q-value for the patch (equation ([\ref=eqQ])) and an approximate measure of the disc thickness [formula]. Note that in the presence of self-gravity, H is no longer exactly the pressure scale height.

It is convenient to split-off the Keplerian part of the velocity and work with the perturbed velocity [formula]:

[formula]

[formula]

[formula]

Expressing these in conservation form, defining momenta m = Σvx and n = Σ(vy + qΩx), we get:

[formula]

[formula]

[formula]

[formula]

where e = (m2 + n2) / 2Σ  +  ε is the total energy density associated with the velocity perturbations. Note that we have removed the contribution from the shear from the total energy. Together with taking no background gradients, this ensures that all quantities Σ, m, n, p, Φ and e are shear-periodic. Splitting off the background shear comes at the expense of an extra source term in the energy equation, which represents the work done by Reynolds stress due to the background shear [\citep=stone10].

Numerical method

Since we are dealing with numerical convergence, we go into some detail explaining the numerical method used. We use operator splitting to solve the different parts of equations ([\ref=eqcont]) - ([\ref=eqenergy]). Since we are interested in a balance between cooling and shock heating, it makes sense to use a Riemann solver to deal with the hydrodynamics. Throughout, we will use a uniform Cartesian grid covering the shearing sheet of size Lx  ×  Ly, with grid spacings Δx and Δy.

Time step

For stability, the time step is limited by the Courant-Friedrichs-Lewy (CFL) condition [\citep=courant]:

[formula]

where u = m / Σ, v = n / Σ, and the minimum is taken over all grid cells and C0 is the Courant number. We have used C0 = 0.4 throughout. Note that it is the perturbed velocity that enters the time step calculation. Because the large background shear velocity has been split off, much larger time steps are possible [\citep=masset00a]. In low resolution studies, care must be taken that the time step does not become so large that two neighbouring rows are sheared apart [\citep=masset00b]. This is never an issue for the resolutions adopted in this paper.

Orbital advection

Given a time step Δt, the most straightforward integration step involves just the first two terms of equations ([\ref=eqcont]) - ([\ref=eqenergy]), which is linear advection at the background Keplerian shear [\citep=masset00a] [\citep=masset00b]. In the following, we adopt the usual convention that Xni,j denotes quantity X evaluated at time index n and space indices i (in the x direction) and j (in the y direction). For each row at xi, we therefore need to shift the solution by δy  =  qΩxiΔt. This can be achieved for quantity X by first shifting the solution by an integer number of grid cells N, where N is the nearest integer to δy / Δy. The rest of the shift δy - NΔy can be done to second order accuracy by standard methods [\citep=leveque]:

[formula]

where a = δy / Δy  -  N, σ denotes a limited slope, and u = j - a / |a| is the upwind direction. The second term on the right-hand side gives a first-order update, while the third term provides second-order corrections. Note that since N is the nearest integer to δy / Δy, we always have that |a|  <  1 / 2, so that the above scheme is stable for any value of Δt. For the slope limiter, we use the same form as used in the Riemann solver (superbee, see Sect. [\ref=secRoe]).

[\cite=stone10] include the extra energy source term (first term on the right-hand side in equation ([\ref=eqenergy])) in the orbital advection step. We found this can occasionally lead to negative pressures, and that stability is improved by instead integrating this source term during the x integration (see below). Furthermore, it proved numerically advantageous to shift the pressure according to equation ([\ref=eqshift]) rather than the total energy, again to avoid unphysical states when e is dominated by kinetic energy.

Cooling

It is numerically convenient to split off the non-geometrical source terms and integrate them separately [\citep=eulderink95]. In our case, this involves only the cooling source term, so in this step we solve

[formula]

or, since all other state variables (Σ, m and n) are constant during this step:

[formula]

For the cases we are interested in, Δt  ≪  β  /  Ω, and we have found that a first order integration of equation ([\ref=eqpcool]) gave good enough results.

Gravitational potential

To calculate the gravitational potential Φ, we basically follow [\cite=gammie01]. We first shift back the density in y to the time it was last periodic (t = tp). For this, we use the same algorithm as used for orbital advection. The resulting surface density is completely periodic in x and y, and the potential can then be found from

[formula]

where [formula] are the Fourier components of the shifted Σ and [formula]. This calculation can be done most effectively by using the Fast Fourier Transform (FFT). First, the Fourier components of the surface density are calculated using the FFT, the result of which is divided by [formula]. An inverse FFT then gives us Φ. This potential is then shifted forward in y to the present time, after which the forces are obtained by taking finite differences. Even when using δ = 0, the use of finite differences naturally introduces a smoothing length comparable to the grid scale for the gravitational force.

Integrating in the x direction

Taking only terms involving derivatives with respect to t and x from equations ([\ref=eqcont]) - ([\ref=eqenergy]), together with the appropriate geometrical source terms [\citep=eulderink95], we get:

[formula]

[formula]

[formula]

[formula]

Note that all source terms in the energy equation are due to the kinetic part of the total energy: the thermal energy does not change directly due to work done by self-gravity or the Reynolds stress due to the background shear (see also equation ([\ref=eqeint])). Note also that this would not hold if we had integrated the energy source term associated with the background shear during the orbital advection step as in [\cite=stone10].

Roe solver

Ignoring the source terms for the moment (we come back to these in section [\ref=secSource] below), the left-hand sides of the above equations have exactly the structure of ordinary Cartesian hydrodynamics, even though we are working with fluctuations on top of the background shear. Therefore, we can use standard techniques to deal with these. As mentioned above, since we are interested in shock heating, it makes sense to use a Riemann solver. This is advantageous not only when dealing with shocks, but for waves in general, because of the use of a characteristic decomposition of fluctuating quantities.

The above equations (still ignoring source terms) can be written concisely as [formula], where [formula] and [formula]. Recalling that u = m / Σ, the Jacobian matrix [formula] has eigenvalues [formula], [formula] and u, and eigenvectors

[formula]

where v = n / Σ and

[formula]

A vector Δ = (ΔΣ,Δm,Δn,Δe)T can be projected onto the eigenvectors of A using the coefficients

[formula]

A linear hyperbolic system of the form [formula] can be solved by projecting the state difference between neighbouring grid cells onto the eigenvectors of A, or, in other words, decomposing the state difference into characteristic waves:

[formula]

where we have omitted the subscript j for clarity. The state at the cell interface is found by subtracting all right-going waves from [formula]:

[formula]

where λk is the kth eigenvalue of A. The interface flux [formula]:

[formula]

Alternatively, the interface state can be found by taking into account all left-going waves from [formula]:

[formula]

from which we can again obtain an interface flux

[formula]

Combining both expressions for [formula], we get

[formula]

A first-order state update is then given by

[formula]

Equations ([\ref=eqcont2])-([\ref=eqenergy2]) are in fact non-linear. However, [\cite=roe81] introduced a suitable linearisation, in which the matrix A is replaced by a matrix that is averaged over two neighbouring grid cells. By demanding that the resulting solution should be exact if the two cells were connected by a single shock wave, [\cite=roe81] found that the eigenvectors ([\ref=eqe1])-([\ref=eqe4]) and projection coefficients ([\ref=eqa1])-([\ref=eqa4]) should be evaluated at the so-called Roe-averaged state

[formula]

and an average sound speed

[formula]

We can then use the flux function ([\ref=eqFlux]) to update the state using ([\ref=eqUpdate]).

One can obtain a method that is second-order accurate in both space and time by using modified projection coefficients [\citep=eulderink95] [\citep=leveque]

[formula]

However, near discontinuities any method that is more than first-order accurate will introduce unphysical oscillations [\citep=godunov]. It is therefore necessary to introduce a flux limiter φ:

[formula]

where rk  =  ak  /  aku is a parameter comparing ak to the value of ak in the upwind direction. In smooth flow, we expect rk  ≈  1 and we obtain a second-order method if φ(1) = 1. The functional form of φ is chosen so that no oscillations are introduced by the term proportional to φ, which can be made mathematically precise using the concept of Total Variation (TV) [\citep=leveque]. Any chosen limiter function must by TV Diminishing (TVD) in order for it not to introduce oscillations near shocks. A fairly general class of TVD limiters can we written as

[formula]

which is TVD for 1  ≤  s  ≤  2. The case s = 1 corresponds to the minmod limiter, which is the most diffusive choice, while s = 2 corresponds to the superbee limiter, which in general gives the sharpest shocks. Because of the use of a flux limiter, no explicit artificial viscosity is needed to stabilise the numerical scheme. This however comes at the price of giving up second-order accuracy in non-smooth regions of the flow. In all simulations presented, we have used the superbee flux limiter.

Source terms

The system [formula] can be solved by combining the Riemann solver solution to [formula] with either a solution to [formula] or [formula]. The latter choice, called stationary extrapolation [\citep=eulderink95], is the preferred choice when a balance between source terms and flux gradients is expected to arise in the solution. This is the case for example in global simulations of Keplerian discs [\citep=rodeo], where in the radial direction there exists a balance between gravity, the centrifugal force and pressure. In the present case, we are dealing directly with perturbations. It is then more advantageous to use [formula].

In particular, it is possible to deal with epicyclic oscillations in a way as to conserve the energy associated with epicyclic motion to round-off error [\citep=gardiner05] [\citep=gressel07] [\citep=stone10]. Recall that we are solving

[formula]

where Sx =  - Σ∂Φ  /  ∂x is the source term due to self-gravity, together with dΣ / dt  =  dp / dt = 0. The energy associated with epicyclic motions can be conserved by integrating these equations using a Crank-Nicholson scheme [\citep=stone10]:

[formula]

where x̄  =  (xn + 1 + xn) / 2 is a time average, and

[formula]

A full time step

A complete integration step for the x direction then consists of the following steps:

Prediction: evolve the momenta under influence of the source terms using equations ([\ref=eqSx]) and ([\ref=eqSy]) for half a time step. A simple Euler integration is sufficient in this step.

Riemann solver: use the output of the previous step to calculate a state update [formula] for a full time step.

Source integration: use equations ([\ref=eqCNx]) and ([\ref=eqCNy]) calculate the source update to the state [formula], keeping Σ and p constant. For the state variables on the right-hand side we use [formula]. Note that we need Sx for both Σn and Σn + 1, so that we need to recalculate the gravitational potential after the previous step.

Update the state according to [formula].

Integrating in the y direction

For the y-direction, we proceed in a similar way. The governing equations in terms of m and n read:

[formula]

[formula]

[formula]

[formula]

Riemann solver

The left-hand sides of above equations have the same structure as their x-equivalents, which leads to similar expressions for the eigenvectors and projection coefficients:

[formula]

and

[formula]

Again, using Roe-averaging and flux-limiting, these formulae can be used to construct a second-order correct update for the state vector.

Source term integration

There are no epicyclic oscillations when considering the y-direction only, and we can therefore adopt a simple integration scheme

[formula]

where Sy  =    -  Σ∂Φ  /  ∂y, together with dΣ / dt  =  dm / dt = dp / dt = 0. Alternatively, stationary extrapolation could be used for this step. The complete integration step is equivalent to that in the x-direction (see section [\ref=secFullTimeStep]).

Backup fluxes

We expect strong density and pressure contrasts to arise in the simulations, especially in cases that fragmentation will happen. These conditions provide a challenge for numerical methods, and it is important to assess where the method could fail. Since Riemann solvers require the use of the total energy, they are more likely to fail (i.e. predict negative pressures) when [formula] [\citep=einfeldt91].

The maximum possible time step restricted by the CFL condition is [formula]. Provided that H is properly resolved (as it should be), we have that Ωt  ≪  1. For β  ≥  1, we therefore expect the simple Euler integration of the cooling not to give unphysical states.

The source term integrations during the x and y integration steps all involve dΣ / dt  =  dp / dt = 0. This means that the states fed into the Riemann solver by the prediction step (see section [\ref=secFullTimeStep]) are all physical (i.e. Σ  >  0 and p > 0). The only place where the scheme can break down is therefore the Riemann solver itself giving negative pressures or surface densities. This can for example happen when the Riemann problem between two cells is not linearisable [\citep=einfeldt91].

A possible way of dealing with such failures is to add more diffusion by returning to the first-order fluxes locally. Although the first order Roe fluxes are readily available, they can still produce unphysical states if the Riemann problem can not be linearised. As an alternative, we use the more diffusive, Harten-Lax-van Leer (HLL) solver [\citep=hll]. This scheme is in fact positive definite [\citep=einfeldt91], which means that, given physical input states, it will never lead to negative pressures or densities. The corresponding flux function is, in the x-direction, given by

[formula]

where

[formula]

are measures of the minimum and maximum possible wave speeds encountered in the Riemann problem. Here, λk,i are the eigenvalues of the Jacobian matrix (see Sect. [\ref=secRoe]) based on the state and flux of cell i, and λ̂k are the eigenvalues based on the Roe-averaged state between cells i and i - 1. If the Roe flux is found to lead to an unphysical state, the flux is replaced by the HLL flux. Usually, this is only necessary once in every 107 updates.

Boundary conditions

Periodic boundary conditions are used in the y direction. In the x direction, the sheet is shear-periodic; for example at the inner boundary we have that

[formula]

where Lx is the size of the sheet in the x direction. The required shift in y is again performed using the same method as used for orbital advection (see Sect. [\ref=secOrb]).

Test Problems

The Riemann solvers were tested using standard one-dimensional shock tubes and two-dimensional Riemann problems. Below, we describe two test problems that are specific to the shearing sheet.

Epicyclic motion

In the absence of self-gravity and any gradients in x or y, there exist oscillating solutions to the governing equations:

[formula]

where κ2 = 2(2 - q)Ω2 is the square of the epicyclic frequency. In a Keplerian disc, with q = 3 / 2, we have that κ  =  Ω.

We take a grid of 1282, - 1 / 2  ≤  (x,y)  ≤  1 / 2, take [formula] and give the whole grid a velocity perturbation of [formula]. The resulting evolution of u is shown in Fig. [\ref=figepi]. Because of the Crank-Nicholson time integration, the amplitude remains constant up to round-off error. The phase accuracy is determined by the time step [\citep=stone10]. For the case of Fig. [\ref=figepi], ΩΔt  =  0.13, which leads to a phase error of less than 1% over the course of the simulation.

Linear shearing waves

A more challenging problem, that also tests the self-gravity solver, consists of evolving a linear shearing wave [\citep=gammie01]. Below, we first derive the governing equation, basically following [\cite=gammie96], but adapted to our notation and neglecting viscosity and magnetic fields.

Governing equation

Consider linear, adiabatic perturbations of the governing equations, so that the pressure perturbation [formula], where [formula] is the adiabatic sound speed. The continuity equation and the two momentum equations then read

[formula]

where D / Dt  =  ∂  /  ∂t - qΩx∂  /  ∂y is the convective derivative with respect to the unperturbed flow. Note that D / Dt and ∂  /  ∂y commute, but that

[formula]

Take the convective derivative of equation ([\ref=eqcontlin]):

[formula]

and insert equations ([\ref=eqmomxlin]) and ([\ref=eqmomylin]):

[formula]

The potential vorticity ξ is given by

[formula]

which can be approximated by a background value ξ0 = (2 - q)Ω  /  Σ0 and a perturbation

[formula]

For our test problem, we are interested in adiabatic perturbations, for which potential vorticity is conserved. Within the linear approximation, this means that ξ is a shearing wave with constant amplitude, or Dξ / Dt = 0. We must therefore have that

[formula]

with ξ1 a combination of shearing waves:

[formula]

We can use equation ([\ref=eqvortpert]) in equation ([\ref=eqtemp]):

[formula]

Differentiating the continuity equation with respect to y, and using equation ([\ref=eqvortpert]), we obtain an expression for v1:

[formula]

At this point, we decompose the solution into shearing waves:

[formula]

with kx(t) = kx,0 + qΩkyt. For notational convenience, we set X̂1 = X1, the exponential factor being taken as read. Note that now ξ1 is a constant. From equation ([\ref=eqv1]) we obtain

[formula]

with k2 = kx(t)2 + k2y, while equation ([\ref=eqtemp2]) reads

[formula]

Using the expression for v1 above, [formula], and Φ1  =   - 2πGΣ1 / k, we finally obtain

[formula]

This equation is equivalent to equation (15a) of [\cite=gammie96], but without viscosity and magnetic fields.

Numerical results

We consider a shearing wave in a sheet of size Lx = Ly = 1 with Σ0 = 1 / 40 and Q = 1 of initial amplitude Σ1  /  Σ0 = 0.0005 with kx =  - 4π and ky = 2π. [\cite=gammie01] considered a similar problem, but with p1 = 0 initially, so that equation ([\ref=eqlinsh]) does not apply since the initial perturbation is not adiabatic.

In Fig. [\ref=figsh_lin], we consider the case without self-gravity for different numerical resolutions. A fundamental scale to resolve is the scale height [formula]. At the lowest resolution, H is resolved by two grid cells only, which leads to strong diffusion of the wave. Since Riemann solvers actively use the sound speed, or, more general, the physical scales in the problem, to compute fluxes, not resolving the physical scale of the problem can lead to more excessive diffusion than for other numerical methods at comparable resolution. For eight grid cells per scale height (N = 128), good agreement with linear theory is obtained up to Ωt = 8.

We now turn to the case with self-gravity in Fig. [\ref=figsh_lin_sg], using δ = 0. For N = 128, the numerical result follows linear theory in a similar way as for the case without self-gravity, which also compares well with [\cite=gammie01]. Again, not resolving the physical scales of the problem leads to excessive diffusion for N = 32, apparently more so than in [\cite=gammie01]. This can be attributed to the fact that a Riemann solver actively uses the physical scale when computing the fluxes, so a penalty is paid if the necessary scales are under-resolved.

Initial conditions

Initial conditions require special attention. In order for a steady gravito-turbulent state to be set up, we have to avoid initial transients [\citep=conv]. Even though in local simulations no edges can form due to a radial dependence of the cooling time scale, it still takes a finite time for the turbulence to develop ([formula]). For cooling times smaller than or comparable to [formula], the disc will be cooled down to Q < 1 before the disc can start to balance the cooling, which can trigger fragmentation even in cases where a steady gravito-turbulent state may exist. We therefore choose to hold Q > 1 until Ωt  =  50. This is long enough for turbulence to develop and keep the disc from fragmenting artificially. After Ωt = 50, the disc is free to cool down and fragment.

We take Σ0 = 1 / 320 with Lx = Ly = 1 and Q = 1, similar to [\cite=gammie01]. This makes [formula]. The highest resolution considered by [\cite=gammie01] was Nx = Ny = 1024, resolving H by approximately 10 grid cells. This will be our standard resolution, and we go up by factors of 2 from there. To compare with [\cite=gammie01], we use δ = 0 unless otherwise specified. The initial velocity field is seeded with white subsonic noise to let the turbulence develop. Following [\cite=gammie01], we take γ = 2. We consider 16 different cooling times, varying β between 1 and 50. Each simulation is run until Ωt = 1000. Since we will find that fragmentation can be a stochastic process, we run four versions of a simulation, where we vary the phase of the initial seed noise, keeping the amplitude constant.

Results

The aim is to test for numerical convergence of the determination of the critical cooling time scale [formula]. We do this by running simulations similar to those in [\cite=gammie01], but at higher resolution and for longer time spans.

Reproducing previous results

First of all, we try to reproduce previous results at the standard resolution (Nx = Ny = 1024) and for Ωt  <  100. As is usually done, we define the disc to have fragmented when an overdensity of 100Σ0 survives for several cooling time scales [\citep=meru11] [\citep=rice11].

We calculate the total stress in the sheet in the usual way [\citep=gammie01] [\citep=rice11]. The average Reynolds stress is given by

[formula]

where [formula] denotes an average over the whole computational domain. The gravitational stress is most easily determined in the Fourier domain:

[formula]

The total stress can be parametrised using the α-prescription:

[formula]

which can then be compared to equation ([\ref=eqalpha]). We average the measured values of α over ΩΔt = 20 to get a single value for a given simulation.

In Fig. [\ref=fig_alpha_short], we show the measured values of α together with the prediction of equation ([\ref=eqalpha]). Over the range of β we consider, we find agreement to within 5%. Simulations with β < 4 were found to fragment, which is in good agreement with [\cite=gammie01], who found [formula]. Moreover, the maximum value of α the disc can sustain is [formula] (for β = 4), in good agreement with [\cite=rice05], who found [formula]. We also note that the measured rms density fluctuations agree with the results of [\cite=cossins09].

Since the physical scale of the instability, the most unstable wavelength λT  ~  H is resolved, one might argue that these results should be converged with respect to numerical resolution. Moreover, [\cite=gammie01] showed that the measured value of α is independent of resolution if N  ≥  512. We have confirmed that the results depicted in Fig. [\ref=fig_alpha_short] do not change when decreasing the resolution by a factor of 2. However, the value of α is not necessarily a good indicator of numerical convergence. Given the prescribed amount of cooling, the disc will try to generate enough heating to make up for the energy that is removed. In the present set-up, it can only do that by generating the necessary stresses. Unless the simulation is dominated by numerical viscosity, the measured value of α will always be very close to the prediction of equation ([\ref=eqalpha]); otherwise, the disc can not maintain a steady state. This, however, does not necessarily mean that the result makes sense, physically. In particular, convergence with respect to α does not imply convergence for the value of [formula].

In a similar way, resolving the physical scale of gravitational instabilities is only a necessary condition for numerical convergence. It would probably be sufficient if no other processes were going on, and if the evolution is predominantly on dynamical time scales. If very slow time scales on small scales are involved, it is likely that higher resolutions are required to capture the numerical evolution correctly. We will see below that processes happening on the cooling time scale are critical in determining whether the disc will fragment or not. It is therefore expected that for increasing β, higher resolutions are required.

Longer time spans

We now keep the resolution fixed at Nx = Ny = 1024, but integrate all simulations until [formula] (or until fragmentation occurs). In Figs. [\ref=fig_1024_b5_r3] and [\ref=fig_1024_b5_r3_t100_t400], we focus on the case of β = 5, which was found not to fragment for Ωt  <  100.

In the top panel of Fig. [\ref=fig_1024_b5_r3], the evolution of the maximum surface density in the sheet is shown. Before Ωt  =  250, [formula] stays below 50, approximately, and the measured value of α agrees with equation ([\ref=eqalpha]) (bottom panel of Fig. [\ref=fig_1024_b5_r3]). The top panel of Fig. [\ref=fig_1024_b5_r3_t100_t400] shows a snapshot of the surface density at Ωt  =  100. This looks like a very good example of steady gravito-turbulence, with density fluctuations that are consistent with those found by [\cite=cossins09].

However, after Ωt = 250, something interesting happens. Suddenly, the maximum surface density shoots up to values above 100, indicating fragmentation. The bottom panel of Fig. [\ref=fig_1024_b5_r3_t100_t400] shows a snapshot of the surface density at Ωt = 400, after the disc has fragmented. Only a single fragment was formed around Ωt  =  250, in contrast to simulations with [formula], which usually show ~  5 - 10 fragments, initially, which can subsequently merge.

The reason for this fragmentation at high values of β lies in the nature of the gravito-turbulent state. Even before true fragmentation occurs, clumps are formed and destroyed on a continuous basis. This can be appreciated from the top panel of Fig. [\ref=fig_1024_b5_r3], where the peaks in [formula] indicate a clump being destroyed. The root-mean-square density fluctuation is of order unity, while the maximum surface density reaches values of [formula] several times. One clump that does not make it to collapse can be spotted near x = 0.05 and y =  - 0.45 in the top panel of Fig. [\ref=fig_1024_b5_r3_t100_t400].

Clumps of size ~  H can survive the tidal shear if their size is less than the size of their Hill sphere. If we take the surface density within the clump to be constant for simplicity, we must have that

[formula]

where R0 is the radial distance to the central star and M* is its mass. This condition can be recast in terms of the local value of Q:

[formula]

In other words, keeping the temperature fixed, we only need an increase in surface density of a factor of 3 over the background Q0  ~  1. state to form a clump that can resist the shear. Once formed, these clumps will in general contract on a cooling time scale [\citep=kratter11]. Their survival depends mainly on if they can resist the weak shocks that sweep around in gravito-turbulence. Since shock heating is very localised, this makes fragmentation a stochastic process: there will be a large spread in clump survival times, until the first lucky clump survives long enough for collapse to proceed. It should be noted that the condition given by equation ([\ref=eqCondShear]) is not necessary if the cooling time scale is comparable to the dynamical time scale. If cooling acts on a dynamical time scale, there is no time for the clump to shear apart before it collapses.

We have observed fragmentation up to β = 7, more than twice the critical cooling time scale found by [\cite=gammie01]. The corresponding maximum value of the stress is [formula]. For larger values of β, the disc remained in a steady, gravito-turbulent state for Ωt < 1000, with values of α that agree well with equation ([\ref=eqalpha]).

Higher resolution

We find that increasing the resolution by a factor of 2 (Nx  =  Ny = 2048) leads to easier fragmentation at higher values of β. As an example, we show in Fig. [\ref=fig_1024_l_b9] four simulations at β = 9, differing only in the phase (not magnitude) of the initial noise. Two of the discs fragment, one at Ωt  ≈  500 and one at Ωt  ≈  750. The other two discs maintain a steady gravito-turbulent state for the full length of the simulation. This nicely illustrates the stochastic nature of disc fragmentation at high values of β: only in two out of four simulations does a clump survive for long enough for collapse to proceed. It is expected that if the simulations would be continued, in the end all of the four realisations should show fragmentation. Note that fragmentation now occurs for three times higher values of β than in Sect. [\ref=secPrev].

We have found clumps that can survive shear to form for all values of β we have considered (β  ≤  50). In Fig. [\ref=fig_2048_b20_b40], two examples are shown of clumps with Σ  /  Σ0  ≈  10 for β = 20 (top panel) and β = 40 (bottom panel). However, while clumps form readily in all simulations, the vast majority do not survive. In the top panel of Fig. [\ref=fig_1024_l_b9], at least 10 clumps were formed and destroyed before the first disc fragments. In discs that do not fragment, more than 20 clumps form during the time span of the simulation, but none of them collapse into bound fragments. Given this low success rate, simulations should span at least 100 cooling time scales to capture these events. This becomes impractical for very high values of β. The highest value of β for which we have found fragmentation is β = 20 (with Nx = Ny = 4096), almost 7 times higher than what was found in Sect. [\ref=secPrev].

The reason why this behaviour can not be captured at low resolution, lies in the fact that we need the clumps to survive for ΩΔt  ~  β. It is not enough just to resolve the length scale H, the numerical scheme needs to be able to maintain a coherent clump of size H over many dynamical time scales. The resolution required will depend on the details of the numerical implementation, and will increase for larger values of β. In addition, long time integrations are needed to weed through all the clumps that fail to collapse.

The need for high resolution can be appreciated further by looking at smaller domains, so that only a single transient clump is present at any time. The evolution of the maximum surface density is then linked directly to the evolution of this clump. In Fig. [\ref=fig_smallbox], we show the evolution of the maximum surface density for β = 8 in a domain that is reduced by a factor of 8 compared to the standard run (i.e. Lx = Ly = 1 / 8). Note that still H  ≪  Lx, and that N = 128 now corresponds to our standard resolution. Neither of the two simulations shows fragmentation, but transient clumps can be clearly identified. In the high-resolution run, it takes approximately Ωt = 40 for a clump to reach its maximum density, which corresponds to 5 cooling time scales. In the low resolution run, clumps do not survive this long, leading to less-pronounced surface density peaks. Therefore, clump survival appears to be linked to numerical resolution.

The frequency at which clumps appear decreases for higher values of β. While for β = 9, approximately 20 failed clumps can be identified over a time span of Ωt  =  1000, for β = 50 only ~  4 failed clumps appear. The frequency appears to be roughly proportional to 1 / β. Together with the fact that the clumps contract on a cooling time scale, this makes fragmentation very rare, but not impossible, for higher values of β.

Additional numerical effects

In this section, we discuss the influence of two more numerical parameters: the smoothing length δ and the flux limiter φ. Previous studies [\citep=gammie01] [\citep=rice11] used δ = 0, which, at high resolution, allows for variations in the potential on scales much smaller than a scale height H. If we interpret the two-dimensional approximation as resulting from vertically averaging the three-dimensional equations, we do not expect to find such small scales. If these scales are important, this calls for fully three-dimensional simulations. We have performed additional runs using [formula], where the average sound speed was calculated every time step. Note that this is a fairly large value for δ; in two-dimensional disc-planet interaction studies, the gravitational potential of the planet is usually smoothed over a distance H / 2 [\citep=baruteau08]. Moreover, the true disc thickness will be smaller than [formula] because of self-gravity. Using [formula] may therefore introduce more smoothing than necessary.

The results for β = 7 are shown in Fig. [\ref=fig_soft]. As in the case with δ = 0, fragmentation appears to be stochastic, with one out of four realisations forming a bound fragment within Ωt = 1000. This effect therefore does not rely heavily on small scales in the gravitational potential. However, no fragmentation was found for β > 10, in contrast to the simulations with δ = 0. Thus, while the overall picture is very similar, with transient clumps clearly visible in Fig. [\ref=fig_soft], the efficiency of stochastic fragmentation is reduced for [formula]. Three-dimensional simulations are necessary to see which case is appropriate.

A similar story holds for changing the flux limiter. Simulations using the diffusive minmod flux limiter, obtained by setting s = 1 in equation ([\ref=eqfluxlimiter]), still show transient clumps and stochastic fragmentation, but only up to β  =  5 for the standard resolution. This is expected: since the minmod limiter introduces more numerical diffusion, it is more difficult for transient clumps to survive long enough to collapse. It is worth pointing out that in some multi-dimensional problems, the minmod limiter appears to give more diffusion than finite difference codes [\citep=bingas].

Discussion

We have shown in the previous section that disc fragmentation is a stochastic process in the simplified system under consideration. It is likely that some of the simplifications made will affect the efficiency of disc fragmentation for longer cooling times. We discuss the three most important ones below, before we focus on possible implications.

Limitations

First of all, we have worked in two dimensions only. This means that all quantities should be thought of as being integrated over the disc scale height H. While this is straightforward for the gas density, velocities and pressure, the potential due to self-gravity poses a problem. The force due to self-gravity should be smoothed over a length comparable to the scale height. While introducing a smoothing length did not change the results in a qualitative way (see Sect. [\ref=secsmooth]), three-dimensional simulations are needed to determine whether the smoothed or the unsmoothed results are more appropriate for three-dimensional discs.

Second, the use of the simple cooling law of equation ([\ref=eqtcool]) is questionable as soon as fragments form. When the density goes up by orders of magnitude, cooling should slow down dramatically. This can be a very important effect in the present situation, where clumps are formed on a continuous basis, trying to cool down before they are destroyed. The survival of clumps strongly depends on their ability to cool, and it is likely that when cooling slows down at increasing surface density, the likelihood of survival goes down.

Finally, we have considered local models only. While this is advantageous for studying a steady gravito-turbulent state, it is impossible to say how the disc came into this state [\citep=kratter11] or what happens to any fragments that have formed. For example, it is likely that these newly-formed objects are subject to rapid radial migration [\citep=baruteau11]. Also, any interaction with global modes [\citep=lodato05] is necessarily excluded from the current study.

Implications

The most important conclusion from the results presented in Sect. [\ref=secRes] is that there is no such thing as a steady gravito-turbulent state in the simple case of β-cooling, at least not for β < 20. Even though the disc can balance the imposed cooling for many dynamical time scales (see Fig. [\ref=fig_1024_l_b9]), there is always a chance the disc will fragment at some point. This means there is no rock-solid criterion for disc fragmentation based on the cooling time scale. Fragmentation just gets less likely for higher values of β. The classical cooling criterion, which states that cooling should occur on a dynamical time scale, is in a way a condition for fragment survival as well: for β  ~  1, clumps can not be sheared apart by tidal forces (see Sect. [\ref=secLong]), ensuring essentially a 100 % survival rate.

The maximum time span we have considered is [formula]. Since the self-gravitating phase of protoplanetary discs is thought to last only for ~  105 years [\citep=laughlin94], if we take our sheet to be located at 100 AU, there is less than [formula] available before the disc is no longer self-gravitating. It has to be kept in mind that even though steady gravito-turbulence may not exist formally in the simple case of β-cooling, it is only necessary to be steady for a finite time span. There is therefore a value of β for which fragmentation becomes impractical, because it just takes too long for a rare event (the survival of a clump) to happen. It is difficult to say, for a given value of β, exactly when the disc will fragment. This will for example depend on the total area of the sheet under consideration; larger sheets have a better chance to fragment. Since the vast majority of clumps will not survive, and since they contract on a cooling time scale, it is necessary to integrate for several 100's of cooling time scales to see fragmentation.

Based on these results for discs with simplified thermodynamics, it is dangerous to model the self-gravitating phase of disc evolution using an α-model. As soon as fragmentation sets in, stresses become dominated by the fragment (see for example the bottom panel of Fig. [\ref=fig_1024_b5_r3]). The extent to which the fragment can come to dominate will depend on its final mass, which is likely not to be captured very well in the current simulations because of the simple cooling law. If cooling becomes less efficient at higher density, the growth time of the fragments will likely go up, and the impact of the fragment will not be as dramatic as depicted in Fig. [\ref=fig_1024_b5_r3]. Moreover, it is likely that the fragment will be subject to rapid orbital migration [\citep=baruteau11], leaving its place of birth and perhaps allowing the disc to resettle into a gravito-turbulent state, albeit at lower mass. However, this all depends very sensitively on the mass evolution of the fragments, which is poorly constrained at the moment [\citep=kratter10] [\citep=boley10].

Fragmentation at higher values of β does not necessarily make planet formation by GI possible in the inner regions of protoplanetary discs, since it is likely that β increases very rapidly towards the central star. The cooling time scale is proportional to [\citep=kratter10]

[formula]

where κτ is the opacity per unit mass. For an opacity law [formula], we get, using the ideal gas law:

[formula]

In a gravito-turbulent state, Q is constant, so we must have that [formula], and therefore:

[formula]

In the outer regions of protoplanetary discs, we expect a = 0 and b = 2 [\citep=bell94], which leads to [formula]. Since β is such a steep function of radius, it is very difficult to fragment at short distances, even in view of the results of this paper. However, because of possible inward migration, there is no need to fragment closer in, provided that the fragments can stay in the planetary mass regime. In principle, the mass of a fragment can even decrease if it migrates inward because of tidal stripping [\citep=boley10] [\citep=nayakshin10].

Another way of saying that there is no critical cooling time scale for fragmentation in the simple case of β-cooling studied here, is that there is no well-defined maximum stress the disc can sustain [\citep=rice05]. Formally, [formula]. In practice, however, fragmentation becomes very rare for high values of β, but in general great care has to be taken in using either [formula] or [formula]. There is no sharp boundary between discs that show fragmentation and discs that do not.

Conclusions

In this paper, we have studied the numerical convergence of the determination of the critical cooling time scale for disc fragmentation. We have seen that, in the two-dimensional local approximation with a simple cooling law, there is no sharp boundary in terms of the cooling time scale between discs that fragment and discs that do not. A 'steady', gravito-turbulent state consists of weak shocks as well as transient clumps, that will contract on a cooling time scale. If such a transient clump can survive in the turbulent background for long enough, it will collapse and form a bound fragment. Since the weak shocks affect the disc only very locally, it is possible in principle for clumps to survive for many dynamical time scales. This makes disc fragmentation a stochastic process: most of these transient structures will be destroyed, but in the end one lucky clump will make it into a fragment. Transient clumps were found for all cooling times considered, and therefore fragmentation is possible in principle for cooling times up to β = 50. However, fragmentation becomes increasingly rare for longer cooling time scales.

It is possible that the efficiency of stochastic disc fragmentation is affected by the approximations used. It remains to be seen whether similar effects can be observed in three-dimensional simulations with a more realistic cooling prescription.

Acknowledgements

I would like to thank the anonymous referee, whose constructive comments led to an improvement of the paper. SJP is supported by an STFC postdoctoral fellowship. Simulations were performed using the Darwin Supercomputer of the University of Cambridge High Performance Computing Service (http://www.hpc.cam.ac.uk), provided by Dell Inc. using Strategic Research Infrastructure Funding from the Higher Education Funding Council for England.