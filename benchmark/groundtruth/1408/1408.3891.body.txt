Keywords:

An adaptive octree finite element method for PDEs posed on surfaces

Maxim A. Olshanskii

Introduction

Partial differential equations posed on surfaces arise in mathematical models for many natural phenomena: diffusion along grain boundaries [\cite=grain2], lipid interactions in biomembranes [\cite=membrains1], and transport of surfactants on multiphase flow interfaces [\cite=GrossReuskenBook], as well as in many engineering and bioscience applications: vector field visualization [\cite=vector], textures synthesis [\cite=texture1], brain warping [\cite=imaging2], fluids in lungs [\cite=lungs] among others. Thus, recently there has been a significant increase of interest in developing and analyzing numerical methods for PDEs on surfaces.

One natural approach to solving PDEs on surfaces numerically is based on surface triangulation. In this class of methods, one typically assumes that a parametrization of a surface is given and the surface is approximated by a family of consistent regular triangulations. It is common to assume that all nodes of the triangulations lie on the surface. The analysis of a finite element method based on surface triangulations was first done in [\cite=Dziuk88]. To avoid surface triangulation and remeshing (if the surface evolves), another approach was taken in [\cite=BCOS01]: It was proposed to extend a partial differential equation from the surface to a set of positive Lebesgue measure in [formula]. The resulting PDE is then solved in one dimension higher, but can be solved on a mesh that is unaligned to the surface. A surface is allowed to be defined implicitly as a zero set of a given level set function. However, the resulting bulk elliptic or parabolic equations are degenerate, with no diffusion acting in the direction normal to the surface. Versions of the method, where only an h-narrow band around the surface is used to define a finite element method, were studied in [\cite=Alg2] [\cite=OlshSafin]. An overview of finite element methods for surface PDEs and more references can be found in the recent review paper [\cite=DE2013].

Another unfitted finite element method for equations posed on surfaces was introduced in [\cite=ORG09] [\cite=OlsR2009]. That method does not use an extension of the surface partial differential equation. It is instead based on a restriction (trace) of the outer finite element spaces to a surface. The trace finite element method does not need parametrization or fitting a mesh to the surface and avoids some well known pitfalls of PDE-extension based methods related to the bulk equation degeneracy and numerical boundary conditions. Since only those bulk elements are involved in computations which are intersected by a surface, the number of active degrees of freedom is consistent with the dimensionality of the surface problem. The trace finite element method is also very natural approach when one needs to solve a system of partial differential equations that couples bulk domain effects with interface (or surface) effects, the situation which occurs in a number of applications [\cite=Bonito] [\cite=ER2013]. Therefore, recently several authors developed the trace finite element method in various directions: In [\cite=Grande] [\cite=HLZ2013] [\cite=ORXsinum] [\cite=ORsinum2014] the method was extended and analysed for the case of evolving surfaces; Papers [\cite=BHLZ] [\cite=GOR2014] considered surface-bulk coupled problems and [\cite=ORXimanum] treated singular-perturbed surface advection-diffusion equation; An analysis of a higher order trace finite elements was given in [\cite=Reusken2014]; A posteriori estimates and adaptivity were studied in [\cite=DemlowOlsh]; Versions of the method with improved algebraic properties were introduced in [\cite=Alg1] [\cite=Alg2]. All these studies considered continuous piecewise polynomial (typically P1) bulk finite elements with respect to a regular tetrahedral subdivision of a volumetric domain or a regular triangulation in 2D case.

In the present paper, the trace finite element method is developed for octree bulk meshes. The cartesian structure and embedded hierarchy of octree grids makes mesh adaptation, reconstruction and data access fast and easy, which is not always the case for tetrahedral meshes. For these reasons, octree meshes became a common tool in image processing, the visualization of amorphous medium, free surface and multi-phase flows computations and other applications where non-trivial geometries occur, see, for example, [\cite=Losasso:04] [\cite=Meagher] [\cite=Szeliski] [\cite=Pop09] [\cite=Strain] [\cite=ViscPlast]. Thus, employing octree grids for numerical solution of PDEs on surfaces one benefits from their local adaptation properties in the case fine surface structures or solution with a singularity. Moreover, the resulting tool for solving surface PDEs is ready for coupling with many of existing octree-based methods (not restricted to finite element methods) for solving bulk problems. Some of these octree-based solvers are parts of the publicly available software, e.g., [\cite=DEAL2] [\cite=Pop03]. One intrinsic property of octree grids, however, is only the first order approximation of curved geometries. It appears that the trace finite element method is the right tool to deal with this potential shortcoming. We shall see that a surface may cut the octree mesh in an arbitrary way. The finite element method is unfitted and uses a second order surface recovery with a variant of the marching cubes algorithm [\cite=MCM]. As a formal demonstration of the method accuracy, we prove the O(h) error estimate in the H1(Γ)-norm and the O(h2) error estimate in the L2(Γ)-norm on a smooth closed surface Γ. Here h is the maximum side length among all cubes intersected by the recovered (discrete) surface. To access the local error, we introduce an error indicator based on elementwise residual and surface curvature. A grid adaptation strategy based on this indicator leads to optimal convergence of numerical solution with respect to the number of degrees of freedom.

In the paper, we consider regular Laplace-Beltrami type problems as well as singular-perturbed advection-diffusion equations on surfaces. The latter case is of interest for a number of applications such as the transport of surfactants along fluidic interfaces or a pollutant transport in fractured media. For the advection dominated problem we consider a stabilized variant of the trace finite element method as well as layer fitted meshes. The remainder of the paper is organized as follows. Section [\ref=s_setup] sets up a problem. In section [\ref=s_FEM], we introduce a finite element method. Analysis of the finite element method is presented in section [\ref=s_error]. It includes a well-posedeness result, a priori and a posteriori error estimates. Section [\ref=s_numer] collects the result of several numerical experiments. Finally, section [\ref=s_concl] contains some closing remarks.

Problem formulation

Let Ω be an open domain in [formula] and Γ be a connected C2 compact hyper-surface contained in Ω. For a sufficiently smooth function [formula] the tangential derivative on Γ is defined by

[formula]

where [formula] denotes the unit normal to Γ. Denote by [formula] the surface divergence operator and by [formula] the Laplace-Beltrami operator on Γ. The simplest elliptic PDE on Γ is the classical Laplace-Beltrami equation

[formula]

Although, [\eqref=eq:LB] is an interesting problem arising in many applications, we shall consider a slightly more general problem on Γ. To motivate it, consider [formula], a given velocity field in Ω. If the surface Γ evolves with a normal velocity of [formula] (e.g., Γ is passively advected by the velocity field [formula]), then the conservation of a scalar quantity u with a diffusive flux on Γ(t) leads to the surface PDE, see, e.g., [\cite=DE2013]:

[formula]

where [formula] denotes the advective material derivative, [formula] is the diffusion coefficient. If we assume [formula], i.e. the advection velocity is everywhere tangential to the surface, and the surface is steady in the geometric sense, then the surface advection-diffusion equation takes the form:

[formula]

Although the methodology of the paper is applied to the parabolic equations [\eqref=e:2.2], we shall present the method and analysis for the stationary problem:

[formula]

with f∈L2(Γ) and [formula]. If [formula] and c = 0, we recover the classical Laplace-Beltrami problem [\eqref=eq:LB]. Otherwise we assume [formula].

We need the following identity for integration by parts over Γ:

[formula]

for smooth q and vector field [formula], where [formula] is the (doubled) surface mean curvature. Applying [\eqref=intByParts] and [formula] one finds the identity

[formula]

Integrating [\eqref=problem] over Γ and applying the above identity with v = 1, one finds that for c = 0 the source term in [\eqref=problem] should satisfy the zero mean constraint [formula].

Introduce the bilinear form and the functional: The weak formulation of [\eqref=problem] is as follows: Find u∈V such that

[formula]

with

[formula]

For functions satisfying zero integral mean condition, the following Poincare's inequality holds:

[formula]

We shall assume

[formula]

If a time stepping scheme is used for [\eqref=e:2.2] and c is proportional to the reciprocal of the time step, then the assumption is not restrictive.

The Lax-Milgram lemma and [\eqref=FdrA] immediately yield the well-posedness result for [\eqref=weak]. A higher smoothness of the solution follows from a regularity result for the Laplace-Beltrami equation in [\cite=Aubin].

Assume [\eqref=A1], then there exists a unique solution of [\eqref=weak], satisfying

[formula]

and

[formula]

with a constant C2 depending on [formula], [formula], c0, and Γ.

The trace finite element method

In this section we review the trace FEM. The method developed in this section is an extension of the trace FEM time introduced in [\cite=ORG09].

The idea of the method

Assume we are given a polyhedral subdivision Th of the bulk domain Ω and Vh is a H1(Ω) conforming finite element space. Consider all traces of functions from Vh on Γ and denote the resulting space of surface functions by VΓh. Now one substitutes V by VΓh in the weak formulation [\eqref=weak] to obtain a finite element formulation. If Γ is given implicitly or no parametrization of Γ is known, a problem of integration of finite element functions over Γ arises. Hence in practice, Γ in the finite element formulation is replaced by an approximate ("discrete") surface Γh such that integration over Γh is feasible. For example, Γh is piecewise polygonal. Trace space for Vh is now defined over Γh rather than Γ and problem data is extended from Γ to Γh. Substituting Γ by Γh introduces a geometric error in the method that has to be quantified. It is remarkable, however, that a suitable Γh can be easily constructed for an implicitly given surface without any knowledge of parametrization. Moreover, in some applications Γ is not known, and Γh is recovered from a solution to an (discretized) equation. The trace finite element method is perfectly suited for such a situation.

It is clear from this general description that both Γ and Γh may cut the bulk mesh in an arbitrary way. So the trace finite element method can be related to the family of unfitted finite elements, well developed for equations posed in bulk domains, such as XFEM or cut-FEM. To build a basis or a frame in VΓh, one may consider traces of basis functions from Vh on Γh. It is also clear that only those bulk basis functions are active that have their support intersected by Γh.

Further in the paper, we study the method if Th is a cubic octree mesh, Vh is a space of piecewise trilinear continuous finite elements, and Γh is reconstructed by a variant of marching cubes method from a piecewise trilinear interpolant to a level set function of Γ.

The method

Consider an octree cubic mesh Th covering the bulk domain Ω. We assume that the mesh is gradely refined, i.e. the sizes of two neighbouring cubes differ at most by a factor of 2. Such octree grids are also known as balanced. The method applies for unbalanced octrees, but in our analysis and experiments we use balanced grids.

Denoted by Γh a given polygonal approximation of Γ. We assume that Γh is a C0,1 surface without boundary and Γh can be partitioned in planar triangular segments:

[formula]

where Fh is the set of all triangular segments T. Without loss of generality we assume that for any T∈Fh there is only one cube ST∈Th such that T  ⊂  ST (if T lies on a side shared by two cubes, any of these two cubes can be chosen as ST).

In practice, we construct Γh as follows. Let φh be a piecewise trilinear continuous function with respect to the octree grid Th and consider its zero level set

[formula]

We assume that [formula] is an approximation to Γ. This is a reasonable assumption if φh is an interpolant to φ, a level set function of Γ; one example of φ is the signed distance function for Γ. To define φh one only should be able to prescribe in each node an approximate distance to Γ. Alternatively, in some applications, φh is recovered from a solution of a discrete indicator function equation (e.g. in the level set or the volume of fluid methods), without any direct knowledge of Γ.

Once φh is known, we recover Γh by the cubical marching squares method from [\cite=MCM2] (a variant of the very well-known marching cubes method). The method provides a triangulation of [formula] within each cube such that the global triangulation is continuous, the number of triangles within each cube is finite and bounded by a constant independent of [formula] and a number of refinement levels. Moreover, the vertices of triangles from Fh are lying on [formula].

An illustration of a bulk mesh and a surface triangulation is given in Figure [\ref=fig:tri]. The mesh shown in this figure was obtained by representing a torus Γ implicitly by its signed distance function, constructing the piecewise trilinear continuous interpolant of this distance function and then applying the cubical marching squares method for reconstructing Γh from the zero level of this interpolant.

Note that the resulting triangulation Fh is not necessarily regular, i.e. elements from T may have very small internal angles and the size of neighboring triangles can vary strongly, cf. Figure [\ref=fig:tri] (right). Thus, Γh is not a "triangulation of Γ" in the usual sense (an O(h2) approximation of Γ, consisting of regular triangles).

The surface finite element space is the space of traces on Γh of all piecewise trilinear continuous functions with respect to the outer triangulation Th. This can be formally defined as follows.

Consider now the volumetric finite element space of all piecewise trilinear continuous functions with respect to the bulk octree mesh Th:

[formula]

Vh induces the following space on Γh:

[formula]

Given the surface finite element space VΓh, the finite element discretization of [\eqref=problem] is as follows: Find uh∈VΓh such that

[formula]

for all vh∈VΓh. Here [formula], ch and fh are some approximations of the problem data on Γh. A well-posedness result for [\eqref=FEM] will be proved in the next section.

Variants of the method

Here we discuss several extensions of the trace finite element method [\eqref=FEM], which can be advantageous in some situations. One obvious update of the method is the following one. Define a subdomain ωh of Ω consisting only of those end-level cubic cells that contain Γh:

[formula]

For the outer finite element space, instead of piecewise trilinear continuous functions in Ω, consider all such function only in ωh:

[formula]

Further, define the space of traces of functions from Vωh on Γh:

[formula]

It is clear that VΓh  ⊂  Vω,Γh. When grid is locally refined, the dimension of the space Vω,Γh can be larger for the following reason: The inter-element continuity of bulk finite element functions imposes algebraic constraints in hanging nodes. For the space Vω,Γh such constraints should be imposed only for hanging nodes shared by two cubic cells from ωh, but not for hanging nodes lying on the boundary of ωh, which are now available for extra degrees of freedom.

We performed numerical experiments with the trace finite element space from [\eqref=e:fem-space] and observed optimal convergence behavior with respect to the number of degrees of freedom (cf. Section [\ref=s_numer]). We expect that the method with Vω,Γh instead of VΓh behaves similarly.

Furthermore, one may relax the continuity assumption for the bulk finite element functions in ωh and consider a discontinuous Galerkin finite element method. This is an interesting (and natural in some sense) alternative for an octree based finite element method, which we plan to study elsewhere.

As usual with transport-diffusion problems, the advection terms can written in several equivalent ways, leading, however, to different discretizations. For example, instead of [formula] one way choose the 'skew-symmetric' variant

[formula]

We shall analyse the 'conservative' formulation [\eqref=FEM], since it avoids the surface divergence of [formula]. Our motivation is that for a polygonal surface reconstruction the term [formula] leads to the consistency error of the method of order O(h), if [formula] is a smooth extension of [formula] from Γ. For the 'conservative' form we a able to prove O(h2) accuracy of the method.

Below we discuss a few more developments of the trace finite element method known from the literature.

Full gradient method

The "full gradient" variant of the trace finite element method was suggested in [\cite=Alg2] and studied in [\cite=Alg2] [\cite=Reusken2014]. The modification is aimed on improving algebraic properties of the stiffness matrix of the method. The rationality behind the full gradient method is clear from the following observation. For solution u of [\eqref=problem], denote by ue its normal extension to an arbitrary small neighbourhood O(Γ) of Γ, i.e., ue is constant along normal directions to Γ. Note that [formula] and so ue satisfies the identity [\eqref=problem] with surface gradients (in the diffusion term) replaced by full gradients:

[formula]

for all v sufficiently smooth in O(Γ) (v is not necessarily constant along normals). This identity shows that the following finite element formulation is consistent: Find uh∈Vh satisfying

[formula]

for all vh∈Vh.

The full-gradient method [\eqref=FEM_fg] uses the bulk finite element space Vh instead of the surface finite element space VΓh in [\eqref=FEM]. However, practical implementation of both methods uses the frame of all bulk finite element nodal basis functions φi∈Vh such that [formula]. Hence the active degrees of freedom in both methods are the same. The stiffness matrices are, however, different. For the case of the Laplace-Beltrami problem and a regular quasi-uniform tetrahedral grid, results in [\cite=Alg2] [\cite=Reusken2014] show that the conditioning of the (diagonally scaled) stiffness matrix of the full gradient method substantially improves over the conditioning of the matrix for [\eqref=FEM], for the expense of a slight deterioration of the accuracy of the method.

SUPG stabilized method

Similar to the plain Galerkin finite element for advection-diffusion equations the method [\eqref=FEM] is prone to instability unless mesh is sufficiently fine such that the mesh Peclet number is less than one.

In [\cite=ORXimanum], a SUPG type stabilized trace finite element method was introduced and analysed for P1 continuous bulk finite elements. The stabilized formulation reads: Find uh∈VΓh such that

[formula]

The stabilization parameter δT depends on T  ⊂  ST. The side length of the cubic cell ST is denoted by hST. Let [formula] be the cell Peclet number. We take

[formula]

with some given positive constants δ0,δ1  ≥  0.

Gradient-jump stabilized method

Another way of improving algebraic properties of the trace finite element method was suggested in [\cite=Alg1]. In that paper, the authors introduced the term

[formula]

with σE = 0(1). Here ωFh denotes the set of all internal interfaces between cubic cells in ωh, [formula] is the normal vector for interface F, and [formula] denotes the jump of the normal derivative of u across F. Now, the edge-stabilized trace finite element reads: Find uh∈Vh such that

[formula]

for all vh∈Vh.

For P1 continuous bulk finite element methods on quasi-uniform regular tetrahedal meshes and the Laplace-Beltrami equation, the paper [\cite=Alg1] shows the optimal orders of convergence of the trace finite element method [\eqref=FEM_edge] and improved algebraic properties of the stiffness matrix.

In this paper, we consider the trace finite element in [\eqref=FEM], its full-gradient variant in [\eqref=FEM_fg], and the SUPG stabilized version [\eqref=FEM_SUPG] for the case of convection-dominated equations. We are not studying the edge stabilized version here.

Well-posedness and error analysis of the trace FEM

In this section, we state a well-posedness result for [\eqref=FEM]. Further, an error analysis of the trace method is presented for a regular problem (we assume [formula] is not too small). In particular, we shall prove optimal order of convergence of the method in H1 and L2 surface norms. The analysis can be extended to the full-gradient and the SUPG stabilized formulations following the arguments of [\cite=Reusken2014] and [\cite=ORXimanum], respectively. However, in this paper we restrict ourselves to the original formulation [\eqref=FEM].

Let {Th}h > 0 be a family of octree meshes covering the domain Ω. Parameter h denotes the maximum size of a cubic cell from Th. For the sake of analysis, we assume that the maximum number of local refinement levels is bounded from above independently of h. Further, we need some more notations and definitions.

Preliminaries

For a given octree mesh Th let Ψh be the set of all nodal basis functions of the bulk finite element space Vh. Here and further denote by Ωh the union of all supports of nodal basis functions intersected by Γh:

[formula]

For the surface Γ, we define its h-neighborhood:

[formula]

and assume that [formula] is sufficiently large and h is sufficiently small such that Ωh  ⊂  Uh  ⊂  Ω and

[formula]

holds, with κi being the principal curvatures of Γ.

Let [formula] be the signed distance function.Thus Γ is the zero level set of d and Γ∈C2  ~    ⇒   ~ d∈C2(Uh). We assume d < 0 in the interior of Γ and d > 0 in the exterior and define [formula] for all [formula]. Hence, [formula] is the normal vector on Γ and [formula] for all [formula]. The Hessian of d is denoted by The eigenvalues of [formula] are denoted by [formula], [formula], and 0. For [formula] the eigenvalues κi,i = 1,2, are the principal curvatures. For each [formula], define the projection [formula] by Due to the assumption [\eqref=e:3.2], the decomposition [formula] is unique. We need the orthogonal projector The tangential derivative can be written as [formula] for [formula]. One can verify that for this projection and for the Hessian [formula] the relation [formula] holds. Similarly, define where [formula] is the unit (outward pointing) normal at [formula]. The tangential derivative along Γh is given by [formula].

Assume the following estimates on how well Γh approximates Γ:

[formula]

with constants c1, c2 are independent of h. The assumption is reasonable if Γ is defined as the zero level of a (locally) smooth level set function φ and Γh is reconstructed as described in the previous section from the zero level set of φh∈Vh, where φh interpolates φ and it holds

[formula]

In the remainder, [formula] means A  ≤  c  B for some positive constant c independent of h.

For [formula], define [formula]. The surface measures [formula] and [formula] on Γ and Γh, respectively, are related by

[formula]

The assumptions [\eqref=e:3.9] and [\eqref=e:3.10] imply that

[formula]

cf. (3.37) in [\cite=ORG09]. The solution of [\eqref=problem] and its data are defined on Γ, while the finite element method is defined on Γh. Hence, we need a suitable extension of a function from Γ to its neighborhood. For a function v on Γ we define The following formula for this lifting function are known (cf. section 2.3 in [\cite=DD07]):

[formula]

with [formula]. By direct computation one derives the relation

[formula]

For sufficiently smooth u and |μ|  ≤  2, using this relation one obtains the estimate

[formula]

(cf. Lemma 3 in [\cite=Dziuk88]). This further leads to (cf. Lemma 3.2 in [\cite=ORG09]):

[formula]

For the analysis, we shall assume that [formula], ch and fh are defined as the extensions of [formula], c, and f, respectively, along normals to Γ, i.e. [formula], ch = ce and fh = fe on Γh.

Well-posedness

We need some further notations. For each T∈Fh, denote by [formula] the outer normal to an edge E in the plane which contains element T. For a curved geometries, "tangential" normal vectors to E from two different sides are not necessarily collinear, cf. Figure [\ref=fig:3.1]. Let [formula] be the jump of two outward normals to the edge E. For a 'usual' planar case, this jump is zero. Over Γh, these jumps produce additional consistency term in the integration by parts formula:

[formula]

We introduce the notation for the finite element bilinear form and the functional:

[formula]

The following result is now straightforward.

If one assumes

[formula]

then the bilinear form is positive-definite on VΓh and so the trace finite element method [\eqref=FEM] is well-posed. The solution uh satisfies the a priori estimate,

[formula]

If ch = 0 and [formula] on Γh (the Laplace-Beltrami problem), then one imposes the zero mean conditions for the solution and the right-hand side [formula] and proves the well-posedness result with the help of the Poincare inequality on Γh. For the mesh independent stability bound, the Poincare constant should be uniformly bounded independent of h.

To assess how restrictive the assumption in [\eqref=A1h], we invoke the following estimates (Lemmas 3.5 and 3.6 in [\cite=ORXimanum]) to bound the edge terms: and We remark that in [\cite=ORXimanum] these estimates were proved for tetrahedra bulk subdivision, but all arguments carry over to cubic bulk meshes once we assume that the number of refinement level in octree is bounded. Since [formula], we get with [formula] on Γh:

[formula]

Therefore, we conclude that for sufficiently fine mesh, the bilinear form ah is positive definite on VΓh and so the discrete problem is well-posed under condition similar to the differential case: [formula] on Γh.

Consistency estimate

The consistency error of the finite element method [\eqref=FEM] is due to geometric errors resulting from the approximation of Γ by Γh. To estimate this geometric errors, we need a few additional definitions and results, which can be found in, for example, [\cite=DD07]. For [formula] define [formula]. One can represent the surface gradient of u∈H1(Γ) in terms of [formula] as follows Due to [\eqref=e:3.16], we get with [formula]. From [formula] on Γ and [formula], [formula] it follows that [formula] and thus [formula] holds. Using this, we get the relation with [formula]. We shall use the lifting procedure Γh  →  Γ given by It is easy to see that vlh∈H1(Γ).

The following lemma estimates the consistency error of the finite element method [\eqref=FEM].

Let u∈H2(Γ) be the solution of [\eqref=problem], then we have

The residual is decomposed as

[formula]

The following holds:

[formula]

Substituting these relations into [\eqref=er] results in

[formula]

We estimate the Ii terms separately. Applying [\eqref=e:3.17] we obtain

[formula]

One can show, cf. (3.43) in [\cite=ORG09], the bound Using this and [\eqref=grad2] we obtain

[formula]

Since [formula], we also estimate This yields

[formula]

Combining the results [\eqref=aux12]-[\eqref=aux16] proves the lemma.

Interpolation bounds

For a smooth function v defined on Γ consider its extension on Γh, ve. In this subsection, we show that ve can be approximated using the finite element trace space VΓh with optimal order accuracy. First we need the following simple lemma.

Consider an arbitrary plane [formula] and any cubic cell S∈Th. It holds

[formula]

The proof follows from the fact that any cubic cell is divided into a finite number of regular tetrahedra and further applying Lemma 4.2 from [\cite=Hansbo2003] on each of these tetrahedra.

Now we are ready to prove the trace finite element interpolation bounds.

For arbitrary v∈H2(Γ) the following estimate holds with a constant c independent of h, v, and on how Γh intersects Th:

[formula]

Assume the maximum cells size h in Th is attained at level k of the octree. Then the cells at the level k provide uniform cartesian subdivision which covers Ω. Denote this subdivision by Tkh and the set of corresponding nodes by Nkh. Note that v∈H2(Γ) and Γ∈C2 imply ve∈H2(Uh) for the normal extension and we may define the nodal piecewise trilinear interpolant Ih(ve) such that [formula] for [formula] and [formula] in other nodes. Since Tkh does not contain hanging nodes, Ih(ve) is continuous and so it holds Ih(ve)∈Vh.

Using the result in [\eqref=eq_trace] and the interpolation properties of Ih(ve), we get for vh = Ih(ve)|Γh:

[formula]

The assumption that the number of local refinement levels is bounded yields hh- 1ST  ≤  C. Hence, it holds

[formula]

It remains to apply [\eqref=e:3.14].

Error estimates

Now we combine the results derived in the previous sections to prove the first error estimate.

Assume u is the solution of [\eqref=problem] and let uh be the discrete solution of the trace finite element method [\eqref=FEM]. Then the following estimate holds:

[formula]

Consider an interpolant (Ihue)∈Vh from Theorem [\ref=thm_int]. The triangle inequality yields

[formula]

The second term in the upper bound can be estimated using coercivity, continuity of the finite element bilinear form, interpolation properties from Theorem [\ref=thm_int], and the consistency estimate in Lemma [\ref=thm3]:

[formula]

This results in

[formula]

The error estimate [\eqref=errorEst] follows from [\eqref=triang], [\eqref=aux24], [\eqref=eq_interp], and [formula].

We now apply a duality argument to obtain an L2(Γh) error bound.

Additionally assume that [\eqref=A1] and [\eqref=A1h] hold with [formula] replaced by [formula]. With the same u, uh as in Theorem  [\ref=Th1], the following error bound holds

[formula]

Denote eh: = (ue - uh)|Γh and let elh be the lift of eh on Γ. Consider the problem: Find w∈H1(Γ), such that

[formula]

The problem is well-posed and the solution w satisfies w∈H2(Γ) and [formula]. Furthermore, [formula]. Due to [\eqref=dual] we have, for any ψh∈VΓh,

[formula]

We let ψh = (Ihue)∈Vh, interpolant given by Theorem [\ref=thm_int]. The terms on the right hand side of [\eqref=est_i0] are treated separately. The bound for the third one follows from Lemma [\ref=thm3]:

[formula]

The bound for the second term follows from the continuity of the bilinear form, interpolation properties in Theorem [\ref=thm_int] and the error bound in Theorem [\ref=Th1]:

[formula]

For the first term we get the expression similar to [\eqref=aux12]:

[formula]

Hence, repeating the same argument as in the proof of Lemma [\ref=thm3], we get Further, employing the error bound from Theorem [\ref=Th1], we have

[formula]

Combining [\eqref=est_i0]-[\eqref=est_i3] with the regularity result for the solution of the dual problem [\eqref=dual] completes the proof.

A posteriori estimate and error indicator

In this section, we deduce an a posteriori error estimate for the trace FEM. Based on this estimate we define a residual type error indicator, which we use for a mesh adaptation purpose. We will treat only the formulation with surface gradient [\eqref=FEM] and assume that the Peclet number is sufficiently small and hence no additional stabilization is needed.

Consider the surface finite element error eh = ue - uh on Γh. We prove an a posteriori bound for the lift of eh on Γ, i.e. elh = u - ulh on Γ. Thanks to [\eqref=A1] the functional [formula] defines a norm of V such that

[formula]

Now we let ψ∈V with [formula]. For arbitrary ψh∈VΓh, observe the identities

[formula]

We apply elementwise integration by parts to the third term on the righthand side of [\eqref=s4_e1]:

[formula]

Substituting [\eqref=s4_e2] into [\eqref=s4_e1] and applying the Cauchy inequality elementwise over Fh, we get

[formula]

with

[formula]

Combining [\eqref=3.1] and [\eqref=s4_e3] leads to an a posteriori error estimate, where ψ-dependent terms on the righthand side should be handled further.

Regarding ψ-dependent terms in [\eqref=s4_e3] we note the following: due to [\eqref=e:3.16] and [\eqref=grad2] we have [formula]. For the second term, in [\cite=DemlowOlsh] it was proved that there exists such ψh∈Vh such that

[formula]

In [\cite=DemlowOlsh], the estimate [\eqref=A2] was proved for a regular (locally refined) tetrahedra bulk triangulation and P1 elements. To extend this result to octree cubic grids, one has to deal with certain technical difficulties related to the construction of a Scott-Zhang type interpolant, handling algebraic constraints in hanging nodes and hierarchical basis functions. Such analysis will be done elsewhere. Let us assume [\eqref=A2] to be true for octree grids and continuous piecewise trilinear functions.

Finally, if we assume that local grid refinement leads to better local surface reconstruction, i.e. [\eqref=e:3.9] and [\eqref=e:3.10] can be formulated locally, then the first term on the right-hand side of [\eqref=s4_e3] is heuristically of higher order. We may assume [formula] This suggests introducing also the geometric error indicator

[formula]

where [formula] is any Hessian reconstruction on Γh.

Thus, for the purpose of local mesh adaptation we use the following error indicator:

[formula]

with some parameters αr,αe,αg  ≥  0. We set αg equal to 0 or 1 depending on whether we wish to account (explicitly) for geometric errors or not. For regular elliptic problems we set αr  =  αe = 1, while for transport dominated problems more weight is put on the edge error indicator (see next section). We also note that the second edge term in the definition of ηE(T)2 is of higher order. Our numerical experience suggests that it can excluded without any notable change in the performance of an adaptive method.

Although we deduced the indicator based on partially heuristic arguments, numerical experiments with adaptive method based on η(T) and standard "maximum" marking strategy show optimal convergence of the error in energy and L2 norms.

Numerical examples

Smooth solutions on a sphere and a torus

As a first test problem we consider the Laplace-Beltrami type equation on the unit sphere:

[formula]

with [formula] and Ω  =  ( - 2,  2)3. The source term f is taken such that the solution is given by

[formula]

with a = 12. Using the representation of u in spherical coordinates one can verify that u is an eigenfunction of -  ΔΓ: u(r,φ,θ)  =  a sin (3φ) sin 3θ,   -  ΔΓu + u  =  13u = :f(r,φ,θ). Both u and f are constant along normals at Γ.

In the second example, we consider a torus instead of the unit sphere and the same equation: Γ  ⊂  Ω = ( - 2,2)3, with [formula]. We take R = 1 and r = 0.6. In the coordinate system (ρ,φ,θ), with

[formula]

the ρ-direction is normal to Γ, [formula] for [formula]. Thus, the following solution u and corresponding right-hand side f are constant in the normal direction:

[formula]

We compute numerical solutions to Examples [\ref=exam1] and [\ref=exam2] using the trace FE methods [\eqref=FEM] and [\eqref=FEM_fg] on a sequence of octree bulk grids. The initial grid was uniform with [formula]. Further the grid was gradely refined towards the surfaces. All linear algebra systems in this and further experiments were solved with the help of PETSc library: We computed LU factorizations of diagonally scaled stiffness matrices. Finite element errors and convergence rates are shown in Table [\ref=tab1]. Both variants demonstrate second order convergence in L2 surface norm and close to second order in L∞ surface norm. Computed solutions and final meshes are visualized on Figure [\ref=fig:conv1].

Smooth solutions on more complicated geometries

To demonstrate the flexibility of the method with respect to the form of Γ, we consider the Laplace-Beltrami equation on two geometrically more complicated surfaces. Both examples of surfaces can be found in [\cite=DE2013].

The fist surface is given by the zero of the level set function

[formula]

The exact solution to [\eqref=problem] with [formula], [formula], c = 1, is taken very regular, u = x1x2 on Γ. The surface is illustrated in Figure [\ref=fig:curv2]. The normal vector on Γ is [formula] and [formula] can be computed from [formula]. The entries of [formula] are given by

[formula]

for i,m = 1,2,3. The right-hand side is then given by

[formula]

Figure [\ref=fig:curv2] shows the numerical solution and plots it over the trace mesh, which results after 9 steps of adaptation, starting with the uniform cubic mesh with h = 1 / 4. Here and in any further adaptive mesh refinement we employ a "maximum" marking strategy in which all volume cubes S from ωh with [formula] are marked for further refinement. Note that some adjunct cubes also may need refinement if one wishes to keep the octree balanced. Figure [\ref=fig:curv22] (right) displays the finite element error reduction if the mesh adaptation process is based on the error indicator [\eqref=indicator]. The results demonstrate optimal convergence order of the adaptive trace FEM with respect to the total number of degrees of freedom in L2, H1 and L∞ surface norms. The results are shown for the surface gradient variant of the method [\eqref=FEM]. Here and further "number of d.o.f." means only the number of active degrees of freedom, which is equal to the dimension of the resulting system of linear algebraic equations. We set αg = 1 in the error indicator to account for geometric errors. The left plot in Figure [\ref=fig:curv22] zooms the trace surface mesh. From this plot we see that the mesh refinement generally happens in regions with higher surface curvatures.

This is another example of a more complicated domain, which is homeomorphic to the sphere with 6 handles, see Figure [\ref=fig:curv4]. The surface is given implicitly as the zero level set of

[formula]

We solve the Laplace-Beltrami equation with right-hand side [formula], with

[formula]

The points are close to the surface and the right-hand side is varying rapidly in vicinities of these 4 points, and hence the same is expected from the solution. The solution and the grid resulted after 12 steps of refinement are visualized in Figure [\ref=fig:curv4]. The refinement was based on the error indicator [\eqref=indicator] with αg = 1.

Laplace-Beltrami problem with point singularity

For the next test problem we consider the Laplace-Beltrami equation on the unit sphere. The solution and the source term in spherical coordinates are given by

[formula]

One verifies

[formula]

For λ < 1 the solution u is singular at the north and south poles of the sphere so that u∈H1(Γ), but u∉H2(Γ). Following [\cite=DD07] we set λ = 0.6 to model the point singularity and contrast it to the regular problem with λ = 1.

Results produced by the adaptive algorithm are shown in Figure [\ref=fig:lambda], where they are compared to the results for uniform grid refinement. As expected, the regular refinement leads to a suboptimal convergence for the singular case of λ = 0.6. Adaptive refinement driven by the error indicator [\eqref=indicator] leads to optimal convergence rates in L2 and H1 surface norms. Note that reliability of the error indicator for H1 error norm was proved in [\cite=DemlowOlsh] for tetrahedral meshes. A posteriori error analysis in other norms remains an open question.

The left column in Figure [\ref=fig:lambda] displays error decrease for the surface gradient formulation [\eqref=FEM], while the right column of plots displays error decrease for the full gradient formulation [\eqref=FEM_fg]. Similar to regular problems and regular refinement in Examples [\ref=exam1] and [\ref=exam2], the adaptive algorithm shows close performance for both formulations producing slightly more accurate results for the surface gradient formulation [\eqref=FEM].

Figure [\ref=fig:lambda2] (left) displays a cutaway view which includes both the adaptively refined bulk and surface meshes. The meshes are shown after the 12 refinement steps. The middle picture in Figure [\ref=fig:lambda2] shows the surface mesh superimposed on numerical solution. The coarsest mesh is in the regions with the smallest solution gradient. Figure [\ref=fig:lambda2] (right) displays the surface mesh near the north pole magnified 20 times. This local mesh appears more structured, since the surface is locally close to a plane which cuts through a regular bulk mesh.

Convection-diffusion problem with an internal layer

We now perform several tests for the advection-diffusion problem as in [\eqref=problem], with nonzero advection field [formula]. As usual, the properties of the problem essentially depend on the value of the dimensionless Peclet number. The Peclet number can be defined similar to volumetric case as [formula], where L is a characteristic problem scale (say, the diameter of a closed surface Γ) and W is a characteristic advection velocity. For low values of the Peclet numbers, the problem is close to the Laplace-Beltrami equation, while for higher Peclet numbers, the problem may demonstrate behaviour typical to singular-perturbed equations, e.g., its solution may exhibit internal layers. The example considered below is chosen to illustrate the ability of the trace FEM to handle these different cases by employing computational tools developed for volumetric finite elements: stablization, error indicators, and layer fitted meshes. Numerical results will show that the performance of such enhanced trace FEM appears to be similar to its volumetric counterparts applied to bulk advection-diffusion problems.

For the advection-diffusion problem we set weights αr,αe in the error indicator [\eqref=indicator] dependent on the Peclet number as recommended in [\cite=Verfurth2] for the planar advection-diffusion problem:

[formula]

In experiments below geometry does not play an important role and so we set αg = 0.

In this example, the stationary problem [\eqref=problem] is solved on the unit sphere Γ, with the velocity field

[formula]

which is tangential to the sphere. We set c  =  1 and consider ε∈[10 -  6,1]. Letting [formula] and L = (Γ), we compute the Peclet number as [formula].

For the exact solution to [\eqref=problem], we take the function

[formula]

The corresponding right-hand side function f is given by

[formula]

When [formula] gets smaller, a layer of the width [formula] is forming in u along the equator of the sphere ([formula]). The formation of characteristic internal layers of [formula]-width is typical for advection-diffusion problems.

In this paper, we consider equations posed on closed surfaces, therefore we are not treating parabolic or exponential boundary layers.

Lower Peclet number case

We consider the equation [\eqref=problem] for Pe  ≤  100 to be non-singular perturbed. Hence, for this case of lower Peclet numbers, we expect the trace finite element to behave similar to the case of Laplace-Beltrami equations with smooth solution. We add no stabilization in this case and recover the expected O(h2) and O(h) convergence rates on a sequence of uniformly refined grids in L2 and H2 surface norms, respectively (not shown). Figure [\ref=fig:conv1] shows the error reduction plots for Pe = 1 and Pe = 100 if a mesh adaptation is performed based on the error indicator [\eqref=indicator]. For Pe = 100, the error norms are approximately one order bigger than for Pe = 1, but in both cases the convergence curves demonstrate optimal reduction rates versus the number of active degrees of freedom. The numerical solutions and the surface meshes after several steps of adaptive refinement are displayed in Figure [\ref=fig:conv1.5]. For Pe = 100, most of refinement happens closer to the equator of the sphere.

The results are shown for the trace finite element formulation with surface gradient [\eqref=FEM_fg]. The results for the method with full gradient [\eqref=FEM_fg] were largely similar.

Higher Peclet number case

Now we consider the equation [\eqref=problem] and Pe  ≥  103. For the growing Peclet number, the problem becomes increasingly singular perturbed. For Pe = 103 the internal layer becomes pronounced. Now and in all further experiments in this section, we apply SUPG stabilized trace finite element method [\eqref=FEM_SUPG].

Already for Pe = 103 the uniform refinement doesn't lead to typical O(h2) convergence behavior (unless the mesh is sufficiently fine to resolve the boundary layer.) This is well seen from results shown in Figure [\ref=fig:conv2]. The error decrease on uniformly refined grid is shown only for the "surface gradient" variant of the trace FEM [\eqref=FEM], since the results with [\eqref=FEM_fg] were very similar. The adaptive refinement based on the indicator [\eqref=indicator] leads, however, to the optimal error decrease with respect to the number of active d.o.f. These results are also demonstrated in Figure [\ref=fig:conv2]. The "surface gradient" and "full gradient" variants show very close results.

The numerical solution computed after 9 refinement steps and the corresponding surface mesh are demonstrated in Figure [\ref=fig:conv3]. The internal characteristic layer is well seen in the solution. The error indicator [\eqref=indicator] enforces an aggressive refinement in the regions of the layer.

Further, we consider the same problem with the higher Peclet number equal to 104. This time, the adaptive refinement based on the error indicator was not found to produce optimal error reduction for the number of degrees of freedom up to 50000. Hence, we consider this problem to be a good test case for layer fitted meshes. We choose Shishkin meshes as one of the best studied class of meshes for singular-perturbed volumetric or planar problems. Shishkin meshes require an a priori knowledge of where a layer occurs and provide optimal convergence with respect to the total number of degrees of freedom [\cite=Shishkin].

Let N be the total number of nodal degrees of freedom available to discretize a singular-perturbed convection-diffusion problem. Assume that the solution to the problem has only an internal characteristic layer. Then to build a Shishkin mesh one defines a narrow band of width [formula] around the layer and considers a mesh which is uniform inside and outside the band and contains O(N) nodes in the interior of the narrow band as well as in the rest of computational domain (see, e.g.,  [\cite=Shishkin] for accurate definitions). We extend this construction to the case of octree bulk meshes and the singular-perturbed problem posed on a surface as follows. We build an initial octree mesh such that hmin = 1 / 128 was the size of cubes inside the strip |x3|  ≤  1 / 64 (this defines our "narrow band" containing the layer). In the rest of the bulk domain, the grid was aggressively coarsened up to hmax = 1 / 4. The resulted number of active degrees of freedom for this initial mesh was 10356. Further, the mesh was uniformly refined two times, leading to layer fitted meshes with 22830 and 101332 active degrees of freedom. We note two deviations of our construction from the classical notion of a Shishkin mesh: (i) We do not re-balance the mesh to account for the logarithmic factor in the width of a narrow band of a canonical Shishkin mesh; (ii) The mesh outside our narrow band is not completely uniform due to a transition region, which is necessary to keep the octree balanced (two neighboring cubes may differ in size at most by a factor of 2).

Figure [\ref=fig:conv4] shows the numerical solution computed on the finest surface Shishkin mesh. Note that the internal layer is sharp and resolved. We observe no numerical oscillations in a vicinity of the layer. Table [\ref=tab2] presents the norms of the finite element error on the sequence of the layer fitted meshes and corresponding convergence factors.

Finally, we solve the same problem, but now with [formula], leading to Pe = 106. The width of the internal layer is [formula], and we are not attempting to resolve it with a layer fitted mesh. Instead we solve the problem on a sequence of uniformly refined grids. Since we used the SUPG stabilized formulation of the finite element method, we can expect that similar to a planar or a volumetric cases the layer would be smeared, numerical oscillation damped, and finite element solution converges to the exact one outside the layer. This is exactly what we observed for our trace finite element method. Thus, Figure [\ref=fig:conv6] demonstrates the computed solution as well as the finite element error decrease in a part of the domain separated from the layer: All norms in Figure [\ref=fig:conv6] (left) were computed over part of the sphere [formula].

Conclusions

We studied a trace finite element method for partial differential equations posed on hypersurfaces in [formula]. An extension to curves in [formula] is straightforward. The paper demonstrates that using such standard computational tools as cartesian octree grids, a marching cubes method, and trilinear bulk finite elements leads to a second order accurate method with a number of attractive features: The mesh is unfitted to a surface; One uses standard finite element tools without any extension of equation from the surface to bulk domain; The method works for surfaces defined implicitly; The number of active d.o.f. is optimal and comparable to methods in which Γ is meshed directly; Optimal order of convergence in H1 and L2 norms is proved for quasi-uniform bulk grids. Moreover, due to the natural connection to bulk elements, many tools and techniques well established for "usual" discretizations carry over to the surface case. In this paper, we experimented with several such techniques: adaptivity based on an error indicator, SUPG stabilization for transport dominant equations, and layer fitted meshes. Numerical analysis supports experimental observations. In forthcoming papers we plan to extend the adaptive octree trace finite element method to PDEs defined on evolving surfaces and to apply it for the simulation of flow and transport in fracture media.

Acknowledgments

This work has been supported by RFBR through the grants 12-01-33084, 14-01-00731, 14-01-00830 and by NSF through the Division of Mathematical Sciences grant 1315993.