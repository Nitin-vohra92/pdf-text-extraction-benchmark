Effect of Memory on the Dynamics of Random Walks on Networks

Introduction

Over the last 15 years, network science has developed a set of powerful tools and models for complex systems made of interacting elements [\cite=Boccaletti2006] [\cite=Newman2010]. The fundamental step, when adopting a network perspective, is the definition of a static underlying medium, made of nodes and links, on which to apply a dynamical process, e.g. synchronization, consensus or diffusion, in order to model the system in question. By implicitly decoupling dynamics and structure [\cite=Batty1979] [\cite=Flow], this approach allows for the analysis of a broad range of systems within a single framework. However, this abstracting step discards many details from real-life systems, often for good reasons, but it is yet unresolved where to set the limits of validity of network theory. In this respect, it has recently been shown that flow pathways observed in a broad range of social and information systems, such as web traffic [\cite=meiss2008ranking] [\cite=chierichetti2012web], human [\cite=gonzalez2008understanding] and cattle [\cite=heath2008construction] mobility, tend to differ from those reproduced by network-based models. This difference stems from the memory in the pathways, as the direction of a flow strongly depends on where it comes from. In [\cite=Rosvall], Rosvall et al. have shown in a variety of empirical systems that memory constraints on flow are statistically significant, and that a second-order Markov model often provides a good approximation of the dynamics. The authors also showed that memory strongly affects the outcome of algorithms for ranking the importance of nodes or for clustering them, and observed that it has the tendency to slow down spreading, in agreement with previous works [\cite=balcan2009multiscale] [\cite=belik2011natural].

The main purpose of this paper is to derive an analytical expression for the effect of memory on the dynamics of random walkers on networks. To do so, we focus on second-order Markov processes and show the effect of memory on the spectral gap and thus, equivalently, on the mixing time, e.g. the time for the stochastic process to reach equilibrium. The theoretical results are tested numerically on a toy example and on empirical data, and show the conditions under which memory either slows down or accelerate diffusion on networks. Finally, we draw connections with spectral graph theory and community detection, and discuss the general implications of this work for the study of networks.

From first to second order Markov

For the sake of simplicity, let us first consider an undirected, unweighted and connected network composed of N nodes and L links. The graph is described by its N  ×  N, symmetric adjacency matrix Aij, with Aij = 1 if there is a link between i and j, and zero otherwise. The degree of a node is defined by [formula]. The dynamics of a random walker with memory on this physical network is modeled by using the concept of memory network [\cite=Rosvall]. The dynamics are encoded by a transition matrix with elements of the form

[formula]

measuring the probability that the walker steps from j to k if it came from i in the previous step, that is from memory node [formula] to memory node [formula]. The matrix is normalized such that [formula]. In this framework, the non-Markov process on the physical nodes is modeled by a Markov process on the memory nodes, i.e. as a second-order Markov process. There are 2L memory nodes because each undirected link, say between i and j in the physical network leads to 2 memory nodes, [formula] and [formula], in order to encode the time ordering of the visits . Moreover, the corresponding memory network is directed even if the physical network, as a transition between [formula] and [formula] is forbidden even if a transition between [formula] and [formula] exists.

From now on, let us use Greek letters to denote memory nodes, and Latin letters to denote physical nodes. By definition, the structure of the transition matrix [formula] univocally determines the properties of the stochastic process. In the case of a continuous-time random walk process with Poisson waiting times, the probability P(α;t) of finding a walker on memory node α at time t evolves as

[formula]

where I is the identity matrix and L  =  I  -  T is the normalized Laplacian of the process. If the original process is Markovian, the transition to any out-neighbour of α is equally likely and

[formula]

where σoutα is the set of out-neighbours of α, and koutα is the size of this set. By definition, koutα = kj, where j is the end of memory node [formula], because the network is undirected. After defining the probability to find a walker on physical node j at time t

[formula]

it is straightforward to show that the standard rate equation

[formula]

is recovered [\cite=Rosvall].

In general, the stationary state π is given by the left eigenvector of eigenvalue 0 of L

[formula]

In the Markovian case ([\ref=mar]), the stationary solution of the process is π(α) = 1 / 2L [\cite=Rosvall], in agreement with the fact that the stationary probability of finding a walker on a physical node is proportional to its degree in undirected networks. Since now on, we will assume that the memory network is strongly connected to ensure the unicity of the stationary solution.

Effect of memory on mixing time

In this work, we are interested in the transient properties of the diffusive process and, in particular, in the asymptotic relaxation towards equilibrium. This relaxation is determined by the second dominant eigenvalue of L, solution of

[formula]

where λ2 is the lowest positive eigenvalue of L, i.e. that associated to the slowest mode. The characteristic time to reach equilibrium, called mixing time, is 1 / Re(λ2). This eigenvalue, usually called spectral gap, determines the speed of convergence towards stationarity, and is deeply connected to the modular organization of the underlying network [\cite=Delvenne]: small values of the spectral gap correspond to networks made of two well-defined communities. In the case of undirected networks, the second dominant eigenvector u, known as the normalized Fiedler vector [\cite=Fiedler], is used in heuristics for graph bi-partitioning [\cite=Shi] or modularity optimisation [\cite=Delvenne] [\cite=Laplacian] [\cite=Newman]. In particular, the bipartition of a graph is deduced from the sign of entries of u. Because the transition matrix L is asymmetric, the right eigenvector

[formula]

is in general different from the left eigenvector. Because the underlying network is undirected and assuming that the dynamics is Markovian, a particular structure of memory networks, themselves directed, leads to a connection between their left and right eigenvectors. Let G be a memory network and G' be the memory network obtained by reversing all links between memory nodes. G and G' are different, as noted before, but they are isomorphic, through the transformation [formula] for all memory node .

The effect of memory on λ2 is evaluated by perturbation analysis, typically used to determine the effect of structural perturbations on the eigenvalue spectra of networks [\cite=Restrepo] [\cite=Milanese] [\cite=Masuda]. Let us consider the Markovian transition matrix ([\ref=mar]) as a baseline, and a small deviation around it due to memory

[formula]

It is important to note that ΔT induces a bias in the random walk on the memory network, and that ΔTαβ > 0 (< 0) for transitions that are promoted (hindered) by memory (see Figure 1). Moreover, conservation of probability implies that [formula]. By definition, the corresponding Laplacian operator is defined as LM  =  I  -  TM, and ΔL =  - ΔT. For the sake of simplicity, we further assume that λ2 is not degenerate. Writing u  =  uM  +  Δu, v  =  vM  +  Δv and λ2  =  λM2  +  Δλ2, and keeping only linear terms, one finds

[formula]

The perturbation of the second dominant eigenvalue is obtained by multiplying by the right eigenvector

[formula]

This expression identifies the effect of memory on λ2 and on the mixing time of the stochastic process. The spectral gap decreases and the mixing time increases when ΔTαβ is positive for nodes in the same community, and negative across communities. In contrast, the spectral gap increases when cross-community flows are favoured by the memory bias. The two communities are those defined by the signs of the normalized Fiedler vector, as mentioned before. These result are intuitive as the network dynamics becomes more (less) encapsulated inside communities, and that the network becomes effectively more (less) modular when cross-community flows decrease (increase). Nonetheless, ([\ref=res]) has the advantage of quantifying the effect of memory on spreading.

Numerical tests

In order to test the validity of ([\ref=res]), let us first focus on the toy example illustrated in Figure [\ref=fig2]. The physical network is composed of 5 nodes and 6 edges. The corresponding memory network, composed of 12 memory nodes, is illustrated in Figure [\ref=fig3]. The interplay between flow and topological structure is investigated by defining a non-Markovian process on the underlying topology. To do so, memory nodes are partitioned into two groups. Those on the left of the Fig. 3 are defined to be of type 1, and those on the right of type 2. The biases associated to non-Markovianity are defined as follow: the weight of a transition between nodes of the same type is 1 + ε, while it is 1 - ε for different types. After a proper renormalization, one finds for instance [formula], [formula], [formula], etc. By definition, the process is Markovian when ε = 0, and transitions between neighbouring memory nodes are uniform. In that case, the second dominant (left) eigenvector, represented in Figs. [\ref=fig2] and [\ref=fig3], has an eigenvalue 1 / 2, and is in line with the overlapping modular structure of the system. Based on ([\ref=res]), it is straightforward to show that Δλ2  =    -  ε, thereby confirming that increasing intra-community flow tends to decrease the spectral gap, and thus to slow down relaxation towards stationarity. Increasing inter-community flow, that is flows that are orthogonal to the topological structure, instead accelerates diffusion. The accuracy of the perturbation analysis, and of the corresponding interpretation, is successfully compared to the exact eigenvalue λ2 of the process (see Figure [\ref=fig4]).

As a second example, we consider airline pathways of passengers between US airports. The data-set, made publicly available by the Research and Innovative Technology Administration, contains detailed information about trip itineraries between 464 airports in the US. Modeled as a memory network, memory nodes [formula] represent flight legs from airports i to j, and links represent connected flight legs, say [formula] to [formula] (see Fig. [\ref=fig5]). Links carry a weight proportional to the number of passengers going to k from j after they arrived from i. For more information on how to build second-order Markov processes from the empirical data, and a study of the effect of memory on modular structure, entropy rate and disease spreading, we refer to [\cite=Rosvall] where the data was originally collected and compiled. In the following, we restrict the scope to a subset of the top 20 airports in terms of traffic, in order to ensure that the memory network is strongly connected, and that no teleportation is necessary in order to make the dynamics ergodic [\cite=telep]. Because the airport network is weighted, in contrast with previous example, the transition matrix of the Markovian process is now given by

[formula]

in order to provide an adequate baseline, and not uniform as in ([\ref=mar]). wβ is the total number of passengers along flight leg β, independently on where they come from. In order to investigate the effect of memory, we consider a random process driven by the tunable transition matrix T(p)  =  pT  +  (1 - p)TM, that is a random walk process given by the first-order Markov process with probability (1 - p), and by the second-order Markov process with probability p. This hybrid process models the diffusion of an item, e.g. a virus or a bank note [\cite=broc], which travels with passengers and changes owner inside cities with probability p [\cite=Rosvall]. As shown in Fig [\ref=fig6], the perturbation analysis provides a good approximation of λ2 for small values of p, and shows that memory significantly slows down the spreading process. This slowdown is driven by the high return rate of the flights observed in Fig. [\ref=fig5]. To show so, we have calculated λ2 for the transition matrix pTR  +  (1 - p)TM, where TR models a second-order process where only return flights are permitted, i.e.

[formula]

As expected, this process slows down even further the random walk process and ultimately leads to non-ergodic dynamics when p = 1, as the corresponding memory network becomes disconnected in that case.

Conclusion

In this paper, we have identified a mechanism by which non-random pathways on network either slow down or accelerate diffusion: what matters, in the asymptotic regime, is the redistribution of flows by memory across the bi-modular structure of the system. Our theoretical results, tested on artificial and empirical data, find several applications. First, the study of real-world pathways on networks is expected to bloom in the next few years, as pathway information is becoming increasingly available and that network theory fails to capture important constraints on flow in complex systems. Our work predicts that a slow-down should be observed in a vast majority of empirical systems, as memory tends to enhance flows in dense substructures [\cite=Rosvall]. The results also provide interesting ideas for community detection, in particular on how memory affects the detection of overlapping modules by link partitioning [\cite=evans] [\cite=ahn] [\cite=boldi]. At a more fundamental level, they revisit the concept of small-worldness [\cite=Watts], by showing that a system, however small it is from a topological point of view, can be arbitrarily large or small from a dynamical poinf of view because of memory. In that direction, it would also be interesting to explore the criterion ([\ref=res]) behaves for models of random walks with memory [\cite=boldi] [\cite=Rosvall], and to study further the spectral properties of dynamics in memory networks.

In this work, we have focused on random walks, but a similar analysis could be developed for other types of dynamical models where memory is expected to be present, such as synchronization, for which the second dominant eigenvalue of the Laplacian plays a central role [\cite=syn2], or epidemic spreading, where the epidemic threshold is related to the largest eigenvalue of the adjacency matrix of the graph [\cite=epidemic]. In opinion dynamics, history-dependent spreading processes are also non-Markovian. In particular, let us mention complex diffusion (in opposition with simplex diffusion), where redundancy promotes diffusion [\cite=Centola]. Another important area of application concerns multiplex networks [\cite=Multi1] [\cite=Multi1b] [\cite=Multi2], that is networks when nodes communicate through different interaction channels, and where information can be encapsulated inside one layer of communication, thereby leading to path-dependent transmissibility [\cite=Min]. As an interesting research direction, let us note that diffusion on multiplex networks can be seen as a model for second-order Markov diffusion, where links of different types are partitioned into different layers in the multiplex.

Finally, this work sheds new light on a question that has puzzled researchers in recent years: does temporality accelerate or slow down diffusion in temporal networks [\cite=Holme2012] [\cite=Rocha2010] [\cite=Karsai2011] [\cite=Peruani2011] [\cite=Masuda2013]. Previous research has shown that temporality affects diffusion in different ways, because of the burstiness of the temporal patterns [\cite=Lambiotte2013], e.g. through the so-called waiting time paradox [\cite=Miritello2011], or of the temporal correlations between consecutive contacts present in the data [\cite=Kovanen2011] [\cite=Rocha2012]. In the latter case, the dynamics can be modeled as a non-Markovian process, since the next contact depends not only on the current one, but also on the previous ones [\cite=Pfitzer] . It has recently been shown that real-world temporal data are well-reproduced by second-order Markov models, and observed that the spectral gap may either increase or decrease due to memory [\cite=Scholtes]. Our work explicitly identifies the mechanism behind this change: the redistribution of flows compared to the Fiedler vector because of memory.