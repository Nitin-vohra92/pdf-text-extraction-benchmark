Corollary Claim Open Question Pause to Ponder Goal Lemma Remark Observation Fact Proposition Definition Example Construction

Bucklin Voting is Broadly Resistant to Control

Supported in part by the DFG under grants RO 1202/12-1 (within the European Science Foundation's EUROCORES program LogICCC: "Computational Foundations of Social Choice") and RO 1202/11-1. Work done in part while the first and third author were visiting NICTA, Sydney, and the University of Newcastle. Some results for Bucklin voting in the present paper supersede the corresponding result for fallback voting shown in [\cite=erd-pir-rot:t-With-Complete-CATS10-Ptr:fallback-voting].

,   Lena Piras,  and   Jörg Rothe

Institut für Informatik Heinrich-Heine-Universität Düsseldorf 40225 Düsseldorf Germany

Introduction

Since the seminal paper of Bartholdi et al. [\cite=bar-tov-tri:j:control], the complexity of electoral control--changing the outcome of an election via such actions as adding/deleting/partitioning either candidates or voters--has been studied for a variety of voting systems. Unlike manipulation [\cite=bar-tov-tri:j:manipulating] [\cite=bar-orl:j:polsci:strategic-voting] [\cite=con-san-lan:j:when-hard-to-manipulate] [\cite=fal-hem-hem-rot:j:llull-copeland-full-techreport], which models attempts of strategic voters to influence the outcome of an election via casting insincere votes, control models ways of an external actor, the "chair," to tamper with an election's participation structure so as to alter its outcome. Another way of tampering with the outcome of elections is bribery [\cite=fal-hem-hem:j:bribery] [\cite=fal-hem-hem-rot:j:llull-copeland-full-techreport], which shares with manipulation the feature that votes are being changed, and with control the aspect that an external actor tries to change the outcome of the election. Faliszewski et al. [\cite=fal-hem-hem-rot:b:richer] survey known complexity results for control, manipulation, and bribery.

Elections have been used for preference aggregation not only in the context of politics and human societies, but also in artificial intelligence, especially in multiagent systems, and other topics in computer science (see, e.g., [\cite=eph-ros:j:multiagent-planning] [\cite=gho-mun-her-sen:c:voting-for-movies] [\cite=dwo-kum-nao-siv:c:rank-aggregation]). That is why it is important to study the computational properties of voting systems. In particular, complexity can be used to protect elections against tampering attempts in control, manipulation, and bribery attacks by showing that such attacks, though not impossible in principle, are computationally prohibitive.

Regarding control, a central question is to find voting systems that are computationally resistant to as many of the common 22 control types as possible, where resistance means the corresponding control problem is [formula]-hard. Each control type is either constructive (the chair seeking to make some candidate win) or destructive (the chair seeking to make some candidate not end up winning). Erdélyi and Rothe [\cite=erd-rot:c:fallback-voting] proved that fallback voting [\cite=bra-san:j:preference-approval-voting], a hybrid voting system combining Bucklin with approval voting, is resistant to each of these 22 standard control types except five types of voter control. They proved that fallback voting is vulnerable to two of those control types (i.e., these control problems are polynomial-time solvable), leaving the other three cases open. Erdélyi, Piras and Rothe [\cite=erd-pir-rot:t-With-Complete-CATS10-Ptr:fallback-voting] recently proved that fallback voting is resistant to constructive and destructive control by partition of voters in the tie-handling model "ties promote."

Thus fallback voting is not only fully resistant to candidate control [\cite=erd-rot:c:fallback-voting] but also fully resistant to constructive control. In terms of the total number of proven resistances it draws level with "sincere-strategy preference-based approval voting" (SP-AV, another hybrid system proposed by Brams and Sanver [\cite=bra-san:j:critical-strategies-under-approval]): Both have the most (19 out of 22) proven resistances to control among natural voting systems with a polynomial-time winner problem. Among such systems, only plurality and SP-AV were previously known to be fully resistant to candidate control [\cite=bar-tov-tri:j:control] [\cite=hem-hem-rot:j:destructive-control] [\cite=erd-now-rot:j:sp-av], and only Copeland voting and SP-AV were previously known to be fully resistant to constructive control [\cite=fal-hem-hem-rot:j:llull-copeland-full-techreport] [\cite=erd-now-rot:j:sp-av]. However, plurality has fewer resistances to voter control, Copeland voting has fewer resistances to destructive control, and SP-AV is arguably less natural a system than fallback voting [\cite=erd-now-rot:j:sp-av] [\cite=bau-erd-hem-hem-rot:t:computational-apects-of-approval-voting].

Even more natural than fallback voting, however, is Bucklin voting itself, one of its two constituent systems. After all, fallback voting is a hybrid system in which voters are required to provide two types of preference (a ranking of candidates and an approval vector), whereas in Bucklin voting it is enough for the voters to rank the candidates. Moreover, Bucklin voting has the important property that it is majority-consistent, which means that whenever a majority candidate exists, he or she is the (unique) Bucklin winner. In contrast, fallback voting is not majority-consistent.

In this paper, we study the control complexity of Bucklin voting and show that it has as many control resistances as fallback voting in the 20 cases investigated so far. In particular, Bucklin voting is also fully resistant to both candidate control and constructive control.

This paper is organized as follows. In Section [\ref=sec:preliminaries], some basic notions from social choice theory, and in particular Bucklin voting, as well as the 22 standard types of control are defined. Our results on the control complexity of Bucklin voting are presented in Section [\ref=sec:results]. Finally, Section [\ref=sec:conclusions] provides some conclusions and open questions.

Preliminaries

Elections and Voting Systems

An election (C,V) is given by a finite set C of candidates and a finite list V of votes over C. A voting system is a rule that specifies how to determine the winner(s) of any given election. The two voting systems considered in this paper are Bucklin voting and fallback voting.

In Bucklin voting, votes are represented as linear orders over C, i.e., each voter ranks all candidates according to his or her preferences. For example, if C  =  {a,b,c,d} then a vote might look like [formula] i.e., this voter (strictly) prefers c to d, d to a, and a to b. Given an election (C,V) and a candidate c∈C, define the level i score of c in (C,V) (denoted by [formula]) as the number of votes in V that rank c among their top i positions. Denoting the strict majority threshold for a list V of voters by [formula], the Bucklin score of c in (C,V) is the smallest i such that [formula]. All candidates with a smallest Bucklin score, say k, and a largest level k score are the Bucklin winners (BV winners, for short) in (C,V). If some candidate becomes a Bucklin winner on level k, we call him or her a level k BV winner in (C,V). Note that a level 1 BV winner must be unique, but there may be more level k BV winners than one for k > 1, i.e., an election may have more than one Bucklin winner in general.

As a notation, when a vote contains a subset of the candidate set, such as [formula] for a subset D  ⊆  C, this is a shorthand for [formula], where the elements of [formula] are ranked with respect to some (tacitly assumed) fixed ordering of all candidates in C. For example, if C  =  {a,b,c,d} and D  =  {b,d} then "[formula]" is a shorthand for the vote [formula].

Types of Electoral Control

There are 11 types of electoral control, each coming in two variants. In constructive control [\cite=bar-tov-tri:j:control], the chair tries to make his or her favorite candidate win; in destructive control [\cite=hem-hem-rot:j:destructive-control], the chair tries to prevent a despised candidate's victory. We refrain from giving a detailed discussion of real-life scenarios for each of these 22 standard control types that motivate them; these can be found in, e.g., [\cite=bar-tov-tri:j:control] [\cite=hem-hem-rot:j:destructive-control] [\cite=fal-hem-hem-rot:j:llull-copeland-full-techreport] [\cite=hem-hem-rot:j:hybrid] [\cite=erd-now-rot:j:sp-av]. However, we stress that every control type is motivated by an appropriate real-life scenario.

We start with partition of voters with the tie-handling rule "ties promote" (TP), see Hemaspaandra et al. [\cite=hem-hem-rot:j:destructive-control]. This control type produces a two-stage election with two first-stage and one final-stage subelections. The constructive variant of this problem is:

The destructive variant of this problem is defined analogously, except it asks whether c is not a unique winner of this two-stage election. In both variants, if one uses the tie-handling model TE ("ties eliminate," see [\cite=hem-hem-rot:j:destructive-control]) instead of TP in the two first-stage subelections, a winner w of (C,V1) or (C,V2) proceeds to the final stage if and only if w is the only winner of his or her subelection. Each of the four problems just defined models "two-district gerrymandering."

There are many ways of introducing new voters into an election--think, e.g., of "get-out-the-vote" drives, or of lowering the age-limit for the right to vote, or of attracting new voters with certain promises or even small gifts), and such scenarios are modeled as Constructive/Destructive Control by Adding Voters: Given a set C of candidates, two disjoint lists of votes over C (one list, V, corresponding to the already registered voters and the other list, W, corresponding to the as yet unregistered voters whose votes may be added), a designated candidate c∈C, and a nonnegative integer k, is there a subset W'  ⊆  W such that [formula] and c is (is not) the unique winner in [formula]?

Disenfranchisement and other means of voter suppression is modeled as Constructive/Destructive Control by Deleting Voters: Given a set C of candidates, a list V of votes over C, a designated candidate c∈C, and a nonnegative integer k, can one make c the unique winner (not a unique winner) of the election resulting from deleting at most k votes from V?

Having defined these eight standard types of voter control, we now turn to the 14 types of candidate control. Now, the control action seeks to influence the outcome of an election by either adding, deleting, or partitioning the candidates, again for both the constructive and the destructive variant.

In the adding candidates cases, we distinguish between adding, from a given pool of spoiler candidates, an unlimited number of such candidates (as originally defined by Bartholdi et al. [\cite=bar-tov-tri:j:control]) and adding a limited number of spoiler candidates (as defined by Faliszewski et al. [\cite=fal-hem-hem-rot:j:llull-copeland-full-techreport], to stay in sync with the problem format of control by deleting candidates and by adding/deleting voters). Constructive/Destructive Control by Adding (a Limited Number of) Candidates, is defined as follows: Given two disjoint candidate sets, C and D, a list V of votes over [formula], a designated candidate c∈C, and a nonnegative integer k, can one find a subset D'  ⊆  D such that [formula] and c is (is not) the unique winner in [formula]? The "unlimited" version of the problem is the same, except that the addition limit k and the requirement "[formula]" are being dropped, so any subset of the spoiler candidates may be added.

Constructive/Destructive Control by Deleting Candidates is defined by: Given a set C of candidates, a list V of votes over C, a designated candidate c∈C, and a nonnegative integer k, can one make c the unique winner (not a unique winner) of the election resulting from deleting at most k candidates (other than c in the destructive case) from C?

Finally, we define the partition-of-candidate cases, again using either of the two tie-handling models, TP and TE, but now we define these scenarios with and without a run-off. The variant with run-off, Constructive/Destructive Control by Run-Off Partition of Candidates, is analogous to the partition-of-voters control type: Given a set C of candidates, a list V of votes over C, and a designated candidate c∈C, can C be partitioned into C1 and C2 such that c is (is not) the unique winner of the two-stage election in which the winners of the two first-stage subelections, (C1,V) and (C2,V), who survive the tie-handling rule run against each other in the final stage? The variant without run-off is the same, except that the winners of first-stage subelection (C1,V) who survive the tie-handling rule run against (C2,V) in the final round (and not against the winners of (C2,V) surviving the tie-handling rule).

Immunity, Susceptibility, Resistance, and Vulnerability

Let [formula] be a control type. We say a voting system is immune to [formula] if it is impossible for the chair to make the given candidate the unique winner in the constructive case (not a unique winner in the destructive case) via exerting control of type [formula]. We say a voting system is susceptible to [formula] if it is not immune to [formula]. A voting system that is susceptible to [formula] is said to be vulnerable to [formula] if the control problem corresponding to [formula] can be solved in polynomial time, and is said to be resistant to [formula] if the control problem corresponding to [formula] is [formula]-hard. These notions are due to Bartholdi et al. [\cite=bar-tov-tri:j:control] (except that we follow the now more common approach of Hemaspaandra et al. [\cite=hem-hem-rot:j:hybrid] who define resistant to mean "susceptible and [formula]-hard" rather than "susceptible and [formula]-complete").

Results

Overview

Table [\ref=tab:summary-of-results] shows in boldface our results on the control complexity of Bucklin voting. For comparison, this table also shows the results for fallback voting that are due to Erdélyi et al. [\cite=erd-rot:c:fallback-voting] [\cite=erd-pir-rot:t-With-Complete-CATS10-Ptr:fallback-voting], for approval voting that are due to Hemaspaandra et al. [\cite=hem-hem-rot:j:destructive-control], and for SP-AV that are due to Erdélyi et al. [\cite=erd-now-rot:j:sp-av].

Bucklin voting is resistant, vulnerable, and susceptible to the 22 types of control defined in Section [\ref=sec:preliminaries] as shown in Table [\ref=tab:summary-of-results].

Since Bucklin voting is the special case of fallback voting where each voter approves of every candidate, we have the following corollary. Note that, by the first item of Corollary [\ref=cor:Bucklin-summary-of-results], the resistances for Bucklin voting shown in the present paper imply all resistances for fallback voting shown in [\cite=erd-rot:c:fallback-voting] [\cite=erd-pir-rot:t-With-Complete-CATS10-Ptr:fallback-voting] except one: the destructive case of partition of voters in the tie-handling model TP.

Fallback voting inherits all the [formula]-hardness lower bounds from Bucklin voting (i.e., if Bucklin voting is resistant to a control type [formula] then fallback voting is also resistant to [formula]).

Bucklin voting inherits all the [formula] membership upper bounds from fallback voting (i.e., if fallback voting is vulnerable to a control type [formula] then Bucklin voting is also vulnerable to [formula]).

Susceptibility

If an election system E satisfies the "unique" variant of the Weak Axiom of Revealed Preference (Unique-WARP, for short), then E is immune to constructive control by adding candidates (by adding a limited number of candidates), and this observation has been applied to approval voting [\cite=bar-tov-tri:j:control] [\cite=hem-hem-rot:j:destructive-control]. Unlike approval voting but just as fallback voting, Bucklin voting does not satisfy Unique-WARP.

Bucklin voting does not satisfy Unique-WARP.

Indeed, as we will now show, Bucklin voting is susceptible to each of our 22 control types. Our proofs make use of the results of [\cite=hem-hem-rot:j:destructive-control] that provide general proofs of and links between certain susceptibility cases. For the sake of self-containment, we state their results, as Theorems [\ref=thm:voiced-control], [\ref=thm:duality-constructive-destructive-control], and [\ref=thm:susceptibility-implications], in the appendix.

We start with susceptibility to candidate control.

Bucklin voting is susceptible to constructive and destructive control by adding candidates (in both the "limited" and the "unlimited" case), by deleting candidates, and by partition of candidates (with or without run-off and for each in both model TE and model TP).

We now turn to susceptibility to voter control.

Bucklin voting is susceptible to constructive and destructive control by adding voters, by deleting voters, and by partition of voters (in both model TE and model TP).

Candidate Control

Fallback voting is a hybrid system combining Bucklin voting with approval voting. While fallback and approval voting behave quite differently with respect to immunity/vulnerability/resistance to control (contrast the results of Hemaspaandra et al. on approval voting [\cite=hem-hem-rot:j:destructive-control] with those of Erdélyi et al. [\cite=erd-rot:c:fallback-voting] [\cite=erd-pir-rot:t-With-Complete-CATS10-Ptr:fallback-voting] on fallback voting, see Table [\ref=tab:summary-of-results]), Bucklin voting seems to behave equally well as fallback voting in terms of control resistance. In particular, like fallback voting, Bucklin voting is also fully resistant to candidate control.

Bucklin voting is resistant to each of the 14 standard types of candidate control.

All reductions except one (namely that for constructive control by deleting candidates, see Lemma [\ref=lem:bv-deleting-candidates-constr]) apply Construction [\ref=con:bv-resistance-general-candidate-control] below. This construction is based on that for fallback voting [\cite=erd-rot:c:fallback-voting]; however, there are significant differences. In fallback voting, the disapproved candidates need not be ranked and can safely be ignored, since they cannot score points. In Bucklin voting, however, there are no disapproved candidates, so every candidate has to be placed at a suitable position in each vote to make the reduction work. Thus the reductions for Bucklin voting will be more specific and the arguments more involved. Also, since every candidate can potentially score points in Bucklin voting, no matter what his or her position in a vote is, we have to use a restricted version of Hitting Set , which by Lemma [\ref=lem:rhs] is also [formula]-complete:

We first need to show that Restricted Hitting Set is [formula]-complete in order to apply Construction [\ref=con:bv-resistance-general-candidate-control] in the proof of Theorem [\ref=thm:bv-candidate-control].

Restricted Hitting Set is [formula]-complete.

We now give a detailed proof of Theorem [\ref=thm:bv-candidate-control] (except for the case of constructive control by deleting candidates, which will be handled separately in Lemma [\ref=lem:bv-deleting-candidates-constr]) via Construction [\ref=con:bv-resistance-general-candidate-control] in Lemmas [\ref=lem:bv-adding-candidates], [\ref=lem:bv-deleting-candidates-destr], and [\ref=lem:bv-partition-candidates]. The proofs of these lemmas in turn will make use of Lemma [\ref=lem:bv-resistance-candidate-control] below.

Consider the election (C,V) constructed according to Construction [\ref=con:bv-resistance-general-candidate-control] from a Restricted Hitting Set instance (B,S,k).

c is the unique level 2 BV winner of ({c,d,w},V).

If S has a hitting set B' of size k, then w is the unique BV winner of election [formula].

Let [formula]. If c is not a unique BV winner of election [formula], then there exists a set B'  ⊆  B such that

[formula],

w is the unique level 2 BV winner of election [formula], and

B' is a hitting set for S of size at most k.

Bucklin voting is resistant to constructive and destructive control by adding candidates (both in the limited and the unlimited version of the problem).

Bucklin voting is resistant to destructive control by deleting candidates.

Bucklin voting is resistant to constructive and destructive control by partition of candidates and by run-off partition of candidates (for each in both tie-handling models, TE and TP).

Next we handle the one missing candidate-control case for Bucklin voting. Our reduction in this case is from the [formula]-complete problem Hitting Set , which is defined as follows (see [\cite=gar-joh:b:int]):

Bucklin voting is resistant to constructive control by deleting candidates.

Voter Control

We now turn to voter control for Bucklin voting. Our reductions are from the [formula]-complete problem Exact Cover by Three-Sets ( X3C, for short), which is defined as follows (see [\cite=gar-joh:b:int]):

Bucklin voting is resistant to constructive control by adding voters, by deleting voters, and by partition of voters in model TE and model TP, but is vulnerable to destructive control by adding and by deleting voters.

Bucklin voting is resistant to constructive control by adding voters.

Bucklin voting is resistant to constructive control by deleting voters.

Bucklin voting is vulnerable to destructive control by adding and deleting voters.

Bucklin voting is resistant to constructive control by partition of voters in both tie-handling models, TE and TP.

Conclusions and Open Questions

We have shown that Bucklin voting is resistant to all standard types of candidate control and all standard types of constructive control. In total, it possesses at least 18 resistances to the 22 commonly studied control types, it has at least two (and can have no more than four) vulnerabilities, and two cases remain open: destructive control by partition of voters in both tie-handling models, TE and TP. For comparison, recall from Table [\ref=tab:summary-of-results] that, for destructive control by partition of voters, approval voting is vulnerable both in model TE and TP, SP-AV is vulnerable in model TE but resistant in model TP, and fallback voting is resistant in model TP and it is open whether fallback voting is vulnerable or resistant to this control type in model TE.

Only SP-AV and fallback voting are currently known to be resistant to one more control type than Bucklin voting. However, Bucklin voting is arguably a simpler and more natural voting system; for example, unlike SP-AV and fallback voting, it is a majority-consistent voting rule.

Some Results of [\cite=hem-hem-rot:j:destructive-control] Used in Section [\ref=sec:results:susceptibility]

If a voiced voting system is susceptible to destructive control by partition of voters (in model TE or TP), then it is susceptible to destructive control by deleting voters.

Each voiced voting system is susceptible to constructive control by deleting candidates.

Each voiced voting system is susceptible to destructive control by adding candidates.

A voting system is susceptible to constructive control by adding candidates if and only if it is susceptible to destructive control by deleting candidates.

A voting system is susceptible to constructive control by deleting candidates if and only if it is susceptible to destructive control by adding candidates.

A voting system is susceptible to constructive control by adding voters if and only if it is susceptible to destructive control by deleting voters.

A voting system is susceptible to constructive control by deleting voters if and only if it is susceptible to destructive control by adding voters.

If a voting system is susceptible to constructive control by partition of voters (in model TE or TP), then it is susceptible to constructive control by deleting candidates.

If a voting system is susceptible to constructive control by partition or run-off partition of candidates (in model TE or TP), then it is susceptible to constructive control by deleting candidates.

If a voting system is susceptible to constructive control by partition of voters in model TE, then it is susceptible to constructive control by deleting voters.

If a voting system is susceptible to destructive control by partition or run-off partition of candidates (in model TE or TP), then it is susceptible to destructive control by deleting candidates.