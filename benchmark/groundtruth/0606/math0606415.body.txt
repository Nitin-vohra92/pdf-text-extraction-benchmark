Corollary

The word problem distinguishes counter languages

Introduction

Connections between formal language theory and group theory have been considered by many authors. If H is generated as a group by a finite set X, and if we let X± be the set X together with formal inverses, one important language to consider is the word problem, which is the set of words over X± representing the identity element of H. The formal language classification of the word problem of a group is independent of generating set in the sense that if F is a family of languages and if X and Y are two finite generating sets for a group H, then the word problem of H with respect to X is in F if and only if the word problem of H with respect to Y is in F (see Gilman [\cite=Gilman:1996]). Therefore we can refer to the word problem of a group rather than to the word problem of a particular generating set for a group.

It is natural then to ask about the extent to which the algebraic structure of a group H determines the formal language classification of the word problem of H. In 1975 Anisimov and Seifert [\cite=AnisimovSeifert:1975] proved that the word problem of H is a regular language if and only if H is finite, and in 1985 Muller and Schupp [\cite=MullerSchupp:1983] [\cite=MullerSchupp:1985] proved that the word problem of H is a context-free language if and only if H is virtually free. While the Anisimov and Seifert result can be proven easily from first principles, the Muller and Schupp result relies heavily on a deep result of Stallings concerning one-ended groups [\cite=stallings]. In 1991 Herbst [\cite=Herbst:1991] used the Muller and Schupp result to show that the word problem of H is a one-counter language if and only if H is virtually cyclic. Notice that it follows from these results that if we restrict our attention to languages which are word problems, nondeterministic automata which are either finite state, pushdown or one-counter are no more powerful than their deterministic counterparts.

In formal language theory there are a variety of ways to generalize the ideas of finite-state, pushdown and one-counter automata. One such way is to consider G-automata, where G is a group. Loosely, if G is a group, a G-automaton over a finite alphabet X is an automaton in which each edge is labeled by an ordered pair, the first coordinate of which is an element of G and the second coordinate of which is an element of X± or the empty word. A word w over X± is accepted by A if there is a path from the initial state to a final state for which the second coordinate reads the letters of w and the product of the corresponding first coordinates is the identity element of G. If we take G to be the trivial group, a G-automaton is simply a finite-state automaton, and if we take [formula], a G-automaton is a one-counter automaton. For [formula], a G-automaton is an n-counter automaton. We show below that the word problem of [formula] is accepted by a nondeterministic m-counter automaton if and only if m  ≥  n, so larger rank free abelian groups require more counters to accept their word problems. Thus, the natural heirarchy of counter languages coming from the number of counters used does not collapse in the nondeterministic case of word problems of groups.

We note that sometimes counter automata are described as blind counter automata (see Mitrana and Stiebe [\cite=MitranaStiebe]) to emphasize the fact that the counters can not be examined until at an accept state.

A pushdown-automaton is equivalent in power to a G-automaton where G is free [\cite=Kambites:overview]. Kambites proved that for groups G and H, W(H) is accepted by a deterministic G automaton if and only if H has a finite index subgroup which embeds in G [\cite=Kambites:word], so in the deterministic case, at least n counters are required to accept the word problem of [formula]. Furthermore, he posed the following question: "For what groups G is it true that deterministic and non-deterministic G-automata accept the same word problems?" Below, Theorem [\ref=mainthm] answers that question in the case that G is abelian: deterministic and non-deterministic G-automata accept the same word problems. Our methods are elementary: we rely entirely on basic linear algebra.

Notation and definitions

Let G be a group. We define a G-automaton over X to be a finite directed graph with a distinguished initial vertex, some distinguished final vertices, and with edges labeled by [formula] where ε is the empty word. We will refer to vertices as states. By a loop we mean an edge that starts and ends at the same state, and by a circuit we mean a path that does so.

A G-automaton over X is said to accept a word [formula] if there is a path p from the initial state to some final state labeled (1,w), where 1 is the identity element of G. In this case p is called an accepting path.

If n is a positive integer, a [formula]-automaton is called an n- counter automaton. An n-counter language is one that is accepted by an n-counter automaton. If r is a regular expression over X±, we let L(r) denote the language denoted by r.

General Preliminaries

We will need to rely on two general results about languages accepted by G-automata. The first establishes that having an n-counter word problem is a property of a group, rather than of a particular generating set for the group. The proof relies on basic properties of rational transductions as summarized by Gilman [\cite=Gilman:1996] and Kambites [\cite=Kambites:overview], for example.

If G and H are groups, and if X and Y are two finite generating sets for H, then the word problem for H with respect to X is accepted by a G-automaton if and only if the word problem for H with respect to Y is as well.

Fix a group G, and let F be the set of languages which are accepted by some G-automaton. Let WX be the word problem of H with respect to X, and let WY be the word problem of H with respect to Y. Suppose that WX∈F. Then WY is a rational transduction of WX (see Proposition 2 in [\cite=Kambites:overview]). F forms a family of languages. It follows that F is closed under rational transduction (see Theorem 6.2 in [\cite=Gilman:1996]). Therefore WY∈F.

The second general result establishes that the intersection of a regular language and an n-counter language is itself n-counter. This is Lemma 3 in Elder [\cite=Elder] and an immediate consequence of Theorem 4 in Kambites [\cite=Kambites:overview]. Later we will need to refer to specific characteristics of an n-counter automaton that accepts such an intersection. For this reason we include the following lemma and proof:

Let X be a finite set. Let L1 be regular language over X, and let L2 be a language accepted by a [formula]-automaton over X. Then [formula] is also accepted by a [formula]-automaton over X.

Let A1 be a finite-state automaton accepting L1. Let A2 be a [formula]-automaton accepting L2. We construct a [formula]-automaton B as follows. The set of states of B is Σ1  ×  Σ2, where Σi is the set of states of Ai. A state (σ1,σ2) is final if and only if σi is final in Ai for i = 1,2. For x∈X± and [formula], there is an edge B from (σ1,σ2) to (τ1,τ2) labeled (v,x) if and only if there is an edge in A1 from σ1 to τ1 labeled x and there is an edge in A2 from σ2 to τ2 labeled (v,x). Furthermore, there is an edge from (σ1,σ2) to (τ1,τ2) labeled (v,ε) if and only if one of three conditions holds:

there is an edge in A1 from σ1 to τ1 labeled ε, and there is an edge in A2 from σ2 to τ2 labeled (v,ε), or

v = 0, σ2  =  τ2 and there is an edge in A1 from σ1 to τ1 labeled ε, or

σ1  =  τ1 and there is an edge in A2 from σ2 to τ2 labeled (v,ε).

Words accepted by B are exactly those in [formula]: a word w in the intersection can follow a path labeled (0,w) to states (σ1,σ2) where σi is a final state for Ai; similarly, any word accepted by B can lead to a state (σ1,σ2) which is a product of final states via a path labeled (0,w) and would thus be accepted by each of the Ai.

Main Result

To show that we cannot accept the word problem of a free abelian group of rank n with a counter automaton with less than n counters, we proceed via a series of lemmas which allow us to consider automata of a preferred form and to derive later a contradiction from a property somewhat analogous to the ranks of vectorspaces not being less than that of their subspaces.

We let [formula], and suppose that [formula] is a basis for H as a free abelian group. Let [formula] be the formal inverses of the generators. Let [formula]. If [formula], let w(j) denote the word [formula].

Let H and L be as above. Suppose W(H) is m-counter. Then there is an m-counter automaton A accepting L with the following structure:

A has a single final state σ.

A can be described as a collection of 2n subautomata [formula] satisfying the following criteria:

the only edges between the subautomata are labeled (v,ε) for some [formula], and these edges go from A(xi) to A(xi + 1) for [formula], from A(Xi) to A(Xi + 1) for [formula], and from A(xn) to A(X1).

for all a = xi,Xi, edges in A(a) are labeled (v,ε) or (v,a) where [formula].

Let A1 be a finite-state automaton accepting the regular language [formula] of the following specific form. There are n states σxi, n states σXi, and two additional states α, the initial state, and β, the only final state. For a = xi,Xi, the state σa has a loop labeled a. For [formula], there are edges labeled ε from σxi to σxi + 1 and from σXi to σXi + 1. In addition there are edges labeled ε from α to σx1and from σXn to β.

Let A2 be a [formula]-automaton accepting W(H). We may assume without loss of generality that A2 has a single final state. By Lemma [\ref=intersection], there exists a [formula]-automaton A accepting L. The automaton constructed in the proof of Lemma [\ref=intersection] has all of the desired properties.

We want to show that m  ≥  n using linear algebra. The following lemma will allow us to do so. [formula] denotes the set of positive integers.

If m  <  n then [formula] is not contained in the union of finitely many translates of subspaces of [formula] each of which has dimension at most m.

Suppose that [formula] is contained in the union of [formula], where each Qi is a translate of an m-dimensional subspace of [formula]. Let k  =  r + 1. Let B(k) be the set of all points [formula] in [formula] such that xi  ≤  k for [formula]. There are kn elements in B(k). Let [formula]. There are at most km elements in Bi. Therefore there at most rkm < km + 1  ≤  kn elements in B(k). We have reached a contradiction.

Let p and q be accepting paths in an m-counter automaton. We will say that p  <  q if q can be obtained from p by adding circuits. We will say that p is minimal if it is minimal with respect to <  .

Let H and L be as above. Suppose W(H) is m-counter. Let A be an m-counter automaton A accepting L with the structure posited in Lemma [\ref=autStructure]. There exist accepting paths p, [formula] such that

p  <  qi for [formula];

if [formula] such that w(j) is the word accepted by p, and if [formula] such that w(j + ai) is the word accepted by qi, then [formula] is a set of linearly independent vectors in [formula].

Let p be an accepting path which is minimal with respect to <  , and let w(j) be the word that it accepts. Let Sp be the semigroup spanned by all vectors of the form j'  -  j such that there is a path q accepting w(j') with q  >  p. Consider the subspace Vp of [formula] spanned Sp. Let Qp  =  j  +  Vp.

There are finitely many accepting paths p which are minimal with respect to <  . Suppose that none of these satisfies the criteria of the lemma. Then each Vp has dimension n - 1 or smaller. But then [formula] is contained in the union of finitely many translates of subspaces [formula] which are at most (n - 1)-dimensional. By Lemma [\ref=planes] this is not possible.

If the word problem of [formula] is an m-counter language, then m  ≥  n.

Suppose that the word problem of [formula] with respect to some generating set is an m-counter language, with m < n. By Lemma [\ref=genSet] we may assume that our generating set for [formula] is a free basis [formula]. Let [formula] be formal inverses of the generators. Let [formula]. By Lemma [\ref=autStructure] there exists an m-counter automaton A accepting L with the specific structure posited in that lemma.

We can take p,j,qi,ai as in Lemma [\ref=paths]. Let si be the [formula] contribution of the loops in qi that are not in p and which lie in [formula]. Let Si be the [formula] contribution of the loops in qi that are not in p and which lie in [formula]. Since p and qi are both accepting, and since qi is built up from p in the specific way that it is, si  +  Si  =  0.

Since any set of n vectors in [formula] is linearly dependent, then there exist [formula] not all zero such that [formula]. We construct an accepting path r as follows. We start with p. If αi is strictly positive, consider those loops of qi that are not part of p but that do lie in [formula]; add αi times as many traversals of these loops. The [formula] contribution of these loops is αisi. If αi is strictly negative, do the same thing but this time consider those loops of qi that are not part of p but that do lie in [formula], and add -  αi times as many traversals of these loops. The [formula] contribution of these loops is ( - αi)Si  =  αisi. The path r is accepting since [formula].

We now reach a contradiction by showing that the word accepted by r does not represent the identity and thus is not in [formula]. Consider the case, for example, when α1  <  0 and [formula]. Let [formula], and let v  =  j  +  ( - α1)a1. Then the word w accepted by r is of the form [formula], so w is in the word problem only if u  =  v. This is the case if and only if

[formula]

This is impossible since [formula] is linearly independent. All other cases reach a similar contradiction.

From the classification of finitely-generated abelain groups, we get the immediate corollary, analgous to Kambites Theorem 1 [\cite=Kambites:word] for the group case but in the nondeterministic case:

The word problem of finitely-generated abelian group H is recognized by a nondeterministic G-automaton if and only if H has a finite-index subgroup isomorphic to a subgroup of G.

Acknowledgments

We would like to thank Mark Kambites for the relevant background material from semigroup theory and Bob Gilman for suggesting the proof of Lemma [\ref=planes].