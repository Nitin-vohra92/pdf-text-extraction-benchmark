EpistAid: Interactive Interface for Document Filtering in Evidence-based Health Care

Introduction

Evidence-Based Health Care (EBHC) is a medical practice approach that emphasizes the use of research evidence to justify a medical treatment. Sackett et al. defined it as "the conscientious, explicit, and judicious use of current best evidence in making decisions about the care of individual patients" [\cite=sackett1996evidence]. EBHC has produced a large impact in the practice and teaching of medicine, since applying the knowledge gained from large clinical trials to patient care promotes consistency of treatment and optimal outcomes, in contrast to solely relying on habits or anecdotal cases [\cite=sackett1995need].

Despite its growing importance in health care, the process of answering a medical question is currently very expensive in time [\cite=Bekhuis2014], [\cite=Miwa2014]. Clinicians pose a question, seek studies related to it, select the most relevant to the question, then perform analysis to finally obtain conclusions. This situation can be problematic because in practice, health-care related decisions must be made quickly [\cite=Thomas2011]. Moreover, with the explosion of scientific knowledge being published, it is difficult for clinicians to stay updated.

In this context, some systems attempt to support clinicians in the process of collecting, organizing, and searching for scientific evidence such as Embase [\cite=Embase], DARE [\cite=DARE], and Epistemonikos[\cite=Rada2013]. In particular, Epistemonikos is a collaborative database which stores research articles that provide the best evidence according to the EBHC principles [\cite=Rada2013]. Since the evidence comes from scientific literature, this information is collected from specialized online sites such as PubMed and Cochrane, among more than 20 other sources of scientific information.

In addition to collecting, indexing and classifying medical research articles for EBHC, Epistemonikos developed "Evidence Matrices", a matrix visualization of a list of articles which provide the best evidence to answer a specific medical question, as seen in . Nowadays, the process of creating an evidence matrix is slow since it requires a large amount of manual and iterative effort from experts.

Contribution. In this article, we introduce EpistAid, a system with an intelligent user interface which support physicians in the process of creating these evidence matrices within Epistemonikos. Then, we contribute to EBHC and to the area of intelligent user interfaces by: (a) integrating dimensionality reduction and leveraging relevance feedback for assisting incremental document classification in EBHC, and (c) designing and implementing an interactive user interface which integrates the aforementioned methods to reduce the effort required to finish this important task of health care. Although previous works attempted to solve this issue automatically or with semi-supervised approaches, to the best of our knowledge this is the first work which integrates machine learning and information retrieval with an interactive user interface for EHBC. In this area, it is essential to keep a "human in the loop" in the process, since physicians require control and transparency while filtering documents to answer a clinical question.

Building Evidence Matrices

The evidence matrix is the basic unit in Epistemonikos. It is made of a list of papers which provide the evidence to answer a clinical question such as "Is there a relationship between vaccines with thimerosal and autism?". In the matrix, rows represent systematic reviews (SR) and columns are primary studies (PS) which have been cited in those SR, as seen in . PS is an umbrella term that includes any study design, qualitative or quantitative, where data is collected from individuals or groups of people. On the other side, the main objective of a SR is to synthesize primary studies.

The process of creating a final evidence matrix Mf is iterative, since involves the manual process of curating an automatically created matrix M0. The method for building the initial matrix M0 is shown in . It starts with a user selecting a seed SR, based on a clinical question. Using Breadth-First Search over the citation graph [\cite=cormen2009introduction], all the PS cited in the seed SR are added to the matrix as columns (L1-PS). Next, other SR in the database citing the L1-PS are added as rows (L2-SR). Finally, other PS cited in the L2-SR are added as additional columns (L3-SR).

The problem. M0 must be modified by clinicians until getting to Mf by: (i) removing papers not related to the clinical question, and (ii) adding new SR and PS strongly related to the clinical question. This process can take several months, especially (ii), since it involves manually searching and checking for papers which are not explicitly linked in the Epistemonikos' citation database.

Our solution. We call our solution EpistAid. We propose a series of methods which combined with an interactive user interface aim at reducing the time to produce Mf from M0. Our solution involves dimensionality reduction over the text of the articles [\cite=crain2012dimensionality], and utilizing the Rocchio algorithm for relevance feedback [\cite=Manning2008IIR].

Dataset

Epistemonikos collects articles from 26 online sources [\cite=EpisteSite]. The database contains around 370,000 documents of five types: (a) Primary Study, (b) Systematic Review, (c) Overview, (d), Structured Summary of PS, and (e) Structured Summary of SR. Among them, only (a) corresponds to specific studies, and the rest (b)-(e) are surveys of different level of detail, being (b) Systematic Review the most used. Table [\ref=tab:count-type] shows the number of items per publication type in Epistemonikos. Currently, there are about 2,700 public evidence matrices, but only close to 400 are in their final revised version. Physicians require 2-6 months to get from an initial version M0 to a final revise Mf.

EpistAid

Our solution encompasses a user interface and algorithms that can assist physicians during the process of filtering (removing and adding) documents related to a clinical question they want to answer. We present EpistAid in three parts: (i) User interface, which describes the layout and visual components, (ii) Interactions, where we justify and describe our design based on Schneidermann's visual Information-Seeking mantra [\cite=Shneiderman1996], and (iii) Algorithms, which support the intelligence behind the filtering process.

User interface

EpistAid user interface was developed using D3.js [\cite=Bostock:2011:DDD:2068462.2068631] and Bootstrap [\cite=Bootstrap]. The GUI layout, shown in , has 6 parts and is described as follows:

(A) Question Selection. This navigation area lets the users choose an evidence matrix, i.e., the document set they want to see and classify. Since we represent this set of documents as a document-term matrix (DTM) using a vector space model [\cite=Manning2008IIR], we perform dimensionality reduction over this DTM to represent each document with a low-rank vector of two dimensions. Users can choose the type of dimensionality reduction (PCA, LDA, MDS [\cite=engel2012survey]) they prefer in order to eventually visualize the documents in the two dimensional (2D) chart shown as (B). In , the user chose Principal Component Analysis over the documents of the evidence matrix "Thimerosal containing vaccines and autistic spectrum disorder."

(B) Documents Visualization. This area shows the documents as figures in a 2D chart. Its purpose is to provide an overview of the document set associated with the current evidence matrix Mi, and to let the user explore the content based on proximity among documents. As explained in the previous paragraph, the dimensionality reduction is chosen from the list in (A). In the 2D chart, the primary studies (PS) are represented by circles and the systematic reviews (SR) by slightly larger squares. The color is used to discriminate the current status of the document: relevant, non-relevant or unknown. Two unfilled triangles with thick borders represent the centroids of the relevant (pointing upwards) and non-relevant documents (pointing downwards). For selecting a set of documents, the user can draw a rectangle with custom dimensions, what we call a brush. The brush enables the user to navigate through all the documents by sub-setting them based on their positions in the 2D projections. The selected document are displayed as a list in the right-side panel (C).

(C) Selected Documents List. This panel lists the documents selected with the brush in 2D Document Visualization. When the brush tool has not been used yet it will show the documents that have not been classified yet (unknown classification). Each item in the list shows the document title, as well as a magnifier icon that will activate the Document Detail for the document, which will be displayed in panel (D). Also, three icons let the user to classify the paper (as relevant, non-relevant or unknown). The documents are sorted according to their similarity to the relevance model of the evidence matrix, a concept we explain in the next section Algorithms. (D) Document Detail. For a document selected in the Selected Documents List (C) panel, this area shows its meta-data (title, abstract, type, publication year and authors) and the classification algorithm prediction regarding its relevance. Its goal is to offer the user the option to review the documents in the same way they usually do with the current interface. The abstract can be shown in two different ways: without markup or marking the relevant and non-relevant document keywords. In the second case the words are highlighted changing the background color with the same colors of Documents Visualization.

(E) Relevant Documents Summary. This part shows a wordcloud of important words from the current relevant documents. Its main goal is to show a quick summary of the main features (words) within this group. These words can be obtained with two methods: most frequent or based on relevance [\cite=Sievert2014]. Each word is enclosed within a button. The background color represents the relevance of the word for the user: the darker, the more important the word. The user can increase and decrease the relevance of a word to the model by clicking the right and left buttons of the mouse, respectively.

(F) Selected Documents Summary. This view has the same structure as the Relevant Documents Summary but the documents it summarizes are the ones selected with the brush tool from Documents Visualization.

Interactions

Our interaction design is based on the visual Information-Seeking Mantra: overview first, zoom and filter, then details-on-demand [\cite=Shneiderman1996].

Overview first. We implement the overview-first functionality with the Documents Visualization (B) where users can see a summary of the documents from the selected evidence matrix in the 2D projection resultant from a dimensionality reduction over the term-document matrix.

Zoom and Filter: selecting documents and words. The brush tool described in the previous section allows users to subset documents from the 2D Documents Visualization, which can be eventually analyzed in detail. When users classify documents from panel (C) (Selected Documents List) and when they increase or decrease the relevance of specific words from panels (E) (Relevant Documents Summary) and (F) (Selected Documents Summary), they update an internal evidence matrix relevance model which allows the system to make predictions over non-classified documents. Moreover, our system subsequently suggest documents to be reviewed by users so they can confirm the classification prediction.

Details on demand. By allowing the users to click in the documents on the panel (F) (Selected Documents List), the systems provides additional details displayed in panel (D) (Document Detail). In this way, it allows the user to justify her decision to classify the document.

Algorithms

The main aspect of our "human-in-the-loop" algorithmic procedure starts with modelling the evidence matrix as a query, which is updated iteratively when users provide relevance feedback. We call this model the evidence matrix relevance model, and it is based on Rocchio's relevance feedback algorithm [\cite=Salton:1971:SRS:1102022]. We choose this model because it allows the use of feature boosting (in our case features=words) and it gives a sense of the current classification through the query.

Relevance feedback in EpistAid. We define a query qi as a vector of words, the weights calculated with TF-IDF as [formula] where n is the number of words in the query qi. In our system the initial query q0 is made from the words in the title and abstract of the Seed SR. Afterwards, we rank the documents in the first version of the evidence matrix M0 based on their cosine similarity with q0, predicting the top most similar as relevant and the top most dissimilar as non-relevant. We then recommend these documents to the users so they can confirm our predictions. Once the user provides feedback by manually classifying the recommended documents, as well as boosting or decreasing specific words from the EpistAid interface, we update the query iteratively, such that in iteration n the query is:

[formula]

Where qn - 1 is the last computed query, R is the set of relevant documents, I is the set of non-relevant documents, q0 is the initial query. The parameters α, β, γ and δ have values between 0 and 1. We use as parameters: δ  =  0.1, β  =  0, α  =  1 and γ  =  1 based on the values used in [\cite=Salton:1971:SRS:1102022].

The query qn represents the centroid of the relevant documents, and by analogy, we can represent iteratively the centroid of the non-relevant documents qn'. Both queries are represented visually as triangles in the 2D Documents Visualization panel of the EpistAid interface, as seen in .

Dimensionality Reduction In order to display in two dimensions the term-document matrix if and evidence matrix, we chose 5 different dimensionality reduction algorithms: Principal Components Analysis (PCA), Linear Discriminant Analysis (LDA), Multidimensional Scaling (MDS) [\cite=engel2012survey] and the recent t-distributed Stochastic Neighbor Embedding (t-SNE) [\cite=maaten2008visualizing]. The main idea is to allow the users to visualize the status and evolution of the whole document set of an evidence matrix, as well as filtering based on their visual proximity to the relevant and non-relevant query centroids.

Use Case

We present a use case of EpisteAid to filter the document set "Thimerosal-containing vaccines and autistic spectrum disorde". After selecting the document set, the interface will show the documents in a two dimensional projection using PCA. The Selected Documents List will show the all the documents, sorted by their similarity to the query. We will boost the words 'children', 'vaccination' and 'autism' and classify some papers of the list. These actions will feed the system so that it can predict classes with more information. The user can click the magnifying glass of a document on the Selected Documents List area to see more details about the document. This part will also show the classifier prediction when the user hovers the area. The goal is to give its prediction, only when the user decides to prevent bias in the classification. This process continues until the classification of all the articles is completed.

Related Work

Several approaches have been proposed to reduce the workload associated with the task of document filtering for citation screening in EBHC databases. Among them we can find: Active Learning([\cite=Figueroa2012],[\cite=Miwa2014], [\cite=Rathbone2015], [\cite=Wallace2010a], [\cite=Wallace2010b], [\cite=Wallace2011]), Automatic Classification ([\cite=Bekhuis2012], [\cite=GarciaAdeva2014], [\cite=Bekhuis2014], [\cite=Mo2015]), Document Ranking [\cite=Cohen2015], Relevance Feedback [\cite=Petitti2013], Document Priorization [\cite=Cohen2009] , and Visualization [\cite=Felizardo2012], [\cite=Felizardo2013]. The problem with the majority of these approaches is that they do not ensure 100% recall needed to reduce the bias of the research. Compared to these works, we provide the first controllable and transparent information filtering system for EBHC, inspired by controllable recommender system interfaces [\cite=Bostandjiev2012],[\cite=Parra2015].

Conclusion

In this paper we have presented EpistAid, a system with an interactive user interface which attempts to reduce the effort needed to curate evidence matrices in Epistemonikos. Our upcoming work is conducting a user study with the interface and techniques described. In addition, we would like to integrate into our framework more recent techniques for relevance feedback, such as the relevance models [\cite=lavrenko2001relevance].

Acknowledgments

Authors gratefully acknowledge the grant from agency grant#xxx-2015 (intentionally obfuscated to comply with double blind requirement)