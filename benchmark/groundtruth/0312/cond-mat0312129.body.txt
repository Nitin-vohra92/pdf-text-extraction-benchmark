.sty

Anjan Kundu Theory Group. Saha Institute of Nuclear Physics, 1/AF Bidhan Nagar, Calcutta 700 064, India.

cm

The dramatic increase in the efficiency of a quantum computer over a classical computer 1,2, raises a natural question asking, how much of this success could be attributed to its quantum nature and how much to its probabilistic content. To highlight this issue, we put forward the novel idea of a possible chemical computer driven by reaction-diffusion (RD) processes3 - 5 based on a probabilistic but classical approach. Such computers, obeying non-equilibrium statistical mechanics, can describe superpositions of empty and filled states with certain probabilities. With these probit states serving as computational basis states, such RD computers with operations satisfying a necessary semi-group property could mimic some well known quantum logic gates and carry out teleportation like procedure using entangled states, believed to be a prerogative of the quantum world. Moreover, assuming a nonlinear extension the RD computers could be used for cloning of arbitrary states, which is a famous forbidden operation in standard quantum computation.

It is important to compare the performance of a quantum computer (QC) with that of a classical but stochastic computer, to understand more clearly the reason behind the success of a QC. Though the randomised algorithm of Solovay-Strassen has prompted generalisation of the universal Touring machine to a probabilistic one 1,2, apparently not much attention has been paid in suggesting a computer, driven by probabilistic processes, as a possible alternative to a QC. We observe however that, such classical stochastic events, could be realised in physical systems controlled by RD processes3 - 5, which can describe a state as the superposition |P >  = p0|0 >  + p1|1 > , with  p0 + p1 = 1, where p0 is the probability with which an empty state |0 >  ([formula]) can occur, while p1 is the corresponding probability of |1 > , i.e of the state occupied by a single particle ([formula]). Such processes may be involved in an one dimensional array of N lattice sites and along with diffusion to the right or to the left ([formula]), can describe reactions like coagulation, decoagulation ([formula]) , birth and death ([formula]), occurring with certain probabilities. The evolution of these probabilities is governed by a master equation [formula], where [formula] is the probability of the system to be in state [formula], defined by a configuration stretched over N lattice sites with σi's being 0 or 1. The dynamical operator [formula] expressed through transition rates between the configurations [formula] and [formula] is assumed to be a linear operator determined by the physical processes involved. By introducing [formula], the evolution equation can be cast as a real Schrödinger equation ∂t|P >  = H|P > , with the state evolving in a finite time as |P(t) >  = U(t - t0)|P(t0) > . The linear evolution operator U with only positive and real matrix elements has an important constraint

[formula]

imposed by the conservation of total probability: [formula]. We call any matrix satisfying condition ( as the RD matrix.

We can notice the striking similarity between these relations and those of the quantum mechanics, where only the superposition coefficients are the probability amplitudes, the evolution equation is the complex Schrödinger equation and the evolution operator is a unitary matrix. This similarity, though formal, should be motivation enough to explore the idea of a RD computer for a possible alternative to a QC.

Note that, for an operation to qualify for any sequential computation, a primary requirement is that, it must exhibit at least a semi-group property. The quantum computation is guaranteed to have the semi-group property, following from its unitary group transformation linked to the reversibility of quantum dynamics. Returning to the RD processes, we find rather unexpectedly that, the defining constraint ( is preserved under evolution: [formula] and since U = I satisfies ( the set of RD matrices defining RD operations forms a semi-group. Moreover, since the inverse operation (U)- 1, if it exists, should also satisfy ( some of the RD operations might form a group. However, in general the required positivity condition on the matrix elements are not preserved under inverse operation and the group structure is obtained formally, only if this positivity condition is relaxed. We find that, such a group with N  ×  N matrices with real entries satisfying ( would involve N(N - 1) generators and act as a transformation group on a plane embedded in a N-dimensional Euclidean space, with defining relations [formula] on its coordinates. Such groups are simplest examples of algebraic groups. Interestingly, the matrices satisfying additional constraints similar to ( on their rows :[formula] constitute a subgroup of dimension (N - 1)2, which acts as a stationary group keeping the point with [formula] on the plane fixed under its action.

Therefore, we may apply in principle the RD processes for computation purposes and in analogy with a qubit call the elementary information in a RD computer, based on probabilistic approaches, as probit. In contrast to the qubits belonging to a Hilbert space with the state vectors describing a unit sphere, the probit states would belong to a real vector space, with the tip of the state vectors moving on a plane limited between positive coordinate axes of unit lengths. The action of RD matrices keeps this plane invariant by transforming a point to another point on the same plane. For single probit states the RD operators are 2  ×  2 matrices defined by two independent parameters U00 = a,U01 = b. We find a remarkable property that lim n  →    ∞(U(a,b))n  =  U(a∞,a∞), where [formula]. That is on repeated operation by an arbitrary RD matrix, all state vectors end up in an equilibrium state |s >  = a∞|0 >  + (1 - a∞)|1 >  , irrespective of the probit state we start with (see Fig 1).

Figure 1 Single probit states under action of RD operations, confirming also the semi-group property of RD matrices. Under repeated operations by U(a,b) all vectors from arbitrary initial position r0 evolve into a fixed point rg = (a∞,1 - a∞) (see text). For symmetric matrices, this fixed point [formula] becomes independent of even the operating RD matrix. In the figure particular values a = 0.4,b = 0.2, r0 = (0.7,0.3),rg = (0.25,0.75), and for the symmetric case a = 0.4, b = 0.6 have been considered.

For demonstrating the action of such computers we start with simplest RD operations, which could act like logic gates and transform computational probit states |0 > ,|1 >  to mixed states: |0 >   →  U00|0 >   +  U10|1 > , |1 >   →  U11|1 >   +  U01|0 > , with U being a RD matrix satisfying ( Notice that, if U01  =  U10 = 1, an empty state ends up giving birth to a particle, while a filled state becomes empty through a death process, i.e. the operation acts like a NOT-gate, similar to a quantum logic (QL) X-gate. Therefore, an arbitrary single probit state |P >  = p0|0 >  + p1|1 >  after passing through such a NOT-gate, due to the linearity of RD operations would yield |P̃ >  = p1|0 >  + p0|1 > , i.e the probabilities of computational states would toggle. Note that, other popular QL gates like Z-gate and the Hadamard-gate having negative matrix elements1 are not allowed here and this particular limitation, as we see below, prevents a RD computer to match a QC in solving some important algorithmic problems. Reciprocally however, while only the NOT-gate and the identity operation can have equivalent QL gates, all other values of Uij would represent new types of single probit gates achievable by RD computers alone. For example, the matrix with all [formula], having no inverse, transforms both |0 > ,|1 >  to the same uniform state [formula]. We use below this uniforming RD gate in designing teleportation of probit states.

Focusing now on two-probit operations we show that, C-NOT and Swap gates can also be defined through RD computation similar to QC. Defining in analogy with QL gates1 the first probit as the control state |x >  and the second one as the target state |y > , we may construct a C-NOT gate through RD operations, such that, if |x = 0 >  is an empty state, nothing happens to |y > , but if a particle is present in |x = 1 > , the computational state |y >  is negated through the NOT gate presented above. We check easily that the matrix UCNOT representing this operation satisfies the RD condition ( Observe also that, the control states can be copied by fixing y = 0, only if they are in the computational basis and not in the arbitrary state |P > . This indicates that the no-cloning theorem, a well known no-go theorem in QC, is valid also for the RD computers. However we will see below that, allowing nonlinear RD processes one could bypass this theorem.

We may construct the swap logic gate P driven by a RD computer, again in analogy with the QL gate. The action of such a gate through RD operations would mean, when the neighbouring two sites of the system are the same, i.e, either both empty or both filled- nothing changes. However, when a particle appears only at one site, it diffuses to the empty site, either to the right or to the left. We check again that this is a permitted RD matrix operation satisfying (

More interesting f-gates1 can be constructed as well in a RD computer, where a function x  →  f(x) mapping the values 0,1 to themselves, is induced by a logic gate, that changes the target state |y >   →  |y + f(x) > , depending on the nature of the control state |x > . We see immediately that similar to the C-NOT gate all such f-gates satisfy the RD condition ( Note that, for all above logic gates like NOT, C-NOT, Swap and f-gates the related RD matrices have well-defined inverses and therefore each of these RD operations forms a group. Moreover such RD operations formally coincide with the corresponding QL gates exhibiting unitarity and therefore the RD computers using these gates can serve as possible alternative to QC for related computations.

Another operation where RD computation can mimic a QC is the celebrated teleportation problem1. Here also the probabilistic logic can go parallel to the quantum logic and as in the quantum case we may consider that, Alice and Bob share an entangled two-probit Bell-like state [formula]. For teleporting a RD state |P >  = p0|0 >  + p1|1 > , Alice passes it as a control state through a C-NOT gate together with the first probits of the shared entangled state in her possession as the target, similar to the procedure adopted in QC. This gives the three probit state [formula], the first probits of which are then sent by Alice through a uniforming RD gate, elaborated above, yielding the final state [formula] with |P̃  >   being the toggled state. Therefore, if now Alice in her measurement of her two probit states finds either |00 >  or |10 >  the state |P >  itself has been teleported, while if the result is either |11 >  or |01 > , the toggled-state |P̃  >   has been sent, in which case the original state is recovered by passing it through a NOT-gate. The whole process could also be repeated using another Bell-like state [formula], which is the only other entangled state possible in RD computation. Thus it appears that, quantum teleportation like scenario could be reproduced within the classical RD processes.

Limitations of RD computers would show up in dealing certain algorithmic problems, which renders efficient solutions in QC. Deutsch problem is to tell whether a Boolean function f is constant (i.e. f(0)  =  f(1) ) or balanced ( i.e. f(0)  ≠  f(1)) by testing the outcome of an operation, while its Jozsa generalisation asks the same question (with slightly different definitions) for a N-bit state1. For testing these problems in a RD computer we may take the uniform state |u >  as the control and |0 >  as the target and see that, this pure input state after passing through the f-gate remains pure (either |u > |0 >  or |u > |1 > ) if the gate is constant, but turns into an entangled state in the balanced case. Therefore if somehow we can test for the entanglement, that would solve our problem. However, how to do this efficiently is not clear at this stage. Similarly, Grover's search algorithm1,2 in RD computation may also start with the uniform state |u >  passing through the oracle (initialised in the state |0 > ). If the oracle is attached to a search function f yielding f(X) = 1 for the solution set X and 0, otherwise, one naturally gets at the output a superposition of orthogonal states [formula]. Therefore, though the solution states |X >  are distinguishable theoretically from the other states |X' > , apparently in no way we can detect them to match the efficiency of a QC. In case of Shor's factorisation algorithm1, the case is even worse, since from the very beginning it uses complex superposition coefficients, which are not permitted in RD operations.

In spite of these deficiencies of the proposed RD computer, its domain permissible beyond reversible processes might give some generalities, as we have seen with the uniforming RD gate. Another possibility of extending RD processes with important potential applications is to induce nonlinear operations. Let us suppose that we intend to clone an arbitrary state |P >  = p0|0 >  + p1|1 > . Since we have the indication that this is not possible with linear RD processes, we allow the RD operator [formula] to depend on the initial state |P > . If it acts on the product state [formula], simple calculations reveal that, one could obtain the cloned state |P > |P >  at the output point, by requiring the nonlinear dependence as U(P)00  +  U(P)01 = 2p0. and U(P)10  +  U(P)11 = 2p1. We notice that the RD matrix condition ( still holds due to p0 + p1 = 1. Note that, since in RD processes the transition rates are determined mostly phenomenologically, the assumption of nonlinearity should not lead to any serious consequences, like violation of causality, faster than light propagation etc. as one must expect with similar nonlinear assumption in quantum computations1.

Therefore similar to quantum computers, our proposed classical computers based on reaction-diffusion processes and using probabilistic probit states can construct many important logic gates and carry out teleportation like processes, while through their nonlinear extension the cloning of mixed states could be made possible. Though the present work is purely theoretical, this novel concept of RD computation, being classical in nature, might be easier than a quantum computer to realise and handle in practice.

cm 1. Nielsen, M. A., nd Chuang, I. L., Quantum Computation and Quantum Information ( Cambridge Univ Press, Cambridge, 2000)

2. Leuenberger, M. N., and Loss, D., Quantum computing in molecular magnets. Nature,410, 789-793 (2001)

3. Glauber, R.J., Time dependent statistics of the Ising model. J. Math. Phys., 4, 294-307, (1963)

4. Nonequilibrium Statistical Mechanics in One Dimension ( Privman V. (ed.), Cambridge Univ Press, Cambridge 1996)

5. Henkel, M., Reaction-diffusion processes and their connection with integrable quantum spin chains. In Classical and Quantum Nonlinear Integrable Systems(ed. Kundu A.), 256-287 , (IOP publ., Bristol, 2003)

Acknowledgments I sincerely thank Prof A Chatterjee for explaining various nuances in quantum computation and carefully reading the manuscript and Dr Pijush Ghosh for an useful technical suggestion.