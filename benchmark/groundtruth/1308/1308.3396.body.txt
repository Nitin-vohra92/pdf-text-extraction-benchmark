Stable Fixed Points of Card Trick Functions

Introduction

Mathematics of card tricks has been a fascinating and fun subject for a long time. Ideas from number theory, group theory, dynamical systems and computer science have often been used to explain card tricks ([\cite=Ledet], [\cite=MedMorr], [\cite=RamnathScully] and [\cite=Scully]). Conversely, playing cards have also been often used to illustrate mathematical concepts of probability distributions ([\cite=Quinn] and [\cite=VanHecke]) and group theory ([\cite=Ensley] and [\cite=Lynch]). The 21-card trick involves dealing the cards and picking them up repetitively till the selected card is located.   The 21-card trick has been studied by Amir-Moez([\cite=Amir]) and Bolker ([\cite=Bolker]). While, Amir-Moez explains the trick as a limit of a function, there is no closed-form formula given for the function. Bolker ([\cite=Bolker]), explains the trick (referred to as Gergonne's trick in the paper) using ternary expansion and Radix sorting algorithm.   In this paper, we give a mathematical explanation of why the 21-card trick works using stability ideas from dynamical systems. The trick is represented using a simple linear discrete function which has a stable fixed point. It is shown that within three iterations any selected card reaches the position corresponding to the stable fixed point of the function. Further, two generalizations of the 21-card trick are discussed, namely, the p  ×  3-card trick and the p  ×  q-card trick. A functional representation is provided and existence of a stable fixed point is proved for each of the generalizations.   Since the distribution (laying down) and collection of cards are extremely important, we describe this process in section 2. In Section 3, we define a linear discrete function for the 21-card trick, prove that it has a stable fixed point and that it is reached within three iterations irrespective of the initial position of the selected card. In section 4, we generalize the 21-card trick to p  ×  3-card trick where p is any odd integer greater than 1. We determine the fixed point for the p  ×  3 case and show that it can be reached within a iterations (where p = 2a + 1), irrespective of the initial position of the selected card, using induction on a. In Section 5, we further generalize the 21-card trick to p  ×  q-card trick where p and q are odd integers greater than 1. The exact number of iterations required for the p  ×  q case depends on how large p is compared to q.   The proof in Section 3 is direct and easily constructible. This is generalized in Section 4, where the proof is more intricate and requires careful handling of inequalities. Finally, in Section 5 the method of induction is abstract and distinct from the one applied in Section 4. Further, this approach is pedagogically more appealing for undergraduates and shows them how mathematics is developed. Part of this work was presented at a Math Fair for high school students visiting a university campus, and was well-received.

Method for distributing the cards

Development and properties of the card-trick functions described in this paper are based on how the cards are distributed each time. Although there is no sleight-of-hand involved, the order in which the cards are laid out and collected is important. The main idea is to place the column indicated by the volunteer, in the middle of the stack before the next distribution. The method is described completely in this section and is referred to several times in the paper.   Hold 21 cards face-up in one hand. Place the first 3 cards face-up in a row from left to right. Then place the remaining cards in subsequent rows [formula]. A volunteer is then asked to mentally select a card and point out only the column in which the selected card lies. Suppose the volunteer points to column 3 as the column containing the selected card. Now collect all cards in column 1 in a stack, with the bottom card as first and without disturbing the order. Then place cards from column 3 on top of the stack, again picking the entire column at once, without disturbing the order. Now collect the cards in column 2, and place them on top of the stack. Redistribute as before, one card at a time, left to right, 3 cards in each row. Ask the volunteer to point the column containing the previously marked card. Then stack as before with the column pointed out by the volunteer in the middle of the pile.   The magic of the card trick is that within three iterations, the marked card will end up in the middle of the entire stack at position 11. For a more detailed description and pictures about the method for distributing the cards, see Find the Card (Magic Exhibit [\cite=MagicExhibit]) or Do a 21 card trick (WikkiHow [\cite=Wikki]).

Function describing the 21-card trick (p = 7 and q = 3)

In this Section, we explain why the 21-card trick works by using a mathematical function. For an introduction to discrete dynamical systems, fixed points, and stability properties please see Marotto ([\cite=Marotto]).   Let 21 cards be placed, face-up, in a 7 rows ×  3 columns distribution. Let n denote the position of the selected card. Each integer n, such that 1  ≤  n  ≤  21, can be expressed in the form n = 3k - l where k and l are unique integers with 1  ≤  k  ≤  7 and 0  ≤  l  ≤  2. In the expression 3k - l, integer k indicates the row and integer l is such that 3 - l is the column number in which the card lies. That is, when l = 2, the card is in the first column, when l = 1 the card is in the second column and when l = 0, the card is in the third column. Let f(n) be the position of the selected card after the column containing the selected card is stacked in the middle of the pile, in the manner described in Section [\ref=sec:Method]. Suppose that the selected card lies in row k and in any column. When the cards are collected, the column containing the selected card becomes the middle column. The selected card is placed in the kth row of the middle column in the collected pile of cards. In the collected pile, there are 7 cards from the first column, and 7 - k cards from the middle column before the selected card, making its position 7 + 7 - k + 1 or 15 - k. Hence, we define,

[formula]

where n = 3k - l, 1  ≤  n  ≤  21 and 1  ≤  k  ≤  7.

: Let n0 = 3k0  -  l0 be the position of the selected card in the initial layout, where 1  ≤  n0  ≤  21, 1  ≤  k0  ≤  7 and 0  ≤  l0  ≤  2. Then f3(n0)  =  11, [formula], where f is as described in equation ([\ref=eq:f_21a]). That is, 11 is the stable fixed point of f.

Proof: We first show that 11 is the fixed point of the function. Since 11 = 3(4) - 1, we have k = 4. Substituting n = 11 in equation ([\ref=eq:f_21a]), we have f(11) = 15 - 4 = 11. Thus, 11 is a fixed point of the function f.   We now prove the stability of the fixed point. Let n0 = 3k0  -  l0 be the position of the selected card in the initial layout. Then, 1  ≤  n0  ≤  21, 1  ≤  k0  ≤  7 and 0  ≤  l0  ≤  2.   Let n1  =  f(n0) = 15 - k0. Since, 1  ≤  k0  ≤  7 we have, - 7  ≤   - k0  ≤   - 1, hence, 15 - 7  ≤  15 - k0  ≤  15 - 1, or 8  ≤  n1  ≤  14. Using n1  =  3k1  -  l1 gives 3  ≤  k1  ≤  5.   Let n2  =  f2(n0)  =  f(n1) = 15 - k1. Since, 3  ≤  k1  ≤  5, we have, 10  ≤  n2  ≤  12. Now writing n2  =  3k2  -  l2 gives 4  ≤  k2  ≤  4 or k2 = 4.   Finally, let n3  =  f3(n0)  =  f(n2) = 15 - k2. Since k2 = 4, we have n3 = f3(n0) = 11, as required.   Thus, 11 is the stable fixed point of the 21-card trick function f in equation ([\ref=eq:f_21a]) and the selected card reaches the 11th position within three iterations irrespective of the initial position.[formula]

Generalization of 21-card trick to p  ×  3-card trick

We extend the above result to p  ×  3 cards where p  ≥  3 is an odd integer. Note that, if p = 1 then there is only one row of 3 cards and the trick is redundant.

: For an odd integer p = 2a + 1, with a  ≥  1, suppose that 3p cards are distributed in a p  ×  3 arrangement. Suppose that the selected card is at position n and cards are collected and distributed as described in Section [\ref=sec:Method]. Then within a iterations, the selected card will be at position [formula].

Proof: Let p  ×  3 cards be placed, face-up, in p rows and 3 columns. Let n denote the position of the selected card. Each integer n, such that 1  ≤  n  ≤  3p, can be expressed in the form where 1  ≤  k  ≤  p and 0  ≤  l  ≤  2. In the expression 3k - l, integer k represents the row in which the card lies and integer l is such that 3 - l is the column number in which the card lies. That is, when l = 2, the card is in the first column, when l = 1 the card is in the second column and when l = 0, the card is in the third column. Let g(n) be the position of the selected card after the first iteration, where the cards are collected and redistributed as described in Section [\ref=sec:Method]. Just as in the 21-card trick, if the selected card is in row k, and in any column, when the cards are collected, it gets placed at row k in the middle column in the stack. Thus, it is at position p + p - k + 1 or 2p + 1 - k in the collected pile of cards. We define the function g(n) as:

[formula]

We first show that the midpoint [formula] is a fixed point. Since we have [formula] and l = 1. Substituting [formula] in equation ([\ref=eq:g_3pa]), gives,

[formula]

Thus, the integer [formula] is a fixed point of the function g.   We now prove the stability of the fixed point. Let n0 = 3k0 - l0 be the initial position of the selected card. Then, 1  ≤  n0  ≤  3p, 1  ≤  k0  ≤  p and 0  ≤  l0  ≤  2.   Let n1 = g(n0) = 2p  +  1 - k0. Since 1  ≤  k0  ≤  p, we have, - p  ≤   - k0  ≤   - 1 and hence 2p  +  1  -  p  ≤  n1  ≤  2p  +  1  -  1. Thus,

[formula]

We find the bounds on k1 by expressing n1 = 3k1 - l1, in inequality ([\ref=eq:3p_n1]),

[formula]

Since 0  ≤  l1  ≤  2, we have p + 1  ≤  3k1 and 3k1  ≤  2p + 2. Consider the first expression p + 1  ≤  3k1. This implies that [formula]. Since, p  ≥  3, [formula]. But k1 is an integer, hence we get the lower bound 2  ≤  k1. Now consider the expression, 3k1  ≤  2p + 2, which implies [formula]. Given that p  ≥  3, we consider the following two cases. (i) When p = 3, [formula] and since k1 is an integer less than [formula], it must be less than or equal to 2, and 2 = p - 1. (ii) Otherwise, [formula] if and only if 5  ≤  p. Thus we have,

[formula]

Let n2 = g(n1) = 2p  +  1 - k1. If p = 3, then 2  ≤  k1  ≤  p - 1 implies that k1 = 2 and hence n2 = 5. Thus proving that [formula] is a stable fixed point of g and that for all integers n0, such that 1  ≤  n0  ≤  9, the fixed point is reached in two iterations.   For the rest of the proof we assume p  ≥  5 is an odd integer. As before using the bounds on k1, we obtain the estimate and express n2 as n2 = 3k2  -  l2. This implies that,

[formula]

Since, p  ≥  5, we have k2  ≥  7 / 3. But k2 is an integer, hence, k2  ≥  3. Also [formula] if and only if 7  ≤  p. When p = 5, we have [formula] and since k2 is an integer, k2  ≤  3  =  p - 2. Hence we have the estimate

[formula]

Let n3 = g(n2) = 2p  +  1 - k2. If p = 5, then 3  ≤  k2  ≤  p - 2 implies that k2 = 3 and hence n3 = 8. Thus proving that [formula] is a stable fixed point of g and that for all integers n0, such that 1  ≤  n0  ≤  15, the fixed point is reached in three iterations.   Using the estimate for k2, we obtain . Using n3 = 3k3  -  l3 and reasoning as before one can observe that . If p = 7, we obtain k3 = 4 and n4 = 11 and hence the claim holds for p = 7. Results obtained for odd integers 3,5,7 are summarized below in Table [\ref=tab:computations_3p].

We will prove the theorem by induction. We have shown that for p = 3, 2  ≤  k1  ≤  p - 1. Assume that for any odd integer p  ≤  2a - 1, with a  ≥  2, the following inequality holds: and we prove that a corresponding inequality holds for p = 2a + 1.   By definition, na = 2p + 1  -  ka - 1. By induction hypothesis, if p = 2a - 1, then ka - 1 = a and [formula].   Using the estimates for ka - 1, we have p + a  ≤  na  ≤  2p + 1 - a. Expressing na  =  3ka  -  la, yields p + a  ≤  3ka and 3ka  ≤  2p + 3 - a. The inequality a  +  1 / 3  ≤  ka together with the fact that ka is an integer, implies that a + 1  ≤  ka. Now consider [formula]. Observe that [formula] whenever 2a + 3  ≤  p. And if p = 2a + 1, then [formula]. Again using that ka is an integer, we have ka  ≤  a + 1  =  p - a. Thus, for all odd integers p such that p  ≥  2a  +  1, we have the bounds

[formula]

In particular, when p = 2a + 1, ka  =  a + 1 and [formula]. Thus for any n0, 1  ≤  n0  ≤  3p, [formula]. Hence the fixed point [formula] is stable.[formula]   In the p  ×  3 case, it is observed that when p = 2a + 1, at most a iterations are needed. In particular, when p = 7 as in the 21-card trick, a = 3, and at most 3 iterations are needed. See Table [\ref=table:selectedcards] and Figure [\ref=fig:stable_11].

Generalization of 21-card trick to p  ×  q-card trick

We now extend the above results to p  ×  q cards where p and q are odd integers, greater than or equal to 3.   Let p  ×  q cards be be placed, face up as described in the Section [\ref=sec:Method]. Let n denote the position of the selected card. Each integer n, such that 1  ≤  n  ≤  pq, can be expressed in the form where 1  ≤  k  ≤  p and 0  ≤  ł  ≤  q - 1. In the expression qk - l, integer k represents the row in which the card lies. The integer l is such that q - l is the column number in which the card lies. That is, when l = q - 1, the card is in the first column, when l = q - 2 the card in the second column etc., and when l = 0, the card is in the qth column.   Let h(n) be the position of the selected card after the first iteration. Just as in the 21-card trick, when the indicated column is placed in the middle of the collected stack of cards, there are (q - 1) / 2 columns of p cards each, on top, then the indicated column, and then (q - 1) / 2 columns of p cards each, below. If the selected card was in row k, in any column, it gets placed at position p(q - 1) / 2 + p - k + 1 in the collected stack of cards. Hence, we define h(n) as:

[formula]

: For n = qk - l and h(n) as defined in equation ([\ref=eq:h_pqa]), the midpoint, [formula] is a fixed point of h.

Proof: We first observe that giving [formula]. Substituting [formula] and [formula] in equation ([\ref=eq:h_pqa]), gives,

[formula]

Thus, the integer [formula] is a fixed point of h.[formula]

Stability of the fixed point

We prove that the fixed point [formula] of h is in fact stable using several propositions proved in this subsection.

: Let h(n) be the function as described in equation ([\ref=eq:h_pqa]). If then

Proof: For n as given, [formula], substituting in h(n) in equation ([\ref=eq:h_pqa]) gives,

[formula]

as claimed. [formula]   Proposition [\ref=prop:pqmiddlerow], implies that, if at any time the position of the card is in the middle row, that is the [formula]th row, then in the next iteration, the card reaches the fixed point irrespective of the column it was in, in the middle row.

: Let h(n) be the function as described in equation ([\ref=eq:h_pqa]). If n = qk - l is such that, then

Proof: For n = qk - l in rows [formula] through [formula], we have,

[formula]

That is h(n) lies in the middle row or the [formula]th row. By Proposition [\ref=prop:pqmiddlerow], [formula].[formula]

Remarks

Proposition [\ref=prop:pqmiddleblock] implies that, if after any iteration, the position of the selected card is within the block of q rows containing the middle row, that is within the [formula] rows above or below the middle row and the middle row itself, then the card reaches the fixed point within two more iterations, irrespective of the column it was in.

If p  ≤  q, then all p rows are within the middle block of q rows, and within two iterations, the selected card will be at the position denoted by the fixed point [formula]. Hence, [formula] is a stable fixed point for the function h for the case when p  ≤  q.

In general, for p > q, we think of p rows to be divided into blocks of q rows, starting at the middle row and extending to the first and last rows. Thus, the middle block consists of the middle row ([formula] row), and [formula] rows above and [formula] rows below the middle row. Since p - q is an even number, there are an equal number of rows above and below the middle block of q rows. Hence there are an equal number of blocks above and below the middle block with the possibility that the blocks containing the first and last row may have less than or equal to q rows. We have shown in the previous proposition that if the selected card lies in the middle block of q rows, then within two iterations, it would have the reached the fixed point position [formula]. We will now show by induction that if the selected card lies outside the middle block then it reaches the fixed point position [formula].

: Let p,q  ≥  3 be odd integers. For pq cards distributed as described in Section [\ref=sec:Method], let n = qk - l denote the position of the selected card where as before, 1  ≤  n  ≤  pq, 1  ≤  k  ≤  p and 0  ≤  l  ≤  q - 1. Let h(n) be as described in equation ([\ref=eq:h_pqa]). For k such that,

[formula]

where [formula] then [formula] in a finite number of compositions. That is, [formula] is a stable fixed point of h.

The bounds for k mean that the selected card initially lies within the block consisting of jq + 1 and jq + q rows below the middle block.   Proof: Let P(m) be the proposition that: If

[formula]

then [formula] in a finite number of compositions. The inductive hypotheses is that: P(m) is true for all m such that 0  ≤  m  <  i. We will show that P(i) is true. Let n = qk - l. Let k be such that,

[formula]

Then,

[formula]

Thus h(n) lies in the row [formula]. That is, if the selected card was anywhere in the entire block of q rows, it will be placed at row [formula] in the next iteration. Since, [formula], by induction hypothesis, the card will reach the position denoted by the fixed point in a finite number of iterations. By the principle of induction, P(j) is true for all [formula]. Hence, [formula] is a stable fixed point of the function h, for all odd p,q  ≥  3.[formula]   We proved in Proposition [\ref=prop:pqmiddleblock], that for p  ≤  q, at most two iterations are needed for any selected card to reach the middle of the stack. For p  >  q, we were able to prove in Section 5, that a finite number of iterations are required, however, the exact number of iterations depends on how large p is compared to q. We expect that, for q + 1  ≤  p  ≤  3q three iterations are required, and for 3q + 1  ≤  p  ≤  5q four iterations are required, for any selected card to reach the middle of the stack.

Acknowledgements

Thanks to Dr. M. Zeleke for suggestions and modifications; Work on this project was partially supported by Assigned Release Time (ART), William Paterson University awarded to both authors.