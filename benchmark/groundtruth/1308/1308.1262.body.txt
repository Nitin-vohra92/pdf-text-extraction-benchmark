Corollary Lemma Proposition Definition Remark

Pattern recognition issues on anisotropic smoothed particle hydrodynamics

Introduction

Smoothed particle hydrodynamics (SPH) has been a successful computer simulation paradigm originated in computational astrophysics since 1977 [\cite=Gingold1977] [\cite=Lucy1977]. Nowadays SPH is used in other areas and has gained significant improvement in accuracy and stability, not only on simulating compressible shock as also on performing high resolution incompressible fluid, solids etc, e.g. [\cite=Guo2011].

One essential issue in SPH is anisotropy, which arises naturally on performing adaptive interpolation, e.g. [\cite=marinho2010mecanica], where the dimensionality reduction to detect critical surfaces, as shock layers might be included. Anisotropy is an important subject in pattern recognition for feature extraction methods [\cite=Duda].

There are encouraging works on the application of artificial intelligence to reproduce real systems, mainly in the context of complex systems as in economics and many other social and life sciences, e.g. [\cite=VolkerGrimm2005]. The collective phenomena of star formation, unveiled in the intermittent pattern in the spiral galaxies arms, have been proposed by means of the stochastic self-propagating star formation model, in the sense that star formation is contagious, e.g. [\cite=Mineikis2010].

The present work is a brief discussion on some aspects of SPH circumstanced by the concepts of pattern recognition and artificial intelligence. Several details are omitted to fulfill the limited space with no significative lost of focus on reviewing the theory in the context of intelligent computing.

SPH database and space representation

The SPH database comprises N instances, usually thousand hundreds or even millions particles, indexed by a descriptor table PN. Each particle is addressed by a unique label, or descriptor i, and as much as possible the particle object is referred as just i or i-particle. Any particle attribute, say A, is addressed by sub-indexing the same with the particle label, Ai.

Since a specific SPH problem is headed by the mathematical, physical and computational models, the adopted methods might be included in the database in the form of classes and module libraries, described in a commonly used data model language as for instance the XML, which may also improve the information interchange between different SPH simulation bases.

The usual 3D space description in SPH uses hierarchical spatial tessellation, as for instance by means of octrees, e.g. [\cite=marinho2001sph], which are the 3D version of quadtrees. Other tree-based spatial tessellation schemes are also adopted. For instance [\cite=marinho2010mecanica] proposes an approach to easily adapt earlier versions of octree-based SPH codes to covariance-based octree tessellation to improve anisotropic kernel computations, e.g. [\cite=2006TWB.51.513-525].

Starring pattern recognition and AI in SPH

The k-nearest neighbor is a mathematical relation Nk  ⊆  PN  ×  PN, which associates i∈PN with a subset [formula], so that j∈Nk(i) if, and only if, the adopted distance [formula] from i to j obeys the inequality [formula]. The KNN algorithm is the method by which the relation Nk is populated by ordered pairs (i,j) in ⊆  PN  ×  PN, given the particle-descriptor table PN.

The Nk relation is asymmetric and reflexive. The later comes from the fact that each point is the nearest neighbor of itself - this is called improper neighbor. The former comes from the fact that if a is the proper nearest neighbor (not a reflection) of b, not necessarily b is the nearest neighbor of a. For example, a could be closer to a third point c than b, which is too faraway from any other point but a.

The KNN asymmetry reflects imperfections on writing simpler forms of the SPH conservation equations, which require particle commutation symmetry. To workaround the asymmetry issue is necessary to introduce the symmetric closure of the KNN relation, which is known as effective neighbors

[formula]

Of course, the KNN algorithm requires a predesign metric in the 3D space. If the metric is invariant under rotation, the KNN relation is isotropic. On the other hand, the metric relation is said anisotropic. For instance the Mahalanobis metric, as adopted in the KNN algorithm proposed by [\cite=marinho2010mecanica], is anisotropic and is used to reveal biased structures like the arms in spiral galaxy images.

The Mahalanobis distance ξij is defined in terms of the covariance tensor [formula]:

[formula]

where [formula] is the transpose of the matrix representation of the relative position vector [formula].

Of course, equation ([\ref=eq:mahalanobis-distance]) is not the only way of defining anisotropic distance in SPH. For instance, the positive-definite stress tensor [formula] might be eventually used to define the non-normalized anisotropic distance ξij:

[formula]

According to equations ([\ref=eq:mahalanobis-distance]) or ([\ref=eq:stress-distance]), the outermost boundary for the k-nearest neighbors of the i-particle is an ellipsoid centered in the query position [formula], whose principal axes are set by the respective tensor eigenvectors [\cite=marinho2010mecanica].

A cognitive interpretation for the well-known SPH interpolation formula can be illustrated as follows: given an i-labeled particle, say i-particle, one may suppose this particle has to make an estimation, Ãi, of a local fluid quantity, Ai, after hearing votes, e.g. [\cite=Duda], from its effective neighbors what impression they get regarding the same quantity.

A democratic decision is made if the i-particle weights the individual suggestions from its informants, giving more importance to the closest ones. The importance, or weight, comes from a compact-support smoothing kernel, which drops to zero outside the influence zone defined by the effective neighbors and grows up as gets closer to i, reaching its maximum for i itself.

Each i-particle, [formula], has its own effective neighbors, Ek(i). The i-particle asks each j-particle in Ek(i) for suggestions, which answers accordingly to the predefined protocol, Ajmj  /  ρj, whose reliability is expressed by a weight, or smoothing kernel Wij.

The i-particle gets a conclusive perception Ãi from its locality by adding together all of the weighted votes, WijAjmj  /  ρj, received from its k-nearest neighbors:

[formula]

where [formula] is the smoothing kernel, whose analytical profile might be an issue regarding accuracy and stability on SPH simulations, but this particular subject will not be discussed here.

Similar election procedure applies on estimating the interpolated gradient, [formula], yielding

[formula]

where [formula] is the smoothing-kernel gradient.

If the kernel is symmetric, one finds from the effective neighbors symmetry that i∈Ek(j)  ⇔  j∈Ek(i), and also finds [formula], and [formula] if and only if (i,j)∈Ek.

Densities are required to perform SPH interpolations, as in equations ([\ref=eq:p-interpol]) and ([\ref=eq:grad-interpol]), and they are estimated from equation ([\ref=eq:p-interpol]) itself by means of a self-consistent replacement Aj  →  ρj, yielding

[formula]

The SPH fluid equations of motion are derived from the actual fluid equations, and they must be solved by means of some integration scheme regarding accuracy and stability. The timed outcomes from the integration scheme express discrete states of the particle description. Depending on the time-integration method, each particle knows a brief history of its previous states.

The way as the SPH equations are presented usually requires rearrangement to attend to subsidiary information concerning physics, chemistry etc. For instance, in most astrophysical problems, the SPH momentum conservation equation can be written as

[formula]

where the Πij-factor carries the pressure coefficients, which might even include anisotropic pressure as the elastic stress tensor and the Maxwell stress tensor, e.g. [\cite=marinho2001sph]. The [formula]-vector term is a non-hydrodynamic acceleration as for instance the gravity field [formula] on i-particle.

Time-integration scheme plays the role of particle actuators modifying their local environment, in response to the information received from their effective neighbors. Every particle contributes to a global knowledge, which might attend to a subsidiary simulation, as for example the qualitative results of self-propagating star formation, e.g. [\cite=Mineikis2010], the SPH-data history constitutes a knowledge-base [\cite=Russell2009] or even a more pretentious context as in live tissue simulations [\cite=Muller:2004:IBS:1011146.1011149].

Each SPH particle recognizes its surroundings by means of its effective neighbors using pattern detection techniques to identify the neighborhood morphology and consequent critical surfaces. However, particles obey a set of transition rules, according to the physics model, to decide what action they have to do against their local environment.

From the theory of intelligent agents, SPH particles might be classified as simple reflex agents [\cite=Russell2009], acting as environment modifiers in function of what they percept in their surrounds through their effective neighbors. The particles act under the local physical conditions in response to the input they receive from their effective neighbors, ignoring the long term history of all their actions and percepts. Regarding the adopted time integration scheme embedded as actuators, only the knowledge of a recent past is required.

Conclusion

More than a numerical simulation technique, SPH is a very complex system that can be studied not only under applied mathematics techniques but also under the light of intelligent computing, where particles are individuals cooperatively working in behalf of a collective objective of mimicking the fluid behavior.

The SPH spirit resides in computationally reproducing the continuous fluid flow using free particles. A fluid particle moves like a marker, accordingly to the lagrangian equations of motion. Each particle is a data structure storing the specific fluid properties as density, pressure, position, velocity etc. Any particle knows its surroundings through its k-nearest neighbors (KNN), which play the role of sensors, or informants. The information mechanism is known as KNN-based kernel interpolation, which might be interpreted as a weighted voting, from the machine learning viewpoint.