Multigraphs with Δ  ≥  3 are Totally-(2Δ-1)-Choosable

Throughout this paper, G is a loopless multigraph. For convenience, we refer to edges and vertices as elements of the graph. The total graph T(G) of a graph G has as its vertices the set of edges and vertices of G and has an edge between two vertices if their corresponding elements are either adjacent or incident in G. Let L be an assignment of lists to the vertices of a graph G. If G has a proper coloring such that each vertex v gets a color from its list L(v), then we say that G has an L-coloring. If G always has an L-coloring when each vertex has a list of size k, then we say that G is k-list-colorable (or k-choosable). In this paper, we study the problem of list-coloring a total graph. If a total graph T(G) is k-list-colorable, we say that G is totally-k-list-colorable (or totally-k-choosable). Often, our algorithm will greedily color all but a few edges and vertices of G; we generally call this uncolored subgraph H. This motivates the following definition. For a graph G and a subgraph H, we use G - H to mean [formula] (thus, edge uv may be present in G - H even if one or both of vertices u and v are missing). We say a graph algorithm runs in linear time if for fixed maximum degree the algorithm runs in time linear in the number of vertices of the graph.

Let Δ(G) denote the maximum vertex degree of a graph G. Juvan et al. [\cite=juvan] showed that if Δ(G) = 3, then G is totally-5-choosable. Skulrattanakulchai and Gabow [\cite=gabow] used these ideas to show that if Δ(G) = 3, then we can construct a total-5-list-coloring in linear time. In this paper, we extend these ideas further to show that if Δ(G)  ≥  3, then we can construct a total-(2Δ(G) - 1)-list-coloring in linear time. The best previous upper bound for Δ(G)  >  3 was [formula], by Borodin et al. [\cite=borodin]. When Δ(G) = 4, our algorithm gives a new upper bound. When Δ(G)∈{3,5,6}, our algorithm matches the best known bound. However, because our algorithm is significantly simpler, it runs in linear time (unlike the algorithm of Borodin et al.). In Lemma [\ref=main-lemma], we show how to greedily construct a total-(2Δ(G) - 1)-coloring for almost all of G. The rest of this paper shows that we can extend the coloring to all of G.

Let G be a connected multigraph. If G contains a vertex v with d(v) < Δ(G), or G contains an edge with multiplicity at least 3, then G is totally-(2Δ(G) - 1)-choosable.

Let k = Δ(G). Suppose that d(v)  <  k or that vertex v is incident to edge e with multiplicity at least 3. The subdivision graph S(G), is formed by replacing each edge of G with a path of length 2. (The subdivision graph S(G) has the same vertex set as the total graph T(G), but it has fewer edges. If we begin with S(G) and add an edge between each pair of vertices at distance 2, we form T(G).) For each element [formula], let f(x) be the distance from x to v in S(G). We will color all the elements of G sequentially. Let N(x) be the set of vertices in S(G) that are distance at most 2 from x; these are the elements that can restrict the color of x in T(G). Note that we always have |N(x)|  ≤  2k. Greedily color each element x in decreasing order of f(x). If f(x)  ≥  2, let u and w be the first and second vertices after x on a shortest path from x to w in S(G). Since f(w)  <  f(u)  <  f(x), vertices u and w will be uncolored at the time that we color x. Thus at most 2k - 2 colors are restricted from being used on x; hence we have a color available for x.

The elements x with f(x) = 1 are edges incident to v. In the case of a multiple edge, the last elements with distance 1 that we color are the copies of this edge, and finally v. When at least one edge remains uncolored, at most 2k - 2 restrictions are imposed. For the last edge, the multiplicity or the degree restriction on v implies that at most 2k - 3 restrictions are imposed. For v also, in either case at most 2k - 2 restrictions are imposed, so we can complete the coloring.

For any cycle [formula], by Lemma 1 we can totally-(2Δ(G) - 1)-color [formula]. Our plan is to greedily total-color all of G except for a few edges and vertices; we call these uncolored elements [formula]. Lemmas [\ref=juvan1] and [\ref=juvan2] (from Juvan et al. [\cite=juvan]) show how to extend the coloring to [formula] for various choices of [formula].

For convenience, Juvan et al. define halfedges to be edges with only one endpoint. We use halfedge to describe an edge of H which has only one endpoint in H. A halfedge is colored similarly to an edge; the only difference is that a halfedge has only one endpoint in H, so it has at most Δ(G) - 1 incident edges in H.

([\cite=juvan]) Let H be a cycle with a halfedge attached to each vertex. If L is a list assignment for H such that

[formula]

then H admits an L-total-coloring.

If G has girth at least 5, we will show (in Lemma [\ref=structural]) that G contains an induced cycle [formula] with a matching incident to the vertices of [formula]. In this case, we will greedily color all the elements of G except for [formula] and the incident matching. By treating the edges of the matching as halfedges, we use Lemma [\ref=juvan1] to finish the coloring (we give the details in Theorem [\ref=main]). The next two lemmas consider the cases when G has girth at most 4. In each case we find a small subgraph H and greedily total-color G - H; in Lemmas [\ref=juvan2] and [\ref=small] we show that we are able to extend the coloring to H.

In Lemma [\ref=juvan2] we refer to thick halfedges and thin halfedges. Both are halfedges as described above; the only difference is that thick halfedges will receive lists of size 3, whereas thin halfedges will receive lists of size 2. Thick halfedges always appear in pairs; they designate nonincident halfedges in H that correspond to incident edges in the larger graph.

([\cite=juvan]) Let H be isomorphic to one of the multigraphs in Figure 1. If L is a list assignment for H such that

[formula]

then H admits an L-total-coloring such that the two thick halfedges receive distinct colors.

Juvan et al. were the first to show that a graph G with Δ(G) = 3 is totally-5-choosable. Most of the subgraphs H that we encounter in our proof also arose in their proof (as seen in Lemmas [\ref=juvan1] and [\ref=juvan2]). However, there are a few additional subgraphs that we must deal with as we prove our generalization of their result. We handle these subgraphs in the following lemma.

Let H be isomorphic to one of the multigraphs in Figure 2. If L is a list assignment for H such that

[formula]

Then H admits an L-total-coloring.

If H is congruent to the multigraph in Figure 2a, then let e1 and e2 be the parallel edges. Let the halfedges be e3 (incident to vertex v1) and e4 (incident to vertex v2). We may assume that there are equalities in (1); otherwise we discard colors from the lists.

Since |L(v1)| + |L(e4)| > |L(e1)|, either v1 and e4 have a common color c available, or there exists a color [formula]. If color c is available on both v1 and e4, we use it on both elements; otherwise use color c on the element where it is available (either v1 or e4) and color the other element arbitrarily. Note that L(e1) has 4 elements other than the colors used on v1 and e4. Hence, after greedily coloring e3, v2, and e2 in order, a color remains available for e1.

If [formula] (as shown in Figure 2b), then greedily color the vertices of H in some order. Note that each edge now has at least 3 colors available (since each edge lost at most one color to each endpoint); let L'(e) denote the list of remaining available colors on each edge e after coloring the vertices of H. Suppose that we cannot give distinct colors to the edges. By Hall's Theorem there exists a set E1 of edges such that [formula]. Set E1 must contain at least 4 edges, since each edge has at least 3 colors available. Among any 4 edges of K4 there are two nonincident edges, call them e1 and e2. Since [formula], edges e1 and e2 must have a common available color, c. Use color c on edges e1 and e2. The four remaining uncolored edges form a 4-cycle. Note that each uncolored edge has at least 2 colors available. Erdös, Rubin, and Taylor [\cite=ERT] proved that cycles of even length are edge-2-choosable, so we can finish the coloring.

If [formula] (as shown in Figure 3b), then greedily color the vertices of H. Note that each edge now has at least 3 colors available. Galvin [\cite=galvin] proved that a bipartite multigraph H is edge-Δ(H)-choosable. Hence, we can finish the coloring.

Our final lemma is structural. We use it to show that every multigraph G contains a subgraph H for which we can extend a total-(2Δ(G) - 1)-list-coloring of G - H to such a coloring of G. For convenience we consider a double-edge to be a cycle of length 2.

If G is a regular multigraph, then G contains an induced cycle [formula] with the following property. If the cycle [formula] contains any pair of vertices with a common neighbor not on [formula], then [formula]. Furthermore, we can find such a cycle in linear time.

If G has a multiple edge, then G has a cycle of size 2. We can find it in linear time. So we assume G is simple.

Choose an arbitrary vertex v. Using breadth-first-search, find a shortest cycle [formula] through v. If there exist vertices w and x on [formula] with a common neighbor y not on [formula], then either w and x are adjacent or w and x have a common neighbor z on [formula] (otherwise we could find a shorter cycle through v). In either case let [formula] be the 3-cycle or 4-cycle containing w, x, and y. If [formula] does not contain such a pair w,x, then let [formula].

By combining Lemmas [\ref=main-lemma] through [\ref=structural], we prove our main result.

If G is a multigraph with maximum degree Δ(G), then G is totally-(2Δ(G) - 1)-choosable. Furthermore, given lists of size 2Δ(G) - 1, we can construct a coloring in linear time.

If G is disconnected, then we color each component separately. If G is not Δ(G)-regular or if G contains an edge with multiplicity at least 3, then by Lemma [\ref=main-lemma] we can color G.

If G contains an edge uv with multiplicity 2, then let e1 and e2 be additional edges incident to u and v, respectively. We view e1 and e2 as halfedges (thick if they have a common endpoint, and thin otherwise). This subgraph (call it H) is isomorphic to either Figure 1a or Figure 2a.

By Lemma [\ref=main-lemma], we can greedily color G - E(H). We will use either Lemma [\ref=juvan2] or Lemma [\ref=small] to complete the coloring. To apply Lemma [\ref=juvan2] or Lemma [\ref=small], we must verify that each uncolored vertex, edge, and halfedge has a sufficient number of available colors. We do this as follows.

Let k = Δ(G). An uncolored vertex (u or v) is incident to at most k - 3 colored edges and at most k - 2 colored vertices. So it has at least (2k - 1) - (k - 3) - (k - 2) = 4 available colors. An uncolored edge (one of the uv edges) is not incident to any colored vertices; each endpoint is incident to at most k - 3 colored edges. So an edge has at least (2k - 1) - 2(k - 3) = 5 available colors. A thin halfedge (e1 or e2) is incident to a single colored vertex; one endpoint is incident to at most k - 1 colored edges and the other endpoint is incident to at most k - 3 colored edges. So a thin halfedge has at least (2k - 1)  -  1  -  (k - 1) - (k - 3) = 2 available colors. A thick halfedge has one additional available color, since it is incident to the other thick halfedge, which is uncolored. Hence, we can assume that G is a regular simple graph.

Find a cycle [formula] as described in Lemma [\ref=structural]. By Lemma [\ref=main-lemma], greedily color [formula]. If [formula], then uncolor the vertices of [formula] and uncolor one edge incident to each vertex of [formula]. We treat each uncolored incident edge as a halfedge, then finish the coloring by Lemma [\ref=juvan1]. To apply Lemma [\ref=juvan1], we must verify that the lists of colors are big enough. However, the analysis is similar to that given above, so we omit it. Thus, if [formula], then Lemma [\ref=juvan1] applies and we can finish the coloring. So we may assume that [formula].

Suppose that [formula]. Uncolor an edge incident to each vertex of [formula]. If the three uncolored incident edges have a common endpoint, then also uncolor this common endpoint. The uncolored subgraph is isomorphic to K4. By Lemma [\ref=small], we can finish the coloring. If the uncolored subgraph is not isomorphic to K4, then it is isomorphic to a subgraph in Lemma [\ref=juvan1] or Lemma [\ref=juvan2] (Figure 1b). In each case, we can finish the coloring. To apply Lemma [\ref=juvan1], [\ref=juvan2], or [\ref=small] we must verify that the lists of available colors are big enough. Again, we omit the case analysis.

Finally, suppose [formula]. If two adjecent vertices of [formula] have a common neighbor not on [formula] then instead we let [formula] be this 3-cycle and we are in the above case. Otherwise, uncolor an edge incident to each vertex of [formula]. If at most one pair of these incident edges has a common endpoint, then we can finish the coloring by Lemma [\ref=juvan1] or Lemma [\ref=juvan2] (Figure 1c). If two pairs of these incident edges have common endpoints, call these endpoints u and v. If u and v are adjacent, then we have a subgraph isomorphic to K3,3, so by Lemma [\ref=small] (Figure 2c) we can finish the coloring. If u and v are not adjacent, then instead replace [formula] with the cycle induced by [formula], where w is a vertex of [formula] but w is not adjacent to u. Because edge uv is not present in G, we can choose one edge incident to each vertex of this new 4-cycle so that at most one pair of incident edges has a common endpoint. Now we are in the previous case, and we can finish by Lemma [\ref=juvan1] or Lemma [\ref=juvan2] (Figure 1c).

Acknowledgements

Thanks to Douglas Woodall for bringing this problem to my attention and for his insights that greatly improved the exposition of this paper. Thanks to Doug West and two referees, whose comments each improved the exposition. Thanks to Kevin Milans for helpful conversation.