="2D

="2D

Exact duality in semidefinite programming based on elementary reformulations

The paper's previous title was "A short proof of infusibility and generating all infeasible semidefinite programs"

Key words: semidefinite programming; duality; elementary reformulations; infeasibility certificates; strong duality; spectrahedra

MSC 2010 subject classification: Primary: 90C46, 49N15; secondary: 52A40

OR/MS subject classification: Primary: convexity; secondary: programming-nonlinear-theory

Introduction. The certificate of infeasibility and its proof

Semidefinite programs (SDPs) naturally generalize linear programs and share some of the duality theory of linear programming. However, the value of an SDP may not be attained, it may differ from the value of its Lagrange dual, and the simplest version of Farkas' lemma may fail to prove infeasibility in semidefinite programming.

Several alternatives of the traditional Lagrange dual, and Farkas' lemma are known, which we will review in detail below: see Borwein and Wolkowicz [\cite=BorWolk:81] [\cite=BorWolk:81B]; Ramana [\cite=Ramana:97]; Ramana, Tunel, and Wolkowicz [\cite=RaTuWo:97]; Klep and Schweighofer [\cite=KlepSchw:12]; Waki and Muramatsu [\cite=WakiMura:12], and the second author [\cite=Pataki:13].

We consider semidefinite systems of the form ([\ref=p]), where the Ai are n by n symmetric matrices, the bi scalars, [formula] means that X is symmetric, positive semidefinite (psd), and the [formula] dot product of symmetric matrices is the trace of their regular product. To motivate our results on infeasibility, we consider the instance

[formula]

which is trivially infeasible: to see why, suppose that X  =  (xij)3i,j = 1 is feasible in it. Then x11 = 0, hence the first row and column of X are zero by psdness, so the second constraint implies x22  =   - 1,   which is a contradiction. Thus the internal structure of the system itself proves its infeasibility.

The goal of this short note is twofold. In Theorem [\ref=ref-SDP] we show that a basic transformation reveals such a simple structure - which proves infeasibility - in every infeasible semidefinite system. For feasible systems we give a similar reformulation - in Theorem [\ref=ref-SDP-2] - which trivially has strong duality with its Lagrange dual for all objective functions.

We obtain an elementary semidefinite (ESD-) reformulation, or elementary reformulation of ([\ref=p]) by applying a sequence of the following operations:

Replace (Aj,bj) by [formula], where [formula]

Exchange two equations.

Replace Ai by VTAiV for all i,   where V is an invertible matrix.

ESD-reformulations clearly preserve feasibility. Note that operations (1) and (2) are also used in Gaussian elimination: we call them elementary row operations (eros). We call operation (3) a rotation. Clearly, we can assume that a rotation is applied only once, when reformulating ([\ref=p]); then X is feasible for ([\ref=p]) if and only if V- 1XV- T is feasible for the reformulation.

The system ([\ref=p]) is infeasible, if and only if it has an elementary semidefinite reformulation of the form

[formula]

where k  ≥  0,   and the [formula] are of the form

[formula]

for [formula], with [formula] the ×   symbols correspond to blocks with arbitrary elements, and matrices [formula] and scalars [formula] are arbitrary.

To motivate the reader, we now give a very simple, full proof of the "if" direction. It suffices to prove that ([\ref=pref]) is infeasible, so assume to the contrary that X is feasible in it. The constraint [formula] and [formula] implies that the upper left r1 by r1 block of X is zero, and [formula] proves that the first r1 rows and columns of X are zero. Inductively, from the first k constraints we deduce that the first [formula] rows and columns of X are zero.

Deleting the first [formula] rows and columns from [formula] we obtain a psd matrix, hence

[formula]

contradicting the (k + 1)st constraint in ([\ref=pref]).

Note that Theorem [\ref=ref-SDP] allows us to systematically generate all infeasible semidefinite systems: to do so, we only need to generate systems of the form ([\ref=pref]), and reformulate them. We comment more on this in Section [\ref=conclusion].

We now review relevant literature in detail, and its connection to our results. For surveys and textbooks on SDP, we refer to Todd [\cite=Todd:00]; Ben-Tal and Nemirovskii [\cite=BentalNem:01]; Saigal et al [\cite=SaigVandWolk:00]; Boyd and Vandenberghe [\cite=BoydVand:04]. For treatments of their duality theory see Bonnans and Shapiro [\cite=BonnShap:00]; Renegar [\cite=Ren:01] and G[formula]ler [\cite=Guler:10].

The fundamental facial reduction algorithm of Borwein and Wolkowicz [\cite=BorWolk:81] [\cite=BorWolk:81B] ensures strong duality in a possibly nonlinear conic system by replacing the underlying cone by a suitable face. Ramana in [\cite=Ramana:97] constructed an extended strong dual for SDPs, which uses O(n) copies of the original system, and extra variables. His dual leads to an exact Farkas' lemma. Though these approaches seem at first quite different, Ramana, Tunel, and Wolkowicz in [\cite=RaTuWo:97] proved the correctness of Ramana's dual from the algorithm in [\cite=BorWolk:81] [\cite=BorWolk:81B].

The algorithms in [\cite=BorWolk:81] [\cite=BorWolk:81B] assume that the system is feasible. The simplified algorithm of Waki and Muramatsu in [\cite=WakiMura:12], which works for conic linear systems, disposes with this assumption, and allows one to prove infeasibility. We state here that our reformulations can be obtained by suitably modifying the algorithm in [\cite=WakiMura:12]; we describe the connection in detail in Section [\ref=conclusion]. At the same time we provide a direct, and entirely elementary construction.

More recently, Klep and Schweighofer in [\cite=KlepSchw:12] proposed a strong dual and exact Farkas' lemma for SDPs. Their dual resembles Ramana's; however, it is based on ideas from algebraic geometry, namely sums of squares representations, not convex analysis.

The second author in [\cite=Pataki:13] described a simplified facial reduction algorithm, and generalized Ramana's dual to conic linear systems over nice cones (for literature on nice cones, see [\cite=ChuaTuncel:08], [\cite=Vera:13], [\cite=Pataki:12]). We refer to Pólik and Terlaky [\cite=PolikTerlaky:09] for a generalization of Ramana's dual for conic LPs over homogeneous cones. Elementary reformulations of semidefinite systems first appear in [\cite=Pataki:10]. There the second author uses them to bring a system into a form to easily check whether it has strong duality with its dual for all objective functions.

Several papers - see for instance Pólik and Terlaky [\cite=PolikTerlaky:09b] on stopping criteria for conic optimization - point to the need of having more infeasible instances and we hope that our results will be useful in this respect. In more recent related work, Alfakih [\cite=Alfakih:14] gave a certificate of the maximum rank in a feasible semidefinite system, using a sequence of matrices, somewhat similar to the constructions in the duals of [\cite=Ramana:97] [\cite=KlepSchw:12], and used it in an SDP based proof of a result of Connelly and Gortler on rigidity [\cite=Connelly:14]. Our Theorem [\ref=ref-SDP-2] gives such a certificate using elementary reformulations.

We say that an infeasible SDP is weakly infeasible, if the traditional version of Farkas' lemma fails to prove its infeasibility. We refer to Waki [\cite=Waki:12] for a systematic method to generate weakly infeasible SDPs from Lasserre's relaxation of polynomial optimization problems; and to Lourenco et al. [\cite=Lourenco:13] for an error-bound based reduction procedure to simplify weakly infeasible SDPs.

We organize the rest of the paper as follows. After introducing notation, we describe an algorithm to find the reformulation ([\ref=pref]), and a constructive proof of the "only if" part of Theorem [\ref=ref-SDP]. The algorithm is based on facial reduction; however, it is simplified so we do not need to explicitly refer to faces of the semidefinite cone. The algorithm needs a subroutine to solve a primal-dual pair of SDPs. In the SDP pair the primal will always be strictly feasible, but the dual possibly not, and we need to solve them in exact arithmetic. Hence our algorithm may not run in polynomial time. At the same time it is quite simple, and we believe that it will be useful to verify the infeasibility of small instances. We then illustrate the algorithm with Example [\ref=ex1].

In Section [\ref=feasible] we present our reformulation of feasible systems. Here we modify our algorithm to construct the reformulation ([\ref=pref]) (and hence detect infeasibility); or to construct a reformulation that is easily seen to have strong duality with its Lagrange dual for all objective functions.

We denote by Sn,  Sn+,   and Sn+  + the set of symmetric, symmetric psd, and symmetric positive definite (pd) matrices of order n,   respectively. For a closed, convex cone K we write x  ≥  Ky to denote x  -  y∈K,   and denote the relative interior of K by [formula] and its dual cone by K*,   i.e.,

[formula]

For some p  <  n we denote by [formula] the set of n by n matrices with the lower right p by p corner psd, and the rest of the components zero. If [formula] then [formula] and

[formula]

For a matrix Z∈K* partitioned as above, and [formula] we will use the formula

[formula]

in the reduction step of our algorithm that converts ([\ref=p]) into ([\ref=pref]): we will choose Q to be full rank, so that QTZ22Q is diagonal.

We will rely on the following general conic linear system:

[formula]

where K is a closed, convex cone, and A and B are linear operators, and consider the primal-dual pair of conic LPs

[formula]

where A* and B* are the adjoints of A and B,   respectively.

We say that

strong duality holds between (Pgen) and (Dgen), if their optimal values agree, and the latter value is attained, when finite;

([\ref=pgen]) is well behaved, if strong duality holds betweeen (Pgen) and (Dgen) for all c objective functions;

([\ref=pgen]) is strictly feasible, if [formula] for some feasible x.

We will use the following lemma:

If ([\ref=pgen]) is strictly feasible, or K is polyhedral, then ([\ref=pgen]) is well behaved.

When [formula] for some p  ≥  0,   then [formula] are a primal-dual pair of SDPs. To solve them efficiently, we must assume that both are strictly feasible; strict feasibility of the latter means that there is a feasible (y,z) with [formula]

The system ([\ref=p]) is trivially infeasible, if the alternative system below is feasible:

[formula]

in this case we say that ([\ref=p]) is strongly infeasible. Note that system ([\ref=palt]) generalizes Farkas' lemma from linear programming. However, ([\ref=p]) and ([\ref=palt]) may both be infeasible, in which case we say that ([\ref=p]) is weakly infeasible. For instance, the system ([\ref=mot-ex]) is weakly infeasible.

Proof of "only if" in Theorem [\ref=ref-SDP] The proof relies only on Lemma [\ref=lemma-strong]. We start with the system ([\ref=p]), which we assume to be infeasible.

In a general step we have a system

[formula]

where for some [formula] and [formula] the [formula] matrices are as required by Theorem [\ref=ref-SDP], and [formula] At the start [formula] and in a general step we have [formula]

Let us define

[formula]

and note that if [formula] satisfies the first [formula] constraints of ([\ref=pprime]), then [formula] (this follows as in the proof of the "if" direction in Theorem [\ref=ref-SDP]).

Consider the homogenized SDP and its dual

[formula]

The optimal value of (P hom) is 0,   since if (X,x0) were feasible in it with x0  >  0,   then (1 / x0)X would be feasible in ([\ref=pprime]).

We first check whether (P hom) is strictly feasible, by solving the primal-dual pair of auxiliary SDPs

[formula]

Clearly, (Paux) is strictly feasible, with (X,x0,t)  =  (0,0, - 1) so it has strong duality with (Daux). Therefore

[formula]

We distinguish two cases:

Case 1: n - r  ≥  2 and (P hom) is not strictly feasible.

Let y be a feasible solution of (Daux) and apply the reduction step in Figure [\ref=fig:fr-alg]. Now the lower (n - r) by (n - r) block of [formula] is nonzero, hence after Step 3 we have [formula] We then set [formula] and continue.

Case 2: n  -  r  ≤  1 or (P hom) is strictly feasible.

Now strong duality holds between (P hom) and (D hom); when n - r  ≤  1,   this is true because then K is polyhedral. Hence (D hom) is feasible. Let y be feasible in (D hom) and apply the same reduction step in Figure [\ref=fig:fr-alg]. Then we set [formula] and stop with the reformulation ([\ref=pref]).

We now complete the correctness proof of the algorithm. First, we note that the choice of the rotation matrix in Step 2 of the reduction steps implies that [formula] remain in the required form: cf. equation ([\ref=rotatez]).

Second, we prove that after finitely many steps our algorithm ends in Case 2. In each iteration both [formula] and [formula] increase. If n - r becomes less than or equal to 1, then our claim is obviously true. Otherwise, at some point during the algorithm we find [formula] Then [formula] since ([\ref=pprime]) is infeasible. Hence for any [formula] we can choose x0 to satisfy the last equality constraint of (P hom), hence at this point we are in Case 2.

We next illustrate our algorithm:

The elementary reformulation of feasible systems

For feasible systems we have the following result:

Let p  ≥  0 be an integer. Then the following hold:

The system ([\ref=p]) is feasible with a maximum rank solution of rank p if and only if it has a a feasible solution with rank p and an elementary reformulation

[formula]

where [formula] are as in Theorem [\ref=ref-SDP],

[formula]

and matrices [formula] and scalars [formula] are arbitrary.

Suppose that ([\ref=p]) is feasible. Let ([\ref=pref-feas]) be as above, and (Pref,feas,red) the system obtained from it by replacing the constraint [formula] by [formula]. Then (Pref,feas,red) is well-behaved, i.e., for all C∈Sn the SDP

[formula]

has strong duality with its Lagrange dual

[formula]

Before the proof we remark that the case k = 0 corresponds to ([\ref=p]) being strictly feasible.

Proof of "if" in (1) This implication follows similarly as in Theorem [\ref=ref-SDP].

Proof of (2) This implication follows, since (Pref,feas,red) is trivially strictly feasible.

Proof of "only if" in (1) We modify the algorithm that we used to prove Theorem [\ref=ref-SDP]. We now do not assume that ([\ref=p]) is infeasible, nor that the optimal value of (P hom) is zero. As before, we keep iterating in Case 1, until we end up in Case 2, with strong duality between (P hom) and (D hom). We distinguish two subcases:

Case 2(a): The optimal value of (P hom) is 0.   We proceed as before to construct the (k + 1)st equation in ([\ref=pref]), which proves infeasibility of ([\ref=pprime]).

Case 2(b): The optimal value of (P hom) is positive (i.e., it is +    ∞  ). We choose

[formula]

to be feasible, with x0  >  0. Then (1 / x0)X is feasible in ([\ref=pprime]), but it may not have maximum rank. We now construct a maximum rank feasible solution in ([\ref=pprime]). If n - r  ≤  1,   then a simple case checking can complete the construction. If n - r  ≥  2,   then we take

[formula]

as a strictly feasible solution of (P hom). Then for a small ε  >  0 we have that

[formula]

is feasible in (P hom) with x0  +  εx0'  >  0. Hence

[formula]

is feasible in ([\ref=pprime]).

In the final system the first two constraints prove that the rank of any feasible solution is at most 2. Thus the system itself and X are a certificate that X has maximum rank, hence it is easy to convince a "user" that (Pref,feas,red) (with p = 2) is strictly feasible, hence well behaved.

Discussion

In this section we discuss our results in some more detail.

We first compare our conversion algorithm with facial reduction algorithms, and describe how to adapt the algorithm of Waki and Muramatsu [\cite=WakiMura:12] to obtain our reformulations.

We next comment on how to find the optimal solution of a linear function over the original system ([\ref=p]), and on duality properties of this system.

We next comment on algorithms to generate the data of all SDPs which are either infeasible, or have a maximum rank solution with a prescribed rank.

We next comment on strong infeasibility of ([\ref=p]).

We next discuss complexity implications.

Conclusion

Two well-known pathological phenomena in semidefinite programming are that Farkas' lemma may fail to prove infeasibility, and strong duality does not hold in general. Here we described an exact certificate of infeasibility, and a strong dual for SDPs, which do not assume any constraint qualification. Such certificates and duals have been known before: see [\cite=BorWolk:81] [\cite=BorWolk:81B] [\cite=Ramana:97] [\cite=RaTuWo:97] [\cite=WakiMura:12] [\cite=KlepSchw:12] [\cite=Pataki:13].

Our approach appears to be simpler: in particular, the validity of our infeasibility certificate - the infeasibility of the system ([\ref=pref]) - is almost a tautology (we borrow this terminology from the paper [\cite=Papp:Ali] on semidefinite representations). We can also easily convince a "user" that the system (Pref,feas,red) is well behaved (i.e., strong duality holds for all objective functions). To do so, we use a maximum rank feasible solution, and the system itself, which proves that this solution has maximum rank.

In a somewhat different language, elementary reformulations provide a standard form of spectrahedra - the feasible sets of SDPs - to easily check their emptiness, or a tight upper bound on the rank of feasible solutions. We hope that these standard forms will be useful in studying the geometry of spectrahedra - a subject of intensive recent research [\cite=NetzerPlaumSchwei:10] [\cite=Blekhetal:12] [\cite=Vinzant:14] [\cite=SinnSturmfels:14].

We thank Rekha Thomas and the anonymous referees for their careful reading of the paper, and their constructive comments.