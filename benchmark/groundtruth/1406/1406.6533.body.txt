On the Complexity of Clustered-Level Planarity and T-Level Planarity

Research was supported in part by the Italian Ministry of Education, University, and Research (MIUR) under PRIN 2012C4E3KT national research project "AMANDA - Algorithmics for MAssive and Networked DAta" and by ESF project 10-EuroGIGA-OP-003 GraDR. Fabrizio Frati was partially supported by the Australian Research Council (grant DE140100708)'.

Introduction and Overview

A level graph is proper if any of its edges spans just two consecutive levels. Several papers about constructing level drawings of level graphs assume that the input graph is proper. Otherwise, they suggest to make it proper by "simply adding dummy vertices" along the edges spanning more than two levels. In this paper we show that this apparently innocent augmentation has dramatic consequences if, instead of constructing just a level drawing, we are also interested in representing additional constraints, like clustering of vertices or consecutivity constraints on the ordering of vertices on levels.

A level graph G = (V,E,γ) is a graph with a function γ:V  →  {1,2,...,k}, with 1  ≤  k  ≤  |V| such that γ(u)  ≠  γ(v) for each edge (u,v)∈E. The set Vi  =  {v|γ(v) = i} is the i-th level of G. A level graph G  =  (V,E,γ) is proper if for every edge (u,v)∈E, it holds γ(u)  =  γ(v)  ±  1. A level planar drawing of (V,E,γ) maps each vertex v of each level Vi to a point on line y  =  i, denoted by Li, and each edge to a y-monotone curve between its endpoints so that no two edges intersect. A level graph is level planar if it admits a level planar drawing. A linear-time algorithm for testing level planarity was presented by Jünger and Leipert in [\cite=jl-lpelt-02].

A clustered-level graph (cl-graph) (V,E,γ,T) is a level graph (V,E,γ) equipped with a cluster hierarchy T, that is, a rooted tree where each leaf is an element of V and each internal node μ, called cluster, represents the subset Vμ of V composed of the leaves of the subtree of T rooted at μ. A clustered-level planar drawing (cl-planar drawing) of (V,E,γ,T) is a level planar drawing of level graph (V,E,γ) such that: (1) each cluster μ is represented by a simple region enclosing all and only the vertices in Vμ; (2) no edge intersects the boundary of a cluster more than once; (3) no two cluster boundaries intersect each other; and (4) the intersection of Li with any cluster μ is a straight-line segment, that is, the vertices of Vi that belong to μ are consecutive along Li. A cl-graph is clustered-level planar (cl-planar) if it admits a cl-planar drawing. Clustered-Level Planarity ( CL-Planarity) is the problem of testing whether a given cl-graph is cl-planar. The CL-Planarity problem was introduced by Forster and Bachmaier [\cite=fb-clp-04], who showed a polynomial-time testing algorithm for the case in which the level graph is a proper hierarchy and the clusters are level-connected.

A T-level graph (also known as generalized k-ary tanglegram) (V,E,γ,T) is a level graph (V,E,γ) equipped with a set [formula] of trees such that the leaves of Ti are the vertices of level Vi of (V,E,γ), for 1  ≤  i  ≤  k. A T-level planar drawing of (V,E,γ,T) is a level planar drawing of (V,E,γ) such that, for [formula], the order in which the vertices of Vi appear along Li is compatible with Ti, that is, for each node w of Ti, the leaves of the subtree of Ti rooted at w appear consecutively along Li. A T-level graph is T-level planar if it admits a T-level planar drawing. -Level Planarity is the problem of testing whether a given T-level graph is T-level planar. The -Level Planarity problem was introduced by Wotzlaw et al. [\cite=wsp-gktlg-12], who showed a quadratic-time algorithm for the case in which the number of vertices at each level is bounded by a constant.

The definition of proper naturally extends to cl-graphs and T-level graphs. Note that, given any non-proper level graph G it is easy to construct a proper level graph G' that is level planar if and only if G is level planar. However, as mentioned above, there exists no trivial transformation from a non-proper cl-graph (a non-proper T-level graph) to an equivalent proper cl-graph (resp., an equivalent proper T-level graph).

In this paper we show that Clustered-Level Planarity and -Level Planarity are [formula]-complete for non-proper instances. Conversely, we show that both problems are polynomial-time solvable for proper instances. Our results have several consequences: (1) They narrow the gap between polynomiality and [formula]-completeness in the classification of Schaefer [\cite=s-ttphtpv-13] (see Fig. [\ref=fi:schema]). The reduction of Schaefer between -Level Planarity and SEFE-2 holds for proper instances [\cite=s-ttphtpv-13]. (2) They allow to partially answer a question from [\cite=s-ttphtpv-13] asking whether a reduction exists from CL-Planarity to SEFE-2. We show that such a reduction exists for proper instances and that a reduction from general instances would imply the [formula]-hardness of SEFE-2. (3) They improve on [\cite=fb-clp-04] and [\cite=wsp-gktlg-12] by extending the classes of instances which are decidable in polynomial-time for CL-Planarity and -Level Planarity, respectively. (4) They provide the first, as far as we know, [formula]-completeness for a problem that has all the constraints of clustered planarity problem (and some more).

The paper is organized as follows. The [formula]-completeness proofs are in Section [\ref=se:hardness], while the algorithms are in Section [\ref=se:poly]. We conclude with open problems in Section [\ref=se:conclusions].

NP-Hardness

In this section we prove that the -Level Planarity and the CL-Planarity problems are [formula]-complete. In both cases, the [formula]-hardness is proved by means of a polynomial-time reduction from the [formula]-complete problem Betweenness [\cite=top-o-79], that takes as input a finite set A of n objects and a set C of m ordered triples of distinct elements of A, and asks whether a linear ordering O of the elements of A exists such that for each triple 〈α,β,δ〉 of C, we have either [formula] or [formula].

-Level Planarity is [formula]-complete.

The problem trivially belongs to [formula]. We prove the [formula]-hardness. Given an instance 〈A,C〉 of Betweenness, we construct an equivalent instance [formula] of -Level Planarity as follows. Let [formula] and let m  =  |C|. Graph (V,E) is composed of a set of paths connecting two vertices v and w. Refer to Fig. [\ref=fig:hardness](a).

Initialize V = {v,w} and [formula], with γ(v)  =  0 and γ(w) = 2m + 3. Let T0∈T and T2m + 3∈T be trees with a single node v and w, respectively.

For each [formula], add two vertices vj and wj to V, with γ(vj)  =  1 and γ(wj)  =  2m + 2. Add edges (v,vj) and (w,wj) to E. Also, let T1∈T and T2m + 2∈T be two stars whose leaves are all the vertices of levels V1 and V2m + 2, respectively. Further, for each [formula], we initialize variable last(j)  =  vj.

Then, for each [formula], consider the triple ti  =  〈α,β,γ〉. Add six vertices uα(i), u'α(i), uβ(i), u'β(i), uδ(i), and u'δ(i) to V with γ(uα(i))  =  γ(uβ(i))  =  γ(uδ(i))  =  2i and γ(u'α(i))  =  γ(u'β(i))  =  γ(u'δ(i))  =  2i + 1. Also, add edges (last(α),uα(i)), (last(β),uβ(i)), (last(δ),uδ(i)), (uα(i),u'α(i)), (uβ(i),u'β(i)), and (uγ(i),u'γ(i)) to E. Further, set last(α)  =  u'α(i), last(β)  =  u'β(i), and last(δ)  =  u'δ(i). Let T2i∈T be a binary tree with a root r2i, an internal node x2i and a leaf uα(i) both adjacent to r2i, and with leaves uβ(i) and uδ(i) both adjacent to x2i. Moreover, let T2i + 1∈T be a binary tree with a root r2i + 1, an internal node x2i + 1 and a leaf u'δ(i) both adjacent to r2i + 1, and with leaves u'α(i) and u'β(i) both adjacent to x2i + 1.

Finally, for each [formula], add an edge (last(j),wj) to E.

The reduction is easily performed in O(n + m) time. We prove that [formula] is T-level planar if and only if 〈A,C〉 is a positive instance of Betweenness.

Suppose that [formula] admits a T-level planar drawing Γ. Consider the left-to-right order O1 in which the vertices of level V1 appear along L1. Construct an order O of the elements of A such that α∈A appears before β∈A if and only if vα∈V1 appears before vβ∈V1 in O1. In order to prove that O is a positive solution for 〈A,C〉, it suffices to prove that, for each triple ti  =  〈α,β,δ〉∈C, vertices vα, vβ, and vδ appear either in this order or in the reverse order in O1. Note that tree T2i enforces uα(i) not to lie between uβ(i) and uδ(i) along L2i; also, tree T2i + 1 enforces u'δ(i) not to lie between u'α(i) and u'β(i) along L2i + 1. Since the three paths connecting v and w and passing through vα, vβ, and vδ do not cross each other in Γ and since they contain uα(i) and u'α(i), uβ(i) and u'β(i), and uδ(i) and u'δ(i), respectively, we have that vα, vβ, and vδ appear either in this order or in the reverse order in O1.

Suppose that an ordering O of the elements of A exists that is a positive solution of Betweenness for instance 〈A,C〉. In order to construct Γ, place the vertices of V1 and V2m + 2 along L1 and L2m + 2 in such a way that vertices vj∈V1 and wj∈V2m + 2, for [formula], are assigned x-coordinate equal to s if j is the s-th element of O. Also, for [formula], let ti  =  〈α,β,δ〉∈C. Place vertices uλ(i) and u'λ(i), with λ∈{α,β,δ}, on L2i and L2i + 1, respectively, in such a way that uλ(i) and u'λ(i) are assigned x-coordinate equal to s if λ is the s-th element of O. Finally, place v and w at any points on L0 and L2m + 3, respectively, and draw the edges of E as straight-line segments. We prove that Γ is a T-level planar drawing of [formula]. First note that, by construction, Γ is a level planar drawing of (V,E,γ). Further, for each [formula], vertices uα(i), uβ(i), and uδ(i) appear along L2i either in this order or in the reverse order; in both cases, the order is compatible with tree T2i. Analogously, vertices u'α(i), u'β(i), and u'δ(i) appear along L2i + 1 either in this order or in the reverse order; in both cases, the order is compatible with tree T2i + 1. Finally, the order in which vertices of V0, V1, V2m + 2, and V2m + 3 appear along L0, L1, L2m + 2, and L2m + 3, respectively, are trivially compatible with T0, T1, T2m + 2, and T2m + 3.

Note that the reduction described in Theorem [\ref=th:tl-hard] can be modified in such a way that T contains only binary trees by removing levels V1 and V2m + 2. Indeed, the presence of these two levels was only meant to simplify the description of the relationship between the order of the elements of A and the order of the paths between v and w.

Clustered-Level Planarity is [formula]-complete.

The problem trivially belongs to class [formula]. We prove the [formula]-hardness. Given an instance 〈A,C〉 of Betweenness, we construct an instance [formula] of -Level Planarity as in the proof of Theorem [\ref=th:tl-hard]; then, starting from [formula], we construct an instance [formula] of CL-Planarity that is cl-planar if and only if [formula] is T-level planar. This, together with the fact that [formula] is T-level planar if and only if 〈A,C〉 is a positive instance of Betweenness, implies the [formula]-hardness of CL-Planarity. Refer to Fig. [\ref=fig:hardness](b).

Cluster hierarchy T is constructed as follows. Initialize T with a root ρ. Let w∈V2m + 3 and wj∈V2m + 2, for [formula], be leaves of T that are children of ρ; add an internal node μ2m + 1 to T as a child of ρ. Next, for [formula], let u'δ(i) be a leaf of T that is child of μ2i + 1; add an internal node ν2i + 1 to T as a child of μ2i + 1; then, let u'α(i) and u'β(i) be leaves of T that are children of ν2i + 1; add an internal node μ2i to T as a child of ν2i + 1. Further, let uα(i) be a leaf of T that is a child of μ2i; add an internal node ν2i to T as a child of μ2i; then, let uβ(i) and uδ(i) be leaves of T that are children of ν2i; add an internal node μ2i - 1 to T as a child of ν2i. Finally, let vertices v∈V0 and vj∈V1, for [formula], be leaves of T that are children of μ1.

We prove that [formula] is cl-planar if and only if [formula] is T-level planar.

Suppose that [formula] admits a cl-planar drawing Γ. Construct a T-level planar drawing Γ* of [formula] by removing from Γ the clusters of T. First, observe that the drawing of (V,E,γ) in Γ* is level-planar, since it is level-planar in Γ. Further, for each [formula], vertex uα(i) does not appear between uβ(i) and uγ(i) along line L2i, since uβ(i),uγ(i)∈ν2i and uα(i)∉ν2i; analogously, vertex u'δ(i) does not appear between u'α(i) and u'β(i) along line L2i + 1, since u'α(i),u'β(i)∈ν2i + 1 and u'δ(i)∉ν2i + 1. Hence, the order of the vertices of V2i and V2i + 1 along L2i and L2i + 1, respectively, are compatible with trees T2i and T2i + 1. Finally, the order in which vertices of V0, V1, V2m + 2, and V2m + 3 appear along lines L0, L1, L2m + 2, and L2m + 3, respectively, are trivially compatible with T0, T1, T2m + 2, and T2m + 3.

Suppose that [formula] admits a T-level planar drawing Γ*; we describe how to construct a cl-planar drawing Γ of [formula]. Assume that Γ* is a straight-line drawing, which is not a loss of generality [\cite=efln-sda-06]. Initialize Γ  =  Γ*. Draw each cluster α in T as a convex region R(α) in Γ slightly surrounding the border of the convex hull of its vertices and slightly surrounding the border of the regions representing the clusters that are its descendants in T. Let j be the largest index such that Vj contains a vertex of α. Then, R(α) contains all and only the vertices that are descendants of α in T; moreover, any two clusters α and β in T are one contained into the other, hence R(α) and R(β) do not cross; finally, we prove that no edge e in E crosses more than once the boundary of R(α) in Γ. First, if at least one end-vertex of e belongs to α, then e and the boundary of R(α) cross at most once, given that e is a straight-line segment and that R(α) is convex. All the vertices in [formula] and at least two vertices of Vj belong to α, hence their incident edges do not cross the boundary of R(α) more than once. Further, all the vertices in [formula] have y-coordinates larger than every point of R(α), hence edges between them do not cross R(α). It remains to consider the case in which e connects a vertex x1 in Vj not in α (there is at most one such vertex) with a vertex x2 in [formula]; in this case e and R(α) do not cross given that x1 is outside R(α), that x2 has y-coordinate larger than every point of R(α), and that R(α) is arbitrarily close to the convex hull of its vertices.

Polynomial-Time Algorithms

In this section we prove that problems -Level Planarity and CL-Planarity become polyomial-time solvable if restricted to proper instances.

-Level Planarity

We start by describing a polynomial-time algorithm for -Level Planarity. The algorithm is based on a reduction to the Simultanoues Embedding with Fixed Edges problem for two graphs (SEFE-2), that is defined as follows.

A simultanoues embedding with fixed edges (SEFE) of two graphs [formula] and [formula] on the same set of vertices V consists of two planar drawings [formula] and [formula] of [formula] and [formula], respectively, such that each vertex v∈V is mapped to the same point in both drawings and each edge of the common graph [formula] is represented by the same simple curve in the two drawings. The SEFE-2 problem asks whether a given pair of graphs [formula] admits a SEFE [\cite=bkr-sepg-12]. The computational complexity of the SEFE-2 problem is unknown, but there exist polynomial-time algorithms for instances that respect some conditions [\cite=adfpr-tsetgibgt-11] [\cite=bkr-sepg-12] [\cite=br-drpse-13] [\cite=br-spqacep-13] [\cite=s-ttphtpv-13]. We are going to use a result by Bläsius and Rütter [\cite=br-spqacep-13], who proposed a quadratic-time algorithm for instances [formula] of SEFE-2 in which [formula] and [formula] are 2-connected, and the common graph [formula] is connected.

In the analysis of the complexity of the following algorithms we assume that the internal nodes of the trees in T in any instance [formula] of -Level Planarity and of tree T in any instance [formula] of CL-Planarity have at least two children. It is easily proved that this is not a loss of generality; also, this allows us to describe the size of the instances in terms of the size of their sets of vertices.

Let [formula] be a proper instance of -Level Planarity. There exists an equivalent instance [formula] of SEFE-2 such that [formula] and [formula] are 2-connected, and the common graph [formula] is connected. Further, instance [formula] can be constructed in linear time.

We describe how to construct instance [formula]. Refer to Fig. [\ref=fig:TCOHERENTtoSEFE].

Graph [formula] contains a cycle [formula] [formula], where k is the number of levels of [formula]. For each [formula], graph [formula] contains a copy [formula] of tree Ti∈T, whose root is identified with vertex ti, and contains two stars Pi and Qi centered at vertices pi and qi, respectively, whose number of leaves is as follows. For each vertex u∈Vi such that an edge (u,v)∈E exists connecting u to a vertex v∈Vi - 1, star Pi contains a leaf vertex u(Pi); also, for each vertex u∈Vi such that an edge (u,v)∈E exists connecting u to a vertex v∈Vi + 1, star Qi contains a leaf vertex u(Qi). We also denote by [formula] a leaf of [formula] corresponding to vertex u∈Vi.

Graph [formula] contains [formula] plus a set of edges defined as follows. For [formula], consider each vertex u∈Vi. Suppose that i is even. Then, [formula] has an edge connecting the leaf [formula] of [formula] corresponding to u with either the leaf u(Qi) of Qi corresponding to u, if it exists, or with the center qi of Qi, otherwise; also, for each edge in E connecting a vertex u∈Vi with a vertex v∈Vi - 1, graph [formula] has an edge connecting the leaf u(Pi) of Pi corresponding to u with the leaf v(Qi - 1) of Qi - 1 corresponding to v (such leaves exist by construction). Suppose that i is odd. Then, graph [formula] has an edge between [formula] and either u(Pi), if it exists, or the center pi of Pi, otherwise.

Graph [formula] contains [formula] plus a set of edges defined as follows. For [formula], consider each vertex u∈Vi. Suppose that i is odd. Then, [formula] has an edge connecting [formula] with either the leaf u(Qi) of Qi corresponding to u, if it exists, or with the center qi of Qi, otherwise; also, for each edge in E connecting a vertex u∈Vi with a vertex v∈Vi - 1, graph [formula] has an edge (u(Pi),v(Qi - 1)). Suppose that i is even. Then, graph [formula] has an edge between [formula] and either u(Pi), if it exists, or pi, otherwise.

It is easy to see that [formula] is connected and that [formula] can be constructed in polynomial time. We prove that [formula] and [formula] are 2-connected, that is, removing any vertex v disconnects neither [formula] nor [formula]. If v is a leaf of either [formula] or Pi or Qi, with 1  ≤  i  ≤  k, then removing v disconnects neither [formula] nor [formula], since [formula] remains connected. If v is an internal node (the root) of [formula], or Pi, or Qi, say of [formula], with 1  ≤  i  ≤  k, then removing v disconnects [formula] into m  =   deg (v) (resp. m  =   deg (v) - 1) components, namely one component [formula] containing all the vertices of C (resp. all the vertices of C, except for v) and m - 1 subtrees [formula] of [formula], with [formula], rooted the children of v; however, by construction, each [formula] is connected to [formula] via at least an edge [formula] and an edge [formula], or vice versa, incident to one of its leaves [formula].

Observe that, if [formula] has nT nodes in the trees of T (where |V|  <  nT), then [formula] contains at most 3nT vertices. Also, the number of edges of [formula] is at most |E| + 2nT. Hence, the size of [formula] is linear in the size of [formula] and it is easy to see that [formula] can be constructed in linear time.

We prove that [formula] admits a SEFE if and only if [formula] is T-level planar.

Suppose that [formula] admits a SEFE [formula]. We show how to construct a drawing Γ of [formula]. For 1  ≤  i  ≤  k, let [formula] be the order in which the leaves of [formula] appear in a pre-order traversal of [formula] in [formula]; then, let the ordering Oi of the vertices of Vi along Li be either [formula], if i is odd, or the reverse of [formula], if i is even.

We prove that Γ is T-level planar. For each [formula], Oi is compatible with Ti∈T, since the drawing of [formula], that belongs to [formula], is planar in [formula]. Suppose, for a contradiction, that two edges (u,v),(w,z)∈E exist, with u,w∈Vi and v,z∈Vi + 1, that intersect in Γ. Hence, either u appears before w in Oi and v appears after z in Oi + 1, or vice versa. Since i and i + 1 have different parity, either u appears before w in [formula] and v appears before z in [formula], or vice versa. We claim that, in both cases, this implies a crossing in [formula] between paths (qi, u(Qi), v(Pi + 1), pi + 1) and (qi,w(Qi),z(Pi + 1),pi + 1) in [formula]. Since the edges of these two paths belong all to [formula] or all to [formula], depending on whether i is even or odd, this yields a contradiction. We now prove the claim. The pre-order traversal Θ(Qi) of Qi (the pre-order traversal Θ(Pi + 1) of Pi + 1) in [formula] restricted to the leaves of Qi (of Pi + 1) is the reverse of [formula] (of [formula]) restricted to the vertices of Vi (of Vi + 1) corresponding to leaves of Qi (of Pi + 1). Namely, each leaf x(Qi) of Qi (y(Pi + 1) of Pi + 1) is connected to leaf [formula] of [formula] ([formula] of [formula]) in the same graph, either [formula] or [formula], by construction. Hence, the fact that u appears before (after) w in [formula] and v appears before (after) z in [formula] implies that u appears after (before) w in Θ(Qi) and v appears after (before) z in Θ(Pi + 1). In both cases, this implies a crossing in [formula] between the two paths.

Suppose that [formula] admits a T-level planar drawing Γ. We show how to construct a SEFE [formula] of [formula]. For 1  ≤  i  ≤  k, consider the order Oi of the vertices of level Vi along Li in Γ. Since Γ is T-level planar, there exists an embedding Γi of tree Ti∈T that is compatible with Oi. If i is odd (even), then assign to each internal vertex of [formula] the same (resp. the opposite) rotation scheme as its corresponding vertex in Γi. Also, if i is odd, then assign to pi (to qi) the rotation scheme in [formula] (in [formula]) such that the paths connecting pi (qi) to the leaves of [formula] (either with an edge or passing through a leaf of the corresponding star of [formula]) appear in the same clockwise order as the vertices of Vi appear in Oi; if i is even, then assign to pi (to qi) the rotation scheme in [formula] (in [formula]) such that the paths connecting pi (qi) to the leaves of [formula] appear in the same counterclockwise order as the vertices of Vi appear in Oi. Finally, consider the embedding Γi,i + 1 obtained by restricting Γ to the vertices and edges of the subgraph induced by the vertices of Vi and Vi + 1. If i is odd (even), then assign to the leaves of Qi and of Pi + 1 in [formula] (in [formula]) the same rotation scheme as their corresponding vertices have in Γi,i + 1. This completes the construction of [formula].

We prove that [formula] is a SEFE of [formula]. Since the rotation scheme of the internal vertices of each [formula] are constructed starting from an embedding of Γi of tree Ti∈T that is compatible with Oi, the drawing of [formula] is planar. Further, since the rotation schemes of pi (of qi) are also constructed starting from Oi, there exists no crossing between two paths connecting ti and pi (ti and qi), one passing through a leaf [formula] of [formula] and, possibly, through a leaf u(Pi) of Pi (through a leaf u(Qi) of Qi), and the other passing through a leaf [formula] of [formula] and, possibly, through a leaf v(Pi) of Pi (through a leaf v(Qi) of Qi). Finally, since the rotation schemes of the leaves of Qi and Pi + 1 are constructed from the embedding Γi,i + 1 obtained by restricting Γ to the vertices and edges of the subgraph induced by the vertices of Vi and Vi + 1, there exist no two crossing edges between leaves of Qi and of Pi + 1.

We remark that a reduction from -Level Planarity to SEFE-2 was described by Schaefer in [\cite=s-ttphtpv-13]; however, the instances of SEFE-2 obtained from that reduction do not satisfy any conditions that make SEFE-2 known to be solvable in polynomial-time.

Let [formula] be a proper instance of -Level Planarity. There exists a quadratic-time algorithm that decides whether [formula] is T-level planar.

By Lemma [\ref=le:TCOHERENTtoSEFE], an instance [formula] of SEFE-2 can be constructed in linear time such that [formula] and [formula] are 2-connected, the common graph [formula] is connected, and [formula] is a positive instance of SEFE-2 if and only if [formula] is T-level planar. The statement follows from the fact that there exists a quadratic-time algorithm [\cite=br-spqacep-13] that decides whether [formula] is a positive instance of SEFE-2.

Clustered-Level Planarity

In the following we prove that the polynomial-time algorithm to decide the existence of a T-level planar drawing of a proper instance [formula] of -Level Planarity can be also employed to decide in polynomial time the existence of a cl-planar drawing of a proper instance [formula] of CL-Planarity.

A proper cl-graph [formula] is μ-connected between two levels Vi and Vi + 1 if there exist two vertices [formula] and [formula] such that edge (u,v)∈E. For a cluster μ∈T, let [formula] and let [formula]. A proper cl-graph [formula] is level-μ-connected if it is μ-connected between levels Vi and Vi + 1 for each [formula]. A proper cl-graph [formula] is level-connected if it is μ-level-connected for each cluster μ∈T.

Our strategy consists of first transforming a proper instance of CL-Planarity into an equivalent level-connected instance, and then transforming such a level-connected instance into an equivalent proper instance of -Level Planarity.

Let [formula] be a proper instance of Clustered-Level Planarity. There exists an equivalent level-connected instance (V*,E*,γ*,T*) of Clustered-Level Planarity. Further, the size of (V*,E*,γ*,T*) is quadratic in the size of [formula] and (V*,E*,γ*,T*) can be constructed in quadratic time.

The construction of (V*,E*,γ*,T*) works in two steps. See Fig. [\ref=fig:level-connected].

First, we transform [formula] into an equivalent instance [formula]. Initialize V' = V, E' = E, and T' = T. Also, for each [formula] and for each vertex u∈Vi, set γ'(u)  =  3(i - 1) + 1. Then, for each [formula], consider each edge (u,v)∈E such that γ(u) = i and γ(v) = i + 1. Add two vertices du and dv to V', and replace (u,v) in E' with three edges (u,du), (du,dv), and (dv,v). Set γ'(du)  =  3(i - 1) + 2 and γ'(dv)  =  3i. Finally, add du (dv) to T' as a child of the parent of u (of v) in T'.

Second, we transform [formula] into an equivalent level-connected instance (V*,E*,γ*,T*). Initialize V* = V', E* = E', γ*  =  γ', and T* = T'. Consider each cluster μ∈T' according to a bottom-up visit of T'. If there exists a level V'i, with [formula], such that no edge in E' connects a vertex [formula] with a vertex [formula], then add two vertices u* and v* to V*, add an edge (u*,v*) to E*, set γ*(u*)  =  i and γ*(v*)  =  i + 1, and add u* and v* to T* as children of μ.

Observe that, for each cluster μ∈T and for each level 1  ≤  i  ≤  3k - 2, at most two dummy vertices are added to (V*,E*,γ*,T*). This implies that |V*|∈O(|V|2). Also, the whole construction can be performed in O(|V|2) time.

Suppose that [formula] admits a cl-planar drawing Γ; we show how to construct a cl-planar drawing Γ' of [formula]. Initialize Γ' = Γ. We scale Γ' up by a factor of 3 and we vertically translate it so that the vertices in V'1 lie on line y = 1. After the two affine transformations have been applied (i) no crossing has been introduced in the drawing, (ii) every edge is still drawn as a y-monotone curve, (iii) for [formula], the vertices of level Vi = V'3(i - 1) + 1 are placed on line y = 3(i - 1) + 1, that we denote by L'3(i - 1) + 1, and (iv) the order in which vertices of Vi = V'3(i - 1) + 1 appear along L'3(i - 1) + 1 is the same as the order in which they appeared along Li. For each [formula], consider each edge (u,v)∈E such that γ(u) = i and γ(v) = i + 1. Place vertices du and dv in Γ' on the two points of the curve representing (u,v) having y-coordinate 3(i - 1) + 2 and 3i, respectively. Then, the curves representing in Γ' any two edges in E' are part of the curves representing in Γ' any two edges in E. Hence Γ' is a cl-planar drawing of [formula].

Suppose that [formula] admits a cl-planar drawing Γ'; we show how to construct a cl-planar drawing Γ of [formula]. Initialize Γ  =  Γ'. For each [formula], consider each path (u,du,dv,v) such that γ'(u) = 3(i - 1) + 1, γ'(du) = 3(i - 1) + 2, γ'(dv) = 3i, and γ'(v) = 3i + 1; remove vertices du and dv, and their incident edges in E' from Γ; draw edge (u,v)∈E as a curve obtained as a composition of the curves representing edges (u,du), (du,dv), and (dv,v) in Γ'. Scale Γ down by a factor of 3 and vertically translate it so that the vertices of V1 lie on line y = 1. After the two affine transformations have been applied (i) no crossing has been introduced in the drawing, (ii) every edge is still drawn as a y-monotone curve, (iii) for [formula], the vertices of level Vi are placed on line y = i, and (iv) the order in which vertices of Vi = V'3(i - 1) + 1 appear along Li is the same as the order in which they appeared along L3(i - 1) + 1'. Since Γ' is cl-planar, this implies that Γ is cl-planar, as well.

Instance [formula] is such that, if there exists a vertex u∈V'j, with 1  ≤  j  ≤  3(k - 1) + 1, that is adjacent to two vertices v,w∈V'h, with h  =  j  ±  1, then u, v, and w have the same parent node μ∈T'; hence, [formula] is μ-connected between levels V'j and V'h.

Suppose that (V*,E*,γ*,T*) admits a cl-planar drawing Γ*; we show how to construct a cl-planar drawing Γ' of [formula]. Initialize Γ' = Γ* and remove from V', E', and Γ' all the vertices and edges added when constructing Γ*. Since all the other vertices of V' and edges of E' have the same representation in Γ' and in Γ*, and since Γ* is cl-planar, drawing Γ' is cl-planar, as well.

Suppose that [formula] admits a cl-planar drawing Γ'; we show how to construct a cl-planar drawing Γ* of (V*,E*,γ*,T*). Initialize Γ*  =  Γ'. Consider a level V'i, with 1  ≤  i  ≤  3(k - 1), such that vertices u*,v*∈μ with γ'(u*)  =  i and γ'(v*)  =  i + 1, for some cluster μ∈T, have been added to (V*,E*,γ*,T*). By construction, [formula] is not μ-connected between levels V'i and V'i + 1. As observed before, this implies that no vertex [formula] exists that is connected to two vertices v,w∈V'i + 1, and no vertex [formula] exists that is connected to two vertices v,w∈V'i. Hence, vertices u* and v*, and edge (u*,v*), can be drawn in Γ* entirely inside the region representing μ in such a way that u* and v* lie along lines L'i and L'i + 1 and there exists no crossing between edge (u*,v*) and another edge.

This concludes the proof of the lemma.

Let [formula] be a level-connected instance of Clustered-Level Planarity. There exists an equivalent proper instance [formula] of -Level Planarity. Further, the size of [formula] is linear in the size of [formula] and [formula] can be constructed in quadratic time.

We construct [formula] from [formula] as follows. Initialize [formula]. For [formula], add to T a tree Ti that is the subtree of the cluster hierarchy T whose leaves are all and only the vertices of level Vi. Note that the set of leaves of the trees in T corresponds to the vertex set V. Since each internal node of the trees in T has at least two children, we have that the size of [formula] is linear in the size of [formula]. Also, the construction of [formula] can be easily performed in O(|V|2) time.

We prove that [formula] is T-level planar if and only if [formula] is cl-planar.

Suppose that [formula] admits a T-level planar drawing Γ*; we show how to construct a cl-planar drawing Γ of [formula]. Initialize Γ  =  Γ*. Consider each level Vi, with [formula]. By construction, for each cluster μ∈T such that there exists a vertex [formula], there exists an internal node of tree Ti∈T whose leaves are all and only the vertices of [formula]. Since Γ* is T-level planar, such vertices appear consecutively along Li. Hence, in order to prove that Γ is a cl-planar drawing, it suffices to prove that there exist no four vertices u,v,w,z such that (i) u,v∈Vi and w,z∈Vj, with 1  ≤  i  <  j  ≤  k; (ii) u,w∈Vμ and v,z∈Vν, with μ  ≠  ν; and (iii) u appears before v on Li and w appears after z on Lj, or vice versa. Suppose, for a contradiction, that such four vertices exist. Note that, we can assume j  =  i  ±  1 without loss of generality, as [formula] is level-connected. Assume that u appears before v along Li and w appears after z along Lj, the other case being symmetric. Since Γ* is T-level planar, all the vertices of Vμ appear before all the vertices of Vν along Li and all the vertices of Vμ appear after all the vertices of Vν along Lj. Also, since [formula] is level-connected, there exists at least an edge (a,b) such that [formula] and [formula], and an edge (c,d) such that [formula] and [formula]. However, under the above conditions, these two edges intersect in Γ and in Γ*, hence contradicting the hypothesis that Γ* is T-level planar.

Suppose that [formula] admits a cl-planar drawing Γ; we show how to construct a T-level planar drawing Γ* of [formula]. Initialize Γ*  =  Γ. Consider each level Vi, with [formula]. By construction, for each internal node w of tree Ti∈T, there exists a cluster μ∈T such that the vertices of [formula] are all and only the leaves of the subtree of Ti rooted at w. Since Γ is cl-planar, such vertices appear consecutively along Li. Hence, Γ* is T-level planar.

We get the following.

Let [formula] be a proper instance of Clustered-Level Planarity. There exists an O(|V|4)-time algorithm that decides whether [formula] admits a cl-planar drawing.

By Lemma [\ref=le:PROPERtoLEVELCONNECTED], it is possible to construct in O(|V|2) time a level-connected instance [formula] of CL-Planarity that is cl-planar if and only if [formula] is cl-planar, with |V'| = O(|V|2). By Lemma [\ref=le:CLPtoTL], it is possible to construct in O(|V'|2) time a proper instance [formula] of -Level Planarity that is T-level planar if and only if [formula] is cl-planar. Finally, by Theorem [\ref=th:tl-polynomial], it is possible to test in O(|V'|2) time whether [formula] is T-level planar.

Open Problems

Several problems are opened by this research:

The algorithm in [\cite=jl-lpelt-02] for testing level planarity and the algorithm in [\cite=fb-clp-04] for testing CL-Planarity for level-connected instances in which the level graph is a proper hierarchy both have linear-time complexity. The algorithm in [\cite=wsp-gktlg-12] for testing -Level Planarity for instances in which the number of vertices on each level is bounded by a constant has quadratic-time complexity. Although our polynomial-time algorithms solve more general problems than the ones cited above, they are less efficient. Hence, there is room for future research aiming at improving our complexity bounds.

Our [formula]-completeness result on the complexity of CL-Planarity exploits a cluster hierarchy whose depth is linear in the number of vertices of the underlying graph. Does the [formula]-hardness hold even when the hierarchy is flat or has a depth that is sublinear in the number of vertices?

The [formula]-hardness of CL-Planarity presented in this paper is, to the best of our knowledge, the first hardness result for a variation of the clustered planarity problem in which none of the c-planarity constraints is dropped. Is it possible to use similar techniques to tackle the more intriguing problem of determining the complexity of Clustered Planarity?