Finite-density effects in the Fredrickson-Andersen and Kob-Andersen kinetically-constrained models

Introduction

Increasing the density of particles in granular materials causes them to undergo a transition from a fluid-like state, in which the particles can move relatively freely, to a jammed state, in which almost none of the particles can move [\cite=jamming] [\cite=hecke]. In glasses, a similar transition occurs when the temperature is decreased [\cite=glass] [\cite=glass2]. The various kinetically-constrained models [\cite=review] [\cite=review2] [\cite=east] [\cite=northeast] [\cite=kronig] capture the essence of the glass or jamming transitions and there has been much recent activity on them; Some of these models simulate the way the particles block each other's movement by saying that a particle can move only if its neighbors satisfy some condition [\cite=sellitto] [\cite=knights] [\cite=DFOT] [\cite=spiral] [\cite=spiral3d] [\cite=jeng] [\cite=elmatad]. Other models add driving forces which simulate the resistance of jammed systems to forces [\cite=fieldings] [\cite=shokef] [\cite=sellitto2] [\cite=driving2] [\cite=driving].

Two of the most studied kinetically-constrained models are the Fredrickson-Andersen (FA) [\cite=fa] [\cite=fa2] and the Kob-Andersen (KA) [\cite=ka] models. In the versions of the models we consider here, the system is coarse-grained to a two-dimensional square lattice, and each site is in one of two states, 0 or 1. In the FA model, state 1 represents a high density region in granular systems and an active region in glasses, while state 0 represents either a low density region or an inactive region in granular matter and glasses respectively. A site can change its state from 0 to 1 and vice versa, with a temperature-dependent rate, if at least m = 2 of its four nearest neighbors are in state 0. In the KA model, state 1 represents an occupied site and state 0 a vacant site. A particle can move to a vacant nearest neighbor site if at least m = 2 of its nearest neighbors are vacant before and after the move. These models can be expanded to higher dimensional hyper-cubic lattices with a general number m of vacant neighbors needed for movement [\cite=teomy2] [\cite=balogh]. We restrict ourselves in this article to the m = 2 models in a two-dimensional square lattice. Our work can be easily extended to higher dimensional models with m = 2, but extending it to models with [formula] is much more complicated.

In order to investigate the jamming transition in kinetically-constrained models, one defines an order parameter nF as the average fraction of particles that will never be able to move, and we call these particles frozen. It was proven that in the thermodynamic limit, none of the particles are frozen in either the FA model [\cite=fa2] or the KA model [\cite=toninelli] for any finite density. However, in finite systems, some of the particles are frozen. The behavior of finite-sized systems is interesting on its own right [\cite=balogh], due to the finite extent of numerical simulations [\cite=lambda1] [\cite=lambda2] [\cite=lambda3] [\cite=lambda4] [\cite=adler] but also because of the physical problem of jamming in confined geometries [\cite=bi] [\cite=teomy1] [\cite=teomy2]. Instead of running the full physical dynamics of these models, a faster way to find nF is to run culling dynamics. In these dynamics the system is scanned iteratively, such that in each step the mobile particles are removed, until either all particles are removed or those remaining cannot be removed. Those that cannot be removed are the frozen particles. For the FA model this process is identical to finding the size of the percolating cluster in bootstrap percolation, in which a site becomes infected (i.e. its state changes to 0) if at least two of its neighbors are also in state 0. For the KA model, it is similar with the added requirement that at least one of the neighboring 0's have another neighboring 0.

By varying the vacancy density v and fixing the system size L  ×  L, the average fraction of frozen particles changes from nF = 0 at v = 1 to nF = 1 at v = 0. For large systems the transition between nF = 0 and 1 occurs over a very narrow range of densities. The critical vacancy density, vc(L), is defined as the density at which on average half of the particles are frozen in a system of size L  ×  L. Holroyd proved [\cite=holroyd] that for asymptotically large systems, the critical vacancy density below which the system is highly likely to contain frozen particles is

[formula]

with

[formula]

Because this result is for asymptotically large systems, it is valid for both periodic and hard-wall boundary conditions. This result is obtained by considering critical droplets, which are small unfrozen regions that expand to unfreeze the entire system. Holroyd showed [\cite=holroyd], and a sketch of the proof is given in Section [\ref=critdrop] below, that in the asymptotic limit the probability that a site seeds a droplet is

[formula]

Since a system is unfrozen if it contains such a droplet, Eq. ([\ref=eqlam]) is derived by assuming that at the critical density there is on average one critical droplet in the system, i.e. that

[formula]

Culling simulations for finite-size systems indicate that indeed vc  ≈  λ  /   ln L. The value of λ was estimated by finding the critical vacancy density vc at which the probability that the system is frozen equals 0.5 [\cite=footnote], and using Eq. ([\ref=eqlam]). However, the value of [formula] estimated by simulations of both the FA and KA models with L up to 105 is very far from its asymptotic limit [formula] [\cite=lambda1] [\cite=lambda2] [\cite=lambda3] [\cite=lambda4] [\cite=adler]. Holroyd subsequently showed [\cite=slowcon] [\cite=slowcon2] that the convergence to the asymptotic value is slow, and that the correction to λ is

[formula]

such that for small vc

[formula]

The simulations of the largest systems we are aware of are for L = 128,000 and [formula] [\cite=adler]. De Gregorio et. al. [\cite=modified] circumvented the need to simulate large systems in a related model, the modified bootstrap percolation model, by explicitly calculating P(L,v), i.e. the probability that a square of size L  ×  L is emptied by a single seed. These calculations are for equivalent systems of up to size L = 220,000. Formally, the same approach can be used for the FA and KA models, but in practice the calculations become too cumbersome.

In this paper we present a new technique that also circumvents the need to simulate large systems, and the results we obtain are for an equivalent system of size L > 107 with vc = 0.016. In our approach we fix the vacancy density, v, and numerically calculate P(  ∞  ,v). We do this by expanding critical droplets and considering only the sites in their vicinity. In effect, we treat the expansion process as a Markov process. In this way there is no need to generate large configurations or irrelevant data. Our results for f(v) are consistent with the theoretical bounds, Eq. ([\ref=fdef]). Moreover, we find that the average number of sites seeding a critical droplet is not 1 but higher at about 6 for the FA model and 4 for the KA model at the critical density, and find the corresponding correction to Eq. ([\ref=pl2]).

In Section [\ref=critdrop] we sketch the derivation of Eq. ([\ref=eqlam]). In Section [\ref=secseeds] we show numerically that the average number of seeding sites is larger than 1. In Section [\ref=secplv] we show our results for P(L,v) and for λ. Section [\ref=secalgorithm] describes our algorithm, and Section [\ref=secsummary] summarizes the paper.

Critical Droplets

The main idea behind Holroyd's proofs is the notion of critical droplets, which are small unfrozen regions that expand to unfreeze the entire system. Since the droplet can only expand, this method is equivalent to the culling dynamics described above, and not to the physical dynamics. Assuming that the system is either completely frozen or completely unfrozen, the critical density may be defined as the density at which the system contains on average one critical droplet, and so vc is found from Eq. ([\ref=pl2]).

In order to find an analytical approximation for P(v), consider an emptiable square of size [formula] and randomly choose one of its four sides. With probability [formula] (where ρ = 1 - v is the particle density) at least one of the sites adjacent to the square in the chosen direction is empty, and thus in the m = 2 FA and KA models this square may be expanded to an emptiable rectangle of size [formula]. With probability [formula] all the sites in this direction are occupied. In this case, we check the row or column adjacent to that fully occupied row or column. With probability [formula] at least one of the sites in that row or column is empty, and thus the [formula] rectangle is emptiable. If the second row or column is fully occupied as well, we stop the expansion process. From the emptiable rectangle of size [formula] we randomly choose one of its two longer sides, and repeat the same check for the two rows or columns adjacent to the chosen side, and stop the process only if both of them are full. Since we always try to expand the rectangle from its long side, we only need to consider [formula]. Hence, there are in total six states to consider.

We denote [formula] as the probability that during the expansion process the rectangle of size [formula] is emptiable, with [formula], and [formula] as the probability that the [formula] rectangle is emptiable but the adjacent row is fully occupied. Therefore we have in total six states for each [formula], because k = 0,1,2. Since we know the probability to change from each state to another, we can write a recursion relation relating the probability to reach each of the six states given the probability to reach a smaller rectangle Assuming a solution of the form

[formula]

and further assuming that for large [formula] and small v the function β depends only weakly on [formula], we have a cubic equation on [formula]

[formula]

with the three solutions

[formula]

For asymptotically large squares [formula] we have [formula], i.e. the only non-zero solution is β+ which converges to 1. Therefore, for large [formula] we may approximate [formula] as

[formula]

Changing the sum over k to an integral over x = ρk and taking the limit [formula], yields

[formula]

with

[formula]

This asymptotic value of λ0 was derived by considering only the most likely way to expand the droplet to the shape of a square, since we stopped the expansion if two adjacent rows or columns are fully occupied. By considering more ways to expand the droplet, but still not all of them, Holroyd derived the bounds on λ given in Eq. ([\ref=fdef]) above.

Number of Seeding Sites

The customary way to extract λ(v) numerically is to say that at the critical density, when half of the configurations in the ensemble are frozen and half are unfrozen, a square of size L  ×  L has on average one site that seeds a critical droplet. However, there are correlations between the seeding sites, i.e. if one site seeds a droplet at least another site can also seed a droplet, hence the average number of seeding sites at the critical density is not necessarily 1, see Fig. [\ref=conf] which shows a typical unfrozen configuration. By defining n as the average number of seeding sites in configurations that have seeds at the critical density, we find that Eq. ([\ref=pl2]) should be modified to

[formula]

or equivalently

[formula]

For very large L, when [formula], the value of n has a negligible effect on the value of λ(v). As shown below, we find that for [formula] the value of n is [formula], and decreases with increasing L. For L > 1000 and [formula] we find that [formula], and thus the value of n has only a negligible effect on λ(v) for systems with L > 1000. We numerically find that the average number of seeding sites is not 2, but higher at about 5 - 7 (FA) or 4 (KA), as shown in Fig. [\ref=avseeds].

Numerical Calculation of the seeding probability

The main point of this paper is that an alternative way to calculate λ(v) is by explicitly calculating the probability to seed a critical droplet. We start from a single site, and check numerically what is the probability P(L,v) that it seeds a critical droplet that unfreezes a region of size L  ×  L. We see from Fig. [\ref=pvconv]a that for a given vacancy density v, the probability P(L,v) converges rapidly to [formula]. Therefore, from the value P(L,v) at the plateau we can find λ(v).

We arbitrarily choose a threshold γ = 0.01 and define Lγ as the beginning of the plateau, i.e. as the L for which [formula], where Lmax = 1000 is the maximal size we consider in our simulations. From Fig. [\ref=pvconv]b we see that L0.01 is approximately given by

[formula]

i.e. it scales as the solution to the equation [formula]. The prefactor of C0.01 = 0.52 is due to the choice of γ = 0.01 as the threshold. If the threshold is taken to 0, the prefactor goes to C0 = 1 (see Fig. [\ref=pvconv]c), but then there are numerical fluctuations at low v. The reason for the scaling of Lγ is due to the different ways in which the droplet may be expanded. A droplet of size [formula] may be expanded to a droplet of size [formula] if at least one of the sites on the adjacent row of length [formula] is vacant, and it may be expanded to a droplet of size [formula] if the site adjacent diagonally to its corner is vacant. The former process has a probability of [formula], while the latter has a probability of v. At small L the probability that the droplet expands by the first process is very small, while at large L the probability is almost unity. Therefore, once the droplet reaches a critical size, it is highly likely to continue expanding to infinity.

The values of λ(v) calculated by our method and the traditional method are shown in Fig. [\ref=lambda], where for the traditional method we used n = 6 for the FA model and n = 4 for the KA model, see Fig. [\ref=avseeds]. Since the two methods yield the same results, we can say that the corrections to λ are not finite-size effects, since these do not affect our method, but rather finite-density effects.

The smallest vacancy density we simulated is v = 0.016, which corresponds to λ = 0.274 (0.286) and squares of size [formula] ([formula]) for the FA (KA) model. The running time for v = 0.016 was 8-cpu-years, or one month of 96 jobs in parallel, compared to 1.5-cpu-years for v = 0.017. As an estimate, we could in principle simulate also v = 0.015 by enslaving all our computing resources for several months.

Based on the bounds given in Eq. ([\ref=fdef]), we fitted the results of f(v) = λ0  -  λ(v), excluding the largest values of v, to a function of the form

[formula]

α = 0 would correspond to the lower bound, and α = 3 to the upper bound. We found that [formula], [formula], [formula], and [formula], as shown in Fig. [\ref=ffit]. Since [formula], this functional form is consistent with Eq. ([\ref=fdef]). Using these fits, we can extrapolate to check what system size is needed for λ(v) to be, for example, 99% of λ0. The vacancy density at which this occurs is [formula] (FA) or [formula] (KA), which corresponds to the critical density of a square of size [formula] (FA) or [formula] (KA), much larger than any physical system (for comparison, the size of the observable universe is 1064 times the planck length). For L = 1024, the critical density is [formula], which corresponds to [formula] in both models. The vacancy densities and the corresponding sizes needed for λ(v) to be a certain percent of λ0 are shown in Table [\ref=tablevl].

Simulation Algorithm

In our simulations we use a special property of the FA and KA models: an unfrozen region must be a rectangle. This is also true in higher dimensions, but only if m = 2 vacant neighbors are needed to empty a site. This special property does not exist if [formula] neighbors are needed.

We start from a single empty site at the origin. Now, consider its neighbor at position (0,1), which is empty with probability v. If it is empty, the empty region now contains the origin and the additional site, and so is a rectangle of size [formula]. If the site is not empty, consider the site (0,2), which is also empty with probability v. If this site is empty, then the site (0,1) has two neighboring vacancies, and so can also be emptied. Hence, in this case the empty region is a rectangle of size [formula]. We continue along this direction until we have an empty region of size 1  ×  k and the two sites at (0,k + 1) and (0,k + 2) are not empty. Now, we consider the sites to the right of the empty rectangle. If at least one of the k sites is empty, with probability [formula], the empty region is expanded to a rectangle of size 2  ×  k. We now continue in this manner and check the sites surrounding the empty rectangle on all sides. We also remember how many of the adjacent sites to the empty regions we already checked and found that they are occupied.

The main advantage of this algorithm is the negligible memory required, which does not grow as the rectangle grows, since the only variables we need to keep in memory are the size of the rectangle and the number of occupied sites adjacent to it in each of its directions. The history of the expansion process and the exact location of the occupied sites are irrelevant to the final result. Also, since the output of the algorithm is the number of times it was able to unfreeze a large system, it can be easily parallelized, with the final output being the sum of the outputs of the individual jobs.

Extending this algorithm to higher dimensional models with m = 2 is straightforward, since the unfrozen region must be a hyper-rhomboid, such that at any stage in the algorithm the only variables which should be kept in memory are the size of the hyper-rhomboid (d variables, with d being the dimension of the system), the number of occupied checked sites in the two layers adjacent to each of the 2d sides (4d variables), and whether the corners are occupied or not (2d variables), for a total of 2d + 5d variables. For [formula], the extension of the algorithm is not trivial, since the unfrozen region does not have to be a hyper-rhomboid. In this case, a single droplet can still be expanded, but the memory required is higher since its structure is more complicated.

Summary

By numerically calculating the probability P(L,v) to expand droplets in the FA and KA kinetically-constrained models we showed that even for rather small L, λ(L,v) does not depend on L, which means that the difference between its value for finite L and v and between its asymptotic value is a finite-density effect, and not a finite-size effect. Our numerical results for λ(v) are consistent with the known theoretical bounds. The results we obtained are for an equivalent system of size L > 107, much larger than any previously simulated [formula].

Using the data for λ(v), we may now check numerically previous results derived for the FA and KA models. For example, Toninelli proved [\cite=toniphd] that for asymptotically small v in an infinitely large system in the KA model, the diffusion coefficient of the particles is [formula]. It would be interesting to check whether for a finite density, the diffusion coefficient behaves in the same way with λ(v).

The concept behind the algorithm we propose here may be implemented in other models and for other purposes. The idea is to use the fact that the expansion process is Markovian, and to generate only the needed local information without generating in advance unnecessary data. Consider for example the problem of first passage for a tracer particle diffusing in a dense environment [\cite=benichou1] [\cite=benichou2]: how long does it take a particle to move a certain distance from its initial position? At short times, there will be no effect from particles which are far from the tracer particle, so there is no need to follow them or even generate them until they become relevant. The algorithm may be implemented in the following way using the Monte-Carlo method: At time t = 0, generate the tracked particle at the origin. Since there is at this time only one known particle, and each particle on average attempts to move once every time unit, first advance the clock by one time unit. Now, generate the particles interacting with the tracked particle (assuming the interactions are short ranged) and move the tracer particle in the randomly chosen direction according to its interaction with the surrounding particles. Assuming that in the previous step N new particles were generated, advance the clock by 1 / (1 + N) and randomly choose one of the N + 1 particles. Generate any new particles which may interact with the chosen particle and move them. Since the interactions are short-ranged, new particles will be generated at each step only if the chosen particle is at the edge of the generated system. In this way, an effectively infinite system may be simulated without using periodic boundary conditions.

Acknowledgements

We thank Roman Golkov and Haim Diamant for helpful discussions. This research was supported by the Israel Science Foundation grants No. 617 / 12, 1730 / 12.