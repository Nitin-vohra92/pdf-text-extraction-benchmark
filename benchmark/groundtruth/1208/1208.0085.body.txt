Claim Lemma Corollary Proposition Conjecture Fact Observation

Definition Remark Example

Game matching number of graphs

, William B. Kinnersley

, Suil O

, Douglas B. West

Introduction

The archetypal question in extremal graph theory is "how many edges can an n-vertex graph contain without containing a copy of a forbidden subgraph F?" The answer is the extremal number of F, denoted [formula]. The celebrated theorem of Turán [\cite=Tur] gives a formula for [formula] and characterizes the largest graphs not containing Kr.

A graph H is F-saturated if [formula], but F  ⊆  H + e whenever [formula]. Thus the extremal number [formula] is the maximum size of an F-saturated n-vertex graph. The saturation number of F, denoted [formula], is the minimum size of an F-saturated n-vertex graph. Erds, Hajnal, and Moon [\cite=EHM] initiated the study of graph saturation, determining [formula]. -1

More generally, for fixed graphs F and G, a subgraph H of G is F-saturated relative to G if [formula], but F  ⊆  H + e whenever e∈E(G) - E(H). When edges are successively added to H to reach a subgraph that is F-saturated relative to G, the final number of edges is between the minimum and maximum sizes of such subgraphs. When the edges are chosen by two players with opposing objectives, we obtain a natural game.

The F-saturation game on a graph G is played by two players, Max and Min. The players jointly construct a subgraph H of G by alternately adding edges of G to H without completing a copy of F. The game ends when H is F-saturated relative to G. Max aims to maximize the length of the game, while Min aims to minimize it. The game F-saturation number of G is the length of the game under optimal play, denoted by [formula] when Max starts and by g(F,G) when Min starts.

The saturation game bears similarities to other games. In a Maker-Breaker game, the players choose edges of a graph G in turn. Maker wins by claiming the edges in a subgraph having a desired property P; Breaker wins by preventing this. For example, Hefetz, Krivelevich, Stojakovi, and Szabó [\cite=HKSS1] studied Maker-Breaker games on Kn in which Maker seeks to build non-planar graphs, non-k-colorable graphs, or Kt-minors.

In a Maker-Breaker game, one may ask how quickly Maker can win. Breaker then acts like Max in the saturation game, aiming to prolong the game. Hefetz, Krivelevich, Stojakovi, and Szabó [\cite=HKSS2] showed that on Kn, Maker can build a spanning cycle within n + 2 turns and can build a k-connected subgraph within (1 + o(1))kn / 2 turns. Feldheim and Krivelevich [\cite=FK] showed that Maker can build a given d-degenerate p-vertex graph within d1122d + 7p moves (when n is large relative to d and p).

Saturation games were introduced by Füredi, Reimer, and Seress [\cite=FRS]; they studied the value [formula] as "a variant of Hajnal's triangle-free game". (In Hajnal's original "triangle-free game", the players try to avoid triangles, with the loser being the player forced to create one; see [\cite=CHR] [\cite=GP] [\cite=MS1] [\cite=MS2] [\cite=Pra] [\cite=Ser].) Since the F-saturation game always produces an F-saturated graph, trivially [formula]. The lower bound on [formula] from [\cite=FRS] is Ω(nlgn). An unpublished result of Erds states n2 / 5 as an upper bound. Biró, Horn, and Wildstrom [\cite=BHW] improved the leading coefficient in the upper bound, but the correct order of growth remains unknown.

In this paper, we study the P3-saturation game. The P3-saturated subgraphs of G are the maximal matchings in G, so we call [formula] the game matching number of G. With α'(G) denoting the maximum size of a matching in G (the matching number), we let α'g(G) and 'g(G) denote the sizes of the matchings produced under optimal play in the Max-start game (where Max plays first) and in the Min-start game (where Min plays first), respectively.

The outcome of an F-saturation game may depend heavily on which player starts. For example, if G arises from K1,k by subdividing one edge, then [formula], but g(G,2K2)  =  2. The special case of game matching (F = P3) is much better behaved; the main result of Section [\ref=sec_gamematch] states that always [formula]. The proof involves also proving α'g(H)  ≤  α'g(G) and 'g(H)  ≤  'g(G) when H is an induced subgraph of G.

Section [\ref=sec_match_gamematch] examines the relationship between αg'(G) and α'(G). We obtain a sufficient condition for αg'(G) = α'(G); it is somewhat technical but is preserved by taking the cartesian product with any other graph. We also prove [formula] for all G. This inequality is sharp; equality holds for many split graphs (a graph is a split graph if its vertex set can be partitioned into a clique and an independent set). We also show that the maximum number of edges in an n-vertex graph such that α'(G) = 3k and α'g(G) = 2k is [formula] when [formula]. Finally, we prove the general upper bound [formula], where μ(G) is the minimum size of a maximal matching in G.

In Section [\ref=forests], we restrict our attention to forests, where the lower bound in terms of α'(G) can be improved. When G is a forest, [formula], which is sharp (equality holds for the "comb" obtained by adding a pendant edge at each vertex of the path P4k). We also prove that 'g(F)  ≤  α'g(F) when F is a forest, which means that there is no advantage in starting second or skipping a turn. A closely related result is that adding a star component to a forest increases both parameters by 1.

Finally, in Section [\ref=smalldeg] we consider graphs with small maximum degree. We show that optimal play on the n-vertex path Pn produces a maximal matching of size differing from n / 7 by less than 3. Note also that the outcome on Cn is greater by 1 than the outcome on Pn - 2 with the other player starting. For a connected 3-regular n-vertex graph G, we prove that always α'g(G)  ≥  n / 3, and we construct such graphs with α'g(G) < 7n / 18. There are disconnected 3-regular graphs with α'g(G)  ≤  3n / 8.

Max-start vs. Min-start

Our primary goal in this section is to determine the positive integer pairs (r,s) that are realizable as (α'g(G),'g(G)) for some graph G. We show first that all pairs with |r - s|  ≤  1 are realizable (except (1,2)). The main result is then that these are the only such pairs; in other words, the choice of the starting player makes little difference. As part of the proof, we will show also that vertex deletion cannot increase α'g or 'g.

We state explicitly the special case for game matching of the trivial upper and lower bounds for game saturation: α'g(G) and 'g(G) are bounded above by α'(G) and bounded below by μ(G), the minimum size of a maximal matching in G.

A pair (r,s) of positive integers is realizable as (α'g(G),'g(G)) for some graph G if [formula] (except for (r,s) = (1,2)), and G may be required to be connected.

If Min cannot move without leaving another move, then the same is true for a first move by Max, so (1,2) is not realizable. The complete graph K2r realizes (r,r). To realize (r,r - 1), add a pendant vertex to K2r - 1.

To realize (r,r + 1), we present a graph G and give strategies for the second player to ensure α'g(G)  ≤  r and 'g(G)  ≥  r + 1. These values are optimal, because in each case we will have α'g(G)  ≥  μ(G) = r and 'g(G)  ≤  α'(G) = r + 1.

To realize (2k,2k + 1), take K4k + 2 and discard a perfect matching. When k = 1, the graph after the first move is always K1,1,2; Min moving next can prevent a third move, while Max moving next can guarantee a third move. For [formula], any move by the first player joins endpoints of two deleted edges, and the second player can play the edge joining the other two endpoints of those edges to reach the same situation in a smaller graph.

To realize (2k - 1,2k) for k  ≥  2, take 2K2k, delete one edge from each component, creating four special vertices, and restore regularity by adding a different pair of edges on the special vertices. If Min makes a first move involving a special vertex, then Max can move to leave 2K2k - 2. If Max makes a first move involving a special vertex, then Min can move to leave K2k - 3 + K2k - 1 (we use "+  " to denote disjoint union). A first move not involving a special vertex can be mirrored on the vertices of the other large clique to reach the same situation in a smaller graph, except that when k = 2 such a first move by Max can be answered by Min to leave P3 + K1.

The pathology α'g(G) < 'g(G) cannot occur when G is a forest; we prove this in Section [\ref=forests]. Meanwhile, we begin the proof of the general bounds |α'g(G) - 'g(G)|  ≤  1 with a simple observation that will also be useful in other contexts.

If uv is an edge in a graph G, then [formula], with equality if and only if uv is an optimal first move for Max on G. Likewise, [formula], with equality if and only if uv is an optimal first move for Min on G.

The right side of each claimed inequality is the result under optimal play after uv is played as the first move. The first player does at least as well as this, with equality (by definition) if and only if uv is an optimal first move.

We facilitate the inductive proof of [formula] by proving simultaneously that both game matching numbers are monotone under the deletion of vertices.

If G is a graph, and v is a vertex in G, then (1) |α'g(G) - 'g(G)|  ≤  1, and (2) α'g(G)  ≥  α'g(G - v) and 'g(G)  ≥  'g(G - v).

We prove both statements simultaneously by induction on |V(G)|. They hold by inspection for |V(G)|  ≤  2, so consider larger G.

Step 1: If (1) and (2) hold for smaller graphs, then (2) holds for G. First consider α'g(G). Let H = G - v, and let xy be an optimal first move in the Max-start game on H. Let H' = H - {x,y} and G' = G - {x,y}. By Proposition [\ref=optimal], αg'(H) = 1 + g'(H') and [formula]. Since H' = G' - v, applying (2) for G' yields

[formula]

Now consider 'g(G), with again H = G - v. Let xy be an optimal first move in the Min-start game on G (not on H!), and let G' = G - {x,y}.

If v∉{x,y}, then let H' = H - {x,y}; here H' = G' - v. If v = x, and y has a neighbor z in H, then let H' = H - {y,z}; here H' = G' - z. In both cases, applying optimality of xy for the first move on G, statement (2) for G', and Proposition [\ref=optimal] for H yields

[formula]

By symmetry in x and y, the only remaining case is v = x with y isolated in H. Here the irrelevance of isolated vertices and (1) for H yield

[formula]

Step 2: If (2) holds for G (and smaller graphs), then (1) holds for G. To prove g'(G)  ≤  1  +  αg'(G), let uv be an optimal first move in the Min-start game on G, and let G'  =  G  -  {u,v}. Applying (2) to both G - v and G yields

[formula]

The inequality αg'(G)  ≤  1  +  g'(G) follows by the same computation with α'g and 'g exchanged, where uv an optimal first move in the Max-start game on G.

As a corollary, we obtain the following result:

If v is a vertex in a graph G, then α'g(G)  ≥  α'g(G - v)  ≥  α'g(G) - 2 and 'g(G)  ≥  'g(G - v)  ≥  'g(G) - 2, and the bounds are sharp.

Theorem [\ref=at_most_one] yields the upper bounds for G - v, with equality when v is isolated.

The lower bounds hold (strictly) when v is isolated, so we may assume that v has a neighbor u. By Proposition [\ref=optimal] and Theorem [\ref=at_most_one](1), g'(G)  ≤  1  +  αg'(G  -  {u,v})  ≤  2  +  g'(G  -  {u,v}), and then g'(G - v)  ≥  g'(G  -  {u,v})  ≥  g'(G)  -  2 by Theorem [\ref=monotone](2). For the other inequality, Proposition [\ref=optimal] and Theorem [\ref=at_most_one] yield αg'(G - v)  ≥  αg'(G - {u,v})  ≥  g'(G)  -  1  ≥  αg'(G)  -  2.

For sharpness of the lower bounds, let G = rK2 + C6 with [formula], and let v be a vertex of an isolated edge. Since α'g(C6) = 2 < 3 = 'g(C6), neither player wants to play on the 6-cycle. When r is odd, the first player will have to play on the 6-cycle in G - v; when r is even, it will be the second player. Hence α'g(G - v) = r + 1 = α'g(G) - 2 when r is odd, and 'g(G - v) = r + 1 = 'g(G) - 2 when r is even.

Relation to Matching Number

We next study the relationship between the game matching number and the ordinary matching number. Although generally α'g(G) < α'(G), there is a condition sufficient for equality.

Fix an n-vertex graph G and a maximum matching M in G. If uv∈E(G) implies u'v'∈E(G) whenever uu',vv'∈M, then αg'(G)  =  g'(G)  =  α'(G).

Both claims hold by inspection when n  ≤  4; we proceed by induction on n.

Since neither αg'(G) nor g'(G) can exceed α'(G), we need only give strategies for Max. Let uv be the first edge played, and let G' = G - {u,v}. If uv∈M, then α'(G') = α'(G) - 1, and M - {uv} satisfies the hypothesis for G', so the induction hypothesis applies.

Hence in the Max-start game it suffices to choose uv∈M, and in the Min-start game we may assume uv∉M. If u and v are not both covered by M, then α'(G') = α'(G) - 1 (or G would have a larger matching); again the induction hypothesis applies.

In the remaining case, there exist uu',vv'∈M. By hypothesis, u'v'∈E(G); Max responds by playing u'v'. Now G - {u,v,u',v'} satisfies the hypothesis (using M - {uu',vv'}), so the induction hypothesis yields g'(G)  ≥  2 + g'(G - {u,v,u',v'})  =  2 + α'(G) - 2.

The property we require of G in Theorem [\ref=gamen2] is restrictive, but if G has a perfect matching M satisfying the hypothesis of Theorem [\ref=gamen2], then so does the cartesian product [formula], for any graph H (using the perfect matching in [formula] formed by the copies of M). For example:

For [formula] and any graph H, Max can force a perfect matching in [formula], no matter who plays first.

Theorem [\ref=gamen2] does not allow Max to force a perfect matching in all cartesian products that have perfect matchings.

Let G be the "paw", obtained from a triangle with vertex set u,v,w by adding one vertex x with neighbor w. In [formula], where P3 is the path with vertices a,b,c in order, Max cannot force a perfect matching no matter who starts. Min can start by playing the edge joining (w,a) and (v,a), threatening to isolate (u,a) or (x,a). Max cannot prevent Min from isolating one of these vertices on the next turn. Similar analysis applies to the Max-start game on [formula] and to both games on [formula].

Next we consider how small αg'(G) can be in terms of α'(G); we prove a general lower bound and show that it is sharp. A round of play consists of a move by Max followed by a move by Min. We call [formula] the residual graph after edges [formula] are played in the matching game on G.

[formula] for every graph G.

As long as an edge remains, Max plays an edge belonging to a maximum matching; this reduces the matching number by 1. When [formula], the edge played by Min in response is incident to at most two edges of a maximum matching and hence reduces the matching number (of the residual graph) by at most 2. Hence a round reduces α' by at most 3 while adding 2 to the number of edges played. When α'(G) = 2 and Max starts, two more edges will be played.

Before proving that Theorem [\ref=general_lower] is sharp, we pause to show that Min has a similar strategy using a small maximal matching to place an upper bound on the outcome.

[formula] for every graph G.

Let T be the set of 2μ(G) vertices covered by a smallest maximal matching M. Min plays in M when possible, using two vertices of T. Max plays some edge, which uses at least one vertex of T. This continues for k rounds, where k  ≥  μ(G) / 2, using at least 3k vertices of T and making 2k moves, after which no edges remain in M. Subsequently, at most 2μ(G) - 3k moves remain, since each move uses a vertex of T. Hence the total number of moves played is at most 2μ(G) - k, which is at most [formula].

Sharpness of Theorem [\ref=general_lower] is shown by rP4 with r even; Max can guarantee that at least half of the components contribute two edges. Next we consider sharpness of Theorem [\ref=general_lower]. A split graph is a graph whose vertex set can be partitioned into a clique and an independent set. We present a Min strategy for the matching game on split graphs. On many split graphs, this strategy achieves equality in Theorem [\ref=general_lower].

Let G be a split graph. If [formula], with S an independent set and T a clique, then [formula].

On each turn, Min plays an edge joining two vertices of T if possible, and any legal move otherwise. By the choice of S and T, every edge in G has at least one endpoint in T. Thus each move by Max covers at least one vertex of T, and each move by Min covers two vertices of T while two remain. Thus each round increases the size of the matching by 2 and decreases |T| by at least 3, until at most two vertices remain in T; the small cases are then checked explicitly.

If a clique T contains an endpoint of every edge in G, then [formula]. If α'(G) = |T| and [formula], then the lower bound in Proposition [\ref=split] matches the upper bound in Theorem [\ref=general_lower]. Thus equality holds in Theorem [\ref=general_lower] for such split graphs. We can introduce all the edges joining the clique and the independent set, as in the next example.

For [formula] and [formula], form G from Kn by deleting the edges of a complete subgraph with n - 3k vertices; G is a split graph whose clique T has 3k vertices. Note that α'(G) = 3k and α'g(G) = 2k. In fact, also G is 3k-connected.

The graph in Example [\ref=general_lower_tight] has the most edges among n-vertex graphs such that α'(G) = 3k and α'g(G) = 2k. To prove this, we need several lemmas about ordinary matching. The first is a special case of a more difficult result of Brandt [\cite=Bra]. The special case has a short, self-contained proof. Let δ(G) denote the minimum vertex degree in G.

If G is an n-vertex graph, then [formula].

Let M be a maximum matching in G. Suppose that [formula], and let u and v be distinct vertices not covered by M. By the maximality of M, all neighbors of u or v are covered by M. If d(u) + d(v) > 2|M|, then at least three edges join some edge xy∈M to {u,v}. Now xy can be replaced with two edges from {x,y} to {u,v} to form a bigger matching. Hence d(u) + d(v)  ≤  2|M|, and thus α'(G)  ≥   min {d(u),d(v)}  ≥  δ(G).

The next result was observed by Plummer [\cite=P].

If G has n vertices, and [formula], then every edge of G lies in a matching of size [formula].

For uv∈E(G), let G' = G - {u,v}. Since [formula], Lemma [\ref=large_matching] implies [formula]. Replace uv.

If v is a non-isolated vertex of a graph G, then some maximum matching in G contains an edge incident to v.

When uv is an edge, a maximal matching must cover u or v. If it covers u and not v, then the edge covering u can be replaced with uv.

If G is an n-vertex graph with α'(G)  =  3k and αg'(G)  =  2k, then [formula].

We use induction on k. For k  =  0, the claim is [formula], as required by α'(G) = 0. -1

For [formula], we seek an edge uv for Max to play such that α'(G - {u,v}) = α'(G) - 1 and d(u) + d(v)  ≤  n - 1 + 3k; call this a good edge. Playing a good edge eliminates at most n - 2 + 3k edges from the residual graph. With n - 2 vertices remaining, the next move by Min eliminates at most 2n - 7 more edges.

Let G' be the residual graph after Max plays a good edge uv and Min then plays an optimal move. By Proposition [\ref=optimal], αg'(G)  ≥  2  +  αg'(G'), so αg'(G')  ≤  2k - 2. Playing uv reduces the matching number only by 1, and the move by Min reduces it by at most 2, so α'(G')  ≥  3k - 3. Now Theorem [\ref=general_lower] yields αg'(G')  =  2k - 2 and α'(G')  =  3k - 3. Thus the induction hypothesis applies to G'. Adding the edges of G not in G' yields

[formula]

In most cases, G has a good edge. We may assume that G has no isolated vertices, since discarding them does not affect the matching number, the game matching number, or the number of edges, and the edge bound for the smaller graph is less than what we allow for G. If δ(G)  ≤  3k, then let v be a vertex of minimum degree. Lemma [\ref=vertex_matched] implies that some maximum matching contains an edge uv incident to v, and d(v)  ≤  3k implies d(u) + d(v)  ≤  n - 1 + 3k. Hence uv is good.

If n  ≥  6k + 2, then [formula], and Lemma [\ref=large_matching] implies δ(G)  ≤  3k. Since α'(G) = 3k implies [formula], we may henceforth assume n∈{6k,6k + 1} and [formula].

Consider first the case [formula], and let G' be the residual graph after the first move by Max. Each remaining vertex loses at most two incident edges, so [formula]. Lemma [\ref=plummer] then implies that every edge of G' lies in a matching of size [formula]. Thus even after the subsequent move by Min, the matching number is still at least [formula]. In other words, the first two moves of the game produce a residual graph G'' with α'(G'')  ≥  3k - 2. By Theorem [\ref=general_lower], α'g(G'') > 2k - 2, and hence α'g(G) > 2k.

The remaining case is [formula]. Every edge lies in a matching of size 3k (by Lemma [\ref=plummer]), so any edge with degree-sum at most n - 1 + 3k is a good edge. For a vertex v of minimum degree, we conclude that every neighbor u of v has degree at least n - 1. Since [formula] when [formula], we have [formula], and again Min cannot reduce the matching number by 2 after Max plays uv.

Forests

In this section, we study the matching game on forests. Although the lower bound in Theorem [\ref=general_lower] is sharp infinitely often, we improve it to [formula] when F is a forest. We also prove the natural property that g'(F)  ≤  αg'(F) when F is a forest, which we apply in the next section.

If F is a forest, then [formula].

Let m = α'(F). Since the matching number of the residual graph is 0 at the end of the game, the number of moves played is m - k, where k is the number of moves on which the matching number of the residual forest declines by 2. Such moves can only occur when the residual forest has a nonstar component.

Suppose that such a component still exists at the beginning of a given round. Let x be an endpoint of a longest path P, with P starting [formula]. Max plays an edge vu in a maximum matching of F - wv (see Lemma [\ref=vertex_matched]). This move reduces α' by 1, as does the later move in the remaining star at w (whenever played).

The response by Min reduces α' by at most 2. Such moves by Min can occur only after moves by Max that guarantee two good moves. In following the move-by-move sequence of values of α' on the residual graph, we associate four units from α'(G) with each such reduction by 2: the two lost on that move by Min, the one lost on the preceding move by Max, and the one lost when an edge is later played in the resulting star left at w. Hence m  ≥  4k, and at least 3m / 4 moves are played.

We next obtain a sufficient condition for sharpness in Theorem [\ref=forestbound].

Let n be a multiple of 8. If an n-vertex forest F has n / 2 leaves, and the leaves are covered by n / 4 disjoint copies of P4, then [formula].

By the covering condition, no two leaves have a common neighbor, so the pendant edges form a perfect matching, and then the upper bound follows from Theorem [\ref=forestbound].

We provide a strategy for Min. In each of the first n / 8 rounds, Min ensures that two vertices become isolated (at most two untouched copies among the n / 4 special copies of P4 will be used). Isolating n / 4 vertices ensures that at most [formula] edges will be played.

If Max plays an edge in one of the copies of P4, then Min plays the central edge in another copy of P4. If Max plays an edge joining two copies of P4 (they need not still be intact), then this move already isolates two vertices. Min then plays an edge at a leaf in one of these copies, if such an edge exists, or otherwise plays any edge in an untouched copy of P4.

Forests satisfying the conditions of Theorem [\ref=forestsharp] are obtained from rP4 by adding edges joining components. For example, one may add a pendant edge at every vertex of P4k.

The statement g'(G)  ≤  αg'(G) essentially means that there is no advantage to playing second rather than first. When this holds in a hereditary family, there is also no advantage to skipping a turn. We prove this for the family of forests. As in Theorem [\ref=monotone], the inductive proof is facilitated by simultaneously proving another claim, which is that adding star components does not affect the game on the original forest F; neither player can gain by playing on the added star instead of F.

For every forest F and all [formula], the following two statements hold: (1) 'g(F)  ≤  α'g(F). (2) 'g(F + K1,t) = 1 + 'g(F) and α'g(F + K1,t) = 1 + α'g(F).

We use induction on |V(F)|. Both statements hold by inspection for |V(F)|  ≤  2, so consider larger F. Suppose that (1) and (2) hold for forests smaller than F.

Step 1: (1) holds for F. Let k = 'g(F). By Theorem [\ref=at_most_one], the claim holds unless α'g(F) = k - 1. Since 'g(F) = α'g(F) when every component is a star, we may choose a non-star component C in F. Since C is not a star, a longest path in C has at least four vertices; let the first three be u,v,w in order (u is a leaf).

Let F' = F - {v,w}. By Proposition [\ref=optimal], 'g(F)  ≤  1 + α'g(F'), so α'g(F')  ≥  k - 1. Similarly, α'g(F)  ≥  1 + 'g(F'), so 'g(F')  ≤  k - 2. Now Theorem [\ref=at_most_one] requires α'g(F') = k - 1 and 'g(F') = k - 2. By Corollary [\ref=del_vertex], also α'g(F - w)  =  k - 1.

Obtain F* from F by deleting v and all its neighbors; note that F - w = F* + K1,t - 1, where t  =  d(v). Moreover, F* differs from F' only by deleting isolated vertices, so α'g(F*) = α'g(F'). Applying (2) to the smaller forest F* now yields the contradiction

[formula]

Step 2: (2) holds for F. We prove the four needed inequalities by considering an optimal first move uv in the Min-start or Max-start game on F or on F + K1,t. In the displayed computations when uv is chosen from F + K1,t, we use the choice of uv, the validity of (2) for F', and Proposition [\ref=optimal], in that order. When uv is an optimal first move on F, we use the same three facts in the reverse order. In each case, let F' = F - {u,v} when uv∈E(F).

2a: uv is an optimal first move in the Min-start game on F + K1,t. If uv∉E(F), then g'(F + K1,t)  =  1 + αg'(F)  ≥  1 + g'(F), since (1) holds for F (by Step 1). Otherwise,

[formula]

2b: uv is an optimal first move in the Min-start game on F:

[formula]

2c: uv is an optimal first move in the Max-start game on F:

[formula]

2d: uv is an optimal first move in the Max-start game on F + K1,t. If uv∉E(F), then α'g(F + K1,t)  =  1 + 'g(F)  ≤  1 + α'g(F), since (1) holds for F (by Step 1). Otherwise,

[formula]

Graphs with Small Maximum Degree

The following corollary of Theorem [\ref=forest_plus_star] is sometimes useful.

For a forest F and an integer t, an optimal move by the first player in the game on F is also optimal for that player on F + K1,t.

Consider the Max-start game; the proof for the Min-start game is analogous. Let uv be an optimal first move in the Max-start game on F, and let F' = F - {u,v}. Using Proposition [\ref=optimal] and Theorem [\ref=forest_plus_star] twice each yields

[formula]

Hence α'g(F + K1,t) = 1 + 'g(F' + K1,t), making uv an optimal move for Max on F + K1,t.

As an application of Corollary [\ref=forest_plus_star_corr], we determine the asymptotic value of αg'(Pn). While the corollary is not strictly needed to prove this result, it simplifies the argument.

For all n, we have [formula].

For 7k  ≤  n  ≤  7k + 6, the claimed statement is 3k  ≤  α'g(Pn)  ≤  3(k + 1). Hence it suffices to prove the claim when 7|n and apply monotonicity from Theorem [\ref=monotone](2).

At each point during a game on P7k, the residual graph is a disjoint union of paths. Each move increases the number of components in the residual graph by at most 1.

Upper bound: We give a strategy for Min. Min always plays the second edge of a longest remaining path, unless only isolated vertices and edges remain. Let t be the number of turns played when the second phase begins, with s1 isolated vertices and s2 isolated edges. There are at most t + 1 components at that time, so s1  +  s2  ≤  t + 1. Since each move deletes two vertices, s1  +  2s2  +  2t  =  7k. Now

[formula]

Since each move by Min in the first phase isolates at least one vertex,

[formula]

Simplifying yields [formula]. Moreover, [formula]. Since exactly s1 vertices remain unmatched at the end of the game, αg'(P7k)  ≤  (n  -  s1) / 2  ≤  3k.

Lower bound: We give a strategy for Max. Max always plays the third edge of a longest remaining path, unless no remaining path has four vertices, in which case Max plays any edge of a longest remaining path. By Corollary [\ref=forest_plus_star_corr], we may assume that Min plays an isolated edge only when no other moves remain.

Let t be the number of turns played when the second phase begins, with si remaining components having i vertices, for i  ≤  3. Since each previous move by Max created an isolated edge, and no isolated edges have yet been played, s2  ≥  t / 2. Each move has increased the number of components by at most 1, so s1 + s2 + s3  ≤  t + 1. Thus s1 + s3  ≤  t / 2  +  1.

Counting the vertices played and the vertices remaining yields

[formula]

so s1 + s3  ≤  7k - 3t. The sum of 1 / 7 times this inequality and 6 / 7 times s1 + s3  ≤  t / 2 + 1 is s1 + s3  ≤  k + 6 / 7. By integrality, s1 + s3  ≤  k. At the end of the game, exactly s1 + s3 vertices remain unmatched, so [formula].

Our final results concern regular graphs. When G is 3-regular, [formula], and this is sharp [\cite=BDDFK]. We seek an analogous sharp lower bound for α'g(G) in terms of [formula]. Using the bound for α'(G), Theorem [\ref=general_lower] yields approximately [formula]. An easy argument proves a stronger bound, which we phrase for general regular graphs.

If G is a connected n-vertex r-regular graph, then [formula].

We give a strategy for Max to ensure that edges are removed from the residual graph "slowly". Max first plays any edge. On each turn thereafter, Max plays any edge incident to a vertex of smallest nonzero degree.

Since G is connected, the residual graph at any time after the first move has a vertex of nonzero degree less than r. Thus each move by Max after the first deletes at most 2r - 2 edges. Each move by Min deletes at most 2r - 1 edges. Since Max moves before Min, after k turns the residual graph contains at least [formula] edges. To end the game, all edges must be deleted. At that time [formula].

For r  ≥  5, the bound from Proposition [\ref=cubic_lower_easy] is weaker than the bound obtained from Theorem [\ref=general_lower] by using the best-known lower bounds on α'(G). Henning and Yeo [\cite=HY] proved [formula] for odd r, and this is sharp. Multiplied by 2 / 3 from Theorem [\ref=general_lower], the lower bound on α'g(G) would be asymptotic to n / 3 for large r and n, while the lower bound from Proposition [\ref=cubic_lower_easy] is only about n / 4.

However, for r = 3 Proposition [\ref=cubic_lower_easy] yields [formula]. It is easy but tedious to improve the lower bound to n / 3 by considering the end of the game. If Min moves last and still eliminates five remaining edges, then the play by Min is the center of a double star, and the previous move by Max could not have reduced all four leaves to degree 1. Hence a vertex of degree 1 was available to Max, and Max would have deleted only three edges instead of four. This implies that the last two moves delete at most eight edges. Case analysis along these lines improves the additive constant to 0. We omit the details, partly since we do not believe that 1 / 3 is the best coefficient on the linear term.

For 3-regular graphs not required to be connected, there is an n-vertex graph with α'g(G) = 'g(G) = 3n / 8 when 16|n. Each component H has a central vertex x whose deletion leaves 3K, where K is the 5-vertex graph obtained by subdividing one edge of K4.

A short case analysis shows that α'g(H) = 'g(H) = 6, with four vertices isolated at the end of the game. Since α'g(H) = 'g(H) and the value is even, each player can respond to the other in the same component and guarantee never doing worse than 3n / 8, component by component.

Within the smaller family of connected cubic graphs, our construction is weaker.

There is a sequence [formula] of connected cubic graphs such that [formula].

Again let K be the 5-vertex graph formed by subdividing one edge of K4. Let Tk denote the complete cubic tree of height k, the rooted tree in which each non-leaf vertex has degree 3 and each leaf has distance k from the root. Let Gk be the 3-regular graph formed by identifying each leaf in Tk + 1 with the vertex of degree 2 in a copy of K. Note that G0 is the graph in Example [\ref=disconn].

When every non-leaf vertex in a tree has degree 3, the number of leaves is the number of non-leaves plus 2. Since Tk + 1 has 3  ·  2k leaves, it thus has 3  ·  2k - 2 non-leaves, and Gk has 18  ·  2k - 2 vertices.

We give a strategy for Min in the game on Gk. Let B be the 6-vertex graph consisting of K plus a pendant edge at the vertex having degree 2 in K. In Gk there are [formula] copies of B, each containing one leaf of Tk + 1 as its cut-vertex. Let F be the set of three edges in B that lie in no perfect matching in B.

If a move by Max is the first edge played in some copy of B, then Min plays an edge of F in that copy of B (at least one such edge is available). Otherwise, Min plays an edge of F in some other copy of B, if possible. If already some edge has been played in every copy of B, then Min plays any legal move.

Min thus ensures that at most two edges are played in each copy of B. To bound the number of edges played in Tk + 1 that are not in the copies of B, we bound α'(Tk). Let S be the set of vertices in Tk whose distance from a nearest leaf is odd. Since Tk - S has no edges, α'(Tk)  ≤  |S|. Since the number of vertices at distance i from the root is at most half the number of vertices at distance i + 1, we have [formula]. Thus [formula]. It now follows that

[formula]

Note that in Theorem [\ref=cubic_upper] we did not determine α'g(Gk). In fact, Max can force two edges in each copy of B and can force a matching that covers S in Tk, so the bound is essentially sharp. We omit these arguments, because the relevant question here is the upper bound.