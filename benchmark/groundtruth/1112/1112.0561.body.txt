Spherical 3D Isotropic Wavelets

Introduction

Challenges in Modern Cosmology

The wealth of cosmological data in the last few decades [\citep=wmap7] [\citep=Schrabback:2010] [\citep=Percival:2007] has led to the establishment of a standard model of cosmology, which describes the Universe as composed today of approximately 4% baryons, 22% dark matter and 74% dark energy. The main challenges in modern cosmology are to understand the nature of both dark energy and dark matter, as well as the initial conditions of the Universe [\citep=DETF] [\citep=WGFC]. A thorough understanding of these three topics may lead to a revision of Einstein's theory of General Relativity and our view of the early Universe.

New surveys are planned who aim to answer these important questions e.g. Planck for the CMB [\citep=Planck], DES [\citep=DES:2005], BOSS [\citep=Schlegel:2007], LSST [\citep=LSST] and Euclid [\citep=Euclid:2011] for weak lensing and the study of large scale structure with galaxy surveys.

The challenge with these upcoming large data-sets is to extract the cosmological information in the most suitable manner in order to test the cosmological paradigm. Depending on the signal one wishes to extract, and/or survey geometry, different bases may be more or less suitable (e.g., Fourier, Spherical Harmonic, Configuration or Wavelet Space). Moreover, future surveys may be in 2D (e.g. Planck) or in 3D (e.g. galaxy or weak lensing surveys). Where 3D data is available, a tomographic analysis is possible (also known as 2D 1/2), or a full 3D analysis can be done. For data in spherical coordinates, this corresponds to a Spherical Fourier-Bessel (SFB) decomposition [\citep=Heavens:1995] [\citep=Fisher:1995] [\citep=weak3d] [\citep=Erdogdu:2005wi] [\citep=Erdogdu:2006dv] [\citep=Leistedt2011] [\citep=Rassat:2011bao].

Wavelet Transform on the Sphere

Wavelets are particularly well suited to the analysis of cosmological data [\citep=aw:martinez93] [\citep=starck:sta05_2], since cosmological data can often be sparsely represented in wavelet space. 2D Wavelets have been used in many astrophysical studies [\citep=starck:book06] for a broad range of applications such as denoising, deconvolution, detection, etc. CMB studies have motivated the development of 2D spherical wavelet decompositions. Continuous wavelet transforms on the sphere [\citep=wave:antoine99] [\citep=wave:tenerio99] [\citep=wave:cayon01] [\citep=wave:holschneider96] have been proposed, mainly for non Gaussianity studies. In [\citet=starck:sta05_2], an invertible isotropic undecimated wavelet transform (UWT) on the sphere based on spherical harmonics was described, that can be also used for other applications such as deconvolution, component separation [\citep=starck:yassir05] [\citep=bobin-gmca-cmb] [\citep=delabrouille08], inpainting [\citep=inpainting:abrial06] [\citep=starck:abrial08], or Poisson denoising [\citep=schmitt2010]. A similar wavelet construction has been published in [\citep=marinucci08] [\citep=fay08a] [\citep=fay08] using so-called "needlet filters", and in [\citet=wiaux08], an algorithm was proposed which allows us to reconstruct an image from its steerable wavelet transform. Other multiscale transforms on the sphere such as ridgelets and curvelets have been developed [\citep=starck:sta05_2], and are well adapted to detect anisotropic features. Other multiscale transforms on the sphere, such as ridgelets and curvelets, have been developed [\citep=starck:sta05_2] and are well adapted to detect anisotropic features. An extension of this UWT has also been developed for polarised CMB data in [\citet=starck:pola09].

In this paper, we describe a new 3D isotropic spherical wavelet decomposition, which is reversible, and could therefore be useful for many different applications. It is based on the UWT proposed by [\cite=starck:sta05_2] and extended into 3D. The 3D-UWT proposed here can be used to analyse 3D data in spherical coordinates, such as a 3D galaxy or weak lensing survey with large (but not necessarily full) sky coverage.

Spherical 3D Filtering using the Spherical Fourier-Bessel Transform

Spherical Fourier-Bessel Transform

The SFB transform of a square integrable scalar field f(r,θ,φ) can be defined as:

[formula]

where Yml are spherical harmonics and jl are spherical Bessel functions and [formula] represents the complex conjugate of Y. Note Equation [\ref=SFBT] uses the same convention as [\cite=Heavens:1995] which differs slightly from that of [\cite=weak3d], [\cite=Leistedt2011] and [\cite=Rassat:2011bao], as explained below. This expression allows the expansion of a 3D field provided in spherical coordinates onto a set of orthogonal functions:

[formula]

From the orthogonality of the Ψlmk's, the original field f(r,θ,φ) can be reconstructed from its SFB transform lm(k) using the following inversion formula:

[formula]

From this definition, the SFB transform can also be regarded as the commutative composition of two different transforms: a Spherical Harmonics Transform (SHT) for the angular dimension and a Spherical Bessel Transform (SBT) for the radial dimension. In this work, the following convention is adopted to define the SHT of a function f(θ,φ) defined on the sphere:

Our choice for Ψlmk allows us to give a symmetrical expression for the SBT and its inverse: Although this symmetrical formulation for the SBT may differ from other works [\citep=weak3d] [\citep=Leistedt2011] [\citep=Rassat:2011bao], it will prove very convenient, especially to obtain a discretised transform (see Section [\ref=sec:DSFBT]).

Frequency filtering using the SFB Transform

Spherical 3D filtering can be defined as the 3D convolution product of a 3D field in spherical coordinates with a 3D filter also provided in spherical coordinates. Using the relations presented in [\ref=appendix:SFBT:Fourier] and [\ref=appendix:SFBT:convolution], it is possible to express such a product in terms of SFB coefficients and to relate those coefficients to regular Fourier coefficients.

To illustrate Spherical 3D filtering on a simple case, let us consider a simple isotropic low-pass filter u whose 3D Fourier transform is U(k,θk,φk). The 3D Fourier transform of such a filter has a spherical symmetry and takes a simple form in spherical coordinates. Indeed, U(k,θk,φk) is a function only of k because of its symmetry, therefore U(k,θk,φk)  =  U(k). Furthermore, since U(k,θk,φk) is constant on every sphere centred on the origin in Fourier space, its SHT for a given k verifies [formula]. As a result, the SFB transform of u has the following simple expression:

[formula]

Let us now consider a 3D field f defined in spherical coordinates. The filtered field v resulting from applying u to f is obtained using Eq. ([\ref=Spherical_Convolution]) simplified by the properties of g:

[formula]

Knowing that [formula], the following expression is finally obtained:

[formula]

In the special case of a 3D isotropic filter, frequency filtering is therefore easily obtained using the SFB transform and the filtered coefficients are simply the original coefficients multiplied by a function of k.

Although this filter seems overly simplistic, it will be shown in the following sections that such a low-pass filter is at the heart of the Isotropic Undecimated Spherical 3D Wavelet transform which makes direct use of Eq. ([\ref=Filtering_Spherical_Symmetry]).

Isotropic Undecimated Spherical 3D Wavelet Transform

An Isotropic Undecimated Spherical Wavelet transform defined on the sphere and based on the SHT was proposed in [\citet=starck:sta05_2]. Now the aim is to transpose the ideas behind this transform to the case of data in 3D spherical coordinates. Indeed, the isotropic wavelet transform can be defined using only an isotropic low-pass filter. In the last section the necessary relations to apply such a filter have been obtained and the Isotropic Undecimated Spherical 3D Wavelet transform can now be defined.

Wavelet decomposition

Using the formalism introduced in the previous section, a Wavelet transform can be defined with the SFB transform. This isotropic transform is based on a scaling function φkc(r,θr,φr) with cut-off frequency kc and spherical symmetry. The symmetry of this function is preserved in the Fourier space and therefore, its SFB transform verifies kclm(k)  =  0 whenever (l,m)  ≠  (0,0). Furthermore, due to its cut-off frequency, the scaling function verifies kc00(k)  =  0 for all k  ≥  kc. In other terms, the scaling function verifies:

[formula]

Using relation ([\ref=Filtering_Spherical_Symmetry]) the convolution of the original data f(r,θ,φ) with Φkc becomes very simple:

[formula]

Using this scaling function, it is possible to define a sequence of smoother approximations cj(r,θr,φr) of a function f(r,θr,φr) on a dyadic resolution scale. Let Φ2- jkc be a rescaled version of Φkc with cut-off frequency 2- jkc. Then cj(r,θr,φr) is obtained by convolving f(r,θr,φr) with Φ2- jkc :

[formula]

Applying the SFB transform to the last relation yields:

[formula]

This leads to the following recurrence formula :

[formula]

Just like with the à trous algorithm by [\cite=starck:book10], the wavelet coefficients {wj} can now be defined as the difference between two consecutive resolutions:

[formula]

This choice for the wavelet coefficients is equivalent to the following definition for the wavelet function Ψkc :

[formula]

so that :

[formula]

By applying the SFB transform to the definition of the wavelet coefficients and using the recurrence formula verified by the cjs yields:

[formula]

Equations ([\ref=RecWavelet]) et ([\ref=RecSmooth]) which define the wavelet decomposition are in fact equivalent to convolving the resolution at a given scale j with a low-pass and a high-pass filter in order to obtain respectively the resolution and the wavelet coefficients at scale j + 1.

The low-pass filter, denoted here by hj, can be defined for each scale j by :

[formula]

Then the approximation at scale j + 1 is given by the convolution of scale j with hj :

[formula]

In the same way, a high pass filter gj can be defined on each scale j by:

[formula]

Given the definition of Ψ, gj can also be expressed in the simple form :

[formula]

The wavelet coefficients at scale j are obtained by convolving the resolution at scale j - 1 with gj - 1:

[formula]

In summary, the two relations necessary to recursively define the wavelet transform are:

[formula]

Reconstruction

Since the wavelet coefficients are defined as the difference between two resolutions, the reconstruction from the wavelet decomposition [formula] is straightforward and corresponds to the reconstruction formula of the à trous algorithm:

[formula]

However, given the redundancy of the transform, the reconstruction is not unique. It is possible to take advantage of this redundancy to reconstruct cj from cj + 1 and wj + 1 by using a least squares estimate.

From the previous paragraph, the wavelet decomposition can be then recursively defined by:

[formula]

If these relations are respectively multiplied by [formula] and [formula] and then added together, the following expression is obtained for the least squares estimate of cj from cj + 1 and wj + 1:

[formula]

where j and j are defined as follows:

[formula]

Among the advantages of using this reconstruction formula instead of the raw sum over the wavelet coefficients is that there is no need to perform an inverse and then direct SFB transform to reconstruct the coefficients of the original data. Indeed, both the wavelet decomposition and reconstruction procedures only require access to SFB coefficients and there is no need to revert back to the direct space (although this will be required if one wishes to observe the power of each coefficient in real space as we do in Section [\ref=section:WaveletTest] for denoising purposes).

Choice of a scaling function

Any function with spherical symmetry and a cut-off frequency kc would do as a scaling function but in this work we choose to use a B-spline function of order 3 to define our scaling function:

[formula]

where

[formula]

The scaling function and its corresponding wavelet function are plotted in SFB space for different values of j in Figure [\ref=Scaling_and_Wavelet_Functions].

Other functions such as Meyer wavelets or the needlet function [\citep=marinucci08] can be used as well. Needlet wavelet functions have a much better frequency localisation than the wavelet function derived from the B3-spline but present more oscillations in the direct space. To illustrate this, we show in Fig. [\ref=Figure:cmp_needlet] two different wavelet functions. Fig. [\ref=Figure:cmp_needlet] left shows 1D profile of the spline (continuous line) and the needlet wavelet function (dotted line) at a given scale. Fig. [\ref=Figure:cmp_needlet] right shows the same function, but we have plotted the absolute value in order to better visualise their respective ringing. As it can be seen, for wavelet functions with the same main lob, the needlet wavelet oscillates much more than the spline wavelet. Hence, the best wavelet choice certainly depends on the desired applications. For statistical analysis, detection or restoration applications, we may prefer to use a wavelet which does not oscillate too much and with a smaller support, in this case the spline wavelet is clearly the correct choice. For spectral or bispectral analysis, where the frequency localisation is fundamental, then needlets should be preferred to the spline wavelet.

The Discrete Spherical Fourier-Bessel Transform (DSFBT)

The spherical 3D wavelet formalism derived in the previous section is based on a continuous SFB transform. However, a continuous transform is not practical numerically and a discrete equivalent is required. In the case of galaxy surveys, where the underlying density field is sampled at discrete points, this problem can be addressed by combining a boundary condition with the discrete nature of the survey [\citep=Leistedt2011] which yields in this specific case a practical way to estimate discrete SFB coefficients. However this method cannot be used for the purpose of performing wavelet treatments since this requires a continuous field.

Indeed, to perform operations on the wavelet scales (e.g. for denoising purposes), one first needs to recover the wavelet coefficients in physical space, apply a treatment to those coefficients (e.g. thresholding) and then convert them back into SFB space (as required by the wavelet transform algorithm which operates in SFB space). This last operation requires a SFB transform which takes as input fields and not discrete galaxy surveys.

In this section, we show how a discretisation of the k spectrum in combination with a Healpix type angular pixelisation, can be used to build a fast Discrete SFB Transform (DSFBT) which allows for a novel and practical two-way conversion between the discrete SFB coefficients and discrete values of the field in physical space sampled on a spherical 3D grid.

The Discrete Spherical Bessel Transform

The discretisation of the SFB transform along the radial component uses the well known orthogonality property of the Spherical Bessel functions on the interval

[formula]

which verifies the boundary condition f(R)  =  0 then the SBT defined by Eq. ([\ref=Def_SBT]) can be expressed using SFB series:

[formula]

In this expression, [formula] where qln is the nth zero of the Bessel function of order l and the weights ρln are defined as:

[formula]

Although this formulation provides a discretisation of the inverse SBT and of the k spectrum, the direct transform is still continuous and another discretisation step is required.

If a boundary condition of the same kind is applied to l(k) so that l(Kl) = 0, then by using the same result, the SFB expansion of l(k) is obtained by: where [formula] and where the weights κln are defined as:

[formula]

The SBT being an involution,   =  f so that l(rln)  =  f(rln). Much like the previous set of equations had introduced a discrete kln grid, a discrete rln grid is obtained for the radial component. Since Eqs. ([\ref=Discrete_inverse_r]) and ([\ref=Discrete_inverse_k]) can be used to compute f and l for any value of r and k, they can in particular be used to compute f(rln) and l(rl'n) where l' does not have to match l. The SBT and its inverse can then be expressed only in terms of series:

With these equations one can easily compute the SBT and its inverse without the need of evaluating any integral. Furthermore only discrete values of f and [formula] respectively sampled on rln and kln are required.

In practical applications, for a given value of l only a limited number Nmax of l(kln) and f(rln) coefficients can be stored so that rlNmax  =  R and klNmax  =  Kl. Since rln is defined by [formula], for n  =  Nmax R and Kl are bound by the following relationship:

[formula]

Therefore, from the value of R one can easily determine the appropriate value for Kl. Furthermore, because of the boundary conditions on l and f, the series ([\ref=Direct_series]) and ([\ref=Inverse_series]) can now be truncated to Nmax terms.

This truncation allows the use of a very convenient matrix formalism to represent the transform. In their explicit form, the two truncated sums can be rewritten as:

[formula]

From these equations, a transform matrix Tll' can be defined as:

[formula]

This matrix allows the computation of l on any grid kl'n from the values of f sampled on rln:

[formula]

Reciprocally, the inverse the values of f can be computed on any rl'n grid from l sampled on kl'n using the exact same matrix:

[formula]

The discrete SBT is defined by the set of equations ([\ref=Direct_DSBT]) and ([\ref=Inverse_DSBT]).

A simplified form of the transform could have been defined only for l  =  l' so that Tll'  =  Tl. However, keeping the distinction between the order of the transform l and the order of the grid on which the results are provided l' will be crucial to the implementation of the DSFBT. Indeed, the order of the grid on which the function is sampled has to match the order of the transform but the resulting transform coefficients do not. Therefore, it will be possible to compute the result of the inverse SBT of any order l on a grid of order l0 so that only one radial grid of order l0 will be required. Nevertheless, for the direct transform, if the field is sampled on the radial grid of order l0, only the transform of order l0 can be computed. An additional result is required to be able to relate the SBT of different orders between them. This is achieved by combining relations ([\ref=Discrete_transform_r]) and ([\ref=Discrete_inverse_r]):

[formula]

where the weights Wll'nm are defined as:

[formula]

The final expression in Equation [\ref=TransformConversion] is an important result which shows that the SBT of a given order can be expressed as the sum of the coefficients obtained for a different order of the transform, with the appropriate weighting. This means we can convert the Spherical Bessel coefficients of order l0 into coefficients of any other order l, which considerably speeds up calculations for the SBT. It is also worth noticing that the weights Wll'nm are simply geometric terms, i.e. independent of the field and can thus be tabulated.

We note that this approach is an extension of the Discrete SBT presented in [\cite=Lemoine:1994] using spherical Bessel functions and where the transform in [\cite=Lemoine:1994] can be considered as a special case where l = l'.

A Spherical 3D grid compatible with a Discrete Spherical Fourier-Bessel spectrum

As presented in section [\ref=section:SFBT], the SFB transform is the composition of a SHT for the angular component and a SBT for the radial component. Since these two transforms can commute, they can be treated independently and by combining discrete algorithms for both transforms, one can build a DSFBT. In this work, the angular part of the transform is implemented using the HEALPix pixelisation scheme while the radial component uses the discrete SBT algorithm presented in Section [\ref=sub:DSBT]. The choice of these two algorithms introduces a discretisation of the SFB coefficients as well as a 3D gridding of the density in physical space.

The SFB coefficients lm(k) are defined by Equation ([formula]) for continuous values of k. Assuming a boundary condition on the density field f, the discrete SBT can be used to discretise the values of k. The Discrete SFB coefficients are therefore defined as:

[formula]

for 0  ≤  l  ≤  Lmax, - l  ≤  m  ≤  l and 1  ≤  n  ≤  Nmax. These discrete coefficients are simply obtained by sampling the continuous coefficients on the kln grid introduced in the previous section.

To this discretised SFB spectrum corresponds a dual grid of the 3D space defined by combining the HEALPix pixelisation scheme and the discrete SBT.

Used for the computation of the SHT, the HEALPix scheme maps the sphere using curvilinear quadrilaterals of different shapes but equal area. Although other pixelisation schemes for the sphere such as IGLOO or GLESP could have been used, the choice of HEALPix is essentially motivated by the homogeneity of the pixelisation and by its comprehensive software package. For a given value of r, the field f(r,θ,φ) can therefore be sampled on a finite number of points using HEALPix.

The radial component of the transform is conveniently performed using the discrete SBT. Indeed, this algorithm introduces a radial grid compatible with the discretised kln spectrum. Although this radial grid rln depends on the order l of the SBT, it will be justified in the next section that only one grid rl0n is required to sample the field along the radial dimension. The value of l0 is set to 0 because in this case the properties of the zeros of the Bessel function ensure that r0n will be regularly spaced between 0 and R:

[formula]

For given values of θ and φ, the field f(r,θ,φ) can now be sampled on discrete values of r  =  r0n.

Combining angular and radial grids, the 3D spherical grid is defined as a set of Nmax HEALPix maps equally spaced between 0 and R. An illustration of this grid is provided on Fig.[\ref=Spherical_3D_grid] where only one quarter of the space is represented for clarity.

With this 3D grid, it will be possible to compute back and forth the SFB transform between a density field and its SFB coefficients. The details of the actual algorithm are provided in the next section.

Algorithm for the Discrete Spherical Fourier-Bessel Transform (DSFBT)

Although the SHT and the SBT formally commute, some practical considerations on the order between the two operations are to be taken into account for their actual implementation. Here, a detailed algorithm of both the direct and inverse DSFBT is provided.

Direct Transform

Given a density field f sampled on the spherical 3D grid, the SFB coefficients flmn are computed in three steps:

For each n between 1 and Nmax the SHT of the HEALPix map of radius rl0n is computed. This yields flm(rl0n) coefficients.

The next step is to compute the SBT of order l0 from the flm(rl0n) coefficients for every (l,m). This operation is a simple matrix product:

[formula]

This operation yields l0lm(kl0n) coefficients which are not yet SFB coefficients because the order of the SBT l0 does not match the order of the Spherical Harmonics coefficients l. An additional step is required.

The last step required to gain access to the SFB coefficients flmn is to convert the Spherical Bessel coefficients for order l0 to the correct order l that matches the Spherical Harmonics order. This is done by using relation ([\ref=TransformConversion]):

[formula]

where Wl0lnp are defined by Eq. ([\ref=Transform_weigths]). This operation finally yields the flmn  =  lm(kln) coefficients.

Inverse Transform

Let flmn be the coefficients of the SFB transform of the density field f, where the flmn coefficients can be calculated for a continuous density field using the direct transform described above or for a galaxy or halo catalogue using the public code 3DEX [\citep=Leistedt2011]. Note that the 3DEX code can account for masked regions of missing data. The reconstruction of f on the spherical 3D grid requires two steps:

First, from the flmn, the inverse discrete SBT is computed for all l and m. Again, this transform can be easily evaluated using a matrix product:

[formula]

Here, it is worth noticing that the matrix Tll0 allows the evaluation of the SBT of order l and provides the results on the grid of order l0.

From the spherical harmonics coefficients flm(rl0n) given at specific radial distances rl0n it is possible to compute the inverse SHT. For each n between 1 and Nmax the HEALPix inverse SHT is performed on the set of coefficients {flm(rl0n)}l,m. This yields Nmax HEALPix maps which constitute the sampling of the reconstructed density field on the 3D spherical grid.

Wavelet decomposition of a test density field

To illustrate the wavelet transform described in Section [\ref=sec:wavelet], a set of SFB Coefficients was extracted from a 3D density field using the DSFBT described in in Section [\ref=sec:DSFBT]. The test density field was provided by a cosmological N-body simulation which was carried out by the Virgo Supercomputing Consortium using computers based at Computing Centre of the Max-Planck Society in Garching and at the Edinburgh Parallel Computing Centre. We use their large box simulations.

We first compute the SFB coefficients of the test density field by sampling the Virgo density field on the 3D grid illustrated in Figure [\ref=Spherical_3D_grid], for nside = 2048, l max = 1023 and n max = 512. In order to perform the SFB decomposition, we place ourselves in the middle of the box, and calculate the SFB coefficients out to r  =  479 / 2 ~ h- 1Mpc, setting the over-density field to zero outside of this spherical volume. In order to better visualise the data, we present in Figure [\ref=Wavelet_decompositiona] the data in a cube spanning half the size of the original box (i.e. 239.5h- 1Mpc), where the field has been reconstructed from the SFB coefficients, using the discrete inverse transform we discuss in Section [\ref=sec:DSFBT].

From the SFB coefficients we calculate the wavelet decomposition, which yields the SFB coefficients of the various wavelet scales and the smoothed density field. Using the inverse DSFBT, the actual wavelet coefficients can be retrieved in the form of 3D density fields. These density fields corresponding to different wavelet scales are shown on Figure [\ref=Wavelet_decompositionb] to [\ref=Wavelet_decompositione]. The smoothed density field which arises from the wavelet decomposition is also shown in Figure [\ref=Wavelet_decompositionf], which is simply given by:

[formula]

Application to wavelet hard thresholding (denoising)

In this section, a noise removal application based on wavelet thresholding is presented as an example of a potential use for the Isotropic Undecimated Spherical 3D Wavelet transform.

Thresholding

Many wavelet filtering methods have been proposed in the last twenty years. Hard thresholding consists of setting to 0 all wavelet coefficients which have an absolute value lower than a threshold Tj (non-significant wavelet coefficient):

[formula]

where wj,k is a wavelet coefficient at scale j and at spatial position k.

Soft thresholding consists of replacing each wavelet coefficient by the value w̃ where

[formula]

This operation is generally written as:

[formula]

where (x)+  =   max (0,x).

In the case of Gaussian noise with a given standard deviation σ, a reasonable choice for the threshold Tj is Tj  =  Kσj, where j is the scale of the wavelet coefficient, σj is the noise standard deviation at the scale j, and K is a constant generally chosen between to 3 and 5. The standard deviation σj depends only on the chosen wavelet function and the noise level σ. More details can be found in [\citet=starck:book10].

Other threshold methods have been proposed, like the universal threshold [\citep=rest:donoho93_1] [\citep=rest:donoho93_2], or the SURE (Stein Unbiased Risk Estimate) method [\citep=rest:donoho95], but they generally do not yield as good results as the hard thresholding method based on the significant coefficients. Concerning the threshold level, the universal threshold corresponds to a minimum risk. The larger the number of pixels, the larger the risk is, and it is normal that the threshold T depends on the number of pixels ([formula], n being the number of pixels). The Kσ threshold corresponds to a false detection probability, the probability to detect a coefficient as significant when it is due to the noise. The 3σ value corresponds to 0.27 % false detection.

Denoising experiment

We test the hard thresholding algorithm by using it to remove artificially added Gaussian noise on the Virgo density field (the simulation is described in Section [\ref=section:WaveletTest]). To conduct this experiment, the original density field taken from the n-body simulation has been used to compute an initial set of SFB coefficients (with lmax  =  1023 and Nmax  =  512) and out to r  =  479h- 1Mpc. Figure [\ref=Figure:fieldOriginal] shows a slice of the 3D density field reconstructed from these coefficients. A Gaussian noise was then added to the SFB coefficients, the reconstruction of this noisy density field is shown on Figure [\ref=Figure:fieldNoisy]. The hard thresholding algorithm was subsequently applied to the noisy SFB coefficients using 5 wavelet scales. The resulting density field is reconstructed on Figure [\ref=Figure:fieldThresholded]. The residuals are shown on Figure [\ref=Figure:residuals]. The wavelet analysis means we can successfully remove the noise we artificially added on entry , without much loss to the large scale structure, though some of the smaller structures are removed.

Conclusion

Modern cosmology requires the analysis of 3D fields on large areas of the sky, i.e. where the field is best viewed in spherical coordinates. In this configuration, a Spherical Fourier Bessel (SFB) transform is the most natural way to statistically analyse the field. Wavelet transforms have been shown to be ideally suited for cosmological fields, which tend to be sparse in wavelet space. The wavelet transform can be used e.g. for denoising, but there is yet no 3D wavelet transform in spherical coordinates.

We present in this paper a new 3D spherical wavelet transform, based on the undecimated wavelet transform (UWT) described in [\citep=starck:sta05_2]. In order to perform operations on the wavelet transforms (such as denoising), we require a discrete version of the SFB transform for both the direct and inverse transforms. We show a novel way to perform such a fast Discrete Spherical Fourier-Bessel Transform (DSFBT) based on both a discrete Bessel transform and the HEALPIX angular pixelisation scheme.

Using the 3D wavelet transform and the DSFBT, both introduced in this paper, we denoise a test large scale structure data set, taken from the Virgo large box simulations. We find we can satisfactorily remove artificially added Gaussian noise without much loss to the large scale structure. All the algorithms presented in this paper are available for download as a public code called MRS3D at .

Spherical Fourier-Bessel Transform and 3D Convolution Products

Spherical Fourier-Bessel Transform and relation to the 3D Fourier Transform

In order to have a better understanding of the SFB coefficients and of how to use them to perform filtering, the SFB transform can be related to the 3D Fourier transform. We follow a similar definition as the one presented in [\cite=DSFBT], but using our conventions for the different transforms.The following convention will be used for the Fourier transform:

[formula]

where F denotes the Fourier transform of f. This formulation does not assume any coordinate system. However, to relate this transform to the SFB transform, it is possible to express this equation in spherical coordinates using the following expansion for the Fourier kernel:

[formula]

where (k,θk,φk) and (r,θr,φr) are respectively the spherical coordinates of vectors [formula] and [formula].

Substituting this expression for the kernel in the definition of the 3D Fourier transform yields:

[formula]

In the last equation, the expression of the Spherical Harmonics Expansion of F(k,θk,φk) for a given value of k can be recognised from Eq. ([\ref=Inv_SHT]). In the Fourier space, the ( - i)llm(k) are the Spherical Harmonics coefficients of F on a sphere of given radius k. In other words, the Spherical Harmonics coefficients Flm(k) of the 3D Fourier transform F(k,θk,φk) on a sphere of given radius k in Fourier space are the SFB coefficients lm(k) for the same value k but multiplied by factor ( - i)l.

The relationship between 3D Fourier transform and SFB transform is therefore very simple. The SFB transform can be sought of as a mere Fourier transform in spherical coordinates. In the next sections, this relationship will be used to derive convolution and filtering relations for the SFB transform using the well known relations verified by the Fourier transform.

Expression of a 3D convolution product using the SFB Transform

A prerequisite to the establishment of filtering relations is the expression of a 3D convolution product in terms of SFB coefficients. Let v(r,θr,φr) be the 3D convolution of f(r,θr,φr) and u(r,θr,φr). Then the 3D Fourier transform of v verifies:

[formula]

where F denotes the 3D Fourier transform. From Eq. ([\ref=Relationship_Fourier_Bessel]) the expression of the 3D Fourier transform in spherical coordinates is known in terms of SFB coefficients. Applying this relationship to V(k,θk,φk) in the last equation yields:

[formula]

Then, by applying Eq. ([\ref=Relationship_Fourier_Bessel]) to F and U one gets:

[formula]

The last integral over the two angular variables can be expressed as a Slater integral (which is a special case of the Gaunt integral) defined as:

[formula]

The Slater integrals are only nonzero for |l  -  l'|  ≤  l''  ≤  l  +  l' which simplifies the expression of lm(k).

The SFB transform of the 3D convolution product is therefore:

[formula]