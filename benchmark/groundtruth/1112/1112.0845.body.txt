=1

Lemma Proposition Corollary

Knottedness is in [formula], modulo GRH

Introduction

The algorithmic complexity of unknottedness is a long-standing open problem. In other words, given a knot K described by a knot diagram or by a triangulation of its complement, is there a fast algorithm to decide whether K is the unknot? (The question makes sense for tame knots; all knots in this article will be tame.) Haken [\cite=Haken:normal] was the first to show that there is any algorithm. Currently it is not known whether unknottedness can be decided in polynomial time. The question can be written

[formula]

since [formula] is the class of yes-no functions (or yes-no questions or decision problems) on input strings that can be computed in polynomial time.

Hass, Lagarias, and Pippenger [\cite=HLP:complexity] introduced the study of qualitative rather than quantitative bounds on the algorithmic complexity of problems in low-dimensional topology. They showed that unknottedness is in the complexity class [formula]. This is the class of yes-no questions for which an answer of yes can be confirmed in polynomial time with the aid of an auxiliary string called a witness, a proof, or a certificate. For example, the question of whether an integer N (written in binary) is composite is trivially in [formula], because a certificate can consist of a factorization N  =  AB that proves that N is composite.

By definition, the class [formula] is the class of questions whose negations, with no and yes switched, are in [formula]. In other words, a problem is in [formula] if there is a certificate for no rather than yes. For example, it is a non-trivial result that primality, the negation of compositeness, is in [formula], equivalently that compositeness is in [formula] [\cite=Pratt:prime]. This result began an encouraging chain of results. The computational complexity of primality was improved qualitatively in stages until finally it was established that primality is in [formula] [\cite=Miller:primality] [\cite=Rabin:primality] [\cite=AM:elliptic] [\cite=GK:elliptic] [\cite=AKS:primes]. However, there are other problems that are in both [formula] and [formula] that are thought to be hard, for instance, determining whether an integer is the product of two primes.

Let K  ⊂  S3 be a knot described by a knot diagram, a generalized triangulation, or an incomplete Heegaard diagram. Then the assertion that K is knotted is in [formula], assuming the generalized Riemann hypothesis (GRH).

Together with Hass-Lagarias-Pippenger, we can restate the result as

[formula]

assuming GRH. The complexity theory significance of this result is that unknottedness is not [formula]-hard, assuming standard conjectures in both number theory and complexity theory. (See Section [\ref=s:complex].) It is instead in the class of intermediate problems, such as graph isomorphism and factoring integers, that either have undiscovered polynomial-time algorithms or are hard for some other reason.

We clarify the sense in which Theorem [\ref=th:main] depends on the generalized Riemann hypothesis. Since the role of the verifier for a problem in [formula] is to evaluate a proof of "yes", the verifier might need to assume a conjecture such as GRH to believe the proof. This is not the case for our construction in Theorem [\ref=th:main]. Our certificates are unconditionally convincing, and they always exist. The only role of GRH is to establish that the certificate has polynomial length. Instead of assuming all of GRH, we can assume a much weaker corollary, Theorem [\ref=th:low]. The corollary asserts that for every non-constant univariate integer polynomial h(x), there is a moderately small prime p such that h(x) has a root in [formula].

Our proof of Theorem [\ref=th:main] quickly follows from major results of others. Kronheimer and Mrowka [\cite=KM:dehn] showed that if K is a non-trivial knot, then there is a non-commutative representation of

[formula]

Then, simply because the equations for the representation are algebraic, the complex numbers can be replaced by a finite field [formula]. Koiran [\cite=Koiran:hilbert] showed that if a polynomial-length set of algebraic equations has a complex solution, and if GRH is true, then there is a suitable prime p with only polynomially many digits. Thus, the certificate is a prime p and a 2  ×  2 matrix over [formula] for each generator of the knot group. The verifier must check that the generator matrices satisfy the relations of the knot group; and that they do not all commute, or in the Wirtinger presentation, that they are not all equal. This confirms that K cannot be the unknot.

Related work

See Section [\ref=s:complex] for some discussion of the complexity classes mentioned here.

Koiran [\cite=Koiran:hilbert] showed that the question of whether integer polynomial equations have a complex solution is in [formula], assuming GRH. (He also remarks that the problem is [formula]-hard, so it is [formula]-complete assuming both GRH and [formula].) This implies for us that knottedness is in [formula]. Our idea is to use his constructions rather than his ultimate result to establish that it is in [formula].

Aharonov, Jones, and Landau [\cite=AJL:approx] gave a polynomial-time quantum algorithm to approximate the Jones polynomial J(K,t) of a knot K, uniformly for certain values of t. (See also Freedman, Kitaev, and Wang [\cite=FKW:simulation] for an earlier version of this result.) Given the conjecture that the Jones polynomial distinguishes the unknot, this result raises the question of whether unknottedness is in [formula]. The error in the Aharonov-Jones-Landau algorithm has an extra exponential factor that depends on the knot diagram. For many values of t, any intrinsic approximation of J(K,t) is [formula]-hard [\cite=Kuperberg:jones]. Whether unknottedness is in [formula] by some other algorithm remains an interesting question.

Hempel [\cite=Hempel:residual] showed that the fundamental group of any compact 3-manifold with geometric pieces (which is now known to be all compact 3-manifolds) is residually finite. Broaddus [\cite=Broaddus:noncyclic] refined Hempel's construction with a similar purpose to ours.

In 2002, Agol [\cite=Agol:talk] lower bounds for the genus of a knot are in [formula]. This would imply that knottedness is in [formula], since the unknot is the only knot of genus 0. As of this writing, the full argument has not been written up.

In 2005, Hara, Tani, and Yamamoto [\cite=HTY:unknotting] claimed that unknottedness is in [formula]. They have since retracted this result [\cite=Hara:personal].

In 2011, Musick [\cite=Musick:trivial] claimed that unknottedness is in [formula]. As of this writing, the author does not know the status of this result.

Complexity classes

We review some popular complexity classes, more to interpret Theorem [\ref=th:main] and place it in context than to prove it. See the Complexity Zoo [\cite=zoo] for a survey of complexity classes that we mention here, and many others.

We (informally) defined the classes [formula] and [formula] in the introduction. If D is a decision problem, we define the class [formula] to be the set of decision problems E that can be computed in polynomial time with the aid of an oracle that answers questions in D. Likewise if [formula] is a complexity class, we define [formula] to be the union of [formula] for all [formula]. Likewise we can also define [formula] and [formula]. If [formula], then D is called [formula]-hard (in the Cook or Turing sense); if also [formula], then it is called [formula]-complete.

The polynomial hierarchy is the union

[formula]

An extension of the conjecture that [formula] asserts that the polynomial hierarchy does not collapse, i.e., that each term in this union is larger than the previous one. As a rough analogy, the non-collapse of [formula] is to [formula] in complexity theory, as the generalized Riemann hypothesis is to the Riemann Hypothesis in number theory. Among many known conditional results, if [formula], then the polynomial hierarchy collapses to its second level. Brassard [\cite=Brassard:note] showed that

[formula]

Thus if

[formula]

is [formula]-hard, then [formula].

A promise problem is a decision function D(x) defined only on some subset of input strings. (In other words, the set of input strings that satisfy a promise to the algorithm.) An algorithm for a promise problem must compute the value D(x) when x satisfies the promise, and can be either yes or no arbitrarily otherwise. By contrast with non-promise problems, a promise problem in [formula] can be [formula]-hard. For instance, let D(x) be any [formula]-complete problem, and define E(x1,x2) to simply be D(x1), given the promise that exactly one of D(x1) and D(x2) is yes. Then it is not hard to show that [formula], so that E is also [formula]-hard.

Technically speaking, many problems require a syntactical promise, for example that the input to a computational knot theory algorithm must describe a valid knot. If valid input syntax can be checked in polynomial time, then it is an irrelevant promise, because incorrect input can efficiently be assigned the value "no". So results such as Brassard's theorem still hold. This is significant for us, because the validity of an encoding of a knot diagram can be checked in polynomial time.

The class [formula] is the class of questions that can be answered in polynomial time with random choices, such that the correct answer is computed with probability at least [formula]. (Equivalently, the probability of correctness converges to 1 exponentially with repeated trials.) The class [formula] is similar but harder to define: It uses algorithms with access to quantum randomness, or quantum algorithms. Quantum algorithms require quantum computers, which do not yet exist. Nonetheless, [formula] can be taken seriously as an not-necessarily-realistic complexity class, just like many other complexity classes. Membership in [formula] is sometimes taken as evidence of membership in [formula], even though the most popular conjecture is that neither class contains the other.

The class [formula] (Arthur-Merlin) is an important variation of [formula]. We imagine that the verifier (Arthur) is supplied a certificate by the prover (Merlin). In the class [formula], Merlin states a proof, then Arthur analyzes it deterministically and in polynomial time. In the class [formula], Merlin statistically persuades Arthur by answering randomly chosen questions in a bounded number of rounds. It is known that one round is just as powerful as any bounded number of rounds [\cite=BM:am], and it is known that Arthur might as well simply show Merlin coin flips [\cite=GS:coins]. Even though [formula] looks more powerful than [formula], it is a standard conjecture that [formula]. The conjecture is similar to the conjecture [formula]; both conjectures are true if sufficiently good pseudorandom number generators exist.

The class [formula] is the class of questions whose answers are non-negative integers rather than yes or no. By definition, a question in [formula] counts the number of certificates that satisfy a polynomial criterion together with the input, whereas the analogous question in [formula] only asks if there is at least one certificate. It is known that [formula], which captures [formula]-hardness, contains all of [formula] (and [formula] as well). So [formula]-hardness is thought to be qualitatively much harder than [formula]-hardness.

Algebra

In this section and later, we will often use the polynomial-class bound, that for some function f(n), there exists an α  ≥  0 such that

[formula]

We will write this as

[formula]

and likewise also the multivariate version.

Polynomial equations

Besides recent geometric topology results, our construction rests mainly on the following theorem of Koiran. We define the norm ||f|| of a possibly multivariate integer polynomial f to be the maximum of |a|, where a is a coefficient of f.

Let

[formula]

be non-constant integer polynomials with

[formula]

Suppose that the equation [formula] has a solution in [formula]. Then it has a solution of the form

[formula]

where

[formula]

are integer polynomials, α is a root of an irreducible integer polynomial [formula], and

[formula]

Actually, Koiran writes

[formula]

with

[formula]

This denominator can just be absorbed into α and h.

Now the idea is to find a corresponding root [formula] of h(x) in some prime field [formula].

Let [formula] be an irreducible polynomial of degree D and let R  =  ||h||. Assuming the generalized Riemann hypothesis, there is a prime p such that h(x) has a root in [formula] and such that

[formula]

Actually, Lagarias-Odlyzko and Weinberger establish a density version of Theorem [\ref=th:low], which is a special case of the effective ebotarev density theorem. Koiran [\cite=Koiran:hilbert] states this density version as follows: Let π(x) be the number of primes p  ≤  x, let πh(x) be the number of primes p  ≤  x modulo which h(x) has a root, and let Δh be the discriminant of h. Then

[formula]

where c is an absolute constant. To understand this estimate, we first recall the prime number theorem:

[formula]

Then we recall the formula for the discriminant:

[formula]

Here h' is the derivative of h, [formula] is the resultant of f and g, and S(f,g) is the Sylvester matrix whose determinant is the resultant. By separately bounding the terms of det S(h,h'), we obtain

[formula]

Equations [\eqref=e:pih], [\eqref=e:prime], and [\eqref=e:disc] imply the estimate in Theorem [\ref=th:low]. We only need the weaker estimate

[formula]

We can also interpret Theorem [\ref=th:low] as stated, or this estimate, as a separate conjecture in number theory that appears to be much weaker than GRH.

Assuming the hypotheses of Theorem [\ref=th:koiran] and GRH, there is a prime p with

[formula]

such that [formula] has a solution in [formula].

Again, we need only one such prime. Koiran needs an adequate supply of them, to show that deciding the solvability of [formula] over [formula] is in [formula]. He establishes a statistical gap between the cases in which there is or is not a solution.

Theorem [\ref=th:koiran] yields

[formula]

where h(α)  =  0 and h(x) is irreducible. Theorem [\ref=th:low] provides a prime p such that h(x) has a root [formula]. Then

[formula]

So the existence of [formula] yields a modular solution of [formula].

Algebraic groups

Our use of Theorem [\ref=th:koiran2] rests on the fact that [formula] is an affine algebraic group defined over the integers [formula]. The concept of an affine algebraic group yields an organized definition of versions of a group, for example [formula], for every base field (or ring) F simultaneously, using integer polynomial equations. In our case, [formula] is the ring

[formula]

since the relation in this ring expresses the assertion

[formula]

With such a definition, we can then define the group [formula] (in the traditional sense of a set with a group law) as the set of ring homomorphisms

[formula]

This means that [formula] satisfies the same polynomial relations for every F. Also, the group law of [formula] and the matrix inverse are expressed by the same polynomial equations for every F. (Since the determinant is 1, inverse M- 1 of a matrix M is the same as "adjugate" matrix [formula], which has a polynomial expression in the entries of M.)

In general, an affine algebraic group (over [formula]) is defined in reverse as a commutative ring R (also over [formula]) together with a reverse multiplication map, a reverse identity, and an inverse map:

[formula]

These maps must satisfy the axioms of a commutative Hopf algebra. The Hopf algebra axioms imply that for every commutative ring F, the set [formula] is a group. We imagine that R is the coordinate ring of a space G, one that is morally a group, even when we have not yet chosen F. We then write [formula] and we write [formula]. In the terminology of algebraic geometry, [formula] is a group object in the category of affine schemes, and G(F) is the set of F-rational points of G.

Let G be an affine algebraic group over [formula] and assume GRH. Let Γ be a discrete group with a finite presentation of length [formula]. If there is a homomorphism

[formula]

with non-commutative image, then there is also a homomorphism

[formula]

with non-commutative image, for a prime p such that

[formula]

The theorem is a direct application of Theorem [\ref=th:koiran]. The condition that [formula] or ρp is a group homomorphism is the condition that the images of the generators satisfy the defining relations of Γ. The relations of Γ become polynomial equations in the coordinate ring [formula] of the algebraic group G. For a fixed choice of G, encoding the group relations as polynomial equations is only more complicated by a constant factor.

To establish the non-commutativity property, we use the "Rabinowitsch trick" from algebraic geometry. If [formula] is non-commutative, then Γ has at least one pair of generators x and y whose images do not commute. We can write the relation xy  ≠  yx as a set of polynomial expressions [formula], where [formula] and [formula] are the variables representing x and y, such that for at least one value of k,

[formula]

Then we can add new variables [formula] together with the polynomial relation

[formula]

The algorithm

Description of input

The most traditional way to describe a knot K is by a knot diagram in the plane with crossings. Another description is a triangulation of [formula], either one in which K is an ideal vertex, or one in which the peripheral torus of K is triangulated. A knot complement [formula] can also be described by an incomplete Heegaard diagram, in which a solid torus neighborhood of K appears as one of the 0-handles or 3-handles; the knot complement is then a special case of a compression body. (We also allow Heegaard diagrams with more than the minimum set of circles.)

Since a triangulation can be thickened to a handle decomposition, it yields a Heegaard diagram. (If it is a triangulation of [formula] as a manifold with boundary, we can first collapse the boundary torus to an ideal vertex.) The Heegaard diagram has a crossing for every flag consisting of a triangle and an edge of the triangle. Therefore if the triangulation has n tetrahedra, the Heegaard diagram has at most 6n crossings, which is a constant factor of overhead.

There is also a canonical conversion from a Heegaard diagram of a knot complement (or any 3-manifold) to a triangulation, or a knot diagram of K to a triangulation of [formula] with an ideal vertex and two other vertices. The easiest way to describe either conversion is by a simple spine. A simple spine is a 2-complex in [formula] which is dual to a generalized triangulation. If [formula] has a Heegaard diagram, then we can take the simple spine to be the union of the Heegaard surface H and disks Dj attached at all of the attaching circles of the Heegaard diagram drawn on H. If the Heegaard diagram has n crossings, and if every complementary region of the diagram is a disk, this yields a triangulation with n tetrahedra.

If K has a knot diagram drawn on S2, then we can sew an annulus onto S2 that follows K and makes a torus sleeve for it in S3 [\cite=Broaddus:noncyclic]. If K has n  >  0 crossings, this yields a triangulation with 4n tetrahedra.

The other conversion is from a triangulation or a Heegaard diagram of a knot complement to a knot diagram. An efficient conversion is not possible in this direction. For example, if K is a knot and K' is its (2,1) cable, then their Alexander polynomials satisfy the relation

[formula]

If K0 is a knot with a non-trivial Alexander polynomial and Kn is the result of (2,1)-cabling it n times, then the degree of ΔKn(t) grows exponentially in n, and therefore so does the crossing number and even the genus of Kn. On the other hand, [formula] is a torus sum of [formula] with n copies of the (2,1) cable inside of a solid torus. It therefore has a triangulation in which the number of simplices only grows linearly in n.

The drawback of a triangulation of a knot complement is that it isn't obvious when the input is admissible, i.e., when it is in fact a triangulation of a knot complement. However, it still makes sense as a promise problem.

Proof of the main result

As stated in the introduction, all of the actual topology in our argument is in the following result.

If K  ⊂  S3 is a non-trivial knot, then [formula] has a non-commutative representation in [formula].

With any of the given descriptions of K, it is easy to write a polynomial-length presentation of [formula]. In the case of a knot diagram, it is the Wirtinger presentation. In the case of a Heegaard diagram, we can discard extra Heegaard circles and then read the presentation from the diagram. The certificate then consists of a prime p and a non-commutative group homomorphism

[formula]

By Theorem [\ref=th:km], there is a non-commutative group homomorphism

[formula]

By Theorem [\ref=th:prime], p and ρp are available such that p has at most polynomially many digits in the length of the description of K. The group homomorphism is described by its values on the generators of [formula]. The verifier only needs to check that the relations hold and that the images of the generators do not all commute.

Bounds

One question is whether Theorem [\ref=th:main] can be established unconditionally, i.e., without GRH or Theorem [\ref=th:low]. As far as we know, proving Theorem [\ref=th:low] unconditionally is a difficult open problem in number theory. The hypotheses of Theorems [\ref=th:koiran] and [\ref=th:koiran2] cannot produce every possible polynomial that satisfies the hypotheses of Theorem [\ref=th:low], given polynomial bounds on r and d. However, we can design the equations [formula] as a straight-line program to directly build a wide variety of choices for h(x). In other words, we can choose n - 1 equations in the inductive form

[formula]

so that xk for k  >  1 is a polynomial in x1. Then a final equation

[formula]

is directly equivalent to h(x1)  =  0 for a very complicated polynomial h(x). In this case Koiran's construction cannot do better than to take x1  =  α and use the same h(x). It seems very possible that these choices of h(x) are as difficult, in a complexity-theoretic sense, as all h(x) that satisfy the hypotheses of Theorem [\ref=th:low].

We do not know if the constraints on a homomorphism

[formula]

for an algebraic group G, are as programmable as general algebraic equations. If so, it would be evidence that obtaining the type of certificate described by Theorem [\ref=th:main] unconditionally is as difficult as Theorem [\ref=th:low] itself. Of course, there could be some completely different type of certificate for knottedness, or there could be some good algorithm (possibly a quantum algorithm) to determine knottedness without the aid of a certificate.

It is easy to show unconditionally that there is a prime modulo which h(x) has a root, but with a much weaker bound than Theorem [\ref=th:low]. For instance, h(x) attains the value ±  1 for at most 2D choices of x; thus we can take some other x with |x|  ≤  D and then let p be a prime divisor of h(x). (Or, all of our results work just as well when h has a root in [formula], if q is a prime power that satisfies the same bound. We can let p be the first prime modulo which h has positive degree, then define [formula] by an irreducible factor of h(x) over [formula].) We still obtain a non-commutative representation of [formula] into a group [formula], only with a larger prime p. Without GRH, we obtain

[formula]

where [formula] is the length of the description of K. With GRH, we obtain

[formula]

These bounds improve similar bounds obtained by Broaddus [\cite=Broaddus:noncyclic].