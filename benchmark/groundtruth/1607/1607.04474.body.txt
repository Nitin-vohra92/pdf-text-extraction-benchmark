=2500

TheoremLemma Corollary Conjecture Proposition Problem Definition Example Remark

The Influence of Canalization on the Robustness of Boolean Networks

Introduction

The robustness of dynamic networks has long been an important topic of investigation in a wide range of contexts, using various definitions of the concept [\cite=Strogatz] [\cite=Boccaletti]. Due to the important role of stochasticity in the dynamic behavior of biological networks, in particular gene regulatory networks, the concept of robustness has been studied extensively in this context [\cite=Kitano]. Since the introduction of Boolean and logical network models to the study of the properties of gene regulatory networks [\cite=Kau4] [\cite=Thomas73], time- and state-discrete models, referred to subsequently as discrete dynamical systems, have become an increasingly popular representation of molecular networks [\cite=Albert03] [\cite=Li04] [\cite=Davidich08]. For the most part, these consist of Boolean networks and various generalizations thereof. Questions regarding the robustness of molecular networks, modeled in the discrete dynamical systems framework, frequently involve the relationship between structural features of the network and its resulting dynamics. One commonly used measure of the robustness of a discrete dynamic network is the so-called Derrida value of the network, a measure of how perturbations propagate through the network [\cite=Derrida1]. This measure can then be related to network structure, such as the type of logical rules used to represent the regulatory mechanisms for individual network nodes; see, e.g., [\cite=Balleza].

A frequently investigated concept related to robustness is that of canalization in developmental biology, introduced by Waddington in the 1940s [\cite=Wad]. It was intended to account for the absence of a known mechanism that enables the genetic regulatory protocols driving embryonal development to accurately produce a specific phenotype, even in light of substantial variation in the developing organism's environment. The underlying idea is that phenotypes can be thought of as valleys in a landscape, and canalization is a "force" that channels the developmental trajectory accurately into a particular valley, protecting it from perturbations. Kauffman introduced a version of this concept to Boolean network modeling of gene regulatory networks by studying canalizing functions [\cite=Kau74], as well as the special subclass of so-called nested canalizing functions [\cite=Kau2]. Several authors recently extended this work by considering canalization as a property of Boolean functions [\cite=Layne12] [\cite=He16]. Generalizing findings from [\cite=Yua1], they showed that every Boolean function has a unique algebraic form, characterized by three invariants: canalizing depth, dominance layer numbers and the non-canalizing core-polynomial. The canalizing depth of a function describes its degree of canalization and a k-canalizing function is defined to have canalizing depth of at least k. This extension neatly stratifies the set of all Boolean functions on n variables by their canalizing depth and dominance layer numbers, including so-called nested canalizing functions (n-canalizing), canalizing functions (1-canalizing) and non-canalizing functions (0-canalizing).

A canalizing function possesses at least one input variable such that, if this variable takes on a certain "canalizing" value, then the output value is already determined, regardless of the values of the remaining input variables. If this variable takes on another value, and then there is a second variable with this same property, and so on. If k variables follow this pattern, the function is k-canalizing, and if all variables follow this pattern, the function is nested canalizing (NCF). By definition, any (k + 1)-canalizing function is also k-canalizing, and the Boolean AND function is an example of an NCF.

The relationship between network stability, frequently measured using Derrida values, and the proportion of canalizing functions and their degree of canalization has received much attention in recent years. Boolean networks governed by canalizing functions are more stable than those constructed using random functions [\cite=Kau2] [\cite=Kau3] [\cite=Karlsson07]. In general, network stability and the degree of canalization are positively correlated, with networks governed by NCFs exhibiting the most stable dynamics [\cite=Mur] [\cite=Kochi12] [\cite=Jansen13] [\cite=Dimitrova15]. These findings clearly motivate the study of k-canalizing functions in the context of understanding the regulatory logic of gene networks.

In this paper, we introduce a closed formula for the efficient computation of the Derrida values of a network governed by k-canalizing functions. In detail, the paper is ordered as follows. In Section [\ref=2], we formally introduce the computational concept of canalization. To make this paper self-contained, we restate some frequently used definitions and remarks, see, e.g., [\cite=Kau2] [\cite=He16] [\cite=Yua1]. The activity of a variable in a function quantifies the influence of that variable on the whole function, while the average sensitivity of a function measures how sensitive a function is to a random input change and can be expressed as a weighted sum of the activities. Both quantities have been extensively studied by the Boolean modeling community, see, e.g., [\cite=Layne12] [\cite=Shmul04] [\cite=Boppana97] [\cite=Liu08]. In Section [\ref=3], we derive formulas for the expected activities of any k-canalizing function as well as any canalizing function with known dominance layer numbers. We also introduce the c-sensitivity of a function as a natural generalization of the sensitivity and show how to calculate the average c-sensitivity of a canalizing function from the activities of its variables. In Section [\ref=4], we use the normalized average c-sensitivities to derive a formula for the Derrida values of a Boolean network that is governed by k-canalizing function. This greatly simplifies the application of this tool for robustness analyses of networks, which otherwise requires extensive simulations (difficult or infeasible for large networks). We explore the relationship between the Derrida value, the canalizing depth, the dominance layer numbers and the non-canalizing core-polynomial of a Boolean function. In Section [\ref=5], we extend the formula for the Derrida values to the case of stochastic networks, which are an important modeling paradigm for gene regulatory networks. Section [\ref=6] concludes this paper with some remarks and possible avenues of future work.

The Concept of Canalization

In this section we review some well-known concepts and definitions, mainly from [\cite=He16], to introduce the computational concept of canalization.

A Boolean function [formula] is essential in the variable xi if there exist [formula] and [formula] such that

[formula]

A Boolean function [formula] is canalizing if there exist a variable xi, a Boolean function [formula] and [formula] such that

[formula]

in which case xi is called a canalizing variable, the input a is the canalizing input, and the output value b when xi = a is the corresponding canalized output.

A Boolean function [formula] is k-canalizing, where 0  ≤  k  ≤  n, with respect to the permutation σ∈Sn, inputs [formula] and outputs [formula], if

[formula]

where [formula] is a Boolean function on n - k variables. When g is not a canalizing function itself, the integer k is the canalizing depth of f (as in [\cite=Layne12]), and if g is in addition not constant, it is called the core function of f, denoted by fC.

Since [formula], a function that is k-canalizing with respect to σ∈Sn, inputs ai and outputs bi is essential in each xσ(i), 1  ≤  i  ≤  k.

If we consider the set of all Boolean functions on n variables, then

The n-canalizing functions are precisely the well-studied nested canalizing functions.

The 1-canalizing functions are precisely the canalizing functions.

Every Boolean function is 0-canalizing.

Every non-canalizing function has canalizing depth 0.

Activities and Normalized Average Sensitivities

Some variables of a Boolean function have a greater influence over the output of the function than others. The activity of variable xi in the function [formula] is defined as

[formula]

where χ is an indicator function, [formula] is addition modulo 2 and ei is the ith unit vector. A change in a highly active variable frequently affects the function f, while a change in a variable with activity 0 never alters f.

Another important quantity, directly related to the activity of a variable and introduced in [\cite=Cook86], measures how sensitive the output of a function is to input changes. The sensitivity of a function f on a vector [formula] is defined as the number of Hamming neighbors of [formula] (vectors that differ from [formula] in exactly one bit) with a different function value than [formula]. That is,

[formula]

The average sensitivity Sf is the expected value of [formula] under the distribution of [formula]. Under the uniform distribution,

[formula]

In this section, we will generalize the concept of sensitivity to c-sensitivity and calculate the normalized average c-sensitivity for different classes of canalizing functions, which we will then use in the next section for the calculation of stability properties of Boolean networks.

Any vector that differs at exactly c bits from a given vector [formula] is called a c-Hamming neighbor of [formula]. The c-sensitivity of [formula] on [formula] is defined as the number of c-Hamming neighbors of [formula] on which the function value is different from its value on [formula]. That is,

[formula]

where χ is an indicator function, [formula] is addition modulo 2 and eI is a vector with 1 at all indices in I and 0 everywhere else. Assuming a uniform distribution of [formula],

[formula]

is the average c-sensitivity of f. The range of Sfc is

[formula]

q = ∈.

[formula]

This definition generalizes the concept of sensitivity in a natural way (Sf1  =  Sf) and allows the impact of a simultaneous change in more than one input of a function to be studied. We will now derive the expected activities of a k-canalizing function, where the expectation is taken over all k-canalizing function and a uniform distribution is assumed.

Let f be a k-canalizing function of n variables. By relabeling the variables if necessary, assume that f is k-canalizing in the variable order [formula]. The expected activity of xj in f is

[formula]

See Appendix.

The expected average c-sensitivity of any k-canalizing function is a weighted sum of the activities of its variables.

By relabeling the variables if needed, assume that [formula] is a k-canalizing function in the variable order [formula]. The average c-sensitivity of f is

[formula]

See Appendix.

The expected activities of the variables [formula] of an NCF f are

[formula]

and the expected normalized average c-sensitivity is

[formula]

with [formula] the hypergeometric function.

Theorem 4.6 of [\cite=He16] shows that any Boolean function can be written in a unique standard monomial form, in which the variables are grouped into different layers based on their dominance (see also [\cite=Abd2] [\cite=Yua1] for earlier work on this topic for NCFs). Any canalizing variable is part of the first layer. All variables that become canalizing once the variables from the first layer are excluded, are part of the second layer, etc. The number of layers is called the layer number, denoted by r. The number of variables in the ith layer is the dominance number of layer i, denoted by ki, and the number of all variables that become eventually canalizing is the canalizing depth [formula]. All remaining variables that never become canalizing are part of the core polynomial, which is simply an affine transformation of the core function.

Theorem [\ref=thm_q_k_canal] yields the expected activities of a function, for which only its minimal canalizing depth is known. If the exact canalizing depth of a function and its dominance layer numbers are known, we can quantify the dynamical properties much more accurately. In [\cite=Yua1], the authors have already computed the activities and average sensitivity of an NCF with known dominance layer numbers. We will now determine the activities of a Boolean function, for which the exact canalizing depth, the dominance layer numbers and the Hamming weight of its core function are known. In this case, we do not require an expected value since all such functions share the same activities.

Let [formula] be any Boolean function with canalizing depth k  ≥  0, r layers of canalization with layer structure [formula], where [formula], and [formula] entries ≠  bk in the truth table of its non-canalizing core g. By relabeling the variables if necessary, assume that f is canalizing in the variable order [formula]. The activity of xj on f is

[formula]

where [formula] denotes the dominance layer number of variable xj and

[formula]

See Appendix.

Derrida Values of Networks Governed by k-canalizing functions

Gene regulatory networks need to be robust to perturbations. The so-called Derrida plot is a common technique to evaluate the robustness of a Boolean discrete dynamical system [\cite=Derrida1]. It describes how a perturbation of a given size propagates on average over time. If a small perturbation vanishes over time, the system is considered to be in the ordered regime. The network then typically consists of many steady states and short limit cycles. If the perturbation amplifies over time, the system is in the chaotic regime. A chaotic network typically possesses long limit cycles. Lastly, if the perturbation remains of similar size, then the system is in the narrow threshold between these regimes, often called the critical threshold. Many biological systems seem to operate at this "edge of chaos"; they must be robust enough to withstand perturbations caused by environmental changes but also flexible enough to allow adaptation [\cite=Balleza] [\cite=Nykter].

In this section we formally define the concept of Derrida values in the framework of discrete dynamical systems, using an annealed approximation. Although this approximation corresponds to a system in which interactions are randomly rewired at each time step, it has been shown that its use does not alter the Derrida plot of random Boolean networks [\cite=Fretter]. Until now, the calculation of Derrida values has required extensive Monte Carlo simulations [\cite=Kau2] [\cite=Kau3]. We derive direct formulas for the Derrida values of Boolean networks. Especially for systems with many regulators, this offers a substantial improvement, since the time required to approximate the Derrida plot through simulations increases exponentially in the number of regulators.

Let F = (fi)Ni = 1 be a synchronous Boolean network of N nodes. Let [formula] be the set of variables of fi. Moreover, let [formula] be two system configurations that differ in m coordinates. Lastly, let [formula] be the set of variables of fi where [formula] and [formula] differ. Then, for an initial perturbation of size m, the Derrida value of F is defined as the average size of the perturbation after one update,

[formula]

where [formula] is the Hamming distance (the standard [formula] metric) and the expected value is taken uniformly over all pairs of configurations with distance m.

The Derrida value of a synchronous Boolean network F = (fi)Ni = 1 can be expressed as a weighted sum of the normalized average c-sensitivities of its update functions,

[formula]

where [formula] follows a hypergeometric distribution,

[formula]

Since [formula] and [formula] are synchronously updated, the update of each component is independent from the update of other components. This implies that the Derrida value is simply the sum of the probabilities that [formula] and [formula] differ after the update, [formula], which equals the normalized average c-sensitivity of fi. Conditioning with respect to |J(fi)| leads to the second equality. J(fi) is the intersection of two sets so that its magnitude |J(fi)| follows a hypergeometric distribution.

We will now use this theorem together with the results from Section [\ref=3] to calculate average Derrida values for a multitude of different Boolean networks.

The Hamming weight w of a Boolean function is defined as the number of 1s in its the truth table, and the bias is the probability that a randomly chosen entry in the truth table is 1 minus the probability that it is 0. A Boolean function with equally many 0s and 1s has bias 0 and is called balanced. Constant functions are the most biased with absolute bias 1, and it is easy to see that there is a 1-1 correspondence between the absolute bias and the layer structure of an NCF (see also [\cite=Yua1]). Figure [\ref=fig:derrida_plot] depicts the Derrida values for networks of N = 100 genes, which are governed by NCFs with n = 5 regulators and varying layer structures. The calculation of all the 800 plotted values took less than a second on a regular desktop computer. In networks governed by highly unbalanced NCFs with Hamming weights 1, 3, 29 and 31, small perturbations vanish on average over time; these networks operate in the stable regime. Networks of NCFs with Hamming weights 5, 7, 25 and 27 operate close to the critical threshold, while networks of NCFs with Hamming weights between 11 and 23 operate in the chaotic regime. Surprisingly, networks of NCFs with Hamming weights 11, 13, 19, and 21 are more chaotic than those governed by almost balanced NCFs with Hamming weights 15 and 17. One possible explanation for this observation may be the layer number r. NCFs with Hamming weight 15 or 17 consist of two layers, while NCFs with Hamming weight 13 and 19 (11 and 21) have three (four) different layers. The number of layers is positively correlated with the Derrida value for small perturbations (see rows 9-12 in Figure [\ref=fig:derrida_plot]B and Table [\ref=tab:spearman]). Similarly, the number of variables in the most dominant layer, k1, and the absolute bias are negatively correlated. Interestingly, the correlation of the Derrida value for small perturbations with k1 and with the absolute bias remains high for NCFs with many regulators, whereas the correlation with the layer number decreases with increasing number of regulators.

Table [\ref=tab:impact_single_pert_boolean] shows the impact of a single perturbation on networks governed by canalizing functions with n = 7 regulators, canalizing depth k = 4, various layer structures (r and [formula]) and various numbers of entries ≠  bk in the truth table of the core function (v). As for NCFs, the Derrida value increases with increasing layer number and decreases with increasing number of most dominant variables, k1. Each combination of layer structure and v yields a canalizing function with a different absolute bias and Figure [\ref=fig:bias] exhibits the connection between Derrida value and absolute bias. Again, almost balanced functions give rise to more robust networks than functions with intermediate absolute bias, while networks governed by highly biased functions operate in the stable regime. Moreover, networks with a higher proportion of canalizing variables are more robust. The gain of additional dynamical stability decreases however quickly when adding canalizing variables (see [\cite=Jansen13] for similar findings).

Theorem [\ref=thm_q_k_canal] and Theorem [\ref=thm_derrida3] are used in Table [\ref=tab:comp_k_canal] to investigate the difference between k-canalizing functions (i.e., functions with canalizing depth ≥  k) and functions with exact canalizing depth k. As expected, k-canalizing functions give rise to slightly more stable networks. When the number of non-canalizing variables increases, the difference in robustness vanishes, however, quickly since the vast majority of k-canalizing functions has indeed also exact canalizing depth k when n  ≫  k [\cite=He16]. To our knowledge, the number of non-canalizing functions with a given Hamming weight is unknown. For n - k > 4, we therefore approximated the distribution by generating 107 random non-canalizing functions. For n - k  ≤  4, we simply used exhaustive enumeration.

In all these analyses, we did not specify the size of the network since we focused on the impact of a single perturbation, for which it does not matter. When considering larger perturbations, the network size has a theoretical impact on the Derrida value. We found this impact, however, to be negligible as long as the proportion of perturbed nodes remains small.

Derrida Values of Stochastic Discrete Dynamical Systems

Gene regulatory networks are stochastic in nature. A recently introduced generalization of Boolean networks, called Stochastic Discrete Dynamical Systems (SDDS), captures this inherent stochasticity by assigning gene-specific activation probabilities [formula] and degradation probabilities [formula], which describe how likely a specific state change happens at a given update step [\cite=SDDS]. This framework allows modeling of different time scales as well as stochastic variability, while preserving the simplicity of a Boolean network model. We extend the Derrida value concept (Equation [\ref=eq:derrida]) to this type of system, and derive a formula for its computation.

The Derrida value of an SDDS [formula] is

[formula]

where |J(fi)| is hypergeometrically distributed as in Theorem [\ref=thm_derrida1] and

[formula]

See Appendix.

Discussion

A characteristic ability of organisms is their capability to operate in highly variable environments, striking a fine balance between the ability to adapt to changing conditions and the robustness to function predictably. This extends to the molecular networks that drive everything from embryonal development to metabolism. Understanding the mechanisms that confer this ability is one of the central challenges in studying biology and its fundamental principles. As in physics, mathematical modeling and analysis is an enabling technology for the drive to connect structural properties of dynamic biological networks to their dynamics. The study of robustness, as instantiated in the concept of canalization, is no exception, and many such studies have been published, see, e.g., [\cite=Balleza] [\cite=Kau3] [\cite=Rocha] [\cite=Fretter].

Here, we have focused on one computational instantiation of robustness, that of canalization in the context of Boolean discrete dynamical systems. This includes, as a special case, nested canalization. We have provided a collection of practical and theoretical tools for the analysis of systems governed by k-canalizing functions. In order to study the impact of a simultaneous change in more than one input of a function, we have, at the function level, generalized the concept of sensitivity. At the network level, this allowed us to provide easy-to-use closed form formulas for the Derrida values, a commonly used metric for the stability of networks. We explored the relationship between Derrida value, the canalizing depth, absolute bias, number of layers and number of most dominant variables of a function. In addition, we derived formulas for the Derrida values of a stochastic discrete dynamical system, a modeling framework that can cope with the inherent stochasticity of gene regulatory networks.

The presented formulas significantly simplify the study of robustness via Derrida values. While we started to disentangle the influence of the different parameters of a canalizing function on its robustness, much work remains to be done. Knowledge of the exact number of non-canalizing functions with a certain number of variables and a certain Hamming weight would be helpful in this effort.

References

Appendix

Let [formula] be a k-canalizing function with canalizing order [formula], inputs ai and outputs bi, 1  ≤  i  ≤  k. We will use a similar argument as in [\cite=Layne12] to find the expected activities of f. By definition, the activity of xj in f is the probability that a change in xj changes the output of f. If xj is a canalizing variable (i.e., j  ≤  k), a change in xj can only affect the output of f if none of the variables [formula] receive their canalizing input. Thus,

[formula]

Since each canalizing variable receives its canalizing input with probability [formula],

[formula]

For any j  ≤  k, the subfunction [formula] is canalizing in xj and can therefore be written as [formula] for some polynomial [formula] as in [\cite=He16]. Hence,

[formula]

If j < k, [formula] since a k-canalizing function must be essential in all its canalizing variables (Remark [\ref=rem_essential]). Both constant functions are thus excluded from the set of possible choices for [formula] so that

[formula]

If j = k, [formula] does not cause a contradiction. In this case, there are 22n - k choices of Boolean functions for [formula], half of which satisfy [formula]. Only [formula] is excluded from the set of choices for [formula] so that

[formula]

On the other hand, if xj is a non-canalizing variable (j > k), then a change in xj can only affect the output of f if none of the k canalizing variables receive their canalizing input. Thus,

[formula]

where [formula] from Definition [\ref=def2.3] and [formula]. Similar arguments as for Equation [\ref=eq_almost_half1] yield

[formula]

Let [formula] be a randomly chosen vector and let [formula] be its c-Hamming neighbor, [formula]. Note that Equation [\ref=eq_almost_half2] is true for any [formula] that differs from [formula] in at least one bit xj,j > k, and that the expected activity of all non-canalizing variables is the same. This implies that for any k-canalizing function f, the probability that [formula] and [formula] differ only depends on the first variable where [formula] and [formula] differ,

[formula]

There are [formula] c-subsets in the set [formula], [formula] of which contain j as its lowest element, [formula]. Therefore,

[formula]

As in the proof of Theorem [\ref=thm_q_k_canal], the activity of any canalizing variable xj (j  ≤  k) is

[formula]

Due to the canalizing nature of f, the probability can be further written as

[formula]

Let L: = L(j) and L(i) be the layer of the variables xj and xi, i  ≤  k. The canalized output is equal for all variables of the same layer and alternates among layers. Therefore, bi  ≠  bj if and only if L(i) - L(j) is odd, and the first sum can be rewritten as a sum over all kL + 2t - 1 variables of every second layer L + 2t - 1 > L (t  ≥  1),

[formula]

Also, since g contains v entries ≠  bk in its truth table,

[formula]

Altogether,

[formula]

where φl and ψl can be calculated recursively.

On the other hand, the activity of any non-canalizing variable xj (j > k) is simply

[formula]

Let [formula] be two randomly chosen vectors that differ at m positions. For each node [formula], define three events

[formula]

Then, since Ai is independent from Bi, we have

[formula]

Since [formula] and [formula] differ at m out of n positions, [formula]. [formula] is simply the normalized average sensitivity of f. Lastly, the probability that [formula] and [formula] differ after applying the propensity probabilities needs to be calculated. If xi  ≠  yi and [formula] before applying [formula], we can assume that xi = 0,yi = 1. Then, either [formula] or [formula], both with probability [formula]. In the first case, there is no change in values so that the propensity probabilities [formula] play no role and [formula] after applying [formula] with probability 1. In the second case, [formula] and [formula] only differ after applying [formula], if either both updates happen (probability [formula]) or neither update happens (probability [formula]). That means,

[formula]

Similarly, we can derive

[formula]