=1

Virtual Worlds as Proxy for Multi-Object Tracking Analysis

Qiao Wang   Yohann Cabon   Eleonora Vig

{adrien.gaidon,yohann.cabon}   qiao.wang@asu.edu  eleonora.vig@dlr.de

Introduction

Although cheap or even no annotations might be used at training time via weakly-supervised (resp. unsupervised) learning, experimentally evaluating the generalization performance and robustness of a visual recognition model requires accurate full labeling of large representative datasets. This is, however, challenging in practice for video understanding tasks like multi-object tracking (MOT), because of the high data acquisition and labeling costs that limit the quantity and variety of existing video benchmarks. For instance, the KITTI [\cite=Geiger2012] multi-object tracking benchmark contains only 29 test sequences captured in similar good conditions and from a single source. To the best of our knowledge, none of the existing benchmarks in computer vision contain the minimum variety required to properly assess the performance of video analysis algorithms: varying conditions (day, night, sun, rain, ), multiple detailed object class annotations (persons, cars, license plates, ), and different camera settings, among many others factors.

Using synthetic data should in theory enable full control of the data generation pipeline, hence ensuring lower costs, greater flexibility, and limitless variety and quantity. In this work, we leverage the recent progress in computer graphics (especially off-the-shelf tools like game engines) and commodity hardware (especially GPUs) to generate photo-realistic virtual worlds used as proxies to assess the performance of video analysis algorithms.

Our first contribution is a method to generate large, photo-realistic, varied datasets of synthetic videos, automatically and densely labeled for various video understanding tasks. Our main novel idea consists in creating virtual worlds not from scratch, but by cloning a few seed real-world video sequences. Using this method, our second and main contribution is the creation of the new Virtual KITTI dataset (cf.  Figure [\ref=fig:frame_only_virtual_vs_real]), which at the time of publication contains 35 photo-realistic synthetic videos (5 cloned from the original real-world KITTI tracking benchmark [\cite=Geiger2012], coupled with 7 variations each) for a total of approximately 17,000 high resolution frames, all with automatic accurate ground truth for object detection, tracking, depth, optical flow, as well as scene and instance segmentation at the pixel level.

Our third contribution consists in quantitatively measuring the usefulness of these virtual worlds as proxies for multi-object tracking. We first propose a practical definition of transferability of experimental observations across real and virtual worlds. Our protocol rests on the comparison of real-world seed sequences with their corresponding synthetic clones using real-world pre-trained deep models (in particular Fast-RCNN [\cite=Girshick2015]), hyper-parameter calibration via Bayesian optimization [\cite=bergstra2013making], and the analysis of task-specific performance metrics [\cite=Bernardin2008]. Second, we validate the usefulness of our virtual worlds for learning deep models by showing that virtual pre-training followed by real-world fine-tuning outperforms training only on real world data. Our experiments, therefore, suggest that the recent progress in computer graphics technology allows one to easily build virtual worlds that are indeed effective proxies of the real world from a computer vision perspective.

Our fourth contribution builds upon this small virtual-to-real gap to measure the potential impact on recognition performance of varied weather conditions (like fog), lighting conditions, and camera angles, all other things being equal, something impractical or even impossible in real-world conditions. Our experiments show that these variations may significantly deteriorate the performance of normally high-performing models trained on large real-world datasets. This lack of generalization highlights the importance of open research problems like unsupervised domain adaptation and building more varied training sets, to move further towards applying computer vision in the wild.

The paper is organized as follows. Section [\ref=s:relwork] reviews related works on using synthetic data for computer vision. Section [\ref=s:proxy] describes our approach to build virtual worlds in general and Virtual KITTI in particular. Section [\ref=s:experiments] reports our multi-object tracking experiments using strong deep learning baselines (Section [\ref=s:motbaselines]) to assess the transferability of observations across the real-to-virtual gap (Section [\ref=s:mottransfer]), the benefits of virtual pre-training (Section [\ref=s:virtualpretraining]), and the impact of various weather and imaging conditions on recognition performance (Section [\ref=s:motvarexps]). We conclude in section [\ref=s:conclusion].

Related Work

Several works investigate the use of 3D synthetic data to tackle standard 2D computer vision problems such as object detection [\cite=pepik2012teaching], face recognition, scene understanding [\cite=satkin2012data], and optical flow estimation [\cite=sintel]. From early on, computer vision researchers leveraged 3D computer simulations to model articulated objects including human shape [\cite=grauman2003inferring], face, and hand appearance [\cite=ballan2012motion], or even for scene interpretation and vision as inverse graphics [\cite=Battaglia2013] [\cite=Mansinghka2013] [\cite=Kulkarni2015]. However, these methods typically require controlled virtual environments, are tuned to constrained settings, and require the development of task-specific graphics tools. In addition, the lack of photorealism creates a significant domain gap between synthetic and real world images, which in turn might render synthetic data too simplistic to tune or analyze vision algorithms [\cite=Vaudrey2008].

The degree of photorealism allowed by the recent progress in computer graphics and modern high-level generic graphics platforms enables a more widespread use of synthetic data generated under less constrained settings. First attempts to use synthetic data for training are mainly limited to using rough synthetic models or synthesized real examples (e.g.,  of pedestrians [\cite=Broggi05] [\cite=Stark10]). In contrast, Marn et al.  [\cite=Marin10] [\cite=Vazquez:12] [\cite=Vazquez2014] went further and positively answer the intriguing question whether one can learn appearance models of pedestrians in a virtual world and use the learned models for detection in the real world. A related approach is described in [\cite=Hattori15], but for scene- and scene-location specific detectors with fixed calibrated surveillance cameras and a priori known scene geometry. In the context of video surveillance too, [\cite=taylor2007ovvv] proposes a virtual simulation test bed for system design and evaluation. Several other works use 3D CAD models for more general object pose estimation [\cite=Aubry2014] [\cite=Busto2015] and detection [\cite=Sun2014] [\cite=Peng2015].

Only few works use photo-realistic imagery for evaluation purposes, and in most cases these works focus on low-level image and video processing tasks. Kaneva et al.  [\cite=Kaneva11] evaluate low-level image features, while Butler et al.  [\cite=Butler12] propose a synthetic benchmark for optical flow estimation: the popular MPI Sintel Flow Dataset. The recent work of Chen et al.  [\cite=Chen15] is another example for basic building blocks of autonomous driving. These approaches view photo-realistic imagery as a way of obtaining ground truth that cannot be easily obtained otherwise (e.g.,  optical flow). When ground-truth can be collected, for instance via crowd-sourcing, real-world imagery is often preferred over synthetic data because of the artifacts the latter might introduce.

In this paper, we show that such issues can be partially circumvented using our approach, in particular for high-level video understanding tasks for which ground-truth data is tedious to collect. We believe current approaches face two major limitations that prevent broadening the scope of virtual data. First, the data generation is itself costly and time-consuming, as it often requires creating animation movies from scratch. This also limits the quantity of data that can be generated. An alternative consists in recording scenes from humans playing video games [\cite=Marin10], but this faces similar time costs, and further restricts the variety of the generated scenes. The second limitation lies in the usefulness of synthetic data as a proxy to assess real-world performance on high-level computer vision tasks, including object detection and tracking. It is indeed difficult to evaluate how conclusions obtained from virtual data could be applied to the real world in general.

Due to these limitations, only few of the previous works have so far exploited the full potential of virtual worlds: the possibility to generate endless quantities of varied video sequences on-the-fly. This would be especially useful in order to assess model performance, which is crucial for real-world deployment of computer vision applications. In this paper, we propose steps towards achieving this goal by addressing two main challenges: (i) automatic generation of arbitrary photo-realistic video sequences with ground-truth by scripting modern game engines, and (ii) assessing the degree of transferability of experimental conclusions from synthetic data to the real world.

Generating Proxy Virtual Worlds

Our approach consists in five steps detailed in the following sections: (i) the acquisition of a small amount of real-world data as a starting point for calibration (Section [\ref=s:realdata]), (ii) the "cloning" of this real-world data into a virtual world (Section [\ref=s:synthclone]), (iii) the automatic generation of modified synthetic sequences with different weather or imaging conditions (Section [\ref=s:synthmods]), (iv) the automatic generation of detailed ground truth annotations (Section [\ref=s:synthgt]), and (v) the quantitative evaluation of the "usefulness" of the synthetic data (Section [\ref=s:transfer]). We describe both the method and the particular choices made to generate our Virtual KITTI dataset.

Acquiring real-world (sensor) data

The first step of our approach consists in the acquisition of a limited amount of seed data from the real world for the purpose of calibration. Two types of data need to be collected: videos of real-world scenes and physical measurements of important objects in the scene including the camera itself. The quantity of data required by our approach is much smaller than what is typically needed for training or validating current computer vision models, as we do not require a reasonable coverage of all possible scenarios of interest. Instead, we use a small fixed set of core real-world video sequences to initialize our virtual worlds, which in turn allows one to generate many varied synthetic videos. Furthermore, this initial seed real-world data results in higher quality virtual worlds (i.e.  closer to real-world conditions) and to quantify their usefulness to derive conclusions that are likely to transfer to real-world settings.

In our experiments, we use the KITTI dataset [\cite=Geiger2012] to initialize our virtual worlds. This standard public benchmark was captured from a car driving in the German city of Karlsruhe, mostly under sunny conditions. The sensors used to capture data include gray-scale and color cameras, a 3D laser scanner, and an inertial and GPS navigation system. From the point clouds captured by the 3D laser scanner, human annotators labeled 3D and 2D bounding boxes of several types of objects including cars and pedestrians. In our experiments we only consider cars as objects of interest for simplicity and because they are the main category of KITTI. The annotation data include the positions and sizes of cars, and their rotation angles about the vertical axis (yaw rotation). The movement of the camera itself was recorded via GPS (latitude, longitude, altitude) and its orientation (roll, pitch, yaw) via a GPS/IMU sensor, which has a fixed spatial relationship with the cameras.

Generating synthetic clones

The next step of our approach consists in semi-automatically creating photo-realistic dynamic 3D virtual worlds in which virtual camera paths follow those of the real world seed sequences to generate outputs we call synthetic video clones, which closely resemble the real-world data. To build Virtual KITTI, we select five training videos from the original KITTI MOT benchmark as "real-world seeds" to create our virtual worlds (cf.  Figure [\ref=fig:allclones]): 0001 (crowded urban area), 0002 (road in urban area then busy intersection), 0006 (stationary camera at a busy intersection), 0018 (long road in the forest with challenging imaging conditions and shadows), and 0020 (highway driving scene).

We decompose a scene into different visual components, with which off-the-shelf computer graphics engines (e.g.,  game engines) and graphic assets (e.g.,  geometric and material models) can be scripted to reconstruct the scene. We use the commercial computer graphics engine Unity to create virtual worlds that closely resemble the original ones in KITTI. This engine has a strong community that has developed many "assets" publicly available on Unity's Asset Store. These assets include realistic 3D models and materials of objects. This allows for efficient crowd-sourcing of most of the manual labor in the initial setup of our virtual worlds, making the creation of each virtual world efficient (approximately one-person-day in our experiments).

The positions and orientations of the objects of interest in the 3D virtual world are calculated based on their positions and orientations relative to the camera and the position and orientation of the camera itself, both available from acquired real-world data in the case of KITTI. The main roads are also placed according to the camera position, with minor manual adjustment in special cases (e.g.,  the road changing width). To build the Virtual KITTI dataset, we manually place secondary roads and other background objects such as trees and buildings in the virtual world, both for simplicity and because of the lack of position data for them. Note that this could be automated using Visual SLAM or semantic segmentation. A directional light source together with ambient light simulates the sun. Its direction and intensity are set manually by comparing the brightness and the shadows in the virtual and real-world scenes, a simple process that only takes a few minutes per world in our experiments.

Changing conditions in synthetic videos

After the 3D virtual world is created, we can automatically generate not only the clone synthetic video, but also videos with changed components. This allows for the quantitative study of the impact of single factors ("ceteris paribus analysis"), including rare events or difficult to observe conditions that might occur in practice ("what-if analysis").

The conditions that can be changed to generate new synthetic videos include (but are not limited to): (i) the number, trajectories, or speeds of cars, (ii) their sizes, colors, or models, (iv) the camera position, orientation, and path, (v) the lighting and weather conditions. All components can be randomized or modified "on demand" by changing parameters in the scripts, or by manually adding, modifying, or removing elements in the scene.

To illustrate some of the vast possibilities, Virtual KITTI includes some simple changes to the virtual world that translate in complex visual changes that would otherwise require the costly process of re-acquiring and re-annotating data in the real-world. First, we turned the camera to the right and then to the left, which lead to some considerable change of appearances of the cars. Second, we changed lighting conditions to simulate different time of the day: early morning and before sunset. Third, we used special effects and a particle system together with changed lighting conditions to simulate different weather: overcast, fog and heavy rain. See Figure [\ref=fig:weather] for an illustration.

Generating ground-truth annotations

As stated above, ground-truth annotations are essential for computer vision algorithms. In the KITTI dataset, the 2D bounding boxes used for evaluation were obtained from human annotators by drawing rectangular boxes on the video frames and manually labeling the truncation and occlusion states of objects. This common practice is however costly, does not scale to large volumes of videos and pixel-level ground-truth, and incorporates varying degrees of subjectiveness and inconsistency. For example, the bounding boxes are usually slightly larger than the cars and the margins differ from one car to another and from one annotator to another. The occlusion state ("fully visible", "partly occluded", or "largely occluded") is also subjective and the underlying criterion may differ from case to case, yielding many important edge cases (occluded and truncated cars) with inconsistent labels.

In contrast, our approach can automatically generate accurate and consistent ground-truth annotations accompanying synthetic video outputs, and the algorithm-based approach allows richer (e.g.,  pixel-level) and more consistent results than those from human annotators. We render each moment of the scene four times. First, we do the photo-realistic rendering of the clone scene by leveraging the modern rendering engine of Unity. Second, the depth map is rendered by using the information stored in the depth buffer. Third, the per-pixel category- and instance-level ground-truth is efficiently and directly generated by using unlit shaders on the materials of the objects. These modified shaders output a color which is not affected by the lighting and shading conditions. A unique color ID is assigned for each object of interest (cf.  Figure [\ref=fig:pixel_gt]). Fourth, we compute the dense optical flow between the previous and the current frames by sending all Model, View, and Projection matrices for each object to a vertex shader, and interpolate the flow of each pixel using a fragment shader. Note that these multiple renderings are an efficient strategy to generate pixel-level ground truth, as it effectively leverages shaders offloading parallel computations to GPUs (most of the computation time is used to swap materials). For Virtual KITTI, with a resolution of around 1242  ×  375, the full rendering and ground truth generation pipeline for segmentation, depth, and optical flow runs at 5-8 FPS on a single desktop with commodity hardware.

We generate 2D multi-object tracking ground truth by (i) doing the perspective projection of the 3D object bounding boxes from the world coordinates to the camera plane (clipping to image boundaries in the case of truncated objects), (ii) associating the bounding boxes with their corresponding object IDs to differentiate object instances, and (iii) adding truncation and occlusion meta-data as described below. The truncation rate is approximated by dividing the volume of an object's 3D bounding box by the volume of the 3D bounding box of the visible part (computed by intersecting the original bounding box with the camera frustum planes). We also estimate the 2D occupancy rate of an object by dividing the number of ground-truth pixels in its segmentation mask by the area of the projected 2D bounding box, which includes the occluder, as it results from the perspective projection of the full 3D bounding box of the object. In the special case of fog, we additionally compute the visibility of each object from the fog formula used to generate the effect. To have comparable experimental protocols and reproducible ground truth criteria across real and virtual KITTI, we remove manually annotated "DontCare" areas from the original KITTI training ground truth (i.e.  they may can count as false alarms), and ignore all cars smaller than 25 pixels or heavily truncated / occluded during evaluation (as described in [\cite=Geiger2012]). We set per sequence global thresholds on occupancy and truncation rates of virtual objects to be as close as possible to original KITTI annotations.

Assessing the usefulness of virtual worlds

In addition to our data generation and annotation methods, a key novel aspect of our approach consists in the assessment of the usefulness of the generated virtual worlds for computer vision tasks. It is a priori unclear whether and when using photo-realistic synthetic videos is indeed a valid alternative to real-world data for computer vision algorithms. The transferability of conclusions obtained on synthetic data is likely to depend on many factors, including the tools used (especially graphics and physics engines), the quality of implementation (e.g.,  the degree of photo-realism and details of environments and object designs or animations), and the target video analysis tasks. Although using synthetic training data is common practice in computer vision, we are not aware of related works that systematically study the reverse, i.e.  using real-world training data, which can be noisy or weakly labeled, and synthetic test data, which must be accurately labeled and where, therefore, synthetic data has obvious benefits.

To assess robustly whether the behavior of a recognition algorithm is similar in real and virtual worlds, we propose to compare its performance on the initial "seed" real-world videos and their corresponding virtual world clones. We compare multiple metrics of interest (depending on the target recognition task) obtained with fixed hyper-parameters that maximize recognition performance on both the real and virtual videos, while simultaneously minimizing the performance gap. In the case of MOT, we use Bayesian hyper-parameter optimization [\cite=bergstra2013making] to find fixed tracker hyper-parameters for each pair of real and clone videos. We use as objective function the sum of the multi-object tracking accuracies (MOTA [\cite=Bernardin2008]) over original real-world videos and their corresponding virtual clones, minus their absolute differences, normalized by the mean absolute deviations of all other normalized CLEAR MOT metrics [\cite=Bernardin2008].

This allows us to quantitatively and objectively measure the impact of the virtual world design, the degree of photo-realism, and the quality of other rendering parameters on the algorithm performance metrics of interest. Note that this simple technique is a direct benefit of our virtual world generation scheme based on synthetically cloning a small set of real-world sensor data. Although the comparisons depend on the tasks of interest, it is also possible to complement task-specific metrics with more general measures of discrepancy and domain mismatch measures [\cite=Gretton2012].

Finally, note that our protocol is complementary to the more standard approach consisting of using synthetic training data and real-world test data. Therefore, in our experiments with Virtual KITTI we investigate both methods to assess the usefulness of virtual data, both for learning virtual models applied in the real world and for evaluating real-world pre-trained models in both virtual and real worlds.

Experiments

In this section, we first describe the MOT models used in our experiments. We then report results regarding the differences between the original real-world KITTI videos and our virtual KITTI clones. We then report our experiments on learning in virtual worlds models applied on real-world data. Finally, we conclude with experiments to measure the impact of camera, lighting, and weather on recognition performance of real-world pre-trained MOT algorithms.

Strong Deep Learning Baselines for MOT

Thanks to the recent progress on object detection, association-based tracking-by-detection in monocular video streams is particularly successful and widely used for MOT [\cite=Breitenstein2011] [\cite=Pirsiavash2011] [\cite=Milan2014] [\cite=Geiger2014] [\cite=Hall2014] [\cite=Collins2014] [\cite=Gaidon2015a] [\cite=Wang2015e] [\cite=Choi2015] [\cite=Xiang2015] (see [\cite=Luo2014] for a recent review). These methods consist in building tracks by linking object detections through time.

In our experiments, the detector we use is the recent Fast-R-CNN object detector from Girshick [\cite=Girshick2015] combined with the efficient Edge Boxes proposals [\cite=Zitnick2014]. In all experiments (except for the virtual training ones), we follow the experimental protocol of [\cite=Girshick2015] to learn a powerful VGG16-based Fast-RCNN car detector by fine-tuning successively from ImageNet, to Pascal VOC 2007 cars, to the KITTI object detection benchmark training images.

To use this detector for association-based MOT, we consider two trackers. The first is based on the principled network flow algorithm of [\cite=Zhang2008] [\cite=Pirsiavash2011], which does not require video training data. The maximum a posteriori (MAP) data association problem can indeed be elegantly formalized as a special integer linear program (ILP) whose global optimum can be found efficiently using max-flow min-cost network flow algorithms [\cite=Zhang2008] [\cite=Pirsiavash2011]. In particular, the dynamic programming min-cost flow (DP-MCF) algorithm of Pirsiavash et al.  [\cite=Pirsiavash2011] is well-founded and particularly efficient. Although it obtains poor results on the KITTI MOT benchmark [\cite=KITTIMOTres], it can be vastly improved by (i) using a better detector, (ii) replacing the binary pairwise costs in the network by using the intersection-over-union, and (iii) allowing for multiple time-skip connections in the network to better handle missed detections. Our DP_MCF_RCNN tracker reaches 57% MOTA on the KITTI MOT evaluation server [\cite=KITTIMOTres], improving by + 20% w.r.t.  the original DP_MCF [\cite=Pirsiavash2011]. Note that this baseline tracker could be further improved, as shown recently by Wang and Fowlkes [\cite=Wang2015e]. Their method indeed obtains 77% MOTA with a related algorithm thanks to better appearance and motion modeling coupled with structured SVMs to learn hyper-parameters on training videos.

The second tracker we consider is the recent state-of-the-art Markov Decision Process (MDP) method of Xiang et al.  [\cite=Xiang2015]. It relies on reinforcement learning to learn a policy for data association from ground truth training tracks. This method reaches 76% MOTA on the KITTI MOT test set using ConvNet-based detections. In our experiments requiring a pre-trained tracker, we learned the MDP parameters on the following 12 real-world KITTI training videos: 0000, 0003, 0004, 0005, 0007, 0008, 0009, 0010, 0011, 0012, 0014, 0015. (The remaining videos are either the seed sequences used to create the virtual worlds, or sequences containing no or very few cars.)

Transferability across the Real-to-Virtual Gap

Table [\ref=tab:resmot] contains the multi-object tracking performance of our DP-MCF and MDP trackers on the virtual KITTI clone videos and their original KITTI counterparts following the protocol described in Section [\ref=s:transfer]. See Figure [\ref=fig:trackclone] for some tracking visualizations.

According to the MOTA metric which summarizes all aspects of MOT, the real-to-virtual performance gap is minimal for all real sequences and their respective virtual clones and for all trackers, and < 0.5% on average for both trackers. All other metrics show also a limited gap. Consequently, the visual similarity of the sequences and the comparable performance and behavior of the tracker across real-world videos and their virtual worlds counterpart suggest that similar causes in the real and virtual worlds are likely to cause similar effects in terms of recognition performance. The amount of expected "transferability of conclusions" from real to virtual and back can be quantified by the difference in the metrics reported in table [\ref=tab:resmot].

The most different metrics are the MOTP (average intersection-over-union of correct tracks with the matching ground truth), and the fraction of Mostly Tracked (MT) objects (fraction of ground truth objects tracked at least 80% of the time), which are both generally lower in the virtual world. The main factor explaining this gap lies in the inaccurate and inconsistent manual annotations of the frequent "corner cases" in the real world (heavy truncation or occlusion, which in the original KITTI benchmark is sometimes labeled as "DontCare", ignored, or considered as true positives, depending on the annotator). In contrast, our Virtual KITTI ground truth is not subjective, but automatically determined by thresholding the aforementioned computed occupancy and truncation rates. This discrepancy is illustrated in Figure [\ref=fig:trackclone], and explains the small drop in recall for sequences 0001, 0018, and 0020 (which contain many occluded and truncated objects). Note, however, that the Fast-RCNN detector achieves similar F1 performance between real and virtual worlds, so this drop in recall is generally compensated by an increase in precision.

Virtual Pre-Training

As mentioned previously, our method to quantify the gap between real and virtual worlds from the perspective of computer vision algorithms is complementary to the more widely-used approach of leveraging synthetic data to train models applied in real-world settings. Therefore, we additionally conduct experiments to measure the usefulness of Virtual KITTI to train MOT algorithms.

We evaluated three different scenarios: (i) training only on the 5 real KITTI seed sequences (configuration 'r'), (ii) training only on the corresponding 5 virtual KITTI clones (configuration 'v'), and (iii) training first on the Virtual KITTI clones, then fine-tuning on the real KITTI sequences, a special form of virtual data augmentation we call virtual pre-training (configuration 'v→  r'). We split the set of real KITTI sequences not used during training in two: (i) a test set of 7 long diverse videos (4,5,7,8,9,11,15) to evaluate performance, and (ii) a validation set of 5 short videos (0,3,10,12,14) used for hyper-parameter tuning. The Fast-RCNN detector was always pre-trained on ImageNet. The MDP association model is trained from scratch using reinforcement learning as described in [\cite=Xiang2015].

Table [\ref=tab:restrain] reports the average MOT metrics on the aforementioned real test sequences for all trackers trained with all configurations. Although training only on virtual data is not enough, we can see that the best results are obtained with configuration v→  r. Therefore, virtual pre-training improves performance, which further confirms the usefulness of virtual worlds for high-level computer vision tasks. The improvement is particularly significant for the DP-MCF tracker, less for the MDP tracker. MDP can indeed better handle missed detections and works in the high-precision regime of the detector (the best minimum detector score threshold found on the validation set is around 95%), which is not strongly improved by the virtual pre-training. On the other hand, DP-MCF is more robust to false positives but requires more recall (validation score threshold around 60%), which is significantly improved by virtual pre-training. In all cases, we found that validating an early stopping criterion (maximum number of SGD iterations) of the second fine-tuning stage of the v→  r  configuration is critical to avoid overfitting on the small real training set after pre-training on the virtual one.

Impact of Weather and Imaging Conditions

Table [\ref=tab:resmotvars] contains the performance of our real-world pre-trained trackers (Section [\ref=s:motbaselines]) in altered conditions generated either by modifying the camera position, or by using special effects to simulate different lighting and weather conditions. As the trackers are trained on consistent ideal sunny conditions, all modifications negatively affect all metrics and all trackers. In particular, bad weather (e.g.,  fog) causes the strongest degradation of performance. This is expected, but difficult to quantify in practice without re-acquiring data in different conditions. This also suggests that the empirical generalization performance estimated on the limited set of KITTI test videos is an optimistic upper bound at best. Note that the MDP tracker is suffering from stronger overfitting than DP-MCF, as suggested by the bigger performance degradation under all conditions.

Conclusion

In this work we introduce a new fully annotated photo-realistic synthetic video dataset called Virtual KITTI, built using modern computer graphics technology and a novel real-to-virtual cloning method. We provide quantitative experimental evidence suggesting that the gap between real and virtual worlds is small from the perspective of high-level computer vision algorithms, in particular deep learning models for multi-object tracking. We also show that these state-of-the-art models suffer from over-fitting, which causes performance degradation in simulated modified conditions (camera angle, lighting, weather). Our approach is, to the best of our knowledge, the only one that enables to scientifically measure the potential impact of these important phenomena on the recognition performance of a statistical computer vision model.

In future works, we plan to expand Virtual KITTI by adding more worlds, and by also including pedestrians, which are harder to animate. We also plan to explore and evaluate domain adaptation methods and larger scale virtual pre-training or data augmentation to build more robust models for a variety of video understanding tasks, including multi-object tracking and scene understanding.