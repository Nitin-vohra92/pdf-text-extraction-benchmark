7pt 7pt

Numerical simulation of red blood cell suspensions behind a moving interface in a capillary Shihai Zhao and Tsorng-Whay Pan Department of Mathematics, University of Houston, Houston, Texas 77204-3008, USA

Abstract: Computational modeling and simulation are presented on the motion of red blood cells behind a moving interface in a capillary. The methodology is based on an immersed boundary method and the skeleton structure of the red blood cell (RBC) membrane is modeled as a spring network. The computational domain is moving with either a designated RBC or an interface in an infinitely long two-dimensional channel with an undisturbed flow field in front of the domain. The tanking-treading and the inclination angle of a cell in a simple shear flow are briefly discussed for the validation purpose. We then present the results of the motion of red blood cells behind a moving interface in a capillary, which show that the RBCs with higher velocity than the interface speed form a concentrated slug behind the interface.

Key words: red blood cells, moving domain, immersed boundary method.

Introduction

The rheological property of the red blood cells (RBCs) is a key factor of the blood flow characteristics at the microchannel level, especially the particulate nature of the blood becomes significant when studying blood drop through a glass capillary within miniature blood diagnostic kit. The penetration of the blood suspension in a perfectly wettable capillary has been analyzed in [\cite=Chang2005] [\cite=Chang2006]. The failure of such penetration is attributed to three RBCs segregation mechanisms: (i) corner deflection at the entrance, (ii) the intermediate deformation-induced radial migration and (iii) shear-induced diffusion within a packed slug at the meniscus. The key mechanism responsible for penetration failure is the deformation-induced radial migration, which endows the blood cells with a higher velocity than the meniscus to form the concentrated slug behind the meniscus (see Figure [\ref=fig.1]). The results in [\cite=Chang2005] [\cite=Chang2006] shed light on making the smallest microfluidic kit and loading microneedle that require the least amount of blood sample.

Nowadays in silico mathematical modeling and numerical study of RBC rheology have attracted growing interest (see, e.g., [\cite=Cristini] [\cite=Pozrikidis2003]). The immersed boundary method developed by Peskin, e.g, [\cite=Peskin1977] [\cite=Peskin1980] [\cite=Peskin2002], has been one of the popular methodologies for numerically studying the RBC rheology due its distinguish features in dealing with the problem of fluid flow interacting with a flexible fluid/structure interface. For example, in [\cite=Eggleton1998]-[\cite=Shi2012c], immersed boundary methods have been combined with different RBC membrane models to simulate the motion of RBCs and vesicles in fluid flow. In [\cite=Shi2012a] [\cite=Shi2012b] [\cite=Shi2012c], we have successfully combined an immersed boundary method with a spring model developed in [\cite=Tsubota2006] to simulate the motion of RBCs in shear flows and Poiseuille flows. In this paper we have generalized the aforementioned methodology to simulate the RBCs aggregation behind a moving interface considered in [\cite=Chang2005] [\cite=Chang2006] by having the computational domain moving with an interface in an infinitely long two-dimensional channel with an undisturbed flow field in front of the domain since the typical periodic boundary condition in the direction of the channel wall is not well suited anymore. To mimic the motion of the RBCs behind a meniscus in a capillary, we have considered a flat interface moving with a given constant speed in this paper. The simulating results of the motion of red blood cells behind a moving interface show that the RBCs with higher velocity than the interface speed form the concentrated slug behind the interface, which resembles the motion of the RBCs observed in [\cite=Chang2005] [\cite=Chang2006]. The structure of this paper is as follows: We discuss the elastic spring model and numerical methods in Section 2. In Section 3, the tanking-treading and the inclination angle of a cell in a simple shear flow are briefly discussed for the validation purpose. We then present the results of the motion of red blood cells behind a moving interface in a capillary. The conclusions are summarized in Section 4.

Models and methods

Let Ω be a bounded rectangular domain filled with blood plasma which is incompressible, Newtonian, and contains RBCs with the viscosity of the cytoplasm same as that of the blood plasma (see Figure [\ref=fig.2]). For some T > 0, the governing equations for the fluid-cell system are

[formula]

[formula]

where [formula] and p are the fluid velocity and pressure, respectively, ρ is the fluid density, and μ is the fluid viscosity, which is assumed to be constant for the entire computational domain. In ([\ref=eqn:2.1]), [formula] is a body force which accounts for the force acting on the fluid/cell interface. Equations ([\ref=eqn:2.1]) and ([\ref=eqn:2.2]) are completed by the following boundary and initial conditions:

[formula]

where the domain Ω is taken from an infinitely long channel with its boundary denoted by [formula]. In the simulations, we have considered two types of boundary conditions: (i) [formula] and Γd  =  Γ, (ii) Γn  =  Γ4 and [formula] with [formula] having the profile of either Poiseuille flow or simple shear flow on Γd

Elastic spring model for the RBC membrane

A two-dimensional elastic spring model used in [\cite=Tsubota2006] is considered in this paper to describe the deformable behavior of the RBCs. Based on this model, the RBC membrane can be viewed as membrane particles connecting with the neighboring membrane particles by springs, as shown in Figure [\ref=fig.3]. Elastic energy stores in the spring due to the change of the length l of the spring with respected to its reference length l0 and the change in angle θ between two neighboring springs. The total elastic energy of the RBC membrane, E = El + Eb, is the sum of the total elastic energy for stretch/compression and the total energy for bending which, in particular, are

[formula]

and

[formula]

In equations ([\ref=eqn:2.5]) and ([\ref=eqn:2.6]), N is the total number of the spring elements, and kl and kb are spring constants for changes in length and bending angle, respectively.

In the process of creating the initial shape of RBCs described in [\cite=Tsubota2006], the RBC is assumed to be a circle of radius R0 = 2.8 μm initially. The circle is discretized into N = 76 membrane particles so that 76 springs are formed by connecting the neighboring particles. The shape change is stimulated by reducing the total area of the circle through a penalty function

[formula]

where s and se are the time dependent area of the RBC and the equilibrium area of the RBC, respectively, and the total energy is modified as E + Γs. Based on the principle of virtual work the force acting on the ith membrane particle now is

[formula]

where [formula] is the position of the ith membrane particle. When the area is reduced, each RBC membrane particle moves on the basis of the following equation of motion:

[formula]

Here, [formula] denotes the time derivative; m and γ represent the membrane particle mass and the membrane viscosity of the RBC. The position [formula] of the ith membrane particle is solved by discretizing ([\ref=eqn:3.3]) via a second order finite difference method. The total energy stored in the membrane decreases as the time elapses. The final shape of the RBC is obtained as the total elastic energy is minimized (please see [\cite=Pan2009b]). The area of the final shape has less than 0.001% difference from the given equilibrium area se and the length of the perimeter of the final shape has less than 0.005% difference from the circumference of the initial circle. The reduced area of a RBC in this paper is defined by s* = se  /  πR20.

When simulating the case involving a moving interface, we have applied a repulsive force to prevent the overlapping between cell and wall. The repulsive force is obtained from the following Morse potential (e.g., see [\cite=Alexeev2006]) where the parameter d is the shortest distance between the membrane particle and the wall and d0 is the range of the repulsive force (when the distance d is greater than d0, there is no repulsive force). The parameter kr is a constant for the strength of the potential.

Immersed boundary method

The immersed boundary method developed by Peskin, e.g, [\cite=Peskin1977] [\cite=Peskin1980] [\cite=Peskin2002], is employed in this study because of its distinguish features in dealing with the problem of fluid flow interacting with a flexible fluid/structure interface. Over the years, it has demonstrated its capability in study of computational fluid dynamics including blood flow. Based on the method, the boundary of the deformable structure is discretized spatially into a set of boundary nodes. The force located at the immersed boundary node [formula] affects the nearby fluid mesh nodes [formula] through a 2D discrete δ-function [formula]:

[formula]

where h is the uniform finite element mesh size and

[formula]

with the 1D discrete δ-functions being

[formula]

The velocity of the immersed boundary node [formula] is also affected by the surrounding fluid and therefore is enforced by summing the velocities at the nearby fluid mesh nodes [formula] weighted by the same discrete δ-function:

[formula]

After each time step, the position of the immersed boundary node is updated by

[formula]

Space approximation and time discretization

Concerning the finite element based space approximation of [formula] in problem ([\ref=eqn:2.1])-([\ref=eqn:2.4]), we use the P1-iso-P2 and P1 finite element approximation (e.g., see [\cite=Glowinskibook] (Chapter 5)). For a rectangular computational domain Ω  ⊂  R2, let Th be a finite element triangulation of [formula] for velocity and T2h a twice coarser triangulation for pressure where h is a space discretization step. We introduce the finite dimensional spaces:

[formula]

where P1 is the space of polynomials in two variables of degree ≤  1. We apply the Lie's scheme [\cite=Chorin] [\cite=Glowinskibook] with the above finite elements to equations ([\ref=eqn:2.1])-([\ref=eqn:2.4]) with the backward Euler method in time for some subproblems and obtain the following sequence of fractional step subproblems (some of the subscripts h have been dropped):

[formula] is given; for n  ≥  0, [formula] being known, we compute the approximate solution via the following fractional steps:

Update the position of the membrane by ([\ref=eqn:2.11]) and ([\ref=eqn:2.12]) and then compute the force [formula] based on the fluid/cell interface by ([\ref=eqn:3.2]) and ([\ref=eqn:2.8]).

Solve

[formula]

and set [formula].

Finally solve

[formula]

In eq. ([\ref=eqn:2.17]), we have [formula], [formula] } and [formula]. The quasi-Stokes problem ([\ref=eqn:2.16]) is solved by a preconditioned conjugate gradient method (see, e.g., [\cite=Glowinskibook]). The subproblem ([\ref=eqn:2.17]) is an advection type subproblem. It is solved by a wave-like equation method, which is described in detail in [\cite=Glowinskiwave] and [\cite=Dean1998].

In simulations, the computational domain Ω moves to the right with either the mass center of a RBC or the interface (see, e.g., [\cite=Hu1992] [\cite=Pan2002c] and references therein for adjusting the computational domain according to the position of the particle). Due to the use of structured and uniform mesh in our simulations, it is relatively easy to have the computational domain moving with a designated cell. Generally when the mass center of a RBC moves to the right in an infinitely long channel, we add one vertical grid line to the right end of the computational domain if the cell mass center crosses one vertical grid line after we predict its new position and at the same time we drop one vertical grid line at the left end of the computational domain. In the mean time at these new grid points added at the right end, we assign the values of velocity field according to either Poiseuille flow or simple shear flow depending on the test cases. When following an interface moving to the right with a constant speed, we have applied the same strategy.

Numerical results and discussion

Tank-treading of a single cell in shear flow

We have first validated the computational methodology with two types of boundary conditions discussed in Section [\ref=sec:2] by comparing the inclination angle and the tank-treading frequency of a single RBC in shear flow. Here are the parameters used in the simulations: The values of parameters for modeling cells are same with [\cite=Shi2012a] [\cite=Shi2012b] [\cite=Shi2012c] as follows: The bending constant is kb = 5  ×  10- 10, the spring constant is [formula], the penalty coefficient is ks  =  10- 5, the repulsive force coefficient is kr  =  10- 9, and the range of the repulsive force is d0 = 2h where h is the mesh size for the flow velocity field. The cells are suspended in blood plasma which has a density ρ = 1.00 and a dynamical viscosity μ = 0.012. The viscosity ratio which describes the viscosity contrast of the inner and outer fluid of the RBC membrane is fixed at 1.0. The dimensions of the computational domain are 112  ×  7 and 80  ×  7. Then the degree of confinement (2R0 / H) is 0.8 where H is the height of the channel. The grid resolution for the computational domain is 80 grid points per 10[formula]. The time step Δt is 1  ×  10- 5. The initial position of the mass center of the cells are (56, 3.5) and (40, 3.5) for the longer domain and the shorter domain, respectively. To have a shear flow, a Couette flow driven by two walls at the top and bottom which have the same speed U / 2 but move in directions opposite to each other is applied to the suspension, where the speed U is given by [formula] with a given shear rate γ. The shear rate used in the simulation is γ = 275/s. The steady inclination angles of the tank-treading for four values of s*=0.6, 0.7, 0.8 and 0.9 are presented in Figure [\ref=fig.4], which show the very good agreement with the lattice-Boltzmann simulation results in [\cite=Kaoui2011] and those previously obtained with periodic boundary conditions in [\cite=Shi2012a]. The membrane tank-treading velocity (scaled by γR0 / 2) is also in good agreement with the results in [\cite=Kaoui2011] [\cite=Shi2012a]. The results show that there is no significant difference when having the Dirichlet boundary conditions on Γ with the length L = 112 and 80  or the conditions ([\ref=eqn:2.3a]) and ([\ref=eqn:2.3b]) on the boundary of the shorter domain.

Multi-cell aggregation in a capillary behind a moving interface

For the cases involving a moving interface in a capillary, we have considered the one moving to the right with constant speed U to mimic the motion of the RBCs behind a meniscus in a capillary. Then the associated boundary condition in ([\ref=eqn:2.3a]) on Γd is [formula] on [formula] and [formula] on Γ2 and the boundary condition ([\ref=eqn:2.3b]) is satisfied on Γ4. We have kept all the related parameters the same except the following. We have first considered the case of 12 cells of swelling ratio s*=0.481 in a capillary of the height 10. The computational domain Ω is 80  ×  10. The interface speed is U = 8 / 3 cm/s. The cells in the center of the channel move faster than those next to the top and bottom walls do due to fact that the velocity field behaves like Poiseuille flow as the fluid flow is away from the interface and the speed of the interface is slower than the velocity of the fluid flow in the channel central region away from the interface (see the velocity field in Figures [\ref=fig.5] and [\ref=fig.6]). For the cells moving away from the interface, they move back to the central region of the channel due to the lateral migration of the cells in a flow field like the Poiseuille flow and then move toward the interface. Thus the cells form a slug behind the moving interface and move with the interface as in Figure [\ref=fig.5]. For the case of 68 cells of swelling ratio s*=0.481 in a capillary of the height 20, we have considered the computational domain Ω = 160  ×  20. The interface speed is U = 8 / 3 cm/s. These 68 cells behave similarly behind the moving interface like the motion of the 12 cells considered in the previous case. But it is much clearly for us to see that the cells in the channel central region move faster to the right due to the relatively faster flow field. Then the cells are piled up behind the interface and move with the interface in Figure [\ref=fig.6].

Conclusions

In summary, we have developed computational modeling and methodologies for simulating the motion of many RBCs in a capillary behind a moving interface in this paper. The methodology is based on an immersed boundary method and the skeleton structure of the red blood cell (RBC) membrane is modeled as a spring network. The computational domain is moving with either a designated RBC or an interface in an infinitely long two-dimensional channel with an undisturbed flow field in front of the domain. The tanking-treading and the inclination angle of a cell in a simple shear flow are briefly discussed for the validation purpose. The results of the motion of red blood cells behind a moving interface in a capillary show that the RBCs with higher velocity than the interface speed form a concentrated slug behind the interface, which is consistent with the results in [\cite=Chang2005] [\cite=Chang2006]. The lateral migration is also a key factor for the formation of a slug behind the moving interface.

Acknowledgments

The authors acknowledge the support of NSF (grant DMS-0914788). We acknowledge the helpful comments of James Feng, Ming-Chih Lai and Sheldon X. Wang.