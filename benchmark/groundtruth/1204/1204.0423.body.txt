On voting intentions inference from Twitter content: a case study on UK 2010 General Election

Abstract

This is a report, where preliminary work regarding the topic of voting intention inference from Social Media - such as Twitter - is presented. Our case study is the UK 2010 General Election and we are focusing on predicting the percentages of voting intention polls (conducted by YouGov) for the three major political parties - Conservatives, Labours and Liberal Democrats - during a 5-month period before the election date (May 6, 2010). We form three methodologies for extracting positive or negative sentiment from tweets, which build on each other, and then propose two supervised models for turning sentiment into voting intention percentages. Interestingly, when the content of tweets is enriched by attaching synonymous words, a significant improvement on inference performance is achieved reaching a mean absolute error of 4.34%  ±  2.13%; in that case, the predictions are also shown to be statistically significant. The presented methods should be considered as work-in-progress; limitations and suggestions for future work appear in the final section of this script.

Introduction

Information generated by users and published on the Social Web has enabled a new wave of experimentation and research in the past few years. There exist several works showing that textual 'observations' coming from Social Media - such as Twitter - could, for example, be used to nowcast events emerging in the real world [\cite=Lampos2011Nowcasting], understand general emotional figures in a population [\cite=Golder2011] [\cite=Lansdall-Welfare2012] and improve branding strategies [\cite=Jansen2009a].

In this report, we present a preliminary method for extracting voting intention figures from Twitter. The case study used to verify our findings is the 2010 General Election in the UK. In the recent past, a few papers have been published on this topic [\cite=Lui2010] [\cite=tumasjan2010predicting] [\cite=Gayo-Avello2011] [\cite=Metaxas2011a] [\cite=OConnor2010], offering preliminary solutions or discussing the limitations that several approaches might have; we refer to and discuss them at the final section of this report.

We consider only the three major parties in the UK; namely the Conservative (CON), the Labour (LAB) and the Liberal Democrat Party (LIBDEM or LIB). Overall, we are using three techniques for extracting positive and negative sentiment from tweets and then two different methods to map this sentiment to voting intention percentages.

Ground truth is acquired by YouGov's Published Results and consists of 68 voting intention polls dated from January to May 2010. Polls usually refer to a pair of days (in our data set only 3 of the them are 1-day polls) and indicate an expectation for the voting intention percentage per political party. As we move closer to the election day (6th of May), they become more dense; there is a new poll published every day. Tweets are drawn from the same period of time, i.e. January to May; their total number is greater than 50 million, but not all of them are used as it will become apparent in the following sections. After applying some filtering to keep tweets regarding politics, we end up with 300,000 tweets, i.e. approximately 100,000 tweets per political party.

Extracting positive and negative sentiment from tweets

The common characteristic in all three approaches is that at first we retrieve a set of tweets regarding each political party by using a handmade set of keywords (see Appendix [\ref=Ap:voting_intention]). The keywords are different per party, not many (approx. 60 per party) and as simple as possible; we use the names of the top politicians in each party, the name of the party and so on. The search is case sensitive when the keyword is an 1-gram and case insensitive when it is an n-gram, with n  >  1. In the latter case, we are not looking for an exact match either; we are just searching for tweets that contain all 1-grams of the target n-gram. Character '#' in front of an 1-gram denotes that we are searching for a Twitter topic. Since those keywords are based mainly on names or entities, one could argue that they could also be created in an automatic manner or extracted from a repository and hence, the human involvement could become insignificant.

The three approaches build on each other; each one is a more elaborate version of its precedent. In the first approach, we are using a stemmed version of SentiWordNet 3.0 to extract positive and negative sentiment from tweets without taking into consideration the different parts of speech (verb, noun, adjective and so on). SentiWordNet is the result of automatically annotating all WordNet synsets according to their degrees of positivity, negativity and neutrality [\cite=Baccianella2010] [\cite=Esuli2006a]. Stemming is performed by applying Porter's algorithm [\cite=porter1980] and Part-Of-Speech (POS) tagging is 'skipped' by computing the average positive and negative sentiment weight for each stem over all possible POS that it might appear in. Stems with equal positive and negative sentiment are not considered. The positive and negative sentiment scores of a tweet are retrieved by computing the sum of positive and negative sentiment weights of the words it contains. It is noted that there might exist tweets with no words listed in SentiWordNet - those tweets have zero positive and negative sentiment and therefore are ignored. The acronym SnPOS (Sentiment no POS tagging) is used to denote this approach. The motivation behind the removal of POS tagging is the assumption that Twitter language might not follow the norms of formal scripts and therefore POS taggers - trained on more 'mainstream' types of text - might create inaccurate results. However, as we will see in practice in the following sections, this is not always the case, probably because tweets that refer to politics have a much better structure than the more casual ones.

The second approach is based on the same basic principles as SnPOS, only this time POS tagging is applied. When one stem is mapped to a particular POS more than once (this can happen due to stemming), the average positive and negative sentiment weights are assigned to it. POS tagging of tweets is carried out by using Stanford POS Tagger, which is a Java implementation of the log-linear POS taggers described in [\cite=Toutanova2000] [\cite=Toutanova2003]. By summing over the sentiment weights of a tweet's terms, we retrieve its sentiment score. This method is denoted as SPOS (Sentiment with POS tagging).

Finally, we extend SPOS, by incorporating the core word senses of WordNet [\cite=Miller1995], a semi-automatically compiled list of 5,000 terms. WordNet gives a set of synonyms for each term in this list and we use those synonyms to extend the content of a tweet. That is, if a tweet contains a word listed in WordNet's core terms, the tweet is extended by attaching the synonyms of this word to it. Again, the sentiment score of a tweet is computed by summing over the sentiment weights of its POS tagged terms. This method is identified by the acronym SPOSW (Sentiment with POS tagging and WordNet's core terms). The main motivation behind extending the content of a tweet with synonyms is the fact that the short length of a tweet might reduce expressiveness and therefore, adding more words could enhance its semantic orientation. Furthermore, SentiWordNet does not include all English words and by attaching synonyms, we achieve to compute pseudo-sentiment for a greater number of tweets.

Inferring Voting Intentions

By applying a method from the ones described in the previous section, we retrieve the positive and negative sentiment scores for a set of t tweets, which in turn has been originally extracted by using the set of keywords for a political party. The next task is to turn those scores into a percentage which will represent the voting intention for this particular party. In this section, we describe two methods that address this task.

Optionally, one could first remove tweets with almost equal positive and negative sentiments. The semantic orientation of those tweets is unclear and therefore might not always help. Later on, when we present our experimental findings, for every experimental setting we test, we are also replicating the same experiment by introducing a threshold δ, which removes the top 20,000 (this is equal to approx. 6.67% of the entire number of tweets) most 'semantically unclear' tweets. Learning the optimal value of δ from data is possible, but also dependent to the existence of a larger sample.

For the remaining m  ≤  t tweets we compute their mean positive and negative sentiment scores, say [formula] and [formula] respectively. The sentiment score assigned to this set of tweets is derived by simply subtracting those two quantities

[formula]

Suppose that we have computed the sentiment scores for a set of n time instances (a time instance is equal to one or two days based on the target voting intention poll) for all three parties, [formula], [formula] and [formula]. To calibrate the relation between sentiment scores and voting intention percentages, we regress each one of these vectors with the corresponding ground truth using OLS and compute the three weights [formula], [formula] and [formula]. For example,

[formula]

where [formula] denotes the official voting intention poll percentage for time instance i. We do not introduce bias terms in OLS regression, as during our experimental process it became evident that they receive large values, reducing significantly the freedom of our model and causing overfitting.

In this case study, we are only considering the percentages of the three major parties. After the inference process, the results are normalised in order to represent valid percentages (having a sum equal to 1); in the special (and also rare) case, where inferences are lower than 0, negative results are thresholded to 0 and normalisation does not take place, unless the nonzero percentages sum up to a value greater than 1. Official voting intentions, however, take into consideration the existence of other political 'forces' as well as people's desire not to vote and so on. To create an equivalent and comparable representation, we have normalised the official voting intention percentages as well - based on the fact that the sum of voting intention percentages for the three major parties is on average equal to approx. 90%, this normalisation does not change the picture much (and we can always normalise the results back to a 90% level, if required).

Voting intention inferences are made on unseen data. Again, we have a set of k time instances, which do not overlap with the n time instances used for learning the calibration weights, and we first compute the sentiment scores for each party per time instance. Then, those sentiment scores are multiplied by the corresponding calibration weight; for example the inferred score for the Conservative Party will be equal to:

[formula]

After computing the triplet of inferences, [formula], [formula] and [formula], we normalise them so that their sum is equal to 1, for example:

[formula]

represents the k normalised inferences of the voting intention for the Conservative Party. We denote the method described above as Mean Thresholded Sentiment (MTS).

The second method is identical to MTS, but uses a different function to compute Senti(m) (Equation [\ref=eq:senti_mts]). After retrieving the m tweets that satisfy a threshold δ, we count how many of them have a positive sentiment score that is higher than the negative and vice versa. The overall sentiment score of those tweets is then computed by

[formula]

where [formula] is the number of tweets with a positive sentiment greater than the negative one and [formula] the number of tweets with a negative sentiment greater than the positive. We refer to this method as Dominant Sentiment Class (DSC).

Experimental process and results

We measure the performance of our methods using two loss functions. Primarily, we use the Mean Absolute Error (MAE) (and its standard deviation) between the inferred and the target voting intention percentages. This metric allows for an easier interpretation because it can be read as a percentage, i.e. MAE has the same units as the inferred values. In addition, aiming to assess how good is the ranking of the political parties based on the inferred voting intention percentages, we are measuring a Mean Ranking Error (MRE). For each triplet of voting intention percentages, the ranking error is defined as the sum over all three parties of the distance between the correct and the inferred ranking. For example, if there exists one incorrect ranking of size 1 (where size measures the difference between a correct and an inferred position), then - since we are dealing with 3 variables only - either there exists one more incorrect ranking of size 1 and therefore the triplet's total error is equal to 2, or two more ranking errors of size 1 and 2, which will make the triplet's total error equal to 4. Obviously, a triplet with correct rankings has an error equal to 0 and the maximum error ([formula]) per triplet is equal to 4. MRE ranges in

[formula]

Related work and further discussion of the results

The topic of voting intention or electoral result inference from the content of Twitter is quite new in the scientific literature. Tumasjan et al. have published a paper, which after providing proof that Twitter is a platform where political discussions are indeed conducted, proposes a method for predicting the result of the German elections in 2009 [\cite=tumasjan2010predicting]. Their method uses the Linguistic Inquiry and Word Count (LIWC2007) for semantic analysis [\cite=Pennebaker2007a]; this tool produces a set of 12 dimensions - not just positive or negative sentiment - and therefore Tumasjan et al. introduced an averaging technique to acquire 1-dimensional representations. Their method like ours uses sets of keywords (party and politician names) to select politically oriented tweets and then proposes a model for matching the Twitter traffic per party to the final result of the elections. Another paper [\cite=OConnor2010] presents a different method for tracking voting intention polls based on the ratio of positive versus negative sentiment per tweet; their learning approach has some similarities to ours (it is based on linear regression), but only deals with bivariate problems, i.e. polls with two outcomes. Nevertheless, a paper published after indicated that the methods in [\cite=tumasjan2010predicting] and [\cite=OConnor2010] were problem specific and not very generic, as their application was proven to not do better than chance in predicting the result of the US congressional elections in 2009 [\cite=Gayo-Avello2011]. Another paper showed that the popular tool of Google Trends has a limited capacity in predicting election results [\cite=Lui2010].

Moreover, an interesting paper conducted a further analysis of the aforementioned methodologies and proposed a triplet of necessary standards that any theory aiming to provide a consistent prediction of elections using content from the Social Media should follow [\cite=Metaxas2011a]. The authors recommend that firstly the prediction theory should be formed as a well defined algorithm, secondly the analysis should be aware of the different characteristics arising in the Social Web and thirdly that the method must include experimental justification on why it works.

Based on those propositions, we tried to formalise the steps in our methodology, we provided statistical significance figures for our results and finally by forming the three different schemes (SnPOS, SPOS and SPOSW) for extracting sentiment from tweets, we tried to encounter some of the special characteristics of Twitter's textual stream. Particularly in SPOSW, where we enriched tweets by adding synonymous words in order to enhance their semantic interpretation, we observed a significant improvement on inference performance.

Similarly to the aforementioned works, the first two sentiment extraction methods that we tried (SnPOS and SPOS) showed poor performance and were not statistically significant. On average, modelling sentiment with DCS performed better than MTS. This is quite interesting as - by definition - DCS compresses more information than MTS; one might argue that this compression results in a much clearer signal, i.e. removes some noisy observations, especially when applied on extended tweets. The contribution of thresholding in our experiments is ambiguous; sometimes it improves the inference performance and in most occasions reduces the MRE. As we mentioned in the beginning, the optimal value as well as the contribution of thresholding could be investigated further.

We remind the reader that in this report the presented methods for modelling voting intention polls are preliminary. Several aspects are a matter of future research. Primarily, our methods should be applied to other data sets as well, to come up with experimental proof about their capability to generalise. Another important factor is the choice of keywords that are used to select tweets relevant to the task at hand. We argued that those keywords can be selected from topic-related repositories; still, the influence of each keyword should be modelled. Ideally, an automatic mechanism or algorithm should be compiled in order not only to select an optimal subset of keywords, but also to quantify the contribution of each term. Moreover, possible biases introduced by the use of different sentiment analysis tools should also be considered; tools that incorporate special emotional expressions used in instant messaging and Twitter such as ';-)' or ':D' might achieve a better performance.

A general conclusion that could be extracted or reconfirmed from the presented work is that Social Media do encapsulate content related to political opinion; extending tweets with synonymous terms probably assists in the amplification of this signal. However, it is very important to contemplate that the validity of voting intention polls is questionable. Are those polls a good representation of what is actually happening? Usually, polls from different agencies tend to have significant differences in their percentages and quite often those differences exceed, for example, the lowest total MAE derived in our experimental process (3.49%). Therefore, the formation of a consistently good ground truth is another issue that approaches like this one must resolve.

Acknowledgements

Vasileios Lampos is partially supported by EPSRC (DTA/SB1826). Lampos would like to thank Nick Fyson for his significant help in shaping the lists with the most influential politicians (or keywords) per political party. He is also grateful to Prof. Nello Cristianini for providing some useful feedback on this preliminary work.

Appendix: Search Terms

Terms used to select tweets related to the major political parties in the UK. Character '_' denotes that an empty space and '#' denotes a Twitter topic. Tables [\ref=table_conservatives], [\ref=table_labour] and [\ref=table_libdem] hold the terms for the Conservative (52 terms), Labour (57 terms) and Liberal Democrat party (62 terms) respectively.