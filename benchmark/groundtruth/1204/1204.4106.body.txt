Coalescing Random Walks and Voting on Connected Graphs

Partially supported by the Royal Society International Joint Project grant JP090592 "Random Walks, Interacting Particles and Faster Network Exploration," and the EPSRC grant EP/J006300/1 "Random walks on computer networks." A Preliminary version of the results in this paper was presented in the Proceedings of PODC 2012 [\cite=CEOR-PODC2012].

Robert Elsässer

Hirotaka Ono

Tomasz Radzik

Introduction

In a coalescing random walk, a set of particles make independent discrete-time random walks in an undirected connected graph. Whenever two or more particles meet at a vertex, then they unite to form a single particle which then continues to make a random walk through the graph.

Let G = (V,E) be an undirected connected graph with n vertices and m edges. The coalescence time, C(n), is the expected time for all particles to coalesce, when initially one particle is located at each vertex. We study the problem of bounding the coalescence time for general connected graphs.

In order to bound C(n), we study the coalescence time of a system of k particles for any 2  ≤  k  ≤  n. The expected time for the k particles to coalesce to a single particle depends on their initial positions. Let Ck(i1,...,ik), be the coalescence time when the particles start from distinct vertices i1,...,ik. The worst case expected coalescence time for k particles is

[formula]

In the special case of two particles, C(2) is more naturally referred to as the (worst case expected) meeting time of two random walks.

A system of n coalescing particles where initially one particle is located at each vertex, corresponds to another classical problem, the voter model, which is defined as follows. Initially each vertex has a distinct opinion, and at each step each vertex changes its opinion to that of a random neighbour.

Let Cv be the number of steps for voting to be completed, i.e., for a unique opinion to emerge. The expected completion time of voting, [formula], is called the voting time. The random variable Cv has the same distribution, and hence the same expected value, as the coalescence time Cn of n coalescing particles, where one particle is initially located at each vertex, (see [\cite=AlFi]). Thus [formula], and any bound on coalescence time C(n) applies equally to the voting time E(Cv). As the coalescence time is easier to estimate, we focus on this quantity henceforth.

The coalescing random walk is the key ingredient in the self-stabilizing mutual exclusion algorithm of Israeli and Jalfon [\cite=IJ]. Initially each vertex emits a token which makes a random walk on G. On meeting at a vertex, tokens coalesce. Provided the graph is connected, and not bipartite, eventually only one token will remain, and the vertex with the token has exclusive access to some resource. The token makes a random walk on G, so in the long run it will visit all vertices of G in proportion to their stationary distribution.

Previous work on coalescing random walks.

We summarize some known results for coalescing random walks. There are two distinct models for the transition times of random walks on finite graphs. In the discrete-time model, all walks make transitions synchronously at steps t = 1,2,... In the continuous-time model, each walk W, waits for a random time tW independently of other walks, and then makes a transition. The wait time tW is an independent exponential random variable with rate 1.

Let Hu,v denote the hitting time of vertex v starting from vertex u, that is, the random variable which gives the time taken for a random walk starting from vertex u to reach vertex v; and let [formula]. Aldous [\cite=Aldous-MeetingTimes] considers C(2), the meeting time of two random walks, in the continuous-time model, and shows that

[formula]

where Δ is the maximum degree of G. These upper and lower bounds can be far apart, e.g. for a star graph (with loops), C(2) = Θ(1) whereas Hmax  =  Θ(n).

The O(Hmax) bound on C(2) implies that C(n)  =  O(Hmax log n), since the number of particles halves in O(Hmax) time. Aldous [\cite=Aldous-MeetingTimes] conjectured that C(n) is actually O(Hmax). Earlier results by Cox [\cite=Cox-1989] for the continuous-time model, imply C(n)  =  O(Hmax) for constant dimension tori and grids.

For regular graphs, in the continuous-time model, Aldous and Fill [\cite=AlFi] show that, C(n) ≤   e( log n + 2)Hmax, that C(n) ≤   rn2 / (4s) for r-regular s-edge connected graphs, and C(n)  ~  n for complete graphs. Cooper et al. [\cite=CFR] confirmed the conjecture C(n) = O(Hmax) holds for discrete-time random walks on random regular graphs. This follows from their result that for r-regular random graphs C(n)  ~  2((r - 1) / (r - 2))n, with high probability. We use the notation with high probability (whp), to mean with probability tending to 1 as n  →    ∞  . The notation f(n)  ~  g(n) means that f(n)  =  (1  ±  o(1))g(n).

Simple bounds on Hmax can be obtained from the commute time between any pair of vertices (see e.g. Corollary 3.3 of Lovasz [\cite=Lo]). For a graph G with n vertices, m edges and minimum degree δ(G), we have

[formula]

As δ(G)  ≤  d the average degree, it follows that Hmax  ≥  n / 4 for any graph. An upper bound, for connected graphs, of Hmax  ≤  4m / (1 - λ2) follows from δ(G)  ≥  1.

General results for coalescing walks on graphs

In this article, we study the problem of bounding the coalescence time C(n) of any connected graph. We assume that the graphs G we consider are not bipartite, or that if G is bipartite, then the random walks are lazy and pause with probability 1 / 2 at each step. Equivalently, for the voting process, we assume that vertices may choose their own opinion with this probability.

Our main result, stated formally below, is given in terms of the second eigenvalue of the transition matrix of the random walk, λ2, and a parameter ν is defined as

[formula]

Here d(v) is the degree of vertex v, and d = 2m / n is the average degree. The parameter ν measures the variability of the degree sequence, and ranges from 1 for regular graphs to Θ(n) for a star graph. We prove the following general theorem.

Let G be a connected graph with n vertices, m edges, and let [formula]. Let C(n) be the expected coalescence time for a system of n particles making a lazy random walk on G, where originally one particle starts at each vertex. Then

[formula]

By the equivalence between coalescence and voting, the expected time [formula] to complete voting on G has the same upper bound as C(n).

Although Theorem [\ref=Coalesce-expan] is a general statement of our results, the bound [\eqref=Ekval] can be improved in extremal cases. It is established in [\eqref=altCn] of Section [\ref=mainprf] that

[formula]

This bound is better than ([\ref=Ekval]), if Δ  =  ω(m /  log n). For example, ([\ref=ren2341]) gives C(n) = O( log 2n) for a star, whereas the correct value is C(n) = Θ( log n) (since a star is a bipartite graph, we consider the lazy walk).

As 1 - λ2  ≥  1 / 2n2 for any connected graph (see e.g. Sinclair [\cite=Sinclair]) our bound shows that coalescence is completed in O(n3) expected time on any connected n vertex graph. Hassin and Peleg [\cite=HassinPeleg-InfComp2001] showed that voting (hence also coalescence) is completed in expected O(n3 log n) time on any connected graph. Our bound parameterized by the eigenvalue gap can be viewed as refinement of this bound. An example of a graph with coalescence time Θ(n3) is given by two cliques of size n / 4 joined by a path of length n / 2.

The parameter ν is related to the second moment of the degree distribution and measures the variability of the degree sequence. If Δ is the maximum degree of G, then 1  ≤  ν  ≤  Δ / d  ≤  n. For near regular graphs, when the ratio of the largest to the smallest vertex degree is bounded by a constant, we have ν  ≤  Δ / d  =  O(1), so the bound [\eqref=Ekval] becomes

[formula]

In particular, if G is an expander in the classic sense that it is regular and its eigenvalue gap (1 - λ2) is constant, then C(n) = O(n).

In parallel with our work, Oliveira [\cite=Oliveira-2012] recently proved the conjecture C(n) = O(Hmax) for continuous-time random walks. The result of Oliveira implies an analogous linear bound C(n) = O(n) for continuous-time random walks on expanders.

We note that the bound [\eqref=Ekval] is qualitatively different from O(Hmax), as the graph structure is made explicit through the parameter ν. As Hmax  =  Ω(n) for any graph, the value of [\eqref=Ekval] can improve on C(n) = O(Hmax). This can occur for example if ν  =  ω(1), but also when ν  =  Θ(1), since there are graphs with Hmax  =  ω(n / (1 - λ2)). Some examples follow.

For graphs with a power law (heavy tailed) degree distribution, Theorem [\ref=Coalesce-expan] can give sublinear bounds on the coalescence and voting times as the following example shows. Mihail et al. [\cite=Mihail-etal-2003] prove that for 2  <  α  <  3, the random Θ(n)-vertex graph with ⌈n / dα⌉ vertices of degree d, for [formula], has an Ω( log - 2n) eigenvalue gap. For this class of power law graphs, [formula], so Theorem [\ref=Coalesce-expan] implies a sublinear O(n(α - 1) / 2 log 2n) voting time, whereas for any graph, Hmax  =  Ω(n).

There are also examples of graphs with ν  =  Θ(1) for which our bound is asymptotically better than O(Hmax). Consider the graph consisting of ( log n)-degree expander (1 - λ2  ≤  c  <  1) with an additional vertex attached to one of the vertices of the expander. For this graph ν  =  Θ(1) and 1 - λ2 is a positive constant, so C(n)  =  O(n), but Hmax  =  Θ(n log n).

The proof of Theorem [\ref=Coalesce-expan] is based on the following theorem bounding the time to first meeting between any of k particles.

Let k* be given by [\eqref=kstar], and ν given by ([\ref=nu-definition]). For 2  ≤  k  ≤  k* particles starting from arbitrary vertices in G, let Mk be the time to first meeting. Then

[formula]

Theorem [\ref=General] is proven in Sections [\ref=visit]-[\ref=rets] and Theorem [\ref=Coalesce-expan] is proven in Section [\ref=mainprf].

Random Walk Properties

Let G = (V,E) denote a connected undirected graph, |V| = n, |E| = m, and let d(v) be the degree of a vertex v. A simple random walk Wu,  u∈V, on graph G is a Markov chain modeled by a particle moving from vertex to vertex according to the following rule. The probability of transition from vertex v to vertex w is equal to 1 / d(v), if w is a neighbour of v, and 0 otherwise. The walk Wu starts from vertex u at t = 0. Denote by Wu(t) the vertex reached at step t; Wu(0) = u.

We assume the random walk Wu on G is ergodic with stationary distribution π, where πv = d(v) / (2m). If this is not the case, e.g. G is bipartite, then the walk can be made ergodic, by making it lazy. A random walk is lazy, if it moves from v to one of its neighbours w with probability 1 / (2d(v)), and stays where it is (at vertex v) with probability 1 / 2.

Let P = P(G) be the matrix of transition probabilities of the walk and let Ptu(v) = (Wu(t) = v). Let the eigenvalues of P(G) be [formula], as we assume G is connected and is not bipartite, or the random walk is lazy. Let λ  =   max (λ2,|λn|)  <  1. The rate of convergence of the walk is given by

[formula]

see for example, Lovasz [\cite=Lo]. We assume henceforth that λ  =  λ2. If not, the standard way to ensure that λ  =  λ2  =  λ2(G), is to make the chain lazy.

We use the following definition of mixing time TG, for a graph G. For all vertices u and x in G and any t  ≥  TG,

[formula]

For convenience we assume that TG  =  Ω( log n), even if this is not necessary.

Let [formula] denote the expected hitting time of a vertex w from the stationary distribution π. The quantity [formula] can be expressed as (see e.g. [\cite=AlFi], Chapter 2)

[formula]

where

[formula]

Let Av(t;u) denote the event that Wu does not visit vertex v in steps 0,...,t. The following lemma gives a bound on the probability of this event in terms of [formula] and the mixing time of the walk.

Let T  =  TG be a mixing time of a random walk Wu on G satisfying [\eqref=mixing]. Then

[formula]

Proof. Let [formula] be the distribution of Wu on G after T steps. Then [\eqref=mixing] and the fact that πx  ≥  1 / n2 for any connected graph imply

[formula]

Let Hv(ρ) be the time to hit v starting from ρ, and let [formula]. Then, noting that [formula],

[formula]

By restarting the process Wu at Wu(0) = u, Wu(τ), Wu(2τ), [formula], we obtain

[formula]

[formula]

Multiple random walks

We consider the coalescence of k  ≥  2 independent random walks on a graph G = (VG,EG). To do this we replace the k walks by a single walk as follows.

Let graph Q  =  Qk = (VQ,EQ) have vertex set VQ = Vk. Thus a vertex v of Qk is a k-tuple v = (v1,v2,...,vk) of vertices vi∈VG,i = 1,...,k, with repeats allowed. Two vertices v,w∈VQ are adjacent if {v1,w1},...,{vk,wk} are edges of G. There is a direct equivalence between k random walks Wui(t) on G with starting positions ui and a single random walk Wu(t) on Qk with starting position u = (u1,u2,...,uk).

For any starting positions u = (u1,...,uk) of the walks, let Mk(u) be the time until the first meeting in G. Let Sk  ⊆  V(Qk), the diagonal set of vertices, be defined by

[formula]

If the random walk on Qk visits this set, two particles occupy the same vertex in the underlying graph G and a (coalescing) meeting occurs.

Since visits to a set by a random walk is not a readily manipulated quantity, an easier approach is to contract Sk to a single vertex γ  =  γk  =  γ(Sk), thus replacing Qk by a graph Γ  =  Γk. On contraction, all edges, including loops, are retained. Thus dΓ(γ) = dQ(S), where dF denotes vertex degree in graph F, and the degree dF(X) of a set X is the sum of the degrees of the vertices in X. Moreover Γ and Q have the same total degree, and the degree of any vertex of Γ other than γ is the same as in graph Q. Let π and π̂ be the stationary distributions of a random walk on Q and Γ, respectively. If [formula] then π̂v  =  πv, and [formula].

It follows that, if [formula] is a mixing time satisfying [\eqref=mixing] in Γ, then

[formula]

where [formula] is the hitting time of γk in Γ from stationarity.

Since we have replaced k individual walks on G by a single walk on Qk, and then on Γ, we need to relate mixing times on TQ and TΓ directly to a given mixing time TG of a single random walk on the underlying graph G. (We will need TΓ to apply Lemma [\ref=crude] to graph Γ.)

For random walks in graphs G, Q and Γ, there are mixing times

[formula]

such that

[formula]

where F is any of the graphs G, Q or Γ, and nF  =  |VF|.

Proof. The bound on TG is well known (see for example, Sinclair [\cite=Sinclair]): use [\eqref=mix], observing that πx  /  πu  =  O(n) and λ1 / (1 - λ2)2 has a constant c  <  1 upper bound. To use [\eqref=mix] also to derive bounds on TQ and [formula], we need to know the eigenvalues of Qk and Γ in terms of the eigenvalues of G. We have λ2(Γ)  ≤  λ2(Qk) and λ2(Qk)  =  λ2(G). This follows from established results, as we next explain.

In the jargon of Markov processes, the random walk on Qk is known as the tensor product chain, and its eigenvalues are the k-wise products of the eigenvalues of G. Thus, assuming λ2(G)  ≥  λn(G), it follows that λ2(Qk) = λ2(G). See [\cite=LPW] page 168 for more details.

In the notation of [\cite=AlFi], the random walk on Γ is the random walk on Qk with S collapsed to γ(S). It is proved in [\cite=AlFi], Corollary 27, that if a subset A of vertices is collapsed to a single vertex, then the second eigenvalue of the transition matrix cannot increase (in that corollary the variable τ2 = 1 / (1 - λ2)). Thus λ2(Q)  ≥  λ2(Γ).

We get the factor k in the bounds [\eqref=mixtimeQGamma] on the mixing times TQ and [formula], because πx  /  πu  =  O(n2k) and we need |PTu(x) - πx|  =  o(1 / n2k), as the number of vertices in graphs Q and Γ is O(nk). [formula]

For reference, we record the salient facts for the graphs G,Q,Γ in Table [\ref=table]. The bound on [formula] will be established in Lemma [\ref=dgamma].

Hitting time from stationarity -   Proof of Theorem 2

The proof of Theorem [\ref=General] is based on Inequality ([\ref=EMk]) and on a good upper bound on the expected hitting time of vertex γ by a random walk in Γ which starts from the stationary distribution. We obtain such a bound using [\eqref=pi-hit] by deriving an upper bound on Zγγ (Lemma [\ref=Eval-gap]) and a lower bound on the stationary probability [formula] (Lemma [\ref=dgamma]).

Let F be a graph with the eigenvalue gap 1 - λ2, then

[formula]

In particular, for any vertex v of G, Q or Γ, Zvv  ≤  1 / (1 - λ2(G)).

Proof. Let λ2  =  λ2(F). Using [\eqref=mix] with x = u = v gives

[formula]

and thus

[formula]

The proof of Lemma [\ref=T-value] establishes that (1 - λ2(Γ))  ≥  1 - λ2(Q)  =  1 - λ2(G). [formula]

Let G be a connected graph with n vertices and m edges. Let

[formula]

where [formula]. Let k be integer, 2  ≤  k  ≤  k*. Let γ  =  γk in Γ be the contraction of S  =  Sk in Q. Then

[formula]

Proof. By definition, d(γ) = d(S). If k  =  2, then,

[formula]

If 3  ≤  k  ≤  k*, for 1  ≤  x  <  y  ≤  k, define the following subsets of S:

[formula]

We have

[formula]

and

[formula]

For {x,y}  ≠  {p,q}, [formula] equals to

[formula]

Therefore, from the inclusion-exclusion principle,

[formula]

The factor 3 in [\eqref=why3] occurs as the number of ways to partition 4 objects into disjoint sets of size 2, and partition 3 objects into sets of size 2 with single intersection, respectively. The bound [\eqref=degreebound] follows from [\eqref=lbFordS], by noting the upper bound on k in [\eqref=kstar]. [formula]

Proof of Theorem [\ref=General]. Let Mk be the time of the first meeting among k  ≤  k* particles in G, and let γ  =  γk be the contraction of the diagonal set S = Sk. Using [\eqref=pi-hit] for graph Γ and with v  =  γ, and Lemmas [\ref=Eval-gap] and [\ref=dgamma] we have, that the hitting time Hγ of γ from stationarity has expected value

[formula]

Since TΓ  =  O(kTG), and referring to [\eqref=EMk] and Table [\ref=table],

[formula]

[formula]

Let Ck be the time for k  ≤  k* particles to coalesce. Then, using [\eqref=EMK], we get

[formula]

For use in the proof of Theorem 1, we state an upper bound on Ck, From [\eqref=CkMs], since [formula] is constant

[formula]

Coalescence Time: Proof of Theorem 1

We consider the case of n coalescing particles, where each particle is initially located at a distinct vertex of the graph. The purpose of this section is to show that for any connected graph

[formula]

To establish this result we first prove that whp there cannot be a subset of k = k* particles which has not had a meeting by time t*, where

[formula]

and Γ  =  Γk* and γ  =  γk*. The value of k* given in [\eqref=kstar]. An upper bound on the expected time [formula] for k  ≤  k* particles to coalesce is given in [\eqref=expecCk] above, and we can deal with that part separately.

Let P(k)  =  P(k,v) be the set of particles starting from vertices v = (v1,...,vk). Either there has been a meeting during the mixing time TΓ, or if not, we apply Lemma [\ref=crude] to graph Γk, vertex γk, and t  =  t*. The probability that the particles do not meet by time t is the same as the probability that the random walk in Γk starting from v does not visit γk by time t. Therefore, Lemma [\ref=crude] implies that

[formula]

Thus the probability that there is a subset of k* particles which do not have a meeting within t* steps is at most

[formula]

This implies that the expected number of steps until fewer than k* particles remain is at most [formula]. Therefore, using [formula], the bound on [formula] given in ([\ref=expc-1st-meet]), and the bound on [formula] given in ([\ref=expecCk]), we get,

[formula]

The last bound above is obvious if k*  =   log n. If k*  <   log n, then the last bound holds because the second term in the sum in ([\ref=ghsw]) is O( log 3n). Indeed, if k*  <   log n, then from the definition of k*, either [formula] or [formula]. If the former, then the second term in the sum in ([\ref=ghsw]) is clearly O( log 3n). Observe that

[formula]

Thus if [formula], then n / ν  =  O( log 2n), and the second term in the sum in ([\ref=ghsw]) is again O( log 3n).

We conclude by noting that since [formula] and ([\ref=njjnfv674]), then ([\ref=ghsw]) implies

[formula]

The above bound is better than ([\ref=Ekval2]), if Δ  =  ω(m /  log n).