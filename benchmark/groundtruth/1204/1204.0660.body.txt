Corollary Lemma Problem Proposition Conjecture

Hardness of Approximation for Crossing Number

This work has been partially financed by the Slovenian Research Agency, program P1-0297, project J1-4106, and within the EUROCORES Programme EUROGIGA (project GReGAS) of the European Science Foundation. Research partially carried out during the BIRS Workshop Crossing Numbers Turn Useful, 2011.

Introduction

A drawing of a graph G is a mapping D associating a point [formula] to each vertex v∈V(G) and a simple, polygonal path D(e) to each edge e∈E(G) with the following properties:

for any two distinct vertices u,v∈V(G), [formula];

for every edge uv∈E(G), the endpoints of the path D(uv) are D(u) and D(v);

for every edge e∈E(G) and every vertex u∈V(G), the (relative) interior of the path D(e) is disjoint from D(u).

A crossing in a drawing D of a graph G is a pair ({e,e'},p), where e and e' are distinct edges of G and [formula] is a point that belongs to the interior of the paths D(e) and D(e'). The number of crossings of a drawing D is denoted by [formula] and is called the crossing number of the drawing. The crossing number [formula] of a graph G is the minimum [formula] taken over all drawings D of G. A drawing without crossings is an embedding.

Garey and Johnson [\cite=GJ] showed that the following optimization problem is NP-hard.

CrossingNumber. Instance: A graph G. Feasible solutions: Drawings of G. Measure: Crossing number of the drawing. Goal: Minimization.

This result has been extended in several directions. Hlinný [\cite=Hli] proved that the problem remains NP-hard for cubic graphs (3-regular graphs). This was reproved using crossing numbers with rotation systems by Pelsmajer et al. [\cite=PSS]. In a recent paper with Mohar [\cite=cm-socg-2010] we have shown that computing the crossing number for near-planar graphs is NP-hard. A graph is near-planar if it is obtained from a planar graph by adding one edge.

None of the these proofs implies inapproximability of CrossingNumber under the assumption that P[formula]NP. However, under stronger assumptions, inapproximability can be obtained from known results. More precisely, the NP-hardness proof of Garey and Johnson [\cite=GJ] is from LinearArrangement and it implies that any inapproximability result for LinearArrangement carries into an inapproximability result for CrossingNumber. Ambühl et al. [\cite=AMS] have recently shown that there is no polynomial-time approximation scheme (PTAS) for LinearArrangement, unless NP-complete problems can be solved in randomized subexponential time. (The precise assumption is that Satisfiability cannot be solved in probabilistic time 2nε for any constant ε > 0.) This directly implies that there is no PTAS for CrossingNumber, unless NP-complete problems can be solved in randomized subexponential time. Although the NP-hardness proofs for cubic graphs by Hlinný [\cite=Hli] and Pelsmajer et al. [\cite=PSS] also use reductions from LinearArrangement, they do not imply any inapproximability because the value of the optimal linear arrangement is a lower-order term in the crossing number of the graphs constructed in the reduction.

In this paper we show that, if P[formula]NP, there is some constant c0 > 1 such that there is no c0-approximation for CrossingNumber. The result holds also for cubic graphs. Therefore, we strength the result mentioned in the previous paragraph by weakening the hypothesis. Moreover, our reduction also implies inapproximability for cubic graphs, which was not known before under any assumption. We also provide a conceptually new proof of NP-hardness because we reduce from MultiwayCut. As noted by Hlinný [\cite=Hli], for cubic graphs the minor crossing number is equal to the crossing number. Thus, we also obtain inapproximability results for the minor crossing number.

On the positive side, the best approximation algorithm for CrossingNumber, by Chuzhoy [\cite=chuzhoy], has an approximation factor of [formula] for graphs with n vertices and maximum degree Δ. It is worth noting that computing the crossing number is fixed-parameter tractable with respect to the crossing number itself [\cite=G] [\cite=KR]. Research on crossing number has been very active. Vrt'o [\cite=Vrto] lists over 600 references.

Preliminaries

Edge weights.

Our construction will be easier to describe if we work with weighted edges. The weights will always be positive integers. Assume that G is an edge-weighted graph where the weight of each edge e is denoted by [formula]. The intuition is that we tells how many parallel edges are represented by e. The crossing number of a drawing for such edge-weighted graph is defined by taking the sum of we  ·  we', over all crossings ({e,e'},p) of the drawing. Again, the crossing number of such edge-weighted graph is defined as the minimum of the crossing numbers over all drawings.

Let G be an edge-weighted graph. We can construct an unweighted graph φ(G) from G by replacing each edge uv∈E(G) with a family Puv of we parallel paths of length 2 that connect u to v. It is easy to see that [formula]. Indeed, any drawing DG of G gives rise to a drawing Dφ(G) of φ(G) with [formula] by drawing each family Pe within a small neighborhood of DG(e). On the other hand, any drawing Dφ(G) of φ(G) can be used to construct a drawing DG of G with [formula] by drawing each edge e∈E(G) along the path of Pe that participates in fewer crossings.

When the weights [formula], e∈E(G), are all bounded by a polynomial in |V(G)|, then the graph φ(G) can be constructed from G in polynomial time.

Rotation systems.

A rotation system in a graph G is a list π = (πv)v∈V(G), where each πv is a cyclic ordering of the edges of G incident to v. A drawing D of a graph G agrees with the rotation system π if, for each vertex v∈V(G), the clockwise ordering around D(v) of the drawings of the edges incident to v is the same as the cyclic ordering πv. For a graph G and a rotation system π in G, we define [formula] as the minimum of the crossing numbers over all drawings of G that agree with π. This concept can easily be extended to edge-weighted graphs.

If G is an edge-weighted graph and π is a rotation system in G, we can define a rotation system φπ(G,π) in φ(G): for each edge uv∈E(G), we replace in πu the edge uv by the edges of Puv incident to u in such a way that the cyclic ordering of the paths in Puv are opposite at u and v. This implies that the paths of Puv can be drawn without crossings among themselves. The same argument that was used above shows that [formula]. The rotation φπ(G,π) can be computed in polynomial time provided that the edge-weights of G are bounded by a polynomial in |V(G)|.

A combinatorial embedding of a graph G is a rotation system π such that some embedding D of G agrees with π. Whitney's theorem states that a 3-connected, planar graph has a unique combinatorial embedding [\cite=Diestel].

Consider any graph G and any rotation system π in G. In an optimal drawing of G that agrees with π, each pair of edges participates in at most one crossing. Indeed, if the edges e and e' would participate in two crossings ({e,e'},p) and ({e,e'},p'), we could obtain another drawing with fewer crossings: we exchange the portions of D(e) and D(e') between p and p' and then perturb the drawing around p and p' slightly to avoid the intersection. In particular, for any rotation system π of the complete graph Kt we have [formula].

Multiway cut.

Our reduction will be from the following optimization problem about connectivity:

MultiwayCut. Instance: A pair (G,T) where G is a connected graph and T  ⊂  V(G). Feasible solutions: Sets of edges F  ⊆  E(G) such that, for each distinct t,t'∈T, there is no path in G - F connecting t to t'. Measure: Cardinality of F. Goal: Minimization.

The set T is the set of terminals. Dahlhaus et al. [\cite=djpsy-94] proved that MultiwayCut is MAX SNP-hard even when restricted to instances with 3 terminals. This implies that there is a constant cM > 1 such that there is no cM-approximation algorithm for MultiwayCut with 3 terminals, unless P[formula]NP. (In particular the problem is APX-hard for 3 terminals; see [\cite=aetal-book].) We will only use instances (G,T) of MultiwayCut with |T| = 3. We denote by [formula] the size of an optimal solution for (G,T).

Notation.

We use =  {1,2,3} and, for the rest of the paper, the indices depending on i are always taken modulo 3.

From Multiway Cut to Crossing Number

Let A be the graph defined by

[formula]

The graph A is shown in Figure [\ref=fig:graphD], where it is clear that A is planar. Furthermore, it is a subdivision of a 3-connected graph, and thus it has a unique combinatorial embedding.

Consider any instance (G,T) to MultiwayCut with |T| = 3. We will use n = |V(G)| and n2 as a rough upper bound to |E(G)|. We construct an edge-weighted graph H = H(G,T) as follows:

Construct A and assign weight n5 to its edges.

Construct the graph [formula], where the edges of G have weight 1.

We identify each vertex of T with a distinct vertex xi of A. That is, if T = {t1,t2,t3}, then, for each i∈[3], identify xi and ti.

This finishes the construction of H. See Figure [\ref=fig:graphH] for an example. Let π be any rotation system for H such that:

the restriction of π to A is the unique combinatorial embedding of A.

for each i∈[3], the edges xiai - 1 and xiai + 1 are consecutive in the cyclic ordering πxi. That is, any edge of H - E(A) incident to xi is between xiai + 1 and xiai - 1 in the rotation system πxi.

In the next two lemmata we obtain bounds relating [formula] and [formula] to [formula]. Our bounds are not tight, but this does not affect our eventual results.

We have

[formula]

Let F be an optimal solution to MultiwayCut for (G,T). Thus we have [formula]. For each i∈[3], let Gi be the connected component of G - F that contains xi. By the optimality of F, we have [formula]. Indeed, if there would be another connected component, any edge of F connecting that component to any other connected component could be removed from F and obtain a better solution.

We construct a drawing D of H as follows. Firstly, take an embedding A without any crossings; such embedding is shown in Figure [\ref=fig:graphD]. Then, for each i∈[3], draw the component of Gi inside the region limited by xiai - 1a4ai + 1xi respecting the rotation system π and with the minimum number of crossings. Finally, draw each edge of F optimally in the current drawing. In such drawing, an edge connecting Gi to Gj will be drawn crossing the edge a4ak, where [formula]. See Figure [\ref=fig:sketch] for a sketch. Let D be the resulting drawing.

We now bound the number of crossings in the drawing D. The restriction D(A) has no crossings by construction. For each i∈[3], the restriction D(Gi) has at most |V(Gi)|4 crossings because, as mentioned in Section [\ref=sec:prelim], for any rotation system π' of the complete graph Kt we have [formula]. Each single edge of F can be drawn with n5 + 2n2 crossings. Indeed, if vivj∈F connects Gi to Gj and we denote by k the element of [formula], there is an arc from vi to any point on D(a4ak) that crosses at most |E(Gi)| + |F| edges, and there is an arc connecting any point in D(a4ak) to vj with at most |E(Gj)| + |F| crossings. The described drawing of vivj has, using a very rough estimate,

[formula]

crossings. We conclude that

[formula]

The following result is independent of rotation systems.

From any drawing D of H we can obtain in polynomial time a feasible solution F to MultiwayCut(G,T) such that [formula]. In particular,

[formula]

Consider any drawing D of H. If [formula] is larger than n7, we can just take F = E(G) because it satisfies [formula]. If [formula] is smaller than n7, we proceed as follows. The restriction of D to A is an embedding because each edge of A has weight n5. For each i∈[3], let Ci denote the cycle a4ai - 1bi - 1bi + 1ai + 1a4. In the embedding D(A) the cycle Ci separates xi = ti from xj = tj, whenever [formula].

Define the set of edges

[formula]

Note that F can be computed in polynomial time from D. Since each edge of F crosses (at least once) some edge of A, we have

[formula]

Furthermore, F is a feasible solution to MultiwayCut for (G,T) because, for each path P in G that connects ti to tj, [formula], the drawing D(P) has to cross the cycle D(Ci) and thus P has an edge in F.

The bound [formula] is obtained by considering an optimal drawing D* of H. Such drawing D* gives a feasible solution F that satisfies

[formula]

The result follows.

We next explain how to construct a cubic graph H̃  =  H̃(G,T) such that

[formula]

The idea is a straightforward adaptation of the technique used by Pelsmajer et al. [\cite=PSS]; we include the details for the sake of completeness.

In a first step, we construct the unweighted graph H' = φ(H) and the rotation system π' = φπ(H(G,T),π) in H', as described in Section [\ref=sec:prelim]. It holds that [formula] and [formula].

In a second step, we replace each vertex v∈H' by a cubic grid Cv of width deg H'(v) and height 4n7; see Figure [\ref=fig:grid]. (The cubic grid of width d and height h is obtained from a regular, rectangular grid of width 2d and height h where the vertical edge connecting (i,j) to (i,j + 1) is removed whenever i + j is odd.) If [formula] are the edges incident to v in H' ordered as in the cyclic ordering π'v, then we attach the edges [formula] to the degree-two consecutive vertices of the cubic grid Cv that are on the higher row. Finally, we make the graph cubic by removing vertices of degree 1 and contracting some edges incident to vertices of degree 2. This finishes the construction of H̃  =  H̃(G,T). Note that the construction of H̃ can be made in polynomial time because the weight of each edge of H is bounded by n5.

We have

[formula]

Furthermore, from any drawing [formula] of H̃ we can obtain in polynomial time a feasible solution F to MultiwayCut(G,T) such that [formula].

It is clear that any drawing D' of H' with rotation system π' can be converted into a drawing of H̃ by a local replacement around D'(v), for each v∈V(H'), without introducing additional crossings. Therefore

[formula]

because of Lemma [\ref=le:cro<].

To see the other inequality, consider an optimal drawing [formula] of H̃. The first part of the proof implies that [formula]. Therefore in each cubic grid Cv, v∈V(H'), there is at least one horizontal row, let's call it Rv, that does not participate in any crossing of [formula]. For each vertex v∈V(H'), there are deg H'(v) vertex-disjoint paths Pvi in Cv, [formula], connecting the endvertex of evi to a vertex of Rv. We contract the row Rv to a point and remove from the drawing all the edges of Cv, but those participating in the paths [formula]. Repeating this for each vertex v∈V(H') we obtain a drawing D' of a subdivision of H' with at most [formula] crossings. This implies that [formula]. By Lemma [\ref=le:cro>] it follows that

[formula]

To obtain from a drawing [formula] of H̃ a feasible solution F with [formula], we proceed as follows. If [formula], we just return F = E(G). Otherwise we construct the drawing D' of H' from [formula], as described above. As discussed in Section [\ref=sec:prelim], from the drawing D' of H' = φ(H) we can obtain a drawing D of H with [formula]. Finally, from the drawing D of H we can use Lemma [\ref=le:cro>] to extract a feasible solution F to MultiwayCut(G,T) such that

[formula]

Since all the steps can be carried out in polynomial time, the result follows.

There is a constant c0 > 1 such that, if [formula]NP, there is no c0-approximation algorithm for CrossingNumber, even when restricted to cubic graphs.

Let cM > 1 be a constant such that it is NP-hard to compute a cM-approximation to MultiwayCut when |T| = 3. (See the discussion in Section [\ref=sec:prelim].) Take c0 = cM  -  ε for an arbitrary constant ε with 0 < ε < cM - 1. We will see that it is NP-hard finding a c0-approximation to CrossingNumber in cubic graphs.

Assume, for the sake of contradiction, that there is an c0-approximation algorithm for CrossingNumber in cubic graphs. We can then obtain a cM-approximation to MultiwayCut(G,T) in polynomial time, as follows. Let n = |V(G)|. If n is smaller than 3c0  /  ε, which is a constant, we run any brute force algorithm. Otherwise, we construct in polynomial time the cubic graph H̃  =  H̃(G,T), as described above, use the c0-approximation algorithm to compute a drawing [formula] of H̃ with [formula], use Lemma [\ref=le:tilde] to find a feasible solution F to MultiwayCut(G,T), and return F. We next argue that this algorithm is a cM-approximation algorithm for MultiwayCut.

Because of Lemma [\ref=le:tilde], F is a feasible solution with [formula]. On the other hand, [formula] because D is a c0-approximation to [formula]. Using Lemma [\ref=le:tilde] we obtain

[formula]

Thus, returning F we obtain a cM-approximation to [formula], which is not possible unless P[formula]NP.

Bokal et al. [\cite=BFM] introduced the concept of minor crossing number. Hlinný [\cite=Hli] noted that for cubic graphs the crossing number and the minor crossing number have the same value. We thus obtain the following.

There is a constant c0 > 1 such that, if [formula]NP, there is no c0-approximation algorithm for the minor crossing number.

Conclusions

Since there are constant-factor approximation algorithms for MultiwayCut, a more careful reduction from MultiwayCut will not bring us beyond hardness of constant-factor approximations. Nevertheless, it seems hard to believe that there is an O(1)-approximation algorithm for CrossingNumber. As mentioned in the introduction, the currently best approximation factor is roughly O(n9 / 10).

A natural approach to improve the inapproximability result would be to reduce from a problem that is known to be harder. The problems 0-extension and MetricLabeling are generalizations of MultiwayCut and stronger inapproximability results are known [\cite=cn-07] [\cite=kkmr-09] [\cite=mnrs-08]. However, we have not been able to obtain fruitful reductions from those problems to CrossingNumber.

It remains a tantalizing open problem whether CrossingNumber can be solved in polynomial time for graphs with bounded treewidth. An obstacle is that we do not know whether LinearArrangement is NP-hard for graphs of bounded treewidth. If that would be the case, then the reduction of Garey and Johnson [\cite=GJ] increases the treewidth by a constant. On the other hand, MultiwayCut is solvable in polynomial-time for graphs of bounded treewidth: Chopra and Rao [\cite=cr-91] discuss treewidth 2 and Dahlhaus et al. [\cite=djpsy-94] note that it works for any bounded treewidth. Thus, the approach of this paper cannot lead to an NP-hardness proof of CrossingNumber for graphs of bounded treewidth.

Acknowledgments

I am grateful to Bojan Mohar for discussions and to Petr Hlinný for pointing out the extension to cubic graphs.