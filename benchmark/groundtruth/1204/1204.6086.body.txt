Keeler's Theorem and Products of Distinct Transpositions

Introduction

"The Prisoner of Benda" [\cite=ams], an acclaimed episode of the animated television series Futurama, features a two-body mind-switching machine. Any pair can enter the machine to swap minds, but there is one serious limitation: the machine will not work more than once on the same pair of bodies.

After the Futurama community indulges in a mind-switching frenzy, the question is raised: "Can the switching be undone so as to restore all minds to their original bodies?" The show provides an answer using what is known in the popular culture as "Keeler's theorem" [\cite=grime]. The theorem is the brainchild of the show's writer Ken Keeler [\cite=aps], who earned a PhD in Mathematics from Harvard University in 1990 [\cite=genealogy] before becoming a television writer/producer. For "The Prisoner of Benda," Keeler garnered a 2011 Writers Guild Award [\cite=wga].

The problem of undoing the switching can be modeled in terms of group theory. Represent the bodies involved in the switching frenzy by [formula]. The symmetric group Sn consists of the n! permutations of [formula]. Let I denote the identity permutation. A 2-cycle (ab) is called a transposition; it represents the permutation which switches the minds of bodies a and b. The k-cycle [formula] is the permutation which sends a1's mind to a2, a2's mind to a3, [formula], and ak's mind to a1. Following the convention in [\cite=BB], we compute products (i.e., compositions) in Sn from right to left. For example, (123)  =  (12)(23)  =  (13)(12)  =  (23)(13).

The successive swapping of minds during the switching frenzy can be represented by a product P of distinct transpositions in Sn. (The transpositions must be distinct due to the limitation of the machine.) In addition to viewing P formally as a product, we can also view P as a permutation. It will be assumed that this permutation is nontrivial, otherwise nothing needs to be undone. For an example of P, suppose that 2 switches minds with 3 and then 2 switches minds with 1; this corresponds to the product P = (12)(23), yielding the mind-scrambling permutation P = (123).

To restore all minds to their original bodies, one must find a product σ of distinct transpositions such that the permutation σP equals I and such that the transposition factors in the product σ are distinct from those in the product P. Such a σ is said to undo P. From now on, the phrase "transposition factors" will be shortened simply to "factors".

In the aftermath of a switching frenzy, the community may have no recollection of the sequence of switches that had taken place. It is then expedient to find a product σ that is guaranteed to undo the mind-scrambling permutation P∈Sn regardless of which sequence of transpositions in Sn had effected P. Keeler's theorem explicitly produces such a product σ∈Sn + 2. Each factor in Keeler's σ contains at least one entry in the set {x,y}, where

[formula]

hence the factors in σ are distinct from whatever transpositions had effected P. One can view x and y as altruistic outsiders who had never entered the machine during the frenzy, but who are subsequently willing to endure frequent mind switches in order to help others restore their minds to their original bodies.

Viewed as a permutation, P can be expressed (uniquely up to ordering) as the product [formula] of nontrivial disjoint cycles [formula] in Sn [\cite=BB]. For each [formula], let ki denote the length of cycle Ci. In discussing Keeler's theorem and our refinement (Theorem 1), we will assume that [formula] This presents no loss of generality, since if [formula], then we could relabel the bodies and mimic the arguments using m in place of n.

We now describe Keeler's method for constructing a product σ∈Sn + 2 which undoes [formula]. For convenience of notation, write k = k1, so that C1 is a k-cycle [formula] with each [formula]. It is easily checked that σ1C1  =  (xy), where σ1 is the product of k + 2 transpositions given by

[formula]

For each Ci, define analogous products σi of ki  +  2 transpositions satisfying

[formula]

Note that every factor of σi has the form (xu) or (yu) for some entry u in Ci. Since disjoint cycles commute, (xy) commutes with every transposition in Sn, so [formula] is a product of distinct transpositions for which τP  =  (xy)r. Taking

[formula]

we find that σ undoes P and σ is a product of distinct transpositions in Sn + 2, each containing at least one entry in {x,y}, as desired.

By ([\ref=eq:1]) and ([\ref=eq:2]), the number of factors in Keeler's σ is either n + 2r + 1 or n + 2r according as r is odd or even. In Theorem 1 of the next section, we refine Keeler's method by showing that P can be undone via a product of only n  +  r + 2 distinct transpositions, each containing at least one entry in {x,y}. We show moreover that this result is "best possible" in the sense that n  +  r  +  2 cannot be replaced by a smaller number. Thus Keeler's algorithm is optimal for r = 1 and r = 2, but for no other r.

With the aim of finding interesting classes of products that can be undone using fewer than two outsiders, we examined what are undoubtedly the two most natural products P in Sn effecting the cycle [formula], namely [\cite=BB]

[formula]

Theorems 2 and 3 determine how many outsiders and how many mind switches are necessary and sufficient to undo each of these two products. Theorem 2 shows that for n  ≥  5, P1 can be undone without any outsiders, using only n + 1 switches, where n + 1 is best possible. Theorem 3 shows that for n  ≥  3,  P2 can be undone using only one outsider, again with n + 1 switches, where n + 1 is best possible.

Suppose for the moment that n  ≥  5. While P1 and P2 can both be undone with fewer than two outsiders, there are other products P3(n) in Sn effecting [formula] for which two outsiders are required to undo P3(n). For an example with n = 5, let

[formula]

Note that all ten transpositions in S5 are factors of P3(5). Suppose for the purpose of contradiction that P3(5) can be undone by a product σ in S6, i.e., with just one outsider. Every entry in P3(5) must appear in σ, so σ must be a product of the five factors (61), (62), (63), (64), (65) in some order. The permutation σ thus fails to fix the entry 6, which yields the contradiction σP3(5)  ≠  I. The argument for n = 5 works the same way for all n  ≥  5 of the form 4k + 1 or 4k + 2. Simply take P3(n):  =  P2J, where P2 is defined in Theorem 3, and J is the identity formulated as a product of all [formula] transpositions in Sn - 1, as in Theorem 4. We omit the argument for n of the form 4k or 4k + 3, as it's a bit more involved.

The products P1 and P2 each have the property that no two consecutive factors are disjoint. In contrast, consider the product of m disjoint factors

[formula]

We call P(m) the Stargate switch because P(2) represents a sequence of mind swaps featured in an episode of the sci-fi television series Stargate SG-1[\cite=holiday]. The first and second authors [\cite=EH] have given an optimal algorithm for undoing P(m); for m > 1, the algorithm requires no outsiders.

When n  ≥  5, Theorem 2 provides equalities of the form σP1 = I which express the identity I as a product of 2n distinct transpositions in Sn. Such equalities lead to the question: "What are necessary and sufficient conditions on m and n for I to be expressible as a product of m distinct transpositions in Sn?" Theorem 4 provides the answer: it is necessary and sufficient that m be an even integer with [formula].

In order to prove Theorems 2-4, we require some properties of cycles proved via graph theory in Lemma 1. The proof of Lemma 1(c) incorporates an idea of Jacques Verstraete in a proof due to Isaacs [\cite=isaacs2]. We are grateful for their permission to include it here, as our original proof was considerably less elegant.

We will also need the well-known "Parity theorem," which shows that the identity permutation I cannot equal a product of an odd number of transpositions. Two proofs of the Parity theorem may be found in [\cite=BB]; for an elegant recent proof, see Oliver [\cite=oliver].

An optimal refinement of Keeler's method

Keeler's algorithm was designed to undo every mind-scrambling permutation [formula] that is effected by an unknown sequence of mind swaps. In this section, we present another such algorithm. While Keeler's algorithm is optimal only for [formula], we prove that our algorithm is optimal for all r.

Let [formula] be a product of r disjoint ki-cycles Ci in Sn, with ki  ≥  2 and [formula]. Define x = n + 1 and y = n + 2. Then P can be undone by a product λ of n + r + 2 distinct transpositions in Sn + 2, each containing at least one entry in {x,y}. Moreover, this result is best possible in the sense that n + r + 2 cannot be replaced by a smaller number.

Write k = k1, so that C1 is a k-cycle [formula]. Corresponding to the cycle C1, define

[formula]

Corresponding to each cycle Ci for [formula], define Gi(x) and Fi(x) analogously. Set

[formula]

It is readily checked that λ undoes P and that λ is a product of n + r + 2 distinct transpositions in Sn + 2, each containing at least one entry in {x,y}.

It remains to prove optimality. Suppose for the purpose of contradiction that P can be undone by a product σ of t  <  n + r + 2 distinct transpositions in Sn + 2, each containing at least one entry in {x,y}. Then by the Parity theorem, t  ≤  n + r.

On the other hand, we have the lower bound t  ≥  n, since each of the n entries in P must occur (coupled with x or y) in a factor of σ. Let A denote the set of entries in [formula], and let a denote the leftmost element of A appearing in the product σ. Since P maps a to some other element of A, it follows that a appears twice in σ, i.e., σ has both of the factors (ax) and (ay). The same argument shows that each of the r cycles Ci contains an entry which appears twice in σ. Thus the inequality t  ≥  n can be strengthened to t  ≥  n + r. Consequently, t  =  n + r. It follows that each of the r cycles Ci contains exactly one entry which appears twice in σ, and the other n - r entries appear only once. This accounts for all n + r factors of σ, so in particular, (xy) cannot be a factor of σ.

Let a' denote the rightmost element of A appearing in the product σ. Since P maps some element of A to a', it follows that a' appears twice in σ. Since a is the only element of A that appears twice in σ, we must have a = a'. Consequently, we have shown the following two properties of C1:

(i) there is a unique entry a in C1 for which the transpositions (ax) and (ay) both occur as factors of σ, and (ii) each entry of C1 other than a occurs in exactly one factor of σ, and that factor lies strictly between (ax) and (ay).

These two properties are similarly shared by each of the r cycles Ci.

Let N1 denote the number of transpositions in σ that lie strictly between its factors (ax) and (ay). Define Ni similarly for each of the r cycles Ci. We may assume without loss of generality that N1  ≤  Ni for all i. We may also assume that the factor (ax) in σ lies to the left of the factor (ay), and that a = ak.

Let My denote the set of factors in σ which contain the entry y and which lie between (akx) and (aky) inclusive. Suppose for the purpose of contradiction that every transposition in My has the form (aiy) for some ai∈A. Since σ must send ai + 1 to ai for each [formula], it follows that the elements of My have to occur in the following order in σ:

[formula]

But then σ could not send a1 to ak, a contradiction. Thus some transposition in My must have the form (hy), where h∉A. Consider the rightmost (hy)∈My with h∉A. For some fixed j  >  1,  h is an entry of the cycle Cj. Among all the elements (aiy)∈My that lie to the right of (hy), let (amy) denote the one closest to (hy). As σ cannot send am to h, it follows that the entry h occurs twice between (akx) and (aky), i.e., σ has factors (hx) and (hy) both lying strictly between (akx) and (aky). Thus Nj  <  N1. This violates the minimality of N1, giving us the desired contradiction.

A lemma on factorizations of cycles

For 2  ≤  k  ≤  n, suppose that the k-cycle [formula] equals a product P of t transpositions in Sn. Then (a) t  ≥  k - 1,  (b) when t = k - 1, the set of entries in P is [formula], and (c) when t = k - 1, at least one factor of P has the form (aiai + 1) with 1  ≤  i  <  k.

Since (ij)(ab)(ij) equals a transposition, a product of nondistinct transpositions reduces to a shorter product of distinct transpositions. Thus it suffices to prove the result when the factors of P are distinct. Let W denote the set of entries in the product P. Note that W contains the set [formula]. Define a graph G with vertex set W and with t edges

[formula]

with 1  ≤  i  <  k. This is clear for k = 2, so we let k  ≥  3 and induct on k. A connected graph with k vertices is a tree if and only if it has k - 1 edges [\cite=cameron]. Thus G is a tree. Let (auav) denote the rightmost factor of P, with u  <  v. Write w = v - u. If w = 1, we are done, so assume that w > 1. Define the disjoint cycles

[formula]

so that r is a w-cycle and s is a (k - w)-cycle. If v = k, then s is interpreted as [formula], which in turn is interpreted as the identity permutation when u = 1. Define P' to be the product obtained from P by removing the rightmost factor (auav). Let G' be the graph obtained from G by removing the edge

[formula]

Optimal methods to undo and

For n  ≥  5, let P1 denote the product of n - 1 transpositions in Sn given by [formula] There exists a product σ of n + 1 distinct transpositions in Sn which undoes P1, and this result is best possible in the sense that no such σ can have fewer than n + 1 distinct factors.

Define

[formula]

where when n = 5, the empty product [formula] is interpreted as the identity. It is easily checked that σP1 = I and that σ is a product of n + 1 distinct transpositions in Sn all distinct from the n - 1 transpositions in P1. It remains to prove optimality.

Suppose for the purpose of contradiction that there exists a product E of k  <  n + 1 distinct transpositions in Sn for which EP1 = I and for which the k transpositions in E are distinct from the n - 1 transpositions in P1. Since EP1 = I, the Parity theorem shows that k  ≤  n - 1. On the other hand, since [formula], Lemma 1(a) gives k  ≥  n - 1. Thus the number of transpositions in the product E is exactly n - 1. Note that E- 1 is a product of these same n - 1 transpositions in reverse order, and [formula]. Hence by Lemma 1(c), one of these n - 1 transpositions in E has the form (i,i + 1) with 1  ≤  i  <  n. This contradicts the distinctness of the factors of E from those in P1, since by definition, P1 is a product of all n - 1 transpositions (i,i + 1) with 1  ≤  i  <  n.

For n  ≥  3, let P2 denote the product of n - 1 transpositions in Sn given by [formula] There exists a product τ of n + 1 distinct transpositions in Sn + 1 which undoes P2, and this result is best possible in the sense that no such τ can have fewer than n + 1 distinct factors.

Define

[formula]

It is easily checked that τP2 = I and that τ is a product of n + 1 distinct transpositions in Sn + 1 all distinct from the n - 1 transpositions in P2. It remains to prove optimality.

Suppose for the purpose of contradiction that there exists a product F of k  <  n + 1 transpositions in Sn + 1 for which FP2 = I and for which the k transpositions in F are distinct from the n - 1 transpositions in P2. Since FP2 = I, the Parity theorem shows that k  ≤  n - 1. On the other hand, since [formula], Lemma 1(a) gives k  ≥  n - 1. Thus the number of transpositions in the product F is exactly n - 1. Note that F- 1 is a product of these same n - 1 transpositions in reverse order, and [formula]. Hence by Lemma 1(b), the entries in these n - 1 transpositions all lie in the set [formula]. Since the permutation F moves n, it follows that one of these n - 1 transpositions in F has the form (in) with 1  ≤  i  <  n. This contradicts the distinctness of the factors of F from those in P2, since by definition, P2 is a product of all n - 1 transpositions (in) with 1  ≤  i  <  n.

When n = 2, two outsiders are required to undo P1 = P2 = (12), and an optimal σ is given by (34)(23)(14)(24)(13). In the cases n = 3 and n = 4, one outsider is required to undo P1, and optimal σ's are given by (14)(13)(24)(34) and (14)(25)(24)(35)(45), respectively.

I as a product of distinct transpositions in

For the identity I to be expressible as a product of m distinct transpositions in Sn, it is necessary and sufficient that m be an even integer with [formula].

We begin by showing that the conditions are necessary. First, m must be even by the Parity theorem, and it is not hard to show that m cannot equal 2 or 4. Furthermore, m cannot exceed [formula], since [formula] is the number of distinct transpositions in Sn. This proves necessity, and it remains to show sufficiency.

Define f(a,b,c) = (ac)(ab)(bc), which we view formally as a product of 3 transpositions, while noting that f(a,b,c) equals (ab) when viewed as a permutation. If a product λ of transpositions has a factor (ab), then formally replacing (ab) by f(a,b,c) increases the number of λ's factors by 2, without altering λ as a permutation.

For even m in the appropriate range, we now show how to express I explicitly as a product of m distinct transpositions in S4, S5, S6, S7, and S8. An analogous treatment will then inductively express I as a product of m distinct transpositions in S4k, S4k + 1, S4k + 2, S4k + 3, and S4k + 4, for all k  ≥  2, thus completing the proof.

For m = 6, we have the base case

[formula]

This equality uses all six transpositions in S4, so to consider the values m = 8,10, we move up to S5. For m = 8, replace the first transposition (12) above by f(1,2,5) to obtain

[formula]

For m = 10, replace the transposition (34) above by f(3,4,5) to obtain

[formula]

This equality uses all ten transpositions in S5, so to consider the values m = 12,14, we move up to S6. For m = 12, replace (23) above by f(2,3,6) to obtain

[formula]

For m = 14, replace (45) above by f(4,5,6) to obtain

[formula]

This equality uses all of the fifteen transpositions in S6 except for (16), so to consider the values m = 16,18,20, we move up to S7. For m = 16, m = 18, and m = 20, successively replace (12) by f(1,2,7), (34) by f(3,4,7), and (56) by f(5,6,7), respectively. This yields the following for m = 20:

[formula]

This equality uses all of the twenty-one transpositions in S7 except for (16), so to consider the values m = 22,24,26,28, we move up to S8. For m = 22, m = 24, and m = 26, successively replace (23) by f(2,3,8), (45) by f(4,5,8), and (67) by f(6,7,8), respectively. This yields the following for m = 26:

[formula]

This equality uses all twenty-eight transpositions in S8 except (16) and (18). This suggests that we make the atypical replacement of (68) by f(6,8,1) to obtain the following for m = 28:

[formula]

This equality uses all twenty-eight transpositions in S8. From here, we can repeat the procedure.