Quantum simulation of quantum field theory using continuous variables

Introduction

For more than a decade now, continuous-variable (CV) quantum information [\cite=Braunstein2005] [\cite=Weedbrook2011] has been a prominent substrate in implementing quantum technologies. Primarily this can be attributed to its largely Gaussian nature which invites simple and convenient mathematical calculations, as well as accessible experimental demonstrations, which are often deterministic in nature. Furthermore, one can also use CVs as a key element in another promising architecture, known as hybrid quantum information [\cite=Furusawa2011].

The field of quantum computing [\cite=Ladd2010] using CVs [\cite=Lloyd1999] [\cite=Weedbrook2011] has also progressed significantly in the last few years. From its original conception in 1999 [\cite=Lloyd1999], progress began to accelerate after a cluster state [\cite=Raussendorf2001] version was established in 2006 [\cite=Zhang2006] [\cite=Menicucci2006], leading to something significantly more tangible for experimentalists. This resulted in numerous proof-of-principle demonstrations [\cite=Yokoyama2014] [\cite=Miyata2014] [\cite=Pysher2011] [\cite=Takeda2013], currently culminating in a 10,000 node cluster [\cite=Yokoyama2013] created 'on-the-go' along with a 60 node cluster created simultaneously [\cite=Chen2014]. From a theoretical perspective, much progress has been made [\cite=Marshall2014] [\cite=Lau2013] [\cite=Loock2007] [\cite=Gu2009] [\cite=Alexander2014] [\cite=Demarie2014] [\cite=Menicucci2015] [\cite=Wang2014] [\cite=Menicucci2011], including recently, an important fault tolerant architecture [\cite=Menicucci2014], achieved by leveraging the Gottesman-Kitaev-Preskill (GKP) encoding [\cite=Gottesman2001]. However, one area that is significantly underdeveloped is that of algorithms for a CV quantum computer. Thus far there only exists CV versions of quantum searching [\cite=Pati2000] and the Deutsch-Jozsa algorithm [\cite=Pati2003] [\cite=Adcock2009] [\cite=Zwierz2010] [\cite=Adcock2013].

In this paper, we present an algorithm that simulates [\cite=Georgescu2014] the scattering amplitudes in scalar bosonic quantum field theory (QFT) using a continuous-variable quantum computer. In fact, we show one can obtain an exponential speedup over the best known classical algorithms. A discrete version of the algorithm was originally shown in Refs. [\cite=Jordan2012] [\cite=Jordan2014a] for a quantum computer based on qubits. Further work extended this result to fermionic QFTs [\cite=Jordan2014], as well as using wavelets for multi-scale simulations [\cite=Brennen2014].

Typically, q and p are the CVs spreading across all real numbers. To encode them in qubits, one needs a whole register of qubits at each point in space. However, with CVs, there is a 1-to-1 mapping to qumodes (the CV equivalent of a qubit). In fact it is arguable that a CV quantum computer is the natural choice for such a QFT problem given that​ the fields are continuous variables. Thus, the value of the field at a given point in space can be mapped onto a qumode naturally. If qubits are used, instead, the qumode needs to be replaced by a register of M qubits which only allows the field to take on 2M discrete values. Brennen et al. describe both possibilities in Ref. [\cite=Brennen2014], although they do not explain how to implement the quartic phase gate with CVs, which we do here. Furthermore, the quartic vertex in wavelets becomes very complicated. Implementing it would require gates acting on more than two modes (resulting in logarithmic overhead in complexity). Another benefit to our approach is in the development of the initial cluster state. Here we show how to create the initial CV cluster state as well as suggesting an experimental implementation based on standard linear optics. Furthermore, we also note that in the preparation of the initial state we see a slight improvement over the original qubit approach of Ref. [\cite=Jordan2012]. There they require O(N2.376) gates to engineer the ground cluster state; whereas in our scheme, we require slightly less than that, specifically, O(N2) gates.

Our paper is structured in the following way. In Sec. [\ref=sec2], we discretize space for a one-dimensional scalar bosonic QFT while leaving the field and time as continuous parameters. Next, we show how to generate the initial cluster state using only Gaussian operations in Sec. [\ref=prep]. In Sec. [\ref=compute] we outline the steps necessary to compute a scattering amplitude including the required measurement. We provide an explicit experimental implementation in Sec. [\ref=experiment]. Finally, the benefits of our approach over classical methods are discussed in Sec. [\ref=conclusion].

Discretization in one-dimension

We consider a relativistic scalar field φ in one spatial dimension including a quartic self-interaction. We shall outline the discretization specifically in the one-dimensional case so as not to clutter the notation unnecessarily, but generalization to higher dimensions is straightforward and is discussed in the supplementary material. We note that the field φ is a function of x and t (time), φ(x,t). All three parameters are continuous. In our approach, we discretize x, but not φ or t. In the case of qubits, one would discretize x and φ, but not t. In classical lattice calculations, one discretizes all three φ, x, and t.

In the continuum, the one-dimensional free scalar QFT is given by the Hamiltonian

[formula]

where φ is the scalar field and π the conjugate momentum field. They obey commutation relations   =  iδ(x - x') where we choose units in which [formula].

We discretize space by letting x  =  na, [formula], where a is the lattice spacing and L = Na is the finite length of the spatial dimension (L  ≫  a). We choose units in which a = 1, for simplicity, and denote Qn  =  φ(x), Pn  =  π(x). The discretized variables obey standard commutator relations,   =  iδnm. The Hamiltonian becomes

[formula]

where we employed periodic boundary conditions and defined [formula].

It is useful to define creation and annihilation operators, [formula] and An, respectively, by [formula]. They obey the commutation relations   =  δnm and the Hamiltonian can then be written as

[formula]

where [formula] and [formula] . The eigenvalues of the matrix [formula] and the components of the corresponding normalized eigenvectors [formula] are, respectively, [formula], and [formula]. Notice that the massless case is special because it contains a zero mode (for m = 0, ω0 = 0), so the matrix [formula] is not invertible. To avoid the problems that arise, we can shift the mass by a small amount ~  1 / N, which vanishes in the continuum limit (N  →    ∞  ).

We also wish to add a quartic interaction, [formula] which necessitates the addition of a mass counter term [formula] due to renormalization, as explained in the supplementary material. We find that for weak coupling, the physically interesting case is stable for λ > 0.

To diagonalize the Hamiltonian, we introduce new creation and annihilation operators, [formula] and ak, respectively, defined by [formula] where [formula] is the matrix of the eigenvectors. Notice that [formula] is unitary, [formula]. These operators obey standard commutation relations,   =  δkl and the free Hamiltonian reads

[formula]

In this form, it is straightforward to construct the states in the Hilbert space.

Initial cluster state preparation

For the initial cluster state, in Refs. [\cite=Jordan2012] [\cite=Brennen2014] the excited state was created after creating the ground state. This is difficult because it involves manipulating a large number of qubits. In our approach, we create a single photon state in a single mode before creating the cluster state. This is more accessible, as it involves creating the state |1〉 for a single mode. It can be done in a variety of ways, via a heralded single photon source, for instance. At the end of the computation, the field modes are all measured and the distribution of single photons across them determines the result.

To begin with, we build the system with N oscillators representing the variables (Qn,Pn), [formula]. The nth oscillator has a Hilbert space constructed by successive application of the creation operator [formula] on the vacuum |0〉n, which is annihilated by An. Here |0〉n is shorthand for a product state of vacuum fields

[formula]

with An|0〉  =  0. For a scattering process, we are given an initial state typically consisting of a fixed number of particles, usually two, which undergoes evolution and then a measurement is performed (detection of particles) on the final state. Both initial and final states asymptote to eigenstates of the free Hamiltonian H0. Thus quantum computation starts with preparation of an eigenstate of H0.

First, we consider the ground state of H0. It is the cluster state |Ω〉 annihilated by all ak, i.e., ak|Ω〉 = 0 for [formula]. It can be constructed from the vacuum state [\eqref=eq16] by acting with the Gaussian unitary [formula], where [formula]. Noticing the relationship between the operators ak and Ak we can use the Bloch-Messiah reduction [\cite=Braunstein2005decomp] to determine [formula] as a decomposition involving a multiport interferometer (V) followed by single mode squeezing (S) followed by a final multiport interferometer (W). These unitary operators can be realized with O(N2) gates [\cite=Reck1994]. This is in contrast to the qubit version [\cite=Jordan2012] where they require O(N2.376) gates.

To implement U we first perform the rotation

[formula]

where 1  ≤  n  ≤  N / 2, which can be expressed in terms of rotations each involving only a couple of oscillators. Notice that if N is even, AN / 2 does not have a partner; we obtain [formula]. Next, we squeeze each mode as [formula] where e2rn  =  ωn for n  ≤  N / 2, and e- 2rn  =  ωn, for n > N / 2. Finally, we untangle the pairs by rotating them, A''k  →  ak where a0 = A0'', [formula], and [formula]. Excited states can be constructed with the same number of gates, e.g., the single-particle state [formula] can be constructed by acting upon the vacuum with [formula]. This turns the initial state of the kth mode into a one-photon state, [formula], which can be accomplished in a variety of ways; see supplementary material. Having engineered [formula], we then apply the Gaussian unitary [formula], to obtain the one-particle state

[formula]

Extending the above to the engineering of multi-particle states, [formula], is straightforward.

Quantum Computation

We wish to calculate a general scattering amplitude, which can be written as

[formula]

in the limit T  →    ∞  , where time evolution is defined with respect to the non-interacting Hamiltonian.

We start by preparing the initial state |in〉 as in the previous section and define initial time as t =  - T. Then we act successively with evolution operators of the form

[formula]

Time dependence is obtained via the free Hamiltonian,

[formula]

Therefore, the evolution [\eqref=eq33] can be implemented as

[formula]

We deduce

[formula]

where we divided the time interval into [formula] segments.

The coupling constants in [\eqref=eq33] are turned on and off adiabatically. This is achieved by splitting the time interval

[formula]

,

[formula]

. For t∈[ -  T,  -  T1], we turn the coupling constants on by replacing λ  →  λ(t), δm  →  δm(t), so that λ( - T)  =  δm( - T) = 0, and λ( - T1)  =  λ, δm( - T1)  =  δm. Then for t∈[ -  T1,T1] the coupling constants are held fixed. Finally, for t∈[T1,T], they are turned off adiabatically by reversing the process in the first time interval. In the case of small λ, the time dependence of the coupling constants can be chosen efficiently by making use of perturbative renormalization. Eqs. [\eqref=eqA13] and [\eqref=eqA14] inform the choice [formula], [formula], for - T  ≤  t  ≤   - T1.

The unitary operators eiδtH0 and eiδtHc.t. are Gaussian and can be implemented with second order nonlinear optical interactions and linear optics beam splitter networks. The interaction is implemented through a quartic phase gate for each mode,

[formula]

The quartic phase gate may be implemented in a similar manner to the cubic phase gate previously proposed [\cite=Marshall2014].

After evolution, we must project onto the state |out〉. This is similar to the state |in〉, and its construction depends on the number of desired particles. The latter are excitations created with [formula], so in general,

[formula]

It follows that the next step is to uncompute by applying the Gaussian unitary U (which is the inverse operation to the preparation of the initial state), and then measure the number of photons in each mode. The final uncompute step projects the set of output modes onto the Fock basis. Thus, the scattering amplitude calculation is a mapping from one set of field modes on the input to a separate set of field modes on the output, as expected. That is, for each click on the photodetector for mode n, there is an operator [formula] present in the final state [\eqref=eq95]. If the QFT calculation involved an initial input state with two excitations spread across 100 field modes, say, then the entire calculation would involve two photons, for instance. We note that the calculation has made use of a quartic phase gate up to this point, and thus technically speaking a non-Gaussian operation would not be necessary during this measurement step in order to achieve an exponential speedup over the classical QFT algorithm. However, in order to achieve high accuracy in the final result, photon number resolving detectors with high efficiency [\cite=Nam2008] would be desirable for the measurment phase.

Experimental implementation

An example of the experimental implementation is given in Fig. [\ref=setup]. For brevity the setup for calculating four space time points is given. For the electromagnetic field, the initial unitary rotation involves weighted beam splitters with the appropriate splitting to achieve the desired sums over the field operators (see appendix A.2). A swap gate is involved in the input state preparation stage. We note that a swap gate contains essentially the CV version of the CNOT operator along with parity operators [\cite=Wang2001], but in some cases the gate can be simplified to a beam splitter interaction [\cite=Braunstein2005] such as for the electromagnetic field. Here we use a mode label swap operator, which is possible in systems with movable qubits, such as CV optical fields. Next, Hc.t. is quadratic in position quadrature operators, which can be implemented with a series of phase shifts [\cite=Braunstein2005]. The non-Gaussian piece of the computation is then the quartic phase gate contained in Hint, which can be implemented via repeated application of the photon number-dependent phase gate [\cite=Marshall2014]. Lastly, the free propagation H0 can be implemented by a calibrated free propagation before the uncompute stage. We note that the QFT field modes are encoded into the qudits which are themselves electromagnetic field modes, meaning that the free propagation contained in H0 is not arbitrary. It must conform to the calculated QFT free propagation distance, and phase stability must be maintained throughout.

Conclusion

In conclusion, we developed a new algorithm for a continuous-variable quantum computer which gave an exponential speedup over the best known classical algorithms. This algorithm was the calculation of the scattering amplitudes in scalar bosonic quantum field theory, and as previously mentioned, arguably a natural choice for a continuous variable quantum computer to solve. At weak coupling, analytic calculations are possible, however, at strong coupling no such calculations are generally available, and one has to rely on numerical techniques. A widely used framework is lattice field theory which is based on the discretization of space into a finite set of points. The complexity of classical computations on a lattice increases exponentially with the number of lattice sites [\cite=Creutz1985].

Quantum computations offer a distinct advantage (first shown in Ref. [\cite=Jordan2014a] for qubits, and here for qumodes), since complexity only grows polynomially. Using continuous variables we also see an advantage over the original qubit proposal; specifically, in the preparation of the initial cluster state. There they required O(N2.376) gates to synthesize the ground state. However, in our scheme, we required slightly less, O(N2) gates. Finally, we also gave an example of an experimental implementation on a continuous-variable cluster state quantum computer that calculated four space time points. We noted that such a scheme is feasible with current linear optical technology and consisted of a set of Gaussian operations along with the non-Gaussian quartic phase gate.

Renormalization

Define the Green function [formula] as

[formula]

where T denotes the time-ordering operator. It obeys

[formula]

Using the Fourier transform,

[formula]

we obtain

[formula]

exhibiting poles at ω2  =  ω2n.

When we switch on the interaction term,

[formula]

we have that at O(λ) the Green function is corrected by

[formula]

For the Fourier transform, we obtain

[formula]

which leads to a shift of the poles,

[formula]

where

[formula]

The shift can be corrected by the addition of the counter term

[formula]

with δm  =    -  Σ  +  O(λ2), i.e., the mass parameter in the Hamiltonian is not physical, but bare,

[formula]

For large N, the sum can be approximated by an integral,

[formula]

which has a logarithmic divergence at small m2 (i.e., length scale 1 / m large in units of lattice spacing, which is the physically interesting limit). We easily obtain

[formula]

The bare mass is

[formula]

Notice that for weak coupling (small λ), the physically interesting case has m20  <  0 (a stable system, as long as λ > 0).

Ground State Construction

To find the required transformation U, we work as follows. Notice that for n = 0,

[formula]

where we used ω0 = m. For n  ≠  0, we consider pairs (an,aN - n). We have

[formula]

where we used ωn  =  ωN - n.

The above expressions suggest that we transform An into an in three steps as detailed in Sec. [\ref=sec:groundstate]

Example: N = 4

To illustrate the above algorithm, we consider the case in which space has been discretized to four points. The rotation ([formula]) is described by the orthogonal matrix

[formula]

We have

[formula]

where Rij(θ) is a rotation in the ij-plane of angle θ and Sij is the swap i  ↔  j. Therefore the rotation [formula] can be implemented with four two-mode unitaries.

Next, we squeeze each mode as [formula], where e2r0  =  ω0, e2r1  =  ω1, e2r2  =  ω2, and e- 2r3  =  ω3. Notice that r3  =    -  r1, because ω3  =  ω1.

Finally, we perform the rotation, [formula], [formula], to arrive at the desired modes,

[formula]

Each of the above steps is implemented with a Gaussian unitary involving at most two modes.

Excited States

To generate the required one-photon state, two methods can be used. One can first squeeze the vacuum of the kth mode with an optical parametric amplifier to

[formula]

Then pass the squeezed state through a (highly transmitting) beam splitter of transmittance T, and place a photodetector on the auxiliary output port. A click of the detector heralds a successful photon subtraction, which is described by the non-unitary operator

[formula]

The transmittance has to be high so that the probability of detecting two or more photons is negligible. If no photon is detected, the process is repeated until a photon is detected. Finally, apply anti-squeezing [formula].

We obtain the state (unnormalized)

[formula]

If the squeezing parameters are chosen so that

[formula]

then it is straightforward to show that [\eqref=eq72] is the desired state,

[formula]

Optionally, one may also use a heralded single photon source. Such a source would consist of a parametric downconverter with a high efficiency heralding detector. To obtain exactly one photon when operating the source with high brightness (but on average less than one pair per pulse), the heralding detector would consist of a high efficiency photon number resolving detector, such as a transition edge sensor.

Generalization to Arbitrary Dimensions

Generalization to arbitrary spatial dimension d is straightforward. The free-scalar Hamiltonian in the continuum reads

[formula]

where [formula], with the fields obeying standard commutation relations,

[formula]

Each coordinate xi ([formula]) is discretized as before, xi  =  nia, [formula], and we define [formula], [formula], [formula], where [formula].

The Hamiltonian [\eqref=eq61] can then be rendered in the form [\eqref=eq8], where [formula] has eigenvalues and corresponding normalized eigenvectors,

[formula]

where [formula] (the dual lattice). The eigenvectors form a unitary matrix.

The discretized Hamiltonian is diagonalized as

[formula]

where [formula] is the annihilation operator defined in Sec. [\ref=sec2] (extended to d dimensions in an obvious way).

Introducing an interaction term, [formula], and the attendant counter term, [formula], and working as in the one-dimensional case, we obtain a shift in the poles of the Green function,

[formula]

which is related to the counter-term parameter δm via δm  =    -  Σ  +  O(λ2). For large N, the sum is approximated by an integral over the hypercube d. For d = 1, it reduces to the previous result, whereas for d > 1, we obtain at lowest order in m and λ,

[formula]

Numerically, C2  ≈  0.16, and C3  ≈  0.11.