On the Morse-Hedlund complexity gap

Notation and definitions

The semiring of natural integers is denoted [formula]. The ring of rational integers is denoted [formula].

Words and languages.

Throughout this paper A denotes a finite set of symbols and is called the alphabet. A word over A is a finite string of elements of A. The set of all words over A is denoted [formula]. A language over A is a subset of [formula]. For every [formula], the length of w is denoted [formula]. For each [formula], the set of all n-length words over A is denoted An. The word of length zero is called the empty word. The set of all non-empty words over A is denoted A+. Word concatenation is denoted multiplicatively.

Factor and complexity function.

Let [formula], [formula], and [formula]. We say that x is a prefix (resp. a suffix) of y if there exists [formula] such that y  =  xw (resp. y  =  wx). We say that x is a factor of y if there exist w, [formula] such that y  =  wxw'. By extension, we say that x is a factor of L if x is a factor of some word in L. For each [formula], Fn(L) denotes the set of all n-length factors of L. The function from [formula] to itself that maps each [formula] to the cardinality of Fn(L) is called the complexity function of L. Note that the complexity function of any non-empty language maps 0 to 1 because the empty word is a factor of every word. Note also that a language has the same complexity function as its set of factors.

Infinite and bi-infinite words.

A (right-)infinite word over A is a function from [formula] to A. A bi-infinite word over A is a function from [formula] to A. Let u be an infinite or bi-infinite word over A. We say that x is a factor of u if there exists i in the domain of u such that [formula]. The set of all factors of u is called the language of u. The complexity function of u is defined as the complexity function of its language.

The Morse-Hedlund complexity gap

The aim of this paper is to present a self-contained, compact proof of:

Let p be the complexity function of some language. Either p(n) is greater than n for every [formula], or p is bounded from above.

For instance, it follows from Theorem [\ref=th:ER82] that no complexity function grows like [formula]. However, the lower bound is trivially achievable.

Consider the language [formula]. For each [formula], it is clear that [formula], so the complexity function of U maps n to n  +  1.

In addition to proving Theorem [\ref=th:ER82], Ehrenfeucht and Rozenberg described the class of those languages with bounded complexity functions:

Let L be a language. The complexity function of L is bounded from above if, and only if, there exists a finite subset [formula] such that

[formula]

Before proving Theorem [\ref=th:ER82] in Section [\ref=sec:proof], let us state the various related results that can be found in the literature. Everything starts with Morse and Hedlund's celebrated papers [\cite=MorseHedlund38] and [\cite=MorseHedlund40]. They were published in 1938 and 1940, respectively.

We say that a function [formula] is FIATC (first increasing and then constant) if there exists [formula] such that

[formula] and

p(m  +  n)  =  p(m) for every [formula].

Let u be a bi-infinite word and let p denote the complexity function of u.

If u is not periodic then p is increasing.

If u is periodic then p is FIATC and [formula] is the least period of u.

On the one hand, FIATC functions are clearly bounded. On the other hand, observe that any increasing function [formula] satisfies p(n)  ≥  n  +  p(0) for every [formula]. Hence, Theorem [\ref=th:MH1938] implies that Theorem [\ref=th:ER82] holds for the particular case where p is the complexity function of a bi-infinite word. Again, the lower bound is achievable:

Consider the bi-infinite word u over [formula] given by: [formula] for every [formula] and [formula] for every [formula]. The language of u equals U, where U is as in Example [\ref=ex:aabb]. Therefore, the complexity function of u maps n to n  +  1 for each [formula].

As illustrated with the following two examples, bounded complexity functions are not necessarily FIATC and unbounded complexity functions are not necessarily increasing:

Let p denote the complexity function of [formula]. For each integer n  ≥  1, let [formula]. If n is an odd positive integer then Fn(L)  =  Xn and thus p(n)  =  3. If n is an even positive integer then [formula] and thus p(n)  =  4.

Let U be as in Example [\ref=ex:aabb]. Let p denote the complexity function of [formula]. If n  =  2 or if n is an odd positive integer then Fn(L)  =  Fn(U) and thus p(n)  =  n  +  1. If n is an even integer greater than or equal to 4 then [formula] and thus p(n)  =  n  +  3.

The most famous variant of Theorems [\ref=th:ER82]/[\ref=th:ER82-v] and [\ref=th:MH1938] is:

Let u be an infinite word and let p denote the complexity function of u.

If u is not eventually periodic then p is increasing.

If u is eventually periodic then p is FIATC and the period of u is not greater than [formula].

An infinite word is called Sturmian if its complexity function maps each [formula] to n  +  1: by Theorem [\ref=th:MH1973], Sturmian words are those non-eventually-periodic infinite words with minimum complexity. There is no trivial example of Sturmian word. The study of Sturmian words was initiated by Morse and Hedlund in 1940 [\cite=MorseHedlund40]. It is still an active field of research [\cite=Lothaire2] [\cite=Pytheas].

The next result is the latest improvement of Theorem [\ref=th:ER82].

Let φ be the function that maps each real number x to [formula].

Let p be the complexity function of some language and let [formula]. If p(m)  ≤  m then p(n  +  p(m)  +  m)  ≤  φ(p(m)) for every [formula].

For each [formula], there exists a function [formula] such that pk is the complexity function of some binary language and both sets [formula] and [formula] are infinite.

The second part of Theorem [\ref=th:BB2005] ensures that the function φ is optimal.

The proof of Theorem [\ref=th:ER82]

In what follows, L denotes a language over the alphabet A and p denotes the complexity function of L.

We say that a word [formula] is a special factor of the language L if there exist a, b∈A with a  ≠  b such that both wa and wb are factors of L.

Let [formula] be the function mapping each non-empty word w∈A+ to its [formula]-length prefix: for each w∈A+, there exists a∈A such that w  =  ρ(w)a. For any language [formula] and any [formula], ρ maps each word in Fn  +  1(L) to a word in Fn(L). A word [formula] is a special factor of L if, and only, if ρ maps to w more than one factor of L. It follows that L admits an n-length special factor if, and only if, ρ is not injective on Fn  +  1(L).

If a language only admits finitely many special factors then its complexity function is eventually constant.

Assume that L only admits finitely many special factors. Let [formula] be such that L does not admit any n-length special factor. Then, ρ induces an injection from Fn  +  1(L) into Fn(L). Inequality p(n  +  1)  ≤  p(n) follows. Therefore, p is non-increasing on [formula], where [formula] is denotes the maximum length of a special factor of L.

Note that the converse of Lemma [\ref=lem:non-inc] does not hold in general:

Consider the case where [formula]. The complexity function of L is eventually constant: for every integer n  ≥  1, [formula] and thus p(n)  =  2. However, L admits infinitely many special factors: for every [formula], [formula] is a special factor of L.

Prove that if the language of an infinite word admits only finitely many special factors then this infinite word is eventually periodic.

Prove that if the language L only admits finitely many special factors then there exists a finite subset [formula] such that

[formula]

We say that the language L is (right-)extendable if for each w∈L, there exists a∈A such that wa∈L.

The language of any infinite or bi-infinite word is extendable.

If a language admits infinitely many special factors then its complexity function is increasing.

Let [formula]. If L is extendable then ρ induces a surjection from Fn  +  1(L) onto Fn(L). If L admits infinitely many special factors then L admits a special factor of length n because every suffix of a special factor is also a special factor, and thus ρ is not injective on Fn  +  1(L). Hence, if L is extendable and admits infinitely many special factors then ρ induces a non-bijective surjection from Fn  +  1(L) onto Fn(L), and thus inequality p(n  +  1)  >  p(n) holds.

Prove that the complexity function of any extendable language is either increasing or FIATC.

For each [formula], let s(n) denote the number of n-length special factors of L.

Let α denote the cardinality of A. Prove that p(n  +  1)  -  p(n)  ≤  (α  -  1)s(n) for every [formula].

Prove that if L is extendable then p(n  +  1)  -  p(n)  ≥  s(n) for every [formula].

Lemmas [\ref=lem:non-inc] and [\ref=lem:ext-inc] can be easily deduced from questions 1 and 2 of Exercise [\ref=exo:p-s], respectively.

Let X and Y be two languages such that Y is finite and non-empty. The complexity function of XY is bounded if, and only if, the complexity function of X is bounded.

Let f, g and h denote complexity functions of X, Y, and XY, respectively. We have to prove that h is bounded if, and only if, f is bounded.

Since Y is non-empty, every factor of X is also a factor of XY, and thus f is bounded from above by h. The "only if part" follows.

Let us now prove the "if part". The inclusion

[formula]

yields the inequality

[formula]

Let [formula] and [formula]. Observe that S  <    ∞  . Assume that f is bounded. Then we have M  <    ∞   and it follows from Equation [\eqref=eq:p-prime-p-q] that

[formula]

Hence, MS is a finite upper bound for h.

We can now prove Theorem [\ref=th:ER82].

For each [formula], let Lk denote the set of all [formula] such that [formula]. Let L' denote the set of all [formula] such that w is a factor of Lk for every [formula]. Let p' denote the complexity function of L', and for each [formula], let pk denote the complexity function of Lk. Since each word in L' is a factor of L0  =  L, p' bounds p from below. Therefore, if p' is increasing then for every [formula], it holds that p(n)  ≥  p'(n)  >  n. It remains to show that if p' is not increasing then p is bounded.

For any i, [formula] with i  ≤  j, all factors of Lj are factors of Li.

Each word in Lj is a prefix of a word in Li: for each w∈Lj, there exists x∈Aj  -  i such that wx∈Li.

The language L' is extendable.

For each w∈Lk  +  1, there exists a∈A such that wa∈Lk. Therefore, for each factor w of Lk  +  1, there exists a∈A such that wa is a factor of Lk. Let w∈L'. For each [formula], let ak∈A be such that wak is a factor of Lk. The finite alphabet A contains a letter a such that ak  =  a for infinitely many [formula]. Therefore, wa is a factor of Lk for infinitely many [formula]. It now follows from Claim [\ref=claim:monotone] that wa∈L'.

If pk is bounded for some [formula] then p is bounded.

Remark that L is a subset of [formula]. Since [formula] is finite, p is bounded whenever the complexity function of LkAk is bounded. Besides, Lemma [\ref=lem:prod-XY] (applied with X  =  Lk and Y  =  Ak) ensures that the complexity function of LkAk is bounded whenever pk is bounded.

For each [formula], there exists [formula] such that Fn(Lk)  ⊆  L'.

Claim [\ref=claim:monotone] ensures

[formula]

and since all sets are finite there exists [formula] such that

[formula]

Assume that p' is not increasing. Then, combining Claim [\ref=claim:cpxprime] and Lemma [\ref=lem:ext-inc], we get that L' only admits finitely many special factors. Let [formula] be greater than the length of every special factor of L'. By Claim [\ref=claim:FnLm], there exists [formula] such that Fn(Lk)  ⊆  L'. Clearly, Lk has no special factor with length n  -  1 or more, and thus pk is eventually constant by Lemma [\ref=lem:non-inc]. It now follows from Claim [\ref=claim:cpxm] that p is bounded.

Prove Theorem [\ref=th:ER82-v] (Hint: use Exercise [\ref=exo:eventually-lg]).