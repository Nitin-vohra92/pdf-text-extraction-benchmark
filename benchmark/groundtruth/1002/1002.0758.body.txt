Basic solutions of systems with two max-linear inequalities

Introduction

We consider systems of two max-plus linear inequalities

[formula]

Here [formula] [formula] and [formula] for i = 1,2 and [formula].

General systems of max-linear inequalities (equivalently, equalities) were tackled by Butkovi and Hegedüs [\cite=BH-84] who established an elimination method for finding basic solutions of such systems, starting with basic solutions of just one equation or inequality and adding all other constraints one by one. This algorithm served as a proof that solution sets to max-linear systems have finite bases, and it did not seem to be efficient enough for practical implementation. But at present, Allamegeon, Gaubert and Goubault [\cite=AGG-09] have come up with a nouvelle approach to the scheme of [\cite=BH-84], in which every step of adding new constraint is dramatically improved by using a max-plus analogue of double description method, and also a certain criterion of minimality estblished in [\cite=BSS-07] [\cite=GK-07] [\cite=NS-07II], see also [\cite=Ser-08], which allows to efficiently test the extremality of a generator.

The idea of the present paper is that when the number of inequalities is small, the basic solutions can be written out explicitly. However as shown by Wagneur, Truffet, Faye and Thiam [\cite=WTFT], even in the case of two inequalities [\eqref=e:sysmain] the number of generators is large and the problem to establish a systematic classification and to resolve the extremality by writing out explicit conditions is nontrivial. This goal is achieved in the present paper by 1) representing the set of all solutions as the union of cones generated by certain Kleene stars (Section [\ref=s:gather]), 2) selecting basic solutions by means of the above mentioned criterion of minimality [\cite=BSS-07] [\cite=GK-07] [\cite=NS-07II] (Section [\ref=s:extr]) which we call the multiorder principle [\cite=Ser-08]. This leads to explicit description of basic solutions and to a procedure which finds all of them in no more than O(n3) operations.

Gathering the generators

We work with the analogue of linear algebra developed over the max-plus semiring [formula] which is the set of real numbers with adjoined minus infinity [formula] equipped with the operations of "addition" [formula] and "multiplication" [formula]. Zero [formula] and unity [formula] of this semiring are equal, respectively, to -    ∞   and 0. The operations of the semiring are extended to the nonnegative matrices and vectors in the same way as in conventional linear algebra. That is if A = (aij), B = (bij) and C = (cij) are matrices of compatible sizes with entries from [formula], we write [formula] if [formula] for all i,j and [formula] if [formula] for all i,j. The notation [formula] will be often omitted.

The main geometrical object of this max-plus linear algebra is a subset [formula] closed under the operations of componentwise maximization [formula] and "multiplication" [formula] by scalars (which means addition in the conventional sense). Such subsets are called max-plus cones or just cones if there is no mix up with the ordinary convexity.

A vector [formula] is a (max-linear) combination of [formula]. A set [formula] is generated by [formula] if each x∈S is a max-linear combination of [formula]. When vectors arise as columns (resp. rows) of matrices, it will be convenient to represent them as max-linear combinations of the column unit vectors

[formula]

respectively the row unit vectors e'i, which are their transpose.

The following series is called the Kleene star of A:

[formula]

where I is the max-plus unity matrix, which has all diagonal entries [formula] and all off-diagonal entries [formula]. When A* has finite entries (in other words, converges) it is easily shown that [formula] is equivalent to [formula]. We also have the following.

Let [formula] be such that A* has finite entries. Then [formula] is generated by the columns of A*.

This section will be based on the following two observations. In the formulation we use the row unit vectors e'i. We denote by Ai  ·, resp. A·  i, the ith row, resp. the ith column, of A.

Let [formula] have rows

[formula]

for [formula]. Then the set [formula] is generated by the columns of A.

In this case A* = A, after which Proposition [\ref=klstar-gen] is applied.

Let [formula] have rows

[formula]

where [formula], [formula] and k  ≠  m.

If [formula] then [formula] is generated by the columns of A*.

If [formula] then [formula] is generated by ei for [formula].

In the first case A* is finite and we apply Proposition [\ref=klstar-gen]. For the second case observe that on one hand, if [formula] for some [formula] then [formula] and [formula] which makes [formula] impossible. On the other hand, any x such that [formula] for all [formula] satisfies [formula].

Now we proceed with writing out a generating set for solutions of [\eqref=e:sysmain]. We denote [formula], [formula], I1: = {i|a1i > b1i} and I2: = {i|a2i > b2i}. With this, system [\eqref=e:sysmain] is equivalent to

[formula]

The solution set to [\eqref=e:sysred] is the union of Skl defined by

[formula]

for k∈J1 and l∈J2. Further we represent Skl defined by [\eqref=e:skldef] in the form

[formula]

where we have to describe Akl. There are two cases: k = l and k  ≠  l. We denote γ1ki: = b- 11ka1i and γ2ki: = b- 12ka2i. We also denote [formula] and [formula]. Observe that [formula] and [formula] (the containment may not be strict in general).

If k = l, then the kth row of Akl is

[formula]

and all other rows are row unit vectors.

If k  ≠  l then the kth and the lth rows of Akl are given by

[formula]

all other rows being row unit vectors.

Now we collect the generators of [formula] considering several special cases.

Case 1. [formula]. The kth row of Akl is given by [\eqref=rows-akl1] and all other rows of Akl are unit vectors. By Proposition [\ref=verysimple], Skl is generated by the columns of Akl. These are:

[formula]

Case 2. k  ≠  l, [formula], [formula]. Rows k and l of Akl are given by [\eqref=rows-akl2], all other rows being the unit vectors. As [formula] and [formula], we obtain [formula] and [formula] and hence (Akl)* = Akl. Making transpose of [\eqref=rows-akl2], we obtain the columns of (Akl)* = Akl. By Proposition [\ref=alsosimple] part 1. they generate Skl:

[formula]

Case 3. [formula], [formula]. Rows k and l of Akl are given by [\eqref=rows-akl2]. However, (Akl)*  ≠  Akl, since k∈I2 implying that [formula]. Note that (Akl)* is always finite, since [formula] implying that the associated digraph of Akl does not contain any cycles with nonzero weight except for the loops (i,i). For i∈I1, we obtain [formula]. More precisely, (Akl)*li  =  γ2lkγ1ki for [formula], and [formula] for [formula]. The lth row of (Akl)* is given by

[formula]

The kth row of (Akl)* is the same as in [\eqref=rows-akl2] and all other rows are unit vectors. We obtain the columns of (Akl)*:

[formula]

Case 4. [formula], [formula]. Rows k and l are given by [\eqref=rows-akl2], and by analogy with Case 3 we obtain that the lth row of (Akl)* is the same as in [\eqref=rows-akl2], but the kth row is given by

[formula]

We obtain the columns of (Akl)*:

[formula]

Case 5. [formula], [formula]. If [formula], then the lth row of (Akl)* is given by [\eqref=rows-akl3] and the kth row of (Akl)* is given by [\eqref=rows-akl4]. By Proposition [\ref=alsosimple] part 1 the columns of (Akl)* generate Skl. If [formula], then by Proposition [\ref=alsosimple] part 2, Skl is generated by ei for [formula]. If [formula], then (Akl)* is finite and its columns are:

[formula]

Identifying the basic solutions

A set [formula] is said to be independent if no vector in this set is generated by other vectors in this set. If such independent set generates a cone K then it is called a basis of K. It can be shown [\cite=BSS-07] [\cite=Wag-91] that if a basis of K exists, then it consists of all extremals (normalized in some sense): a vector x∈K is an extremal if [formula] and y,z∈K imply y = x or z = x. This also means that the basis of any cone is essentially unique: any two bases are obtained from each other by multiplying their elements by scalars. Importantly, any finitely generated cone has a basis [\cite=BSS-07] [\cite=Wag-91].

The notion of extremal defined above is a max-plus analogue of the notion of extremal ray (or extremal) of a convex cone. It is also a special case of the join irreducible element of a lattice.

The extremality is most conveniently expressed by the following multiorder principle [\cite=BSS-07] [\cite=GK-07] [\cite=NS-07II] [\cite=Ser-08] which we formulate here only for finitely generated case. For any [formula] we introduce the relation

[formula]

A vector y∈K minimal with respect to ≤  i will be called i-minimal.

Let [formula] be generated by a finite set [formula] Then y∈S belongs to the basis of K (equivalently, is an extremal of K) if and only if it is i-minimal for some [formula].

If y is not i-minimal for any i, then for each [formula] there exists zi such that zi  ≤  iy. Then it can be verified that

[formula]

Conversely if [formula] for some zk∈S, then for each [formula] there is k(i) such that yi  =  αk(i)zk(i)i and as yj  ≥  αk(i)zk(i)j for all j it follows that zk(i)  ≤  iy and y is not i-minimal for any i.

Next we classify all generators obtained in [\eqref=cols-akl1], [\eqref=cols-akl2], [\eqref=cols-akl3], [\eqref=cols-akl4] and [\eqref=cols-akl5] and give procedures for checking their extremality. We start with unit vectors and combinations of two unit vectors.

S1. ei, [formula]. S2A1. [formula] [formula] [formula]. S2A2. [formula] [formula] [formula]. S2B. [formula] [formula] [formula]. S2C. [formula] and [formula] [formula], [formula] such that [formula].

All vectors in S1, S2A and S2B belong to the basis. Vectors in S2C belong to the basis whenever they exist. For this, we determine the sets

[formula]

Then, φkl,φlk∈S3C exist whenever (k,l)∈W. Note that if [formula] then φkl and φlk are multiples of each other so that one of them can be removed.

We proceed with combinations of three unit vectors. Denote [formula] and [formula]. Note that [formula].

S3A. [formula] for [formula], [formula], [formula].

For all [formula] determine the sets

[formula]

Then, ψikl∈S3A belongs to the basis whenever

[formula]

S3B1. [formula] [formula], [formula], [formula]. S3B2. [formula] [formula], [formula], [formula].

For all [formula], [formula], determine the sets

[formula]

For all [formula], [formula], determine the sets

[formula]

A vector in ψikl∈S3B1 (resp. ψikl∈S3B2) belongs to the basis if and only if the following two conditions are satisfied: 1. [formula] or [formula] (resp. [formula] or [formula]), 2. k∈M1(i,l) or [formula] (resp. l∈M2(i,k) or [formula]).

S3C1. [formula] [formula], [formula], [formula]. S3C2. [formula] [formula], [formula], [formula].

For all [formula], [formula], [formula], determine the sets

[formula]

Then, ψikl∈S3C1 (resp. ψikl∈S3C2) belongs to the basis if and only if [formula] (resp. [formula]).

S3D1. [formula] [formula], [formula], [formula] such that [formula]. S3D2. [formula] [formula], [formula], [formula] such that [formula]. S3E. [formula], [formula], [formula], [formula] such that [formula].

Provided that (k,l)∈W, vector ψikl∈S3D1 (resp. ψikl∈S3D2) belongs to the basis if and only if [formula] or [formula] (resp. [formula] or [formula]), and ψikl∈S3E always belong to the basis.

Below we explain why the above procedure yields the basis. We denote by S1 the set of all generators ei for [formula], by S2 the set of all 2-generators φik and φkl, and by S3 the set of all 3-generators ψikl.

S1,S2: The supports of all generators in [formula] are different, except for the pairs of generators in S2C, which exist if and only if [formula], and are multiples of each other if and only if [formula]. Removing one vector from every such proportional pair in S2C yields an independent set. Evidently, vectors in [formula] cannot be generated with help of vectors in S3, and this completes the explanation.

For the rest of the cases, first note that the supports of all generators in S3 are different and hence the set S3 is independent. It can only happen that the vectors in S3 are linear combinations of the vectors in S1 and S2.

S3A: A vector ψikl∈S3A may be a combination of vectors in S1 and S2B, as the supports of some generators in these sets are contained in the support of a vector in S3A. By the minimality principle, a vector ψikl is extremal if and only if it is i-, k- or l-minimal. Then, ψikl can be neither k- nor l-minimal since for all [formula] the only minimal generators are ek and el. The i-minimality of ψikl∈S3A can be prevented only by φki∈S2B or φli∈S2B. Condition [\eqref=3acond] describes the situation when this does not happen.

S3B: A vector ψikl∈S3B can be a max combination of vectors in S1, S2A and S2C due to the inclusion of supports. Again, ψikl can be neither k- nor l-minimal, since it can be represented as a combination of ei and a vector from S2A1 (resp. S2A2) in the case of S3B1 (resp. S3B2):

[formula]

Next we describe the 2-generators which can prevent the i-minimality of ψikl∈S3B1 (resp. ψikl∈S3B2). 1. φil,φli∈S2C (resp. φki,φik∈S2C). These 2-generators do not arise only if i∈K1 for S3B1 (resp. i∈K2 for S3B2), for then there is no vector in S2C whose support is a subset of the support of ψikl, or if the corresponding pair φil,φli∈S2C (resp. φki,φik∈S2C) does not exist meaning [formula] (resp. [formula]). 2. φik∈S2A2 (resp. φil∈S2A1). These vectors do not arise only if k∈K2 (resp. l∈K1), because then k∉J2 (resp. l∉J1) unlike in the case of S2A2 (resp. S2A1). Otherwise, φik (resp. φil) are not dangerous, i.e., they do not precede ψikl with respect to ≤  i only if k∈M1(i,l) (resp. l∈M2(i,k)), see [\eqref=mil-def] and [\eqref=mil-def].

S3C: A vector ψikl∈S3C can be a max combination of vectors in S1, S2A and S2B. Again, ψikl can be neither k- nor l- minimal. Indeed,

[formula]

where the vectors in brackets belong to S2A1 and S2A2 respectively. The first vector cannot be k-minimal since [formula], and it cannot be l-minimal as it to loses [formula]. The second vector cannot be l-minimal since [formula], and it cannot be k-minimal as it loses to [formula]. The remaining possibility of being i-minimal can be destroyed by vectors from S2B, and this does not happen if and only if the given conditions are satisfied.

S3D, S3E: A vector ψikl∈S3D cannot be a max combination of other vectors of S2 than those in S2C. It is not a max combination of vectors in S2C only if i is not suitable for existence of vectors in S2C. This happens if [formula] or [formula] for the case ψikl∈S3D1, and [formula] or [formula] for the case ψikl∈S3D2. Finally, the vectors in S3E cannot be combinations of vectors in S2, since only vectors in S2C have relevant supports (and yet not enough). So the vectors in S3E are in the basis whenever they exist.

We note that the complexity of the above procedure id O(n3), which is due to the computation of the sets M1(i,l) [\eqref=mil-def], M2(i,k) [\eqref=mik-def], N1(i,l) and N2(i,k) [\eqref=n-def], and checking conditions for all combinations of three unit vectors.

We conclude the paper with two examples. The second example is taken from [\cite=WTFT], Example 4.2.

Example 1. To illustrate the sets of generators constructed in the paper on a simple example, we consider the following system of two inequalities with four variables:

[formula]

We have I1  =  {3,4}, [formula], I2  =  {1,3}, J2  =  {2}, [formula]. We compute S1: just e2, since [formula]; S2A1: just [formula], since [formula] and [formula]; S2A2: just [formula], since [formula] and [formula]; S2B: [formula], since [formula] and [formula]; S2C: empty, since [formula] is empty; S3A: trivializes to S2B; S3B1: empty, since [formula] is empty; S3B2: just [formula], since [formula], [formula], [formula]; S3C1: empty, since [formula] is empty; S3C2: just [formula], which is [formula], since [formula], [formula], [formula]; S3D1, S3D2 and S3E: empty, since [formula] is empty.

In this example, the basis consists of four generators in S1, S2A1, S2A2 and S2B: e2, [formula], [formula] and [formula]. Indeed, the remaining two generators in S3 are redundant: 1) [formula] (S3B2) is a combination of [formula] (S2A1) and [formula] (S2A2), 2) [formula] (S3C2) is a combination of [formula] (S2A2) and [formula] (S2B).

Example 2. To compare our results with the approach of [\cite=WTFT], we consider [\cite=WTFT], Example 4.2, which is a system of two inequalities with seven variables:

[formula]

In this case I1  =  {4,5,6,7}, [formula], I2  =  {2,3,7}, [formula]. We compute the generators comparing them with those in the table of [\cite=WTFT] page 365: S1: just e1, since [formula]. This is x1 in the table of [\cite=WTFT]. S2A1: Combining [formula] and [formula] we obtain [formula], [formula] and [formula]. Vector [formula] corresponds to x3, and the remaining two vectors are x5 and x10 in the table of [\cite=WTFT]. S2A2: Combining [formula] and [formula] we obtain [formula] and [formula]. These correspond to x4 and x7 in the table of [\cite=WTFT]. S2B: just [formula], combining [formula] with [formula]. This is x2 in the table of [\cite=WTFT]. S2C. To compute these we need to combine [formula] with [formula]. For each k = 2,3 and l = 4,5,6 we need to check whether [formula], and each time this condition is satisfied we have two vectors (or just one vector if [formula]). In our case the condition is satisfied only with k = 3 and l = 6. This yields two vectors [formula] and [formula], which are x6 and x11 in the table of [\cite=WTFT]. S3A: trivializes to S2B. S3B1: We need to combine [formula], [formula] and [formula]. For i = 2,3, l = 4,5,6 and k = 1, each time when [formula], we have to verify whether γ1klγ2li  <  γ2ki holds. Each time when both conditions are satisfied, we have an independent vector of the basis. Here it never happens. S3B2: We need to combine [formula], [formula] and [formula]. For k = 2,3, i = 4,5,6 and l = 1, each time when [formula], we have to verify whether γ2lkγ1ki  <  γ1li holds. Each time when both conditions are satisfied, we have an independent vector of the basis. Here it happens with 1) l = 1, k = 3 and i = 4 leading to [formula] which corresponds to x8 of [\cite=WTFT], 2) l = 1, k = 3 and i = 5 leading to [formula], which corresponds to x9 of [\cite=WTFT]. S3C1: Here we combine [formula] with [formula] and [formula]. Since γ1ki  >  γ2ki with k = 1 and i = 7, no vector belongs to the basis in this case. S3C2: We combine [formula], [formula] and [formula]. For each k = 2,3, l = 1 and i = 7 we have to verify [formula]. This happens for k = 3, l = 1 and i = 7 and yields the vector [formula], which corresponds to x12 of [\cite=WTFT]. S3D1: We combine [formula] [formula], [formula]. For k = 2,3 and l = 4,5,6, the condition [formula] holds only for k = 3 and l = 6, so it remains to verify [formula] for i = 2 and l = 6. This condition holds and we obtain [formula] which is proportional with [formula]. Note that the max-linear combination of e2,e3,e6 given for x13 in the table of [\cite=WTFT] is an error, since [formula]. S3D2: We combine [formula] [formula], [formula]. For k = 2,3 and l = 4,5,6, the condition [formula] holds only for k = 3 and l = 6, so it remains to verify [formula] for i = 4,5 and k = 3. This condition holds in both cases and yields [formula] which is proportional with [formula], and [formula] proportional with [formula]. S3E: We combine [formula] [formula] and [formula]. As [formula] only for k = 3 and l = 6, we have only one generator, namely [formula].

Thus the basis consists of e1, 8 combinations of 2 unit vectors and 7 combinations of 3 unit vectors.

The 2-combinations are: [formula], [formula] and [formula] (S2A1), [formula] and [formula] (S2A2), [formula] (S2B), [formula] and [formula] (S2C).

The 3-combinations are: [formula], [formula] (S3B2), [formula] (S3C2), [formula] (S3D1), [formula] and [formula] (S3D2), [formula] (S3E).

We note that all vectors that we have found, are solutions of the system, and moreover, all 3-generators turn both inequalities into equalities, which in analogy with the convex analysis also suggests that they must be extremals (the 2-generators correspond to the intersections with coordinate planes). Actually vectors in S3B2 and S3C2 are different from x8,x9 and x12 from the table of [\cite=WTFT] page 365, to which they correspond in terms of supports. For these, [formula] is a combination of [formula] (from S3B2), [formula] (from S2A2) and e1, [formula] is a combination of [formula] (from S3B2) and [formula], and [formula] is a combination of [formula] (from S3C2) and e1. The remaining generator in the table of [\cite=WTFT] is [formula]. It is in error, since it violates the second inequality of [\eqref=e:sysex2], but in terms of support, it corresponds to [formula] from S3D1. Also, there are three combinations which are not in the table of [\cite=WTFT], from S3D2 and S3E.