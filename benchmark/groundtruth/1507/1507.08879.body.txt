L-Visibility Drawings of IC-planar Graphs

Research supported in part by the MIUR project AMANDA "Algorithmics for MAssive and Networked DAta".

Introduction

A visibility drawing Γ of a planar graph G maps the vertices of G into non-overlapping horizontal segments (bars), and the edges of G into vertical segments (visibilities), each connecting the two bars corresponding to its two end-vertices. Visibilities intersect bars only at their extreme points. Γ is a strong visibility drawing if there exists a visibility between two bars if and only if there exists an edge in G between the corresponding vertices. Every biconnected planar graph admits a strong visibility drawing (see, e.g., [\cite=TamassiaTollis86]). Conversely, if a visibility may not correspond to an edge of the graph, then Γ is a weak visibility drawing. Since every planar graph can be augmented to a biconnected planar graph by adding edges, every planar graph admits a weak visibility drawing.

The problem of extending visibility drawings to non-planar graphs has been first studied by Dean et al. [\cite=DBLP:journals/jgaa/DeanEGLST07]. They introduce bar k-visibility drawings, which are visibility drawings where each bar can see through at most k distinct bars. In other words, each visibility segment can intersect at most k bars, while each bar can be intersected by arbitrary many visibility segments. The graphs that admit a bar 1-visibility drawing are called 1-visibile. Brandenburg et al. and independently Evans et al. prove that 1-planar graphs, i.e., those graphs that can be drawn with at most one crossing per edge, are 1-visible [\cite=DBLP:journals/jgaa/Brandenburg14] [\cite=DBLP:journals/jgaa/Evans0LMW14]. They focus on a weak model, where there is a visibility through at most k bars if there is an edge, while the converse may not be true. In fact, having a strong model would be too restrictive in the case of bar k-visibility drawings. For example, it is easy to see that a cycle of length at least four does not admit a strong bar 1-visibility drawing [\cite=DBLP:journals/jgaa/Brandenburg14]. In terms of readability, a clear benefit of bar k-visibility drawings is that the crossings form right angles. Right-angle crossing (RAC) drawings and their advantages in terms of readability have been extensively studied in the graph drawing literature (see, e.g., [\cite=dl-cargd-12] [\cite=DBLP:conf/apvis/HuangHE08]). However, in a bar k-visibility drawing crossings involve bars and visibilities, i.e., vertices and edges. These crossings are arguably less intuitive than crossings between edges.

Evans et al. introduce a new model of visibility drawings, called L-visibility drawings [\cite=elm-svrp+-15]. Their aim is to simultaneously represent two plane st-graphs Gr and Gb (whose union might be non-planar). They assume a strong model, where each vertex is represented by a horizontal bar and a vertical bar that share an extreme point, i.e. it is an L-shape in the set {[figure] ~ ,[figure] ~ ,[figure] ~ ,[figure]  ~  }. Two L-shapes are connected by a vertical (horizontal) visibility segment if and only if there exists an edge in Gr (Gb) between the corresponding vertices, no two L-shapes cross one another, and visibilities intersect bars only at their extreme points. A clear advantage of this kind of drawing is that the only possible crossings are between vertical and horizontal visibilites, i.e., between edges of the graph. Furthermore, similar to bar k-visibilities, these crossings form right angles.

In this paper we initiate the study of weak L-visibility drawings of non-planar graphs. We focus on the class of graphs that admit a drawing where each edge is crossed at most once, and no two crossed edges share an end-vertex. These graphs are called IC-planar graphs (see Fig. [\ref=fi:example-1] for an example). Their chromatic number is at most five [\cite=ks-cpgic-JGT10], and they have at most 13n / 4 - 6 edges, which is a tight bound [\cite=zl-spgic-CEJM13]. Recognizing IC-planar graphs is NP-hard [\cite=bdek+-rdicg-15]. Our main contribution is summarized by the following theorem, proved in Section [\ref=se:proof]. See Fig. [\ref=fi:example-2] for an example of a drawing computed by using Theorem [\ref=th:main].

Every n-vertex IC-plane graph G admits a L-visibility drawing in O(n2) area, which can be computed in O(n) time.

We remark that Theorem [\ref=th:main] contributes to the rapidly growing literature devoted to the problem of drawing graphs that are "nearly planar" in some sense, i.e. graphs where only some types of edge crossings are allowed (for example, an edge can be crossed at most a constant number of times); see e.g., [\cite=DBLP:conf/ictcs/Liotta14] for references. In particular, Brandenburg et al. have recently described a cubic-time algorithm that computes IC-planar drawings with right-angle crossings and straight-line edges [\cite=bdek+-rdicg-15]. However these drawings may require exponential area, which is proved to be worst-case optimal [\cite=bdek+-rdicg-15]. Brandenburg et al. leave as an open problem to study techniques that compute IC-planar drawings in polynomial area and with good crossing resolution [\cite=bdek+-rdicg-15]. We also recall that every graph admits a RAC drawing with at most three bends per edge [\cite=DBLP:journals/tcs/DidimoEL11], while testing whether a graph has a straight-line RAC drawing is NP-hard [\cite=DBLP:journals/jgaa/ArgyriouBS12]. The following corollary follows as a byproduct of Theorem [\ref=th:main] (see also Fig. [\ref=fi:example-3]).

Every n-vertex IC-plane graph G admits a RAC drawing with at most two bends per edge in O(n2) area, which can be computed in O(n) time.

Preliminaries

We assume familiarity with basic graph drawing concepts, see also [\cite=dett-gd-99].

Planarity and connectivity. A graph G = (V,E) is simple, if it contains neither loops nor multiple edges. We consider simple graphs, if not otherwise specified. A drawing Γ of G maps each vertex of V to a point of the plane and each edge of E to a Jordan arc between its two end-points. We only consider simple drawings, i.e., drawings such that the arcs representing two edges have at most one point in common, which is either a common end-vertex or a common interior point where the two arcs properly cross. A drawing is planar if no two arcs representing two edges cross. A planar drawing divides the plane into topologically connected regions, called faces. The unbounded region is called the outer face. A planar embedding of a graph is an equivalence class of planar drawings that define the same set of faces. A graph with a given planar embedding is a plane graph. For a non-planar drawing, we can still talk about embedding considering that the boundary of a face may consist of portions of arcs between vertices and/or crossing points.

A graph is biconnected if it remains connected after removing any one vertex. A directed graph (a digraph for short) is biconnected if its underlying undirected graph is biconnected. A topological numbering of a digraph is an assignment, X, of numbers to its vertices such that X(u)  <  X(v) for every edge (u,v). A graph admits a topological numbering if and only if it is acyclic. An acyclic digraph with a single source s and a single sink t is called an st-graph. A plane st-graph is an st-graph that is planar and embedded such that s and t are on the boundary of the outer face. In any st-graph, the presence of the edge (s,t) guarantees that the graph is biconnected. In the following we consider st-graphs that contain the edge (s,t), as otherwise it can be added without violating planarity. Let G be a plane st-graph, then for each vertex v of G the incoming edges appear consecutively around v, and so do the outgoing edges. Vertex s only has outgoing edges, while vertex t only has incoming edges. This particular transversal structure is known as a bipolar orientation [\cite=DBLP:journals/dcg/RosenstiehlT86] [\cite=TamassiaTollis86]. Each face f of G is bounded by two directed paths with a common origin and destination, called the left path and right path of f.

IC-planar graphs. We recall some definitions also given in [\cite=bdek+-rdicg-15]. A drawing is IC-planar if each edge is crossed at most once, and any two crossed edges do not share an end-vertex. See Fig. [\ref=fi:example-1] for an illustration. An IC-planar embedding is an embedding derived from an IC-planar drawing. A graph with a given IC-planar embedding is an IC-plane graph. Thomassen [\cite=t-rdg-JGT88] characterized the possible crossing configurations that occur in a 1-planar drawing, i.e., a drawing where each edge is crossed at most once. This characterization applied to IC-planar drawings gives rise to the following property, where an X-crossing is of the type described in Fig. [\ref=fi:thomassen-1], and a B-crossing is of the type described in Fig. [\ref=fi:thomassen-2] (the solid edges only).

A kite K is a graph isomorphic to K4 together with an embedding such that all the vertices are on the boundary of the outer face. This implies that two edges of K cross each other, while the other four edges are not crossed and belong to the boundary of the outer face; see Fig. [\ref=fi:thomassen-1]. Consider a pair of crossing edges of an IC-plane graph G, such that their four end-vertices induce a kite K. The kite K is empty, if in G there is no other vertex inside the internal faces of K. The following property is a consequence of the more general Lemma 1 in [\cite=bdek+-rdicg-15] (in particular of cases c1 and c2 of that lemma).

Visibility model. In a L-visibility drawing Γ of a graph G, every vertex is represented by a horizontal and a vertical segment sharing an end-point, i.e., by an L-shape in the set {[figure] ~ ,[figure] ~ ,[figure] ~ ,[figure]  ~  }. Each edge of G is drawn in Γ as either a horizontal or a vertical visibility segment joining the two L-shapes corresponding to its two end-vertices. Clearly, horizontal visibilities only cross vertical visibilities at right angles. Also, no two L-shapes intersect. If G is an IC-plane graph, then each visibility is crossed at most once and no two crossed visibilities are incident to the same L-shape. In Fig. [\ref=fi:example-2], an L-visibility representation Γ of an IC-plane graph G is shown. Finally, we adopt a weak model, where a visibility may not imply the existence of the corresponding edge in the graph. For example, in Fig. [\ref=fi:example-2] the L-shapes of vertices 8 and 10 can be joined by a horizontal visibility, although the edge (8,10) does not exist in G.

Proof of Theorem [\ref=th:main]

The proof of Theorem [\ref=th:main] is constructive and is based on a drawing algorithm that takes as input an IC-plane graph G and returns a L-visibility drawing Γ of G. By Property [\ref=pr:augmentation], we assume that G is such that each crossing induces an empty kite (see Section [\ref=se:preliminaries]). In fact, the output of our drawing algorithm maintains the IC-planar embedding obtained by applying Property [\ref=pr:augmentation]. We begin by removing from G all pairs of crossing edges and orient the resulting graph P to an st-graph. The computed orientation is such that, when reinserting a pair of crossing edges in the corresponding planar face of P, one of them is always incident to the origin and the destination of the face. In other words, each face of P that corresponds to an empty kite of G, is oriented so that its left and right paths contain exactly one vertex each. To prove that this is always the case, we first need to introduce additional notation. Let f be a face of a plane graph G. Let [formula] be the [formula] vertices that belong to the boundary of f, and let N(v) be the set of neighbors of a vertex v of G. The contraction of f is the operation defined as follows. Add to G a vertex vf and connect vf to the vertices in [formula]. Then remove [formula] from G. The resulting (multi)graph is still planar. Moreover, the contraction operation can be performed so to preserve the planar embedding of G. Namely, the circular order of the edges incident to vf is the same circular order encountered walking along the boundary of f. See also Fig. [\ref=fi:contraction] for an illustration. The original graph G can be obtained by applying the reverse operation, called the expansion of vf. Namely, vertices [formula] are reinserted along with their original edges and vf is removed from the graph.

Let G be an n-vertex IC-plane graph such that the end-vertices of each pair of crossing edges induce an empty kite. Let C be the set of crossing edges in G, and consider the plane graph [formula]. Graph P can be oriented to an st-graph such that each pair of crossing edges of C has been removed from a face of P whose left and right paths contain exactly one vertex each. This operation can be done in O(n) time.

Each pair of crossing edges of G induces an empty kite K, and thus corresponds to a single face fK in P having exactly four vertices on its boundary. As a first step, we contract each face fK of P (corresponding to a kite K in G). See also Fig. [\ref=fi:contraction] for an illustration. Notice that, since G is an IC-plane graph, no two faces of P share a vertex, and thus each vertex vK of PC corresponds to exactly one face of P. Hence, we can contract the faces following an arbitrary order. The resulting graph PC is a plane (multi)graph. Indeed, observe that if a face fK of P shares an edge with a triangular face f, then PC will contain two parallel edges between vK and the vertex v of f not in fK (see also Fig. [\ref=fi:contraction]).

As a second step, we orient PC to an st-graph (observe that parallel edges must receive the same orientation). In the third step, we expand one by one all the vertices vK corresponding to a contracted face fK. After expanding a vertex vK, we orient the four reinserted edges of the face fK maintaining the following invariants: I1. The resulting graph has a single source and a single sink; I2. The left and right paths of fK contain exactly one vertex each.

Invariants I1 and I2 imply that the graph after expanding vK is still an st-graph, as it has a single source and a single sink by I1 and is acyclic by I2.

Let {a,b,c,d} be the four vertices belonging to the boundary of face fK, encountered in this order clockwise around the boundary of the face. To maintain I2 we need to orient the edges of fK such that the origin and the destination of fK are two non-adjacent vertices, i.e., either a and c or b and d. In order to maintain I1, recall that the incoming edges of vK appear consecutive around it and so do the outgoing edges, unless vK is the source or the sink of the graph. Thus, if vK is neither the source nor the sink of the graph, then at most two of the reinserted vertices will have both incoming and outgoing edges incident to vK, whereas at most three will have only incoming or only outgoing edges incident to vK. We distinguish the following three cases.

Case 1. No vertex of fK has both incoming and outgoing edges. See Fig. [\ref=fi:expansion-1] for an illustration. Then we consider the following subcases. Case 1a. There are three vertices having only outgoing edges, say a, b and c, which implies that all the edges of d are incoming. In this case, we orient the edges of fK so that b is the destination and d is the origin of the face, which ensures I2. All vertices has now both incoming and outgoing edges, and thus I1 is also maintained. Case 1b. There are three vertices having only incoming edges, say a, b and c, which implies that all the edges of d are outgoing. In this case, the orientation that ensures I1 and I2 is the one where d is the destination and b is the origin of the face. Case 1c. Two (consecutive) vertices only have incoming edges, say c and d, and two (consecutive) vertices only have outgoing edges, a and b. Then to maintain I1 and I2 we let a to be the destination and c the origin of the face. This particular case is shown in Fig. [\ref=fi:expansion-1].

Case 2. Only one vertex of fK , say a, has both incoming and outgoing edges. Moreover, assume that the incoming edges of a are between the edge (a,d) and the outgoing edges of a, as in Fig. [\ref=fi:expansion-2], since the case in which the incoming edges of a are between the outgoing edges of a and the edge (a,b) is symmetric. We have two subcases. Case 2a. The other three vertices only have incoming (resp., outgoing) edges. In this case, we orient the edges of fK so that c (resp., a) is the origin and a (resp., c) is the destination. This choice ensures both I1 and I2. Case 2b. Two vertices only have incoming edges and the other vertex only have outgoing edges. Due to the bipolar orientation of vK, the two vertices having only incoming edges are c and d. Then we choose d as origin of the face and b as destination, which ensures both I1 and I2. This particular case is shown in Fig. [\ref=fi:expansion-2]. The same orientation works also if two vertices only have outgoing edges (b and c) and the other vertex only have incoming edges (d).

Case 3. Two vertices of fK have both incoming and outgoing edges. We have two subcases. Case 3a. Suppose first that these two vertices, say a and b, are adjacent in P. Moreover, assume that the incoming edges of a are between the edge (a,d) and the outgoing edges of a, as in Fig. [\ref=fi:expansion-3], since the other case is symmetric. This implies that the incoming edges of b are between the outgoing edges of b and the edge (b,c). Moreover, c and d only have incoming edges. Then, if we let a to be the destination of the face and c the origin, I1 and I2 are maintained. Case 3b. Suppose now that the two vertices, say a and c, are not adjacent in P. Moreover, assume that the incoming edges of a are between the edge (a,d) and the outgoing edges of a, as in Fig. [\ref=fi:expansion-3], since the case in which the incoming edges of a are between the outgoing edges of a and the edge (a,b) is symmetric. This implies that the incoming edges of c are between the outgoing edges of c and the edge (c,d). Moreover, b and d only have outgoing and incoming edges, respectively. Then, if we orient the edges of fK so that b is the destination of the face and d the origin, then I1 and I2 are ensured.

Finally, suppose that vK is the source (resp., sink) of the graph. Then all the vertices of fK have either no incident oriented edges, or all outgoing (resp., incoming) edges. Also, at least one of them has at least one outgoing (resp., incoming) edge, say a. We orient the edges of fK so that a is the destination (resp., origin) and c the origin (resp., destination) of fK.

The described algorithm works in O(n) time. Namely, the graph PC can be constructed and oriented to an st-graph in O(n) time (see, e.g., [\cite=Even1976339]). Furthermore, orienting the edges of an expanded face requires first to analyze the orientation of the edges incident to each vertex of the face, and then to orient the edges of the face. Since the faces are vertex-disjoint, this costs at most [formula], where mP is the number of edges of P, which is O(n).

Let fK be a face of the plane st-graph P which corresponds to an (empty) kite K in G. By Lemma [\ref=le:st-orientation], fK is such that its left and right path have both length two. This implies that one of the two crossing edges of K is incident to the origin and to the destination of fK, whereas the other one is incident to the two vertices belonging one to the left and one to the right path of fK. Let P+ be the biconnected plane graph obtained from P by reinserting, for each pair of crossing edges of G, the edge incident to the origin and to the destination of the corresponding face in P. Furthermore, let Γ' be a strong visibility drawing of P+ in O(n2) area, which can be computed in O(n) time (see, e.g., [\cite=TamassiaTollis86]).

Γ' can be transformed into a L-visibility drawing Γ of G that requires O(n2) area. This operation can be done in O(n) time.

Consider a face fK of P corresponding to an empty kite K in G. Let {a,b,c,d} be the four vertices of fK, encountered in this order clockwise around the boundary of the face. See also Fig. [\ref=fi:face]. Without loss of generality, let a be the destination of the face. Then Lemma [\ref=le:st-orientation] implies that c is the origin of fK, and thus the edge reinserted in P+ for this face is (a,c). In other words, fK is split in two faces in P+, and these two faces share the edge (a,c). Consider the subdrawing of Γ' induced by the four vertices {a,b,c,d} . An illustration is also shown in Fig. [\ref=fi:barvisrep]. Let sv be the bar representing a vertex v in Γ'. Either sd and sb are drawn at the same y-coordinate, or, one is above the other. Also, the two bars do not overlap as there is no edge between b and d in P+ (and Γ' is a strong visibility drawing). Between the two bars there is actually (at least) one unit gap needed to draw the visibility from sc to sa. Moreover, sc is below both sd and sb, while sa is above both of them. In any case, we first extend sd (resp., sb) by 0.25 units to the right (resp., left). Next, if sb and sd have the same y-coordinate, then it suffice to draw two vertical bars s'd and s'b, such that the bottomost end-point of s'd (resp., s'b) coincides with the rightmost end-point of sd (resp., leftmost end-point of sb), and such that the other end-point is 0.5 units above it. If one is above the other, say sb is above sd, and the difference in terms of y-coordinates between the two bars is [formula] units, then we draw two vertical bars s'd and s'b, such that the end-point of s'd (resp., s'b) coincides with the rightmost end-point of sd (resp., leftmost end-point of sb), and such that the other end-point is k / 2 units above it (resp., below it). In both cases, the two resulting L-shapes see each other through a horizontal visibility segment. See also Fig. [\ref=fi:lvisrep]. Since every vertex is adjacent to at most one crossed edge we have that the final drawing Γ is a L-visibility drawing of G. Since Γ' contains O(n) segments which have to be transformed to L-shapes, Γ is computed in O(n) time. Finally, in order to restore integer coordinates, we scale by a factor 4 the grid of Γ, which thus takes O(n2) area.

Lemmas [\ref=le:st-orientation] and [\ref=le:drawing] imply Theorem [\ref=th:main]. To prove Corollary [\ref=co:main], consider a visibility drawing Γ of an n-vertex IC-plane graph G. By Theorem [\ref=th:main], Γ can be computed in O(n) time and fits on a grid of O(n2) size. Let [formula] be an L-shape of Γ. The representative point r of [formula] is defined as follows. If both the horizontal and the vertical segments of [formula] have non-zero length, then r is the point where they touch. Otherwise, r is the midpoint of the segment of [formula] having non-zero length. Replace each vertical visibility segment with a polyline as follows. Let s be a visibility segment connecting the two L-shapes [formula] and [formula]. Let r1 and r2 be the representative points of [formula] and [formula], respectively. Also, let p1 and p2 be the points that s shares with [formula] and [formula], respectively. Suppose that r1 is below r2 (and thus p1 is below p2). Replace s with the polyline starting at r1, bending 0.25 grid units above p1, bending again 0.25 units below p2, and ending at r2. With a symmetric operation we can also replace each horizontal visibility segment. Finally, replace each L-shape with its representative point. The resulting drawing is an IC-plane drawing of G where edges are polylines with (at most) two bends that cross at right-angles. Finally, scaling by a factor 4 the grid of the drawing we restore integer coordinates. Fig. [\ref=fi:example-3] shows a RAC drawing computed from the L-visibility drawing in Fig. [\ref=fi:example-2].

Conclusions and Open Problems

We have proved that every IC-plane graph G has a L-visibility drawing which can be computed in linear time. As a corollary, our result implies that G has a RAC drawing in quadratic area and at most two bends per edge which can also be computed in linear time. We conclude the paper with two open problems: (i) Does every 1-planar graph admit a visibility drawing where the shape associated with each vertex is either an L-shape, a T-shape, or a +-shape? (ii) Does every IC-plane graph admit a RAC drawing with at most one bend per edge in polynomial area?