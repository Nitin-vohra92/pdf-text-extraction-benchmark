Distributed Greedy Scheduling for Multihop Wireless Networks

Scheduling and routing algorithms allocate resources to competing flows in multihop wireless networks. Research into scheduling, routing and congestion control is several decades old, but has seen a lot of activity , following the seminal paper of Tassiulas and Ephremides [\cite=tassiulas]. One possible way to schedule links in a wireless network is to use a spatial time division multiple access (STDMA) along with the physical interference model. While physical interference model allows more aggressive scheduling, it has been shown that no localized distributed algorithm can solve the problem of building a feasible schedule under this model [\cite=brar]. Since the paper by Kumar and Gupta [\cite=gupta], the protocol model of wireless network has been studied extensively. Research has shown that a K-hop link interference model can be used to effectively model the protocol model [\cite=sharma].

A commonly used model is the K-hop link interference model, in which two links that are not within K-hops of each other can communicate simultaneously, and the capacity of a link is a constant value if there is no interference [\cite=lin], [\cite=chaporkar], [\cite=wu], [\cite=joo], [\cite=lin1], [\cite=wu1]. In [\cite=lin], the Maximal Matching (MM) scheduling algorithm is used under the node exclusive interference model. This algorithm can operate in a distributed fashion and is proven to achieve at least one half of the achievable throughput. This has motivated subsequent research on distributed algorithms with provable performance [\cite=chaporkar], [\cite=wu], [\cite=wu1], [\cite=joo], [\cite=lin1].

Scheduling algorithms under different SINR interference models have been studied in the literature [\cite=neely], [\cite=chiang], [\cite=soldati], [\cite=gro], [\cite=kim]. In [\cite=neely], the authors have proposed a simple and distributed scheduling algorithm, that is an approximation to the optimal centralized algorithm. In [\cite=chiang], for the logarithmic SINR interference model, the author has proposed a distributed algorithm that is distributed and optimal when SINR values are high. The authors in [\cite=soldati] and [\cite=gro] have also proposed heuristic algorithms under the target SINR interference model where the capacity of a link is a constant value when the received SINR exceeds a threshold, or zero otherwise. In [\cite=kim], the authors have explore localized distributed scheduling for linear and logarithmic SINR model.

The problem of link scheduling under the K-hop link interference model has been shown to be NP-hard in [\cite=sharma], [\cite=jain]. Motivated by this, we explore heuristics to address the link scheduling problem. In particular, it is interesting to explore the greedy heuristic because it lends itself to a distributed implementation [\cite=sharma]. While the idea of a distributed version of the greedy heuristic seems trivial, to the best of our knowledge, it has not been described precisely in the literature,. We find that the distributed greedy heuristic involves certain subtleties, that makes the algorithm non-trivial.

The main results of the paper can be summarized as follows:

We develop a distributed greedy heuristic for the scheduling problem under K-hop link interference model.

We prove that the distributed greedy and the centralized greedy scheduling heuristics, compute identical schedules.

The remainder of this paper is organized as follows. The system model and the problem formulation are described in Section 2. In Section 3, we describe and analyze the distributed greedy algorithm. We conclude in Section 4.

We represent the network as a directed graph [formula], where N represents the set of nodes and L represents the set of links in the wireless network. We assume that all the wireless transmissions use the same wireless channel and hence interfere with one other. We also assume that all the transmissions happen at a fixed power level (which can be different for different nodes). A wireless link (i,j)∈L if node j can receive packets from node i, provided no other transmissions are going on. The wireless links are considered as directed edges. If we consider a link (i,j)∈L, then we define node i as the source and node j as the sink. If a link has node i as its source node, then that link is called an attached link of node i. We note that no matter where the schedule is computed in the network, it needs to be conveyed to the source node of the scheduled link.

IEEE 802.11 based interference model is used for modeling inter-link interference. Here we reproduce some definitions from [\cite=sharma] in order to define the interference model. Let dS(x,y) denote the shortest distance (in terms of number of links) between nodes x,y∈N. Define a function [formula] as follows: For lu = (u1,u2), lv = (v1,v2)∈L, let

[formula]

In the K-hop link interference model, we assume that any two links l1 and l2 for which d(l1,l2) < K, will interfere with each other and hence can not be active simultaneously.

A set of links M is a maximal independent set, provided no two links of M interfere with each other under the given interference model, and no other link can be added to M without violating an interference constraint. The scheduling problem can then be stated as:

[formula]

where λl is the price of link l∈L. We note that the price of each link l is a arbitrary positive number which can characterize various factors and IK denotes the set of all maximal independent sets possible under the K-hop link interference model. We assume all nodes have their clocks synchronized to a global time, within a reasonable degree of accuracy. We also assume that there is a reliable mechanism, to pass message between nodes.

The main intention behind selecting the greedy heuristic as a scheduling policy is that it can be implemented in a distributed manner. Here, we present the Greedy Heuristic as in [\cite=sharma].

Here, a set of edges W is a K-valid matching if [formula] with l1  ≠  l2, we have d(l1,l2)  ≥  K.

Here we describe the algorithm for the greedy heuristic. This algorithm is implemented at every node n∈N, as given below.

The algorithm is laid out as what messages are exchanged between nodes in each slot of the mth ROUND and what decision needs to be made at the slot boundary, after the completion of the given slot. The SEND LINK PRICES slot, SEND MARKED LINK slot and SEND STATUS slot, together constitute a ROUND. All computations are performed by the nodes themselves, at the slot boundaries, with the local information obtained in the slot immediately preceding the slot boundary.

Let SmL,SmM,SmT be the SEND LINK PRICES slot, SEND MARKED LINK slot and SEND STATUS slot respectively during the mth ROUND. Let TmL,TmM,TmT be the slot termination time for the SEND LINK PRICES slot, SEND MARKED LINK slot and SEND STATUS slot respectively, which take part in the the mth ROUND.

Each link in the network can be in any of four states OPEN (O), CHECK (CH), MARKED (M) and CLOSED (CL). All links are initially set to OPEN and the algorithm set to DO NOT TERMINATE.

The links that are MARKED, are the maximum-priced links in their corresponding (K + 1) hop neighbourhoods. Also the links that are moved into CLOSED state will definitely have a MARKED link within K hop link distance. These links will continue to remain in their respective states, and will not participate in price dissemination in the subsequent ROUNDs.

A link is moved to CHECK state, if it sees a higher priced interfering link during price dissemination, but is unable to decide if that link will get MARKED. In this slot, CHECK links get to know if there is indeed a higher priced MARKED links interfering with it. If so, they are CLOSED.

The local termination condition is that no attached link is in OPEN or CHECK state. In the above slot, this information is conveyed to all the other nodes in the network in a distributed manner. This makes sure that the algorithm terminates in a synchronous fashion at each node.

Let us see some examples which illustrate the scheduling algorithm. Let us consider a linear network with 7 nodes, with a 2-hop link interference. The link states is shown against the time when different decision are made. For data transfer, only links (1,2), (2,3), (3,4), (4,5), (5,6) and (6,7) are considered; but control traffic can flow in the opposite direction too.

In the first ROUND, only link (1,2) is MARKED. All other links see a higher priced interfering link and thus move into CHECK state. Link (1,2) announces it is MARKED. Links (2,3) and (3,4) are CLOSED, on reception of this information, since they interfere with link (1,2). But all other links are moved to OPEN, since they do not find any interfering MARKED link. This process now repeats itself until the network has no OPEN or CHECK links.

In this example, the highest price link is located in the middle of the network. As a result, more links are moved into the CLOSED state after the first ROUND. And the only remaining OPEN link i.e link (1,2), is MARKED in the subsequent ROUND.

One can easily compute the centralized greedy schedule and verify that the distributed greedy schedule matches matches it. And we can see the advantage of the CHECK state as it prevents a link from getting CLOSED after it sees a higher priced link within K-hop but which itself may not get MARKED. Hence such links move into the OPEN state, if no higher priced interfering link has been MARKED; else it will move into CLOSED state.

Next, we show analytically that the distributed greedy heuristic schedules the same set of links as the centralized one.

Let LmO be the set of OPEN links before ROUND m. Let LmC be the set of CLOSED links before ROUND m. Let LmH be the set of CHECK links before ROUND m. Let LmM be the set of MARKED links before ROUND m.

The algorithm terminates in finite time.

Let us assume that no two link prices are equal i.e [formula]

[formula].

[formula]

At the beginning of a ROUND, consider the globally highest priced link among links that are neither CLOSED nor MARKED. Such a link will not be in CHECK state.

Let LC be the set of links CHOSEN by the centralized greedy algorithm. Let the set LC be ordered and indexed in the decreasing order of link price as {l1,l2,...,lv...}. Let the distributed greedy algorithm terminate after t ROUNDs. Let Lt + 1M be the set of MARKED links after the termination of the algorithm.

The distributed greedy algorithm and the centralized greedy algorithm, schedule the same links.

Here, we would like to derive closed form expression for the worst case run time of the distributed greedy heuristic. Let us assume T to be the worst case time for a ROUND to complete. Let |L| be the number of links in the wireless network.

The worst case termination time for the algorithm under the K-hop link interference model is [formula].

The scheduling problem is known to be a bottleneck in the cross-layer optimization approach. The interference constraints were modeled using the K-hop link interference model. Under the assumption that each node transmits at a fixed power level (which can be different for different nodes), the optimal scheduling problem is a weighted matching problems with constraints determined by the K-hop interference model. We explored the greedy heuristic because it is amenable to distributed implementation. In this paper, we have come up with a distributed greedy heuristic and have shown that it performs exactly as the centralized greedy heuristic. In future work, we plan to find how close the distributed greedy heuristic is to the optimal solution. We would also like to explore the scope of distributed greedy heuristics for other network problems. This distributed greedy algorithm was implemented as a part of full-fledged distributed protocol for aggregate utility maximization. During the incorporation of the above mentioned algorithm into the protocol, several new issues were to be tackled, like implementation of a reliable message passing mechanism. Many issues like this require careful analysis and quantification. We do not discuss these problems in this paper due to lack of space.