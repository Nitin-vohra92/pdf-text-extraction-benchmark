:: pr@ [\ref=#1:#2] pr@

#eq([\ref=#1]) #ax[\ref=#1] #chapChapter [\ref=#1] #secSection [\ref=#1] #apdxAppendix [\ref=#1] #tabTable [\ref=#1] on page  #figFigure [\ref=#1] on page

# [\ref=#thm] # [\ref=#prp] # [\ref=#lem] # [\ref=#fct] # [\ref=#cor]

# [\ref=#dfn] # [\ref=#conv] # [\ref=#ntn] # [\ref=#conj] # [\ref=#cst]

# [\ref=#rmk] # [\ref=#qst] # [\ref=#exm]

Proposition Lemma Corollary Definition Example Examples Notation Remark Remarks

Model theoretic forcing in analysis

Introduction

In this paper we introduce a framework of model theoretic forcing for metric structures, i.e., structures based on metric spaces. We use the language of infinitary continuous logic, which we define below. This is a variant of finitary continuous logic which is exposed in [\cite=BenYaacov-Usvyatsov:localstability] or [\cite=BenYaacov-Berenstein-Henson-Usvyatsov:metricstructures].

The model theoretic forcing framework introduced here is analogous to that developed by Keisler [\cite=Keisler:1973] for structures of the form considered in first-order model theory.

The paper concludes with an application to separable quotients of Banach spaces. The long standing Separable Quotient Problem is whether for every nonseparable Banach space X there exists a operator T:X  →  Y such that T(X) is a separable, infinite dimensional Banach space. We prove the following result (Theorem [\ref=T:separable_quotient]): If X is an infinite dimensional Banach space and T:X  →  Y is a surjective operator with infinite dimensional kernel, then there exist Banach spaces [formula] and a surjective operator [formula] such that

[formula] has density character ω1,

The range of [formula] is separable,

(X,Y,T) and [formula] are elementarily equivalent as metric structures.

The paper is organized as follows. In :preliminaries: we introduce the syntax that will be used in the paper. In :forcing:, we introduce model theoretic forcing for metric structures. :special forcing properties: we focus our attention on two particular forcing properties. These properties are used in :omitting types: to prove the general Omitting Types Theorem. The last section, :separable quotients:, is devoted to the aforementioned application to separable quotients.

For the exposition of the material we focus on one-sorted languages. However, as the reader will notice, the results presented here hold true, mutatis mutandi, for multi-sorted contexts. In fact, the structures used in the last section are multi-sorted.

The authors are grateful to Yi Zhang for his encouragement and patience.

Preliminaries

Recall that if f:(X,d)  →  (X',d') is a mapping between two metric spaces, then f is uniformly continuous if and only if there exists a mapping δ:(0,  ∞  )  →  (0,  ∞  ] such that for all x,y∈X and ε  >  0, If [\eqref=eq:UnifCont] holds, we say that δ is a uniform continuity modulus and that f respects δ. The choice of strict and weak inequalities here is so that the property of respecting δ be preserved under certain important constructions (e.g., completions and ultraproducts).

Let δ':(0,  ∞  )  →  (0,  ∞  ] be any mapping, and define: Then δ and δ' are equivalent as uniform continuity moduli, in the sense that a function f respects δ if and only if it respects δ'. In addition we have i.e., δ is increasing and continuous on the left. As a consequence, :UnifCont: is equivalent to the apparently stronger version: From this point on, when referring to a uniform continuity modulus δ, we mean one that satisfies :GoodContMod2:.

In this section we introduce infinitary continuous formulas. For a general text regarding continuous structures and finitary continuous first order formulas we refer the reader to Sections 2 and 3 of [\cite=BenYaacov-Usvyatsov:localstability] or Sections 2-6 of [\cite=BenYaacov-Berenstein-Henson-Usvyatsov:metricstructures].

Recall that a continuous signature L consists of the following data:

For each n, a set of n-ary function and predicate symbols.

A distinguished binary predicate symbol d.

For each n-ary symbol s and i < n, a uniform continuity modulus for the ith argument denoted δs,i.

A continuous L-structure is a set M equipped with interpretations of the symbols of the language:

Each n-ary function symbol is interpreted by an n-ary function:

[formula]

Each n-ary predicate symbol is interpreted by a continuous n-ary predicate:

[formula]

The interpretation dM of the distinguished symbol d is a complete metric.

For each n-ary symbol s and i  <  n, the interpretation sM, viewed as a function of its ith argument, respects the uniform continuity modulus δs,i.

It is proved in [\cite=BenYaacov-Usvyatsov:localstability] that the following system of connectives is full:

[formula]

This means that for every n  ≥  1, the family of functions from n  →  [0,1] which can be written using these three operations is dense in the class of all continuous functions n  →  [0,1]. For the purposes of this paper (namely, to simplify the treatment of forcing, in :forcing:), it is convenient to use the connective [formula] instead of [formula]. Note that this causes no loss in expressive power, since [formula].

In this paper we extend the class of first-order continuous formulas by considering formulas that may contain the infinitary connectives [formula] and [formula], where for a set of formulas Φ, [formula] and [formula] stand for sup {φ|φ∈Φ}φ and inf {φ|φ∈Φ}, respectively. Because of the infinitary nature of this language, in order to form formulas with these connectives, one needs to be particularly careful about the uniform continuity moduli of the terms and formulas with respect to each variable, denoted δτ,x and δφ,x, respectively; thus, we have the following definition.

Let L be a continuous signature. We define the formulas of Lω1,ω. Simultaneously, for each variable x, each term τ and each formula φ of Lω1,ω we define uniform continuity moduli δτ,x and δφ,x. Both definitions are inductive.

A variable is a term, with [formula] and δx,y  =    ∞   for y  ≠  x.

If f is an n-ary function symbol and [formula] are terms, then [formula] is a term. If τ is a term of this form, Here we follow the convention that δ(  ∞  )  =    ∞  .

If P is an n-ary predicate symbol and [formula] are terms, then [formula] is a formula (called an atomic formula). The definition of [formula] is formally identical that of [formula].

If φ and ψ are formulas then so are [formula], [formula] and [formula]. We have:

[formula]

Let Φ be a countable set of formulas in a finite tuple of free variables x̄. For each variable x, let [formula]. If [formula] for all ε  >  0 and x∈x̄, then [formula] is a formula, also denoted [formula]. Its uniform continuity moduli are given by

[formula]

so that :GoodContMod2: is satisfied.

If φ is a formula and x a variable, then inf xφ is a formula. For y  ≠  x we have δinf xφ,y  =  δφ,y, while δinf xφ,x  =    ∞  .

Rather than putting [formula] and sup  in our language we define them as abbreviations:

[formula]

If M is an L-structure and [formula], one constructs the interpretation φM:Mn  →  [0,1] in the obvious manner. By induction on the structure of φ one also shows that for each variable x, φM is uniformly continuous in x respecting δφ,x.

Finitary continuous first order formulas, as defined in [\cite=BenYaacov-Usvyatsov:localstability] and [\cite=BenYaacov-Berenstein-Henson-Usvyatsov:metricstructures], are constructed in the same manner, with the exclusion of the infinitary connectives [formula] and [formula] (i.e., only using the connectives [formula], or equivalently [formula]). We observe that [formula] is equivalent to [formula], so finitary instances of [formula] and [formula] are allowed there as well. The set of all such formulas is denoted Lω,ω.

Let L be a continuous signature and let φ be an Lω1,ω-formula. The set of subformulas of φ denoted [formula], is defined inductively as follows.

If P is a predicate symbol and [formula] are terms, then [formula].

[formula] and [formula].

[formula].

[formula].

[formula].

Lω1,ω need not be countable if L is countable. Nevertheless, it is often sufficient to work with countable fragments of Lω1,ω:

A fragment of Lω1,ω is subset of Lω1,ω which contains all atomic formulas and is closed under subformulas and substitution of terms for free variables.

Every countable subset of Lω1,ω is contained in a countable fragment of Lω1,ω.

For the next three sections (that is, the rest of the paper minus the last section), L will denote a fixed countable continuous signature, and LA will denote a fixed countable fragment of Lω1,ω. We will let C  =  {ci|i  <  ω} be a set of new constant symbols, and [formula]. An L(C)-structure M will be called canonical if the set {cMi|i  <  ω} is dense in M.

By LA(C) we will denote the smallest countable fragment of Lω1,ω(C) that contains LA; notice that LA(C) is obtained allowing closing LA under substitution of constant symbols from C for free variables.

We will also use the following notation:

The set of all sentences in LA(C) will be denoted LsA(C).

The set of all atomic sentences in LA(C) will be denoted LasA(C).

The set of variable-free terms in L(C) will be denoted T(C).

Forcing

A forcing property for LA is a triplet [formula] where [formula] is a partially ordered set. The elements of [formula] are called conditions. For each condition p, f assigns a mapping fp:LasA(C)  →  [0,1] satisfying the following conditions.

p  ≤  q implies fp  ≤  fq i.e., fp(φ)  ≤  fq(φ) for all φ∈LasA(C).

Given [formula], ε > 0, τ,σ∈T(C), and an atomic L(C)-formula φ(x) there are q  ≤  p and c∈C such that:

For the rest of this section, [formula] will denote a fixed forcing property.

Let [formula] be a condition and φ∈LsA(C) a sentence. We define Fp(φ)∈[0,1] by induction on φ. For φ atomic,

[formula]

Otherwise,

[formula]

If [formula] and Fp(φ)  <  r we say that p forces that φ  <  r, in symbols [formula].

Let [formula] be a condition, φ∈LsA(C) a sentence, and [formula]. Then,

[formula]

The forcing relation [formula] can be defined inductively, without reference to the function Fp(φ), by the list of equivalences in the preceding remark. One can then define Fp(φ) as [formula].

The following basic properties will be used many times.

For all p,φ,

Fp(φ)∈[0,1].

[formula].

[formula].

The first two items are by induction on the structure of φ. The last one follows directly from the definition.

We also define Fwp by: If [formula] and Fwp(φ)  <  r we say that p weakly forces that φ  <  r, in symbols [formula].

By :ForcingProps:, Fwp(φ)  ≤  Fp(φ).

The weak forcing relation [formula] can be defined without reference to the function Fwp as follows: [formula] if and only if [formula]. We can then define Fwp(φ) as [formula].

Let [formula], φ∈LsA(C) and [formula]. Then

That Fwp(φ)  =   sup q  ≤  pFwq(φ) follows easily from the definitions, and sup q  ≤  pFwq(φ)  ≥   sup q  ≤  p inf q'  ≤  qFwq'(φ) is immediate. Finally:

[formula]

The weak forcing function Fw obeys the following inductive rules:

[formula]

For [formula] and [formula] this follows from a straightforward calculation. For example:

[formula]

For the other three, the inequality ≥   is obtained substituting the definition of Fwp on the left hand side and using the fact that Fp  ≥  Fwp. For ≤  , we first use :WForceRobust: to replace each occurrence of Fwp on the left hand side with sup q < p inf q'  ≤  qFwq'. Thus, it will suffice to show that:

[formula]

For [formula] assume Fwp(φ)  =  r and Fwp(ψ)  =  s. Then for all ε > 0 and for all q  ≤  p there is q'0  ≤  q such that Fq'0(φ)  <  r + ε, and as q'0  ≤  p there is q'  ≤  q'0 such that Fq'(ψ)  <  s + ε. Then [formula], yielding [formula].

For [formula] and inf xφ(x) it's a straightforward quantifier exchange argument, e.g.:

[formula]

For all [formula] and τ: Fwp( inf xd(τ,x))  =  0.

If not then Fwp( inf xd(τ,x))  =   sup q  ≤  p inf q'  ≤  q inf c∈Cfp(d(τ,x))  >  0. But this contradicts the definition of forcing property.

A nonempty [formula] is generic if:

It is directed downwards, i.e., for all p,q∈G there is p'∈G such that p'  ≤  p,q.

It is closed upwards, i.e., if p∈G and q  ≥  p then q∈G.

For every φ∈LsA(C) and r  >  1 there is p∈G such that [formula].

If G is a generic set and φ∈LsA(C) we define

[formula]

Every condition belongs to a generic set.

Fix [formula]. Let (  (rn,φn):n  <  ω  ) enumerate all pairs (r,φ), where [formula], r > 1, and φ∈LsA(C). Construct a sequence [formula] in [formula] as follows. We start with p0  =  p. Assume pn has already been chosen. By definition [formula], so we can choose pn + 1  ≤  pn such that [formula], whereby [formula]. Define

[formula]

Then G is generic, and p∈G.

Let G be generic and φ∈LsA(C). Then φG  =   inf p∈GFwp(φ).

The inequality ≥   is immediate since Fwp(φ)  ≤  Fp(φ). For the other, assume φG  >   inf p∈GFwp(φ), so there are ε  >  0 and p∈G such that φG  -  ε  >  Fwp(φ). As G is generic there is q∈G such that [formula], and as p∈G we may assume q  ≤  p. We obtain

[formula]

a contradiction.

If G is generic and φ∈LsA(C), then [formula].

From :ForcingProps: we have [formula], while [formula] follows from :Generic:.

Let G be a generic set and τ,σ∈T(C). Then:

For every ε  >  0 there is cτ,ε,G∈C such that d(τ,cτ,ε,G)G  <  ε.

d(τ,σ)G  =  d(σ,τ)G.

For every atomic L(C)-formula φ(x), if d(τ,σ)G  <  δφ,x(ε) then |φ(τ)G  -  φ(σ)G|  <  ε.

For (i), observe that ( inf xd(τ,x))G = 0 by :WForceDense: and :GenSetWForce:, so there is p∈G such that Fp( inf xd(τ,x))  <  ε, and thus there exists c∈C such that d(τ,c)G  ≤  Fp(d(τ,c))  <  ε. The other two statements follow directly from :GenSetWForce: and the definition of forcing property.

Let MG0 be the term algebra T(C) equipped with the natural interpretation of the function symbols, and interpreting the predicate symbols by: PMG0()  =  P()G. Then MG0 is a pre-L(C)-structure, and its completion MG is a canonical structure.

First we use :GenSetMetric: to show that dMG0 is a pseudometric. Symmetry is :GenSetMetric:(ii). The triangle inequality follows from :GenSetMetric:(iii), keeping in mind that [formula]. That dMG0(τ,τ)  =  0 follows from the triangle inequality and :GenSetMetric:(i). Finally, by :GenSetMetric:(iii), every symbol respects its uniform continuity modulus. Thus MG0 is a pre-structure, and we can define MG to be its completion.

That CMG is dense in MG now follows from :GenSetMetric:(i).

For all φ∈LsA(C) we have φMG  =  φG.

By induction on φ:

For φ atomic, this is immediate from the construction of MG.

For [formula], [formula] and [formula], this is immediate from the definition of forcing and the induction hypothesis.

For [formula], this is immediate from :GenSetNeg: and the induction hypothesis.

For inf xφ(x), it follows from the definition of forcing and the induction hypothesis that ( inf xφ)G  =   inf {φ(c)MG|c∈C}. Since CMG is dense in MG and φ(x)MG is uniformly continuous in x, the latter is equal to ( inf xφ)MG.

The forcing Properties P(M) and P(M,Σ)

If M is class of L-structures, we denote by M(C) the class of all structures of the form (M,ac)c∈C0, where M is in M and C0 is a finite subset of C; such a structure is regarded naturally as an L(C0)-structure by letting ac be the interpretation of c in M, for each c∈C0.

Let Σ be a class of formulas of LA that contains all the atomic formulas and is closed under subformulas, and let Σ(C) denote the subset of L(C) obtained from formulas φ in Σ by replacing finitely many free variables of φ with constant symbols from C.

The forcing property P(M,Σ) is defined as follows. The conditions of P(M,Σ) are the finite sets of the form

[formula]

where [formula] and there exist M∈M(C) such that φMi < ri, for [formula]. The partial order ≤   on conditions is reverse inclusion, i.e., if p,q are conditions of P(M,Σ), then p  ≤  q if and only p  ⊇  q. If p is a condition of P(MΔ,Σ) and φ is an atomic sentence of L(C), we define

[formula]

When Σ is the set of all atomic L-formulas, the forcing property P(M,Σ) is denoted simply P(M).

The main result of this section is Proposition [\ref=P:w-forcing_in_P(M] [\ref=Sigma)], below, which characterizes weak forcing for the forcing property P(M,Σ); for the proof, we need two lemmas.

We extend the definition of fp above to all sentences of Σ(C):

[formula]

We define Hwp accordingly: Hwp(φ)  =   sup q  ≤  p inf p  ≤  qHp(φ).

Clearly if q  ≤  p then Hq(φ)  ≤  Hp(φ) and Hwq(φ)  ≤  Hwp(φ), whereby for all p: Hwp(φ)  ≤  Hp(φ).

For all p∈P(M,Σ) and φ∈Σ(C):

[formula]

(Here [formula], [formula].)

The first equality is a mere rephrasing: Hwp(φ)  ≤  r if and only if inf q'  ≤  qHp(φ)  ≤  r for all q  ≤  p, i.e., if and only if [formula] for all q  ≤  p.

For the second equality: Assume first that [formula]. Then q  ≤  p but [formula]. This gives ≥  . Now assume [formula]. Then [formula] cannot be realized in the given class. Thus, for every q  ≤  p, as q can be realized, it is realized in a model where φ  ≤  r. Thus [formula] for all q  ≤  p and s  >  r. This gives ≤  .

The functions Hwp satisfy the properties stated for Fwp in :WForceRobust: and :WForceInd:, i.e.:

[formula]

The first property is proved precisely as in :WForceRobust:.

For [formula]: it follows from :WPMSChar: that [formula], and we conclude as in the proof of :WForceInd:.

For [formula]: observe that [formula] if and only if [formula] and apply :WPMSChar:.

For the last three we reduce as in the proof of :WForceInd: to showing that:

[formula]

For [formula] this follows from :WPMSChar:. For [formula] and inf  the quantifier exchange argument from proof of the corresponding items in :WForceInd: works here too.

Suppose that p is a condition in the forcing property P(M,Σ) and σ is a sentence of Σ(C). Then Fwp(σ)  =  Hwp(σ).

For atomic σ the equality is immediate. We then proceed by induction on σ, noting that :WForceInd: on the one hand and :WPMSInd: on the other tell us that Fwp and Hwp obey the same inductive definitions.

Generic Models and -Formulas

Recall from :preliminaries: that the expressions [formula] and sup xφ are regarded abbreviations of [formula] and [formula] respectively.

Let [formula] be a forcing property for LA(C) and let [formula]. Then

[formula].

Fp( sup xφ(x)) =  sup c∈CFwp(φ(c)).

The proofs are straightforward applications of the definitions: for (i),

[formula]

and for (ii),

[formula]

If Φ is a finite set of formulas, say [formula], we write

[formula]

as abbreviations of [formula] and [formula], respectively.

If [formula] is a forcing property for LA(C) and [formula], then

[formula]

By Proposition [\ref=P:disjunctions].

Let Σ be a class of formulas of LA which contains all atomic formulas and is closed under subformulas. A [formula]-formula over Σ is an LA-formula of the form

[formula]

where σn,ν belongs to Σ for n < ω and [formula], [formula], and [formula].

Let Σ be a class of formulas of LA which contains all atomic formulas and is closed under subformulas. Suppose that φ is a [formula]-formula over Σ, of the form

[formula]

where σn,ν belongs to Σ for n < ω and [formula], [formula], and [formula]. Then, if [formula] is a forcing property for LA(C) and [formula],

[formula]

We use Propositions [\ref=P:disjunctions] and [\ref=P:finite_disjunctions] to compute Fp(φ):

[formula]

If p is a condition in the forcing property P(M,Σ), then Fwp(φ) = Hwp(φ), by Proposition [\ref=P:w-forcing_in_P(M] [\ref=Sigma)]. Hence, if φ is as in Proposition [\ref=P:forcing_special_formulas],

[formula]

Recall (:preliminaries:) that C denotes countable set of constants not in L and that [formula]. As in Section [\ref=sec:special_forcing_properties], if M is a class of L-structures, M(C) denotes the class of structures of the form (M,ac)c∈C0, where M is in M and C0 is a finite subset of C. If Γ is a set of inequalities of the form φ < r, where φ is an LA(C)-formula and r is a real number, we will say that Γ is satisfiable in M if there exists a structure M in M(C) such that φM < r for every inequality φ < r in Γ.

Let Σ be class of formulas of LA that contains all the atomic formulas and is closed under subformulas. A finite Σ-piece of M is a finite set p of inequalities of the form φ < r, where φ∈Σ, such that p that is satisfiable in M.

Let (  φn|n < ω  ) be a sequence of L-formulas such that for each n < ω φn is a [formula]-formula over Σ, of the form where for each n < ω ψn is of the form

[formula]

with [formula], and [formula] and let (  rn|n < ω  ) be a sequence of real numbers such that for every finite Σ-piece p of M and every n∈Cm(n), the set [formula] is satisfiable in M. Then there exists a canonical L(C)-structure M such that φMn  ≤  rn for every n < ω.

Let p be a condition in the forcing property P(M,Σ). Fix a condition q  ≤  p, n < ω and n∈Cm(n). Since [formula] is satisfiable in M, there exist k < ω and n,k∈Ci(n,k) such that

[formula]

is satisfiable in M. Let

[formula]

Then, q is a condition in P(M,Σ), and by :WPMSChar:,

[formula]

so

[formula]

Thus, by Remark [\ref=R:forcing_special_formulas], Fp(φn)  ≤  rn. Let G be a generic set for P(M,Σ) (the existence of G is guaranteed by Proposition [\ref=P:generic_set]). For every n < ω, φGn  =   inf p∈GFp(φn)  ≤  rn (see Definition [\ref=dfn:Generic]). Let now MG be as in Lemma [\ref=L:generic_model]. Then, by Theorem [\ref=T:generic_model], φMGn  =  φGn  ≤  rn.

The reader may worry about the fact that the assumptions of :omitting types: involve strict inequalities while the conclusion only yields a weak inequality. In fact it would be enough to assume a weak inequality, i.e., that [formula] is satisfiable in M for every p and ψn as in the statement of :omitting types:, or more precisely, that [formula] is satisfiable for every ε  >  0. Indeed, in this case we would be able to find M in which φMn  ≤  rn  +  2- m for all n,m, i.e., such that φMn  ≤  rn for all n.

Application: Separable Quotients

If φ is a formula of Lω1,ω, we will say that φ is finitary if all the occurrences of [formula] in φ are finitary, i.e., if whenever [formula] is a subformula of φ, the set Φ is finite. We recall from :preliminaries: that the set of all finitary formulas is denoted Lω,ω.

If M and N are L-structures, M and N are said to be elementary equivalent, written [formula], if φM  =  φN for every finitary L-sentence φ. Thus [formula] if and only if φM < r implies φN < r for every finitary L-sentence φ and every rational number r. If M is a substructure of N, M is said to be an elementary substructure of N if [formula].

A Banach space [formula] can be regarded as a metric structure in a number of ways. A natural approach is to introduce for each nonnegative rational r a distinct sort for the closed ball BX(r) of radius r around 0; the metric on BX(r) is given by the norm [formula]; in the structure we also include:

the inclusion maps Ir,s:BX(r)  →  BX(s) for r < s,

the vector addition, which maps BX(r)  ×  BX(s) onto BX(r + s),

for each [formula], the scalar multiplication by λ, which maps BX(r) onto BX(|λ|r),

the normalized norm predicate [formula], which maps BX(r) onto the interval

[formula]

Notice that with the normalized norm and distance, all symbols are 1-Lipschitz, meaning that the identity function δ(ε) = ε is a modulus of uniform continuity for each and every one of them.

Other ways of regarding Banach space as metric structures are discussed in Section 3 of [\cite=BenYaacov-Usvyatsov:localstability] and in Section 4 [\cite=BenYaacov:Perturbations].

If X and Y are Banach spaces and T:X  →  Y is a Banach space operator, we denote by (X,Y,T) the structure that includes, in addition to the Banach space structure of X and the Banach space structure on Y, in separate sorts, the operator T as a family of functions between the appropriate sorts, i.e., from BX(r) to BY(s) if [formula]. If T is nonzero, the function [formula] is a modulus of uniform continuity for T.

Let [formula] be Banach spaces and let T:X  →  Y and [formula] be bounded linear operators such that [formula]. Then T is surjective if and only if [formula] is surjective.

For a real number r  ≥  0, let BX(r) and BY(r) denote the closed balls of radius r around 0 in X and Y, respectively. The proof of the Open Mapping Theorem shows that T:X  →  Y is surjective if and only if the following holds: for every ε > 0 there exists δ(ε) > 0 such that

[formula]

We can assume that δ(ε) < 1 for ε < 1. Thus, T is surjective if and only if for every ε with 0 < ε < 1 we have φ(X,Y,T)ε = 0, where φε is the following finitary sentence (the variables x and y are of sort BX(1) and BY(1), respectively):

[formula]

(Or, if one wishes to be pedantic, replace [formula] with [formula].) Hence, if [formula] and T is surjective, [formula] is surjective too.

The authors are grateful to William B. Johnson for pointing out that Proposition [\ref=P:surjectivity] is given by the proof of the Open Mapping Theorem.

All the Banach spaces mentioned henceforth will be infinite dimensional.

The Separable Quotient Problem is perhaps the most prominent open problem in nonseparable Banach space theory. The question is whether for every nonseparable Banach space X there exist a separable Banach space Y and a surjective operator T:X  →  Y. Let T:X  →  Y be a Banach space operator and consider the structure (X,Y,T) (the sorts of this structure are X and Y). In this section we use Corollary [\ref=cor:omitting_types] to prove that if T:X  →  Y is surjective and has infinite dimensional kernel, then there exists an operator [formula] such that

[formula],

[formula] has density character ω1,

[formula] is separable.

It follows from (i) and Proposition [\ref=P:surjectivity] that [formula] is surjective.

Suppose that X is a Banach space and Y is a closed proper subspace of X. Then there exists a non-zero linear functional [formula] whose restriction to Y is zero. Up to multiplication by a scalar we may further assume that [formula].

This is a well-known application of the Hahn-Banach theorem; the proof can be found in a textbook, e.g., [\cite=Fabian-Habala-Hajek-Montesinos-Pelant-Zizler:2002].

If X is a Banach space of density character κ, there exists a family (xi)i < κ in X such that [formula] for every i < κ and [formula] for i < j < κ.

The construction of (xi)i < κ is inductive. Fix j < κ and suppose that constructed xi is defined for i < j. Let Y be the closed linear span of {xi|i < j}, which is a proper closed subspace of X. By Lemma [\ref=L:Hahn-Banach], take [formula] such that f(x) = 0 for every x∈Y and [formula]. Let now xj be an element of the unit sphere of X such that [formula]. Then, if y∈Y, we have [formula]; in particular, [formula] for i < j.

For every surjective operator T:X  →  Y with infinite dimensional kernel there exists an operator [formula] such that

[formula],

[formula] has density character ω1,

[formula] is separable.

Furthermore, if D is a given countable subset of X, the structure [formula] can be chosen with the following property: there exists a separable subspace X0 of X such that D  ⊆  X0 and if T0 denotes the restriction of T to X0,

[formula],

[formula].

By the Löwenheim-Skolem Theorem [\cite=Henson-Iovino:2002], there exists a separable subspace X0 of X such that if T0 denotes the restriction of T to X0 and Y0 = T0(X0),

[formula]

(Note that X0 can be taken so that it contains any given countable subset of X.)

Let A be a countable dense subset of X0 and consider the structure

[formula]

Let L be the signature that results from expanding the signature of (  X,Y,T,a|a∈A  ) with new constant symbols [formula] and c*0 of sort BX(1) as well as new constant symbols [formula] and of sort BY(1).

Let us introduce some temporary terminology. If φ is an L-sentence, an L-structure M satisfies the inequality φ < r if φM < r. An inequality φ < r will be called finitary if the formula φ is finitary.

Let Γ consist of the following inequalities (the variable x in [\ref=I:Surjectivity] is of sort BY(1)):

All the finitary inequalities satisfied by the structure (  X0,Y0,T,a|a∈A  )

[formula] (i.e., [formula]) and [formula], for every n < ω and every rational ε > 0.

[formula] (i.e., [formula]) and [formula], for every pair m,n with m < n < ω and every rational ε > 0.

[formula], for every rational ε > 0.

[formula], for every n < ω and every rational ε > 0.

[formula], for every rational ε > 0.

For every rational ε > 0, the inequality

[formula]

Here [formula] is just the normalized norm predicate on the sort of [formula], and (n + 1)  ·  φ is defined in general as [formula] n + 1 times.

Lemma [\ref=L:sequence] ensures that the hypotheses of :omitting types: are satisfied with Σ  =  Lω,ω. Thus by :omitting types:, Γ has a separable model

[formula]

where for each n < ω, an is the interpretation of cn, bn is the interpretation of dn, and a*0 is the interpretation of c*0. By :ElemIneq:, we have

[formula]

so, in particular, by Proposition [\ref=P:surjectivity], T1 is surjective.

Now we iterate the preceding process to find for each ordinal α with 0 < α  <  ω1 a separable structure

[formula]

such that if 0 < α  <  β  <  ω1,

[formula]

a*i∈Xα for i < α

[formula] and [formula] for i < j < α

The linear span of {bn|n < ω} is a dense subset of Tα(Xα).

The theorem then follows by taking [formula], [formula], and [formula].