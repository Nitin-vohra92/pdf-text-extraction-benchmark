A Note on the Definition of Small Overlap Monoids

Mark Kambites

School of Mathematics,  University of Manchester, Manchester M13 9PL,  England.

Mark.Kambites@manchester.ac.uk

Small overlap conditions are simple and natural combinatorial conditions on semigroup and monoid presentations, which serve to limit the complexity of derivation sequences between equivalent words in the generators. Introduced by J. H. Remmers [\cite=Higgins92] [\cite=Remmers71] [\cite=Remmers80], and more recently studied by the present author [\cite=K_generic] [\cite=K_smallover1] [\cite=K_smallover2], they are the natural semigroup-theoretic analogue of the small cancellation conditions widely used in combinatorial group theory [\cite=Lyndon77].

The definitions of small overlap conditions originally introduced by Remmers are slightly more general than those used by the present author. The aims of this note are to clarify this distinction, and then to extend the methods and results introduced in [\cite=K_smallover1] [\cite=K_smallover2] to the full generality of small overlap monoids as studied by Remmers.

In addition to this introduction, this article comprises three sections. In Section [\ref=sec_prelim] we briefly recall the definitions of small overlap conditions, and also discuss the distinction between Remmers' and the author's definitions. In Section [\ref=sec_main] we show how to extend the key technical results from [\cite=K_smallover1], from the slightly restricted setting considered there to Remmers' small overlap conditions in their more general form. Finally, Section [\ref=sec_apps] applies the results of the previous section to extend the main results of [\cite=K_smallover1] [\cite=K_smallover2] to the more general case.

The proofs for certain of the results in this paper are very similar (in some cases identical) to arguments used in previous papers [\cite=K_smallover1] [\cite=K_smallover2]. In the interests of brevity we refrain from repeating these, instead providing detailed references. Hence, while the results of this paper may be read in isolation, the reader wishing to fully understand the proofs is advised to read it in conjunction with [\cite=K_smallover1] [\cite=K_smallover2].

Small Overlap Monoids

We assume familiarity with basic notions of combinatorial semigroup theory, including free semigroups and monoids, and semigroup and monoid presentations. Except where stated otherwise, we assume we have a fixed finite presentation for a monoid (or semigroup, the difference being unimportant). Words are assumed to be drawn from the free monoid on the generating alphabet unless otherwise stated. We write u  =  v to indicate that two words are equal in the free monoid or semigroup, and [formula] to indicate that they represent the same element of the monoid or semigroup presented. We say that a word p is a possible prefix of u if there exists a (possibly empty) word w with [formula], that is, if the element represented by u lies in the right ideal generated by the element represented by p. The empty word is denoted ε.

A relation word is a word which occurs as one side of a relation in the presentation. A piece is a word in the generators which occurs as a factor in sides of two distinct relation words, or in two different (possibly overlapping) places within one side of a relation word. Note that this definition differs slightly from that used in [\cite=K_smallover1] [\cite=K_smallover2] in the presence of the word "distinct"; we shall discuss the significance of this shortly. By convention, the empty word is always a piece. We say that a presentation is weakly C(n), where n is a positive integer, if no relation word can be written as the product of strictly fewer than n pieces. Thus for each n, being weakly C(n + 1) is a stronger condition than being weakly C(n).

In [\cite=K_smallover1] [\cite=K_smallover2] we used a slightly more general definition of a piece, following through with which led to slightly more restrictive conditions C(n); the author is grateful to Uri Weiss for pointing out this discrepancy. Specifically, in [\cite=K_smallover1] [\cite=K_smallover2] we defined a piece to be a word which occurs more than once as a factor of words in the sequence of relation words. Under this definition, if the same relation word appears twice in a presentation then it is considered to be a piece, and so the presentation fails to satisfy C(2). By contrast, Remmers defined a piece to be a word which appears more than once as a factor of words in the set of relation words. The effect of this is that Remmers' definition permits C(2) (and higher) presentations to have relations of, for example, the form (u,v1) and (u,v2) with v1  ≠  v2. (Equivalently, one could choose to define a piece in terms of the sequence of relation words but permit "n-ary" relations of the form (u,v1,v2), to be interpreted as equivalent to relations (u,v1) and (u,v2)). In this paper, we say that a presentation is strongly C(n) if it is weakly C(n) and has no repeated relation words, that is, if it satisfies the condition which was called C(n) in [\cite=K_smallover1] [\cite=K_smallover2].

In fact it transpires that the weakly C(n) conditions still suffice to establish the main methods and results of [\cite=K_smallover1] [\cite=K_smallover2]. However, this fact is rather obscured by the technical details and notation in [\cite=K_smallover1] [\cite=K_smallover2]. In particular, for a relation word R we defined [formula] to be the (necessarily unique) word such that [formula] or [formula] is a relation in the presentation. The extensive use of this notation makes it difficult to convince oneself that the arguments in [\cite=K_smallover1] [\cite=K_smallover2] do indeed apply in the more general case, so the aim of this paper is to provide full proofs of the results of those papers in the more general setting.

For each relation word R, let XR and ZR denote respectively the longest prefix of R which is a piece, and the longest suffix of R which is a piece. If the presentation is weakly C(3) then R cannot be written as a product of two pieces, so this prefix and suffix cannot meet; thus, R admits a factorisation XRYRZR for some non-empty word YR. If moreover the presentation is weakly C(4), then the relation word R cannot be written as a product of three pieces, so YR is not a piece. The converse also holds: a weakly C(3) presentation such that no YR is a piece is a weakly C(4) presentation. We call XR, YR and ZR the maximal piece prefix, the middle word and the maximal piece suffix respectively of R.

Assuming now that the presentation is weakly C(3), we shall use the letters X, Y and Z (sometimes with adornments or subscripts) exclusively to represent maximal piece prefixes, middle words and maximal piece suffixes respectively of relation words; two such letters with the same subscript or adornment (or with none) will be assumed to stand for the appropriate factors of the same relation word.

We say that a relation word [formula] is a complement of a relation R if there are relation words [formula] such that either (Ri,Ri + 1) or (Ri + 1,Ri) is a relation in the presentation for 1  ≤  i  <  n. We say that [formula] is a proper complement of R if, in addition, [formula]. Abusing notation and terminology slightly, if R  =  XRYRZR and [formula] then we write [formula], [formula] and so forth. We say that [formula] is a complement of XR, and [formula] is a complement of XRYR.

A relation prefix of a word is a prefix which admits a (necessarily unique, as a consequence of the small overlap condition) factorisation of the form aXY where X and Y are the maximal piece prefix and middle word respectively of some relation word XYZ. An overlap prefix (of length n) of a word u is a relation prefix which admits an (again necessarily unique) factorisation of the form [formula] where

n  ≥  1;

[formula] has no factor of the form X0Y0, where X0 and Y0 are the maximal piece prefix and middle word respectively of some relation word, beginning before the end of the prefix b;

for each 1  ≤  i  ≤  n, Ri  =  XiYiZi is a relation word with Xi and Zi the maximal piece prefix and suffix respectively; and

for each 1  ≤  i  <  n, Yi' is a proper, non-empty prefix of Yi.

Notice that if a word has a relation prefix, then the shortest such must be an overlap prefix. A relation prefix aXY of a word u is called clean if u does not have a prefix

[formula]

where X1 and Y1 are the maximal piece prefix and middle word respectively of some relation word, and Y' is a proper, non-empty prefix of Y. As in [\cite=K_smallover1], clean overlap prefixes will play a crucial role in what follows.

If u is a word and p is a piece, we say that u is p-active if pu has a relation prefix aXY with |a|  <  |p|, and p-inactive otherwise.

Technical Results

In this section we show how some technical results and methods from [\cite=K_smallover1] concerning strongly C(4) monoids can be extended to cover weakly C(4) monoids. We assume throughout initially a fixed monoid presentation which is weakly C(4). The following three foundational statements are completely unaffected by our revised definitions, and can still be proved exactly as in [\cite=K_smallover1].

Let [formula] be an overlap prefix of some word. Then this prefix contains no relation word as a factor, except possibly the suffix XnYn in the case that Zn  =  ε.

Let u be a word. Every overlap prefix of u is contained in a clean overlap prefix of u.

If a word u has no clean overlap prefix, then it contains no relation word as a factor, and so if [formula] then u  =  v.

The following lemma is essentially a restatement of [\cite=K_smallover1] using our new notation. The proof is essentially the same as in [\cite=K_smallover1], with the addition of an obvious inductive argument to allow for the fact that several rewrites may be needed to obtain [formula] from XYZ.

Suppose u  =  wXYZu' with wXY a clean overlap prefix and [formula] is a complement of XYZ. Then [formula] is a clean overlap prefix of [formula].

From now on, we shall assume that our presentation is weakly C(4). We are now ready to prove our first main technical result, which is an analogue of [\cite=K_smallover1], and is fundamental to our approach to weakly C(4) monoids.

Suppose a word u has clean overlap prefix wXY. If [formula] then v has overlap prefix [formula] for some complement [formula] of XYZ, and no relation word occurring as a factor of v overlaps this prefix, unless it is [formula] in the obvious place.

Since wXY is an overlap prefix of u, it has by definition a factorisation

[formula]

for some n  ≥  0. We use this fact to prove the claim by induction on the length r of a rewrite sequence (using the defining relations) from u to v.

In the case r  =  0, we have u  =  v, so v certainly has (clean) overlap prefix wXY. By Proposition [\ref=prop_overlapprefixnorel], no relation word factor can occur entirely within this prefix, unless it is the suffix XY and Z  =  ε. If a relation word factor of v overlaps the end of the given overlap prefix and entirely contains XY then, since XY is not a piece, that relation word must clearly be XYZ. Finally, a relation word cannot overlap the end of the given overlap prefix but not contain the suffix XY, since this would clearly contradict either the fact that the given overlap prefix is clean, or the fact that Y is not a piece.

Suppose now for induction that the lemma holds for all values less than r, and that there is a rewrite sequence from u to v of length r. Let u1 be the second term in the sequence, so that u1 is obtained from u by a single rewrite using the defining relations, and v from u1 by r - 1 rewrites.

Consider the relation word in u which is to be rewritten in order to obtain u1, and in particular its position in u. By Proposition [\ref=prop_overlapprefixnorel], this relation word cannot be contained in the clean overlap prefix wXY, unless it is XY where Z  =  ε.

Suppose first that the relation word to be rewritten contains the final factor Y of the given clean overlap prefix. (Note that this covers in particular the case that the relation word is XY and Z  =  ε.) From the weakly C(4) assumption we know that Y is not a piece, so we may deduce that the relation word is XYZ contained in the obvious place. In this case, applying the rewrite clearly leaves u1 with a prefix wX̂Ŷ for some complement X̂ŶẐ of XYZ. By Lemma [\ref=lemma_staysclean], this is a clean overlap prefix. Now v can be obtained from u1 by r - 1 rewrite steps, so it follows from the inductive hypothesis that v has overlap prefix [formula] where [formula] is a complement of X̂ŶẐ and hence of XY. It follows also that no relation word occurring as a factor of v overlaps this prefix, unless it is [formula]; this completes the proof in this case.

Next, we consider the case in which the relation word factor in u to be rewritten does not contain the final factor Y of the clean overlap prefix, but does overlap with the end of the clean overlap prefix. Then u has a factor of the form X̂Ŷ, where X̂ is the maximal piece prefix and Ŷ the middle word of a relation word, which overlaps XY, beginning after the start of Y. This clearly contradicts the assumption that the overlap prefix is clean.

Finally, we consider the case in which the relation word factor in u which is to be rewritten does not overlap the given clean overlap prefix at all. Then obviously, the given clean overlap prefix of u remains an overlap prefix of u1. If this overlap prefix is clean, then a simple application of the inductive hypothesis again suffices to prove that v has the required property.

There remains, then, only the case in which the given overlap prefix is no longer clean in u1. Then by definition there exist words X̂ and Ŷ, being a maximal piece prefix and middle word respectively of some relation word, such that u1 has the prefix

[formula]

for some proper, non-empty prefix Y' of Y. Now certainly this is not a prefix of u, since this would contradict the assumption that [formula] is a clean overlap prefix of u. So we deduce that u1 can be transformed to u by rewriting a relation word overlapping the final X̂Ŷ. This relation word factor cannot contain the entire of this factor X̂Ŷ, since then it would overlap with the prefix [formula], which would again contradict the assumption that this prefix is a clean overlap prefix of u. Nor can the relation word contain the final factor Ŷ, since Ŷ is not a piece. Hence, u1 must have a prefix

[formula]

for some relation word and proper, non-empty prefix Ŷ' of Ŷ and some relation word R. Suppose R  =  XRYRZR where XR and ZR are the maximal piece prefix and suffix respectively. Then it is readily verified that

[formula]

is a clean overlap prefix of u1. Indeed, the fact it is an overlap prefix is immediate, and if it were not clean then some factor of u1 of the form [formula] would have to overlap the end of the given prefix; but this factor would either be contained in YRZR (contradicting the fact that [formula] is a maximum piece prefix of [formula]) or would contain a non-empty suffix of YR followed by ZR (contradicting the fact that ZR is a maximum piece prefix of XRYRZR).

Now by the inductive hypothesis, v has prefix

[formula]

for some complement [formula] of XRYR. But now v has prefix

[formula]

which in turn has prefix

[formula]

Moreover, by Proposition [\ref=prop_overlapprefixnorel], the prefix [\eqref=vprefix2] of v contains no relation word as a factor, unless it is the final factor [formula] and [formula], and it follows easily that no relation word factor overlaps the prefix [\eqref=vprefix3] of v.

The following results are now proved exactly as their analogues in [\cite=K_smallover1].

Suppose a word u has (not necessarily clean) overlap prefix wXY. If [formula] then v has a prefix w and contains no relation word overlapping this prefix.

Suppose a word u has an overlap prefix aXY and that u  =  aXYu''. Then [formula] if and only if v  =  av' where [formula].

Let u be a word and p a piece. If u is p-inactive then [formula] if and only if v  =  pw for some w with [formula].

Let p1 and p2 be pieces and suppose u is p1-active and p2-active. Then p1 and p2 have a common non-empty suffix, and if z is their maximal common suffix then

u is z-active;

[formula] if and only if v  =  z1v' where z1z  =  p1 and [formula]; and

[formula] if and only if v  =  z2v' where z2z  =  p2 and [formula].

Let p1 and p2 be pieces. Suppose [formula] and u is p2-active. Then [formula].

The following is a strengthening of the [\cite=K_smallover1]

Let u and v be words and [formula] be pieces. Suppose there exist words [formula] such that for 1  ≤  i  <  n there exists 1  ≤  ji  ≤  k with [formula]. Then [formula] for some j with 1  ≤  j  ≤  k.

Fix u, v and [formula], and suppose n is minimal such that a sequence [formula] with the hypothesized properties exists. Our aim is thus to show that n  ≤  2. Suppose for a contradiction that n  >  2.

If u2 was pj2-inactive then by Proposition [\ref=prop_inactive] we would have [formula] so that [formula] which clearly contradicts the minimality assumption on n. Thus, u2 is pj2-active. But now since [formula], we apply Corollary [\ref=cor_actsame] to see that [formula], which again contradicts the minimality of n.

We now present a lemma which gives a set of mutually exclusive combinatorial conditions, the disjunction of which is necessary and sufficient for two words of a certain form to represent the same element.

Suppose u  =  XYu' where XY is a clean overlap prefix of u. Then [formula] if and only if one of the following mutually exclusive conditions holds:

u  =  XYZu'' and v  =  XYZv'' and [formula] for some complement [formula] of Z;

u  =  XYu', v  =  XYv', and Z fails to be a prefix of at least one of u' and v', and [formula];

u  =  XYZu'', [formula] for some uniquely determined proper complement [formula] of XYZ, and [formula] for some complement Ẑ of Z;

u  =  XYu', [formula] for some uniquely determined proper complement [formula] of XYZ but Z is not a prefix of u' and [formula];

u  =  XYZu'', [formula] for some uniquely determined proper complement [formula] of XYZ, but [formula] is not a prefix of v' and [formula];

u  =  XYu', [formula] for some uniquely determined proper complement [formula] of XYZ, Z is not a prefix of u' and [formula] is not a prefix of v', but Z  =  z1z, [formula], u'  =  z1u'', v'  =  z2v'' where [formula] and z is the maximal common suffix of Z and [formula], z is non-empty, and z is a possible prefix of u''.

It follows easily from the definitions that no complement of XY is a prefix of another. Hence, v can have at most one of them as a prefix. Thus, conditions (1)-(2) are not consistent with conditions (3)-(6), and the prefixes of v in (3)-(6) are uniquely determined. The mutual exclusivity of (1) and (2) is self-evident from the definitions, and likewise that of (3)-(6).

It is easily verified that each of the conditions (1)-(5) imply that [formula]. We show next that (6) implies that [formula]. Since z is a possible prefix of u'' and [formula], we may write [formula] for some word x. Now we have

[formula]

It remains to show that [formula] implies that one of the conditions (1)-(6) holds. To this end, suppose [formula]; then there is a rewrite sequence taking u to v. By Lemma [\ref=lemma_overlap], every term in this sequence will have prefix which is a complement of XY, and this prefix can only be modified by the application of a relation, both sides of which are complements of XYZ, in the obvious place. We now prove the claim by case analysis.

By Lemma [\ref=lemma_overlap], v begins either with XY or with some proper complement [formula]. Consider first the case in which v begins with XY; we split this into two further cases depending on whether u and v both begin with the full relation word XYZ; these will correspond respectively to conditions (1) and (2) in the statement of the lemma.

Case (1). Suppose u  =  XYZu'' and v  =  XYZv''. Then clearly there is a rewrite sequence taking u to v which by Lemma [\ref=lemma_overlap] can be broken up as:

[formula]

where each prefix XiYiZi is a complement of XYZ, and none of the steps in the sequences indicated by →  * involves rewriting a relation word overlapping with the prefix XiYi. It follows that there are rewrite sequences.

[formula]

Now by Corollary [\ref=cor_eitheror], we have [formula] for some 1  ≤  i  ≤  n, where Zi is a complement of Z as required to show that condition (1) holds.

Case (2). Suppose now that u  =  XYu', v  =  XYv' and Z fails to be a prefix of at least one of u' and v'. We must show that [formula]; suppose for a contradiction that this does not hold. We again consider rewrite sequences from u  =  XYu' to v  =  XYv'. Again using Lemma [\ref=lemma_overlap], we see that there is either (i) such a sequence taking u to v containing no rewrites of relation words overlapping the prefix XY, or (ii) such a sequence taking u to v which can be broken up as:

[formula]

where each prefix XiYiZi is a complement of XYZ, and none of the steps in the sequences indicated by →  * involves rewriting a relation word overlapping with the prefix XiYi. In case (i) there is clearly a rewrite sequence taking u' to v' so that [formula] as required. In case (ii), there are rewrite sequences.

[formula]

Now if u' does not begin with Z, we can deduce from Proposition [\ref=prop_inactive] that u1 is Z-active. By Corollary [\ref=cor_eitheror], we have [formula] for some complement Ẑ of Z. Since u1 is Z-active, Corollary [\ref=cor_actsame] tells us that we also have [formula]. But now

[formula]

so condition (2) holds. A similar argument applies if v' does not begin with Z.

Case (3). Suppose u  =  XYZu'' and [formula]. Then [formula], so by the same argument as in case (1) we have either [formula] or [formula] as required to show that condition (3) holds.

Case (4). Suppose u  =  XYu' and [formula] but Z is not a prefix of u'. Then [formula]. Now applying the same argument as in case (2) (with XYZv'' in place of v and setting v'  =  Zv'') we have [formula] so that condition (4) holds.

Case (5). Suppose u  =  XYZu'', [formula] but [formula] is not a prefix of v'. Then we have [formula], and moreover, Lemma [\ref=lemma_staysclean] guarantees that [formula] is a clean overlap prefix of [formula]. Now applying the same argument as in case (1) (but with [formula] in place of u and setting [formula]) we obtain [formula] so that condition (5) holds.

Case (6). Suppose u  =  XYu', [formula] and that Z is not a prefix of u' and [formula] is not a prefix of v'. It follows this time that there is a rewrite sequence taking u to v of the form

[formula]

where once more by Lemma [\ref=lemma_overlap] each prefix XiYiZi is a complement of XYZ, and none of the steps in the sequences indicated by →  * involves rewriting a relation word overlapping with the prefix XiYi. Now there are rewrite sequences.

[formula]

Notice that, since u' does not begin with Z, we may deduce from Proposition [\ref=prop_inactive] that u1 is Z-active. By Corollary [\ref=cor_eitheror], we have [formula] for some complement Ẑ of Z. Now since u1 is Z-active, Corollary [\ref=cor_actsame] tells us that we also have [formula]. But now

[formula]

where u' does not begin with Z, and also [formula] were v' does not begin with [formula]. By applying Proposition [\ref=prop_inactive] twice, we deduce that un is both Z-active and [formula]-active.

Let z be the maximal common suffix of Z and [formula]. Then applying Proposition [\ref=prop_coactive] (with p1  =  Z and [formula]), we see that z is non-empty and

u'  =  z1u'' where Z  =  z1z and [formula]; and

v'  =  z2v'' where [formula] and [formula].

But then we have [formula] and also z is a possible prefix of u'' as required to show that condition (6) holds.

Suppose u  =  XYu' where XY is a clean overlap prefix, and suppose p is a piece. Then [formula] and p is a possible prefix of u if and only if one of the following mutually exclusive conditions holds:

u  =  XYZu'' and v  =  XYZv'' and [formula] for some complement [formula] of Z, and also p is a prefix of some complement of X;

u  =  XYu', v  =  XYv', and Z fails to be a prefix of at least one of u' and v', and [formula], and also either

p is a prefix of X; or

p is a prefix of some complement of X and Z is a possible prefix of u'.

u  =  XYZu'', [formula] for some uniquely determined proper complement [formula] of XYZ, and [formula] for some complement Ẑ of Z, and p is a prefix of some complement of X;

u  =  XYu', [formula] for some uniquely determined proper complement [formula] of XYZ, but Z is not a prefix of u' and [formula], and also p is a prefix of some complement of X;

u  =  XYZu'', [formula] for some uniquely determined proper complement [formula] of X, but [formula] is not a prefix of v' and [formula], and also p is a prefix of some complement of X;

u  =  XYu', [formula] for some uniquely determined proper complement [formula] of XYZ, Z is not a prefix of u' and [formula] is not a prefix of v', but Z  =  z1z, [formula], u'  =  z1u'', v'  =  z2v'' where [formula], z is the maximal common suffix of Z and [formula], z in non-empty, z is a possible prefix of u'', and also p is a prefix of some complement of X.

Mutual exclusivity of the six conditions is proved exactly as for Lemma [\ref=lemma_eq]. Suppose now that one of the six conditions above applies. Each condition clearly implies the corresponding condition from Lemma [\ref=lemma_eq], so we deduce immediately that [formula]. We must show, using the fact that p is a prefix of a complement of X, that p is a possible prefix of u, or equivalently of v.

In case (1'), p is clearly a possible prefix of u  =  XYZu'', and cases (3'), (4') and (5') are entirely similar. In case (2'), if p is a prefix of X then it is already a prefix of u, while if p is a prefix of a proper complement [formula] of X and Z is a possible prefix of u', say [formula], then

[formula]

where the latter has p as a possible prefix. Finally, in case (6') we know that z is a possible prefix of u'', say [formula], so we have

[formula]

and it is again clear that p is a possible prefix of u.

Conversely, suppose [formula] and p is a possible prefix of u. Then exactly one of the six conditions in Lemma [\ref=lemma_eq] applies. By Lemma [\ref=lemma_overlap], every word equivalent to u begins with a complement of XY, so p must be a prefix of a word beginning with some complement X̂Ŷ. Since X̂ is the maximal piece prefix of X̂ŶẐ and Ŷ is non-empty, it follows that p is a prefix of X̂. If any but condition (2) of Lemma [\ref=lemma_eq] is satisfied, this suffices to show that the corresponding condition from the statement of Lemma [\ref=lemma_eqandprefix] holds.

If condition (2) from Lemma [\ref=lemma_eq] applies, we must show additionally that either p is a prefix of X, or that Z is a possible prefix of u'. Suppose p is not a prefix of X. Then by the above, p is a prefix of some complement X̂. It follows from Lemma [\ref=lemma_overlap], that the only way the prefix XY of the word u can be changed using the defining relations is by application of a relation of the form [formula]. In order for this to happen, one must clearly be able to rewrite u  =  XYu' to a word of the form XYZw; consider the shortest possible rewrite sequence which achieves this. By Lemma [\ref=lemma_overlap], no term in the sequence except for the last term will contain a relation word overlapping the initial XY. It follows that the same rewriting steps rewrite u' to Zw, so that Z is a possible prefix of u', as required.

Applications

The main application presented in [\cite=K_smallover1] was for each strongly C(4) monoid presentation, a linear time recursive algorithm to decide, given words u, v and a piece p, whether [formula] and p is a possible prefix of u. In particular, by fixing p  =  ε, we obtain an algorithm which solves the word problem for the presentation in linear time. Figure 1 shows a modified version of the algorithm which works for weakly C(4) presentations. The proofs of correctness and termination are essentially the same as those in [\cite=K_smallover1], but relying on the more general results of Section [\ref=sec_main]. Thus, we establish the following theorem.

For every weakly C(4) finite monoid presentation, there exists a two-tape Turing machine which solves the corresponding word problem in time linear in the lengths the input words.

The algorithms presented [\cite=K_smallover1] for finding the pieces of a presentation and hence testing strong small overlap conditions may clearly also be used to test the weak variants of those conditions, with the proviso that one considers the set of relation words in the presentation, with any duplicates disregarded. In particular, we have:

There is a RAM algorithm which, given as input a finite presentation [formula], decides in time [formula] whether the presentation is weakly C(4).

There is a RAM algorithm which, given as input a weakly C(4) finite presentation [formula] and two words [formula], decides whether u and v represent the same element of the semigroup presented in time

[formula]

Just as with the algorithm from [\cite=K_smallover1], the algorithm in Figure [\ref=fig_algorithm] is essentially a finite state process, and can be implemented on a 2-tape prefix-rewriting automaton using a slight variation on the technique described in the proof of [\cite=K_smallover2]. It follows that we have:

Let [formula] be a finite monoid presentation which is weakly C(4). Then the relation

[formula]

is deterministic rational and reverse deterministic rational. Moreover, one can, starting from the presentation, effectively compute 2-tape deterministic automata recognising this relation and its reverse.

Just as in [\cite=K_smallover2], we obtain as corollaries large number of other facts about weakly C(4) monoids. For brevity we refrain from explaining all terms, and instead refer the reader to [\cite=K_smallover2] for definitions.

Every monoid admitting a weakly C(4) finite presentation

is rational (in the sense of Sakarovitch [\cite=Sakarovitch87]);

is word hyperbolic (in the sense of Duncan and Gilman [\cite=Duncan04]);

is asynchronous automatic;

has a regular language of linear-time computable normal forms (namely, the set of words minimal in their equivalence class with respect to the lexicographical order induced by any total order on the generating set);

has a boolean algebra of rational subsets;

has uniformly decidable rational subset membership problem; and

has rational subsets which coincide with its recognisable subsets.

Acknowledgements

This research was supported by an RCUK Academic Fellowship. The author thanks Uri Weiss for drawing his attention to the distinction between weak and strong C(n) conditions, and asking the questions answered by this paper.