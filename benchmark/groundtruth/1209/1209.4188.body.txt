cm cm

Finite sample forecasting with estimated temporally aggregated linear processes Definition Lemma Remark Proposition Proof Corollary Example Examples

Finite sample forecasting with estimated temporally aggregated linear processes

Key Words: linear models, ARMA, temporal aggregation, forecasting, finite sample forecasting, flow temporal aggregation, stock temporal aggregation, multistep forecasting.

Corresponding author. Département de Mathématiques de Besanon, Université de Franche-Comté, UFR des Sciences et Techniques. 16, route de Gray. F-25030 Besanon cedex. France. Lyudmyla.Grygoryeva@univ-fcomte.fr Centre National de la Recherche Scientifique, Département de Mathématiques de Besanon, Université de Franche-Comté, UFR des Sciences et Techniques. 16, route de Gray. F-25030 Besanon cedex. France. Juan-Pablo.Ortega@univ-fcomte.fr

Introduction

The success of parametric time series models as a tool of choice in many research fields is due in part to their good performance when it comes to empirical forecasting based on historical samples. Once a data generating process (DGP) has been selected and estimated for the forecasting problem at hand, there is a variety of well studied forecasting procedures and algorithms available in the literature. The most widespread loss function used in the construction of predictors is the mean square forecasting error (MSFE); see the monographs [\cite=BrocDavisYellowBook] [\cite=Brockwell2002] [\cite=MR1278033] [\cite=luetkepohl:book] and references therein for detailed presentations of the available MSFE minimization-based techniques. This is the approach to prediction that we follow in this work; the reader is referred to [\cite=granger1969] or Section 4.2 in [\cite=granger:newbold] for forecasting techniques based on other optimality criteria.

The stochastic nature of the time series models that we consider implies that the forecasts produced with them, carry in their wake an error that cannot be minimized even if the parameters of the model are known with total precision; we refer to this as the characteristic error of the model. Additionally, all that is known in most applications is a historical sample of the variable that needs to be forecasted, out of which a model needs to be selected and estimated. There are well-known techniques to implement this, which are also stochastic in nature and that increase the total error committed when computing a forecast; we talk in that case of model selection error and estimation error. All these errors that one incurs in at the time of carrying out a forecasting task are of different nature and much effort has been dedicated in the literature in order to quantify them in the case of linear multivariate VARMA processes.

Most results obtained in this direction have to do with the combination of the estimation and the characteristic errors; this compound error is always studied assuming independence between the realizations of the model that are used for estimation and the ones used for prediction; we refer the reader to [\cite=Baillie79] [\cite=Reinsel1980] [\cite=Yamamoto1980] [\cite=Yamamoto1981] [\cite=Dufour1985] [\cite=Basu1986] [\cite=Lutkepohl1987] [\cite=Samaranayake1988]. Explicit expressions for these errors in the VARMA context are available in the monograph [\cite=luetkepohl:book]. Indeed, if we assume that the sample out of which we want to forecast is a realization of the unique stationary solution of a VAR model, this error can be written down [\cite=luetkepohl:book] using the time-independent autocovariance of the process; the situation in the VARMA context is more complicated and the expression provided [\cite=luetkepohl:book] requires Monte Carlo simulations for its estimation.

The knowledge regarding the error associated to model selection is much more rudimentary and research in this subject seems to be in a more primitive state. A good description of the state of the art can be found in [\cite=LutkepohlHandbook2006] as well as in [\cite=Lutkepohl1986], and references therein. We do not consider this source of forecasting error in our work and hence in the sequel we will use the denomination total error to refer to the combination of the characteristic with the estimation errors.

In this paper we concentrate on one dimensional linear processes, a subclass of which is the ARMA family. The first contribution in this paper is the formulation of a MSFE based predictor that takes as ingredients a finite sample and the coefficients of a linear model estimated on it, as well as the computation of the corresponding total error. The main improvements that we provide with respect to preexisting work on this question are:

We make no hypothesis on the second order stationarity of the sample at hand; in other words, we do not assume that the sample is a realization of the stationary solution of the recursions that define the model. Such a hypothesis is extremely difficult to test in small and finite sample contexts and it is hence of much interest to be able to avoid it.

The expression for the total forecasting error is completely explicit and does not require the use of Monte Carlo simulations.

The interplay between the characteristic error, the estimation errors, and the forecasting horizon is highly nonlinear and can produce surprising phenomena. For example, as it is well known, the characteristic error is an increasing function of the horizon, that is, the further into the future we forecast, the more error we are likely to commit. When we take into account the estimation error, the total error may decrease with the forecast horizon! We study this finite sample related phenomenon with the total error formula introduced in Theorem [\ref=theor1] and illustrate it with an example in Section [\ref=Stock_aggregation_examples].

The characterization of the total forecasting error that we described serves as a basis for the second main theme of this paper, namely, the interplay between multistep forecasting, the prediction of temporal aggregates, and the use of temporal aggregation estimation based techniques to lower the total forecasting error. In this part of the paper we work strictly in the ARMA context. The temporal aggregation of ARMA processes is a venerable topic that is by now well understood [\cite=Amemiya1972] [\cite=Tiao1972] [\cite=Brewer1973] [\cite=TiaoWei1976] [\cite=WeiTempAggr1979] [\cite=Stram1986] [\cite=Wei:book] [\cite=Silvestrini2008] and has been extensively studied and exploited in the context of forecasting [\cite=abraham:aggregation] [\cite=Lutkepohl1986] [\cite=Lutkepohl1986a] [\cite=Lutkepohl1987] [\cite=Lutkepohl1989] [\cite=Lutkepohl1989statPapers] [\cite=Rossana1995] [\cite=LutkepohlHandbook2006] [\cite=Lutkepohl2009] [\cite=Lutkepohl2010b] mainly by H. Lütkepohl.

A recurrent question in this setup consists of determining the most efficient way to compute multistep forecasts or, more generally, predictions of linear temporal aggregates of a given time series. More specifically, given a sample and an underlying model, we can imagine at least two ways to construct a h time steps ahead forecast, or in general the one that is a linear combination of the h steps ahead values for the time series. First, we can simply compute the h time steps ahead forecasts of the time series out of the original disaggregated sample and to determine the needed aggregate prediction out of them; another possibility would be to temporally aggregate the sample and the time series model in such a way that the required forecast becomes a one time step ahead forecast for the new aggregated sample and model. If we do not take into consideration estimation errors and we only consider the characteristic error, there is a general result that states that the forecast based on high frequency disaggregate data has an associated error that is smaller or equal than the one associated to the aggregate sample and model (we will recall it in Proposition [\ref=comparison_of_frequency_predictors]). In the VARMA context, H. Lütkepohl [\cite=Lutkepohl1986] [\cite=Lutkepohl1987] [\cite=Lutkepohl2009] has characterized the situations in which there is no loss of forecasting efficiency when working with temporally aggregated ingredients.

When estimation errors are taken into account, the inequality that we just described becomes strict [\cite=Lutkepohl1986] [\cite=Lutkepohl1987], that is, forecasts based on models estimated using the dissagregated high-frequency samples perform always better than those based on models estimated using aggregated data. This is so even in the situations described in [\cite=Lutkepohl1986] [\cite=Lutkepohl1987] [\cite=Lutkepohl2009] for which the characteristic errors associated to the use of the aggregated and the disaggregated models are identical; this is intuitively very reasonable due to the smaller sample size associated to the aggregated situation, which automatically causes an increase in the estimation error.

In Section [\ref=A_hybrid_forecasting_scheme_using_aggregated_time_series_models] we propose a forecasting scheme that is a hybrid between the two strategies that we just described. We first use the high frequency data for estimating a model. Then, we temporally aggregate the data and the model and finally forecasting is carried out based on these two aggregated ingredients. We will show that this scheme presents two major advantages:

The model parameters are estimated using all the information available with the bigger sample size provided by the disaggregated data. Moreover, these parameters can be updated as new high frequency data becomes available.

In some situations, the total error committed using this hybrid forecasting scheme is smaller than the one associated to the forecast based on the disaggregated data and model and hence our strategy becomes optimal. Examples in this direction for both stock and flow temporal aggregates are presented in Section [\ref=Numerical_results]. The increase in performance obtained with our method comes from minimizing the estimation error; given that the contribution of this error to the total one for univariate time series models is usually small for sizeable samples, the differences in forecasting performance that we will observe in practice are moderate. As we will show in a forthcoming work, this is likely to be different in the multivariate setup where in many cases, the estimation error is the main source of error.

To our knowledge, this forecasting scheme has not been previously investigated in the literature and the improvement stated in the last point seems to be the first substantial application of temporal aggregation techniques in the enhancing of forecasting efficiency.

Finite sample forecasting of linear processes

In this section we introduce notations and definitions used throughout the paper and describe the framework in which we work. Additionally, since we are interested in finite sample based forecasting, we spell out in detail the predictors as well as the information sets on which our constructions are based.

Linear processes

Let [formula] be a set of independent and identically distributed random variables with mean zero and variance σ2. We will write in short We say that [formula] is a linear causal process whenever it can be represented as

[formula]

where [formula] is a set of real constants such that [formula]. Expression [\eqref=LCP] can also be rewritten as where L is the backward shift operator and [formula] is the power series [formula]. The process X defined in [\eqref=LCP] is called invertible if there exist constants [formula] such that [formula] and

[formula]

or equivalently, [formula], where [formula] is the power series [formula]. [formula] and [formula] can also be referred to as causal linear filter and invertible linear filter, respectively.

Finite sample forecasting of causal and invertible ARMA processes

Consider the causal and invertible ARMA(p, q) specification determined by the equivalent relations

[formula]

The innovations process [formula] can be either independent and identically distributed IID(0,σ2) or white noise WN(0,σ2). In this subsection we focus on how to forecast out of a finite sample [formula] that satisfies the relations [\eqref=1] and that has been generated out of a presample [formula] and a preinnovations set [formula]. A standard way to solve this problem [\cite=BrocDavisYellowBook] [\cite=Brockwell2002] consists of assuming that ξT is a realization of the unique stationary process X that satisfies the ARMA relations [\eqref=1] and to use its corresponding time independent autocovariance functions to formulate a linear system of equations whose solution provides the linear projection [formula] of the random variable XT  +  h onto [formula] using the L2 norm; this projection [formula] minimizes the mean square error. We recall that writing the unique stationary solution of [\eqref=1] usually requires knowledge about the infinite past history of the process. For example, for an AR(1) model of the form Xt  -  φXt  -  1  =  εt, the unique stationary solution is given by [formula].

Given that we are concentrating in the finite sample context, we prefer for this reason to avoid the stationarity hypothesis and the use of the corresponding autocovariance functions and to exploit in the forecast only the information that is strictly available, that is:

We now define the preset I as Let [formula] and define the enlarged preset I* as

[formula]

where:

if p > q: r  =  p and [formula];

if q > p: r = q and [formula];

if q  =  p: I  =  I*.

The enlarged preset I* is defined as a function of the elements in I. Consequently, the sigma-algebras σ(I) and σ(I*) generated by I and I*, respectively, coincide, that is, [formula].

The following result is basically known (see for example [\cite=MR1278033] [\cite=luetkepohl:book]) but we include it in order to be explicit and self-contained about the forecasting scheme that we are using in the rest of the paper and also to spell out the peculiarities of the finite sample setup in which we are working. We include a brief proof in the appendix.

In the conditions that we just described:

The information sets (sigma algebras) [formula] and [formula] generated by the preset and the past histories of the innovations [formula] and the sample [formula] coincide, that is,

[formula]

If the innovations process is IID (respectively WN) then the optimal multistep forecast [formula] (respectively optimal linear forecast) based on [formula] that minimizes the mean square forecasting error (MSFE) [formula] is:

[formula]

The MSFE associated to this forecast is

[formula]

For ARMA models, the forecasts constructed in [\eqref=eq:prop12] for different horizons with respect to the same information set [formula], satisfy the following recursive formula:

[formula]

Testing the stationarity of small or in general finite samples is a difficult task in practice. We emphasize that the prediction in Proposition [\ref=prop1] does not require any stationarity hypothesis. Moreover, we underline that the forecast ([\ref=eq:prop12]) does not coincide in general neither with the standard linear forecast for second order stationary series that uses the corresponding time independent autocovariance function (see for example [\cite=BrocDavisYellowBook], page 63), nor with the usual finite sample approximation to the optimal forecast (see [\cite=MR1278033], page 85). The main difference with the latter consists of the fact that the innovations associated to the presample are not assumed to be equal to zero but they are reconstructed out of it so that there is no loss of information. In the examples [\ref=MA1example] and [\ref=ARMA11] below we show how our forecast allows us to construct a predictor that:

These statements do not generalize to arbitrary ARMA models; for example, for pure AR models, the predictor that we propose and those cited above coincide.   [formula]

We consider the MA(1) model

[formula]

and the trivial sample consisting of just one value x1 at time t  =  1; this sample is generated by the preset [formula] and the innovation ε1. In this case, the enlarged preset [formula] with x0  =  ε0. Moreover, we have

[formula] and ψi  =  0, for any integer i  >  1,

[formula], for any integer j  ≥  1.

Consequently by [\eqref=eq:prop12], the forecast [formula] based on the information set [formula], is given by and has the associated error On the other hand, the forecast that assumes that x1 is a realization of the unique stationary solution of [\eqref=MA1] and that uses the corresponding autocovariance function [\cite=BrocDavisYellowBook] is given by and has the associated error We note that which shows that the forecast that we propose has a better performance than the one based on the stationarity hypothesis.   [formula]

The better performance of the forecast that we propose in the preceding example can be in part due to the fact that we are using for [formula] additional information on the preinnovations that is not taken advantage of at the time of writing [formula]. In the following example we consider an ARMA(1,1) model and we see that the statements of Remark [\ref=remark_forecast] also hold, even though in this case, unlike in the MA(1) situation, the information sets on which the two forecasts considered are based are identical.

Consider the model Then,

π0  =  1, [formula], for any integer j  ≥  1,

ψ0  =  1, [formula], for any integer i  ≥  1.

We consider the trivial sample x1 generated by the preset [formula]. Using Proposition [\ref=prop1], we have that the one-step ahead forecast [formula] based on the information set [formula], is given by On the other hand, the forecast based on the stationarity hypothesis using the same information set, yields and

It is easy to check that the statement [formula] is equivalent to [formula], which is always satisfied and shows that the forecast that we propose has a better performance than the one based on the stationarity hypothesis.   [formula]

Forecasting with estimated linear processes

In Proposition [\ref=prop1] we studied forecasting when the parameters of the model are known with total precision. In this section we explore a more general situation in which the parameters are estimated out of a sample. Our goal is to quantify the joint mean square forecasting error that comes both from the stochastic nature of the model (characteristic error) and the estimation error; we will refer to this aggregation of errors as the total error. This problem has been extensively studied in the references cited in the introduction always using the following two main constituents:

Estimation and the forecasting are carried out using independent realizations of the time series model.

The model parameter estimator is assumed to be asymptotically normal (for example, the maximum likelihood estimator); this hypothesis is combined with the use of the so called Delta Method [\cite=Serfling1980] in order to come up with precise expressions for the total error.

The most detailed formulas for the total error in the VARMA context can be found in [\cite=luetkepohl:book] where the Delta Method is applied to the forecast considered as a smooth function of the model parameters. If we assume that the sample out of which we want to forecast is a realization of the unique stationary solution of a VAR model, an explicit expression for this error can be written down by following this approach [\cite=luetkepohl:book] that involves the time-independent autocovariance of the process. In the VARMA setup, the situation is more complicated [\cite=luetkepohl:book] and the resulting formula requires the use of a Monte Carlo estimation.

In subsection [\ref=The_total_error_of_finite_sample_based_forecasting] we start by obtaining a formula for the total error using a different approach at the time of invoking the Delta Method; our strategy uses this method at a more primitive level by considering the parameters of the linear representation of the process seen as a function of the ARMA coefficients. We show that discarding higher order terms on [formula], where T is the sample size used for estimation, the resulting formula for the total error can be approximated by a completely explicit expression that involves only the model parameters and the covariance matrix associated to the asymptotically normal estimator of the ARMA coefficients.

In subsection [\ref=On_Lutkepohls_formula_for_the_total_forecasting_error] we rederive the total error formula by H. Lütkepohl [\cite=luetkepohl:book] and show that it can be rewritten as explicitly as ours without using any stationarity hypothesis or Monte Carlo simulations. Moreover, we show that this formula coincides with the approximated one obtained in subsection [\ref=The_total_error_of_finite_sample_based_forecasting] by discarding higher order terms on [formula].

The total error of finite sample based forecasting

Consider the causal and invertible ARMA(p, q) process [formula] determined by the equivalent relations

[formula]

and denote [formula], [formula]. In Proposition [\ref=prop1] we studied forecasting for the process [\eqref=31] when the parameters [formula] or [formula] of the model are known with total precision; in this section we suppose that these parameters are estimated by using a sample independent from the one that will be used for forecasting. A more preferable assumption would have been that the parameters [formula] are estimated based on the same sample that we intend to use for prediction, but exploiting only data up to the forecasting origin; Samaranayake [\cite=Samaranayake1988] and Basu et al [\cite=Basu1986] have shown that many results obtained in the presence of the independence hypothesis remain valid under this more reasonable assumption.

Under the independence hypothesis, the model coefficients [formula] or [formula] become random variables independent from the process X and the innovations ε. Moreover, we assume that these random variables are asymptotically normal, as for example in the case of maximum likelihood estimation of the ARMA coefficients.

For the sake of completeness, we start by recalling the Delta Method, that will be used profusely in the following pages. A proof and related asymptotic statements can be found in [\cite=Serfling1980].

Let [formula] be an asymptotically normal estimator for the vector parameter [formula], that is, there exists a covariance matrix Σ such that where T is the sample size. Let [formula] be a vector valued continuously differentiable function and let Jf be its Jacobian matrix, that is, [formula]. If [formula], then

The next ingredient needed in the formulation of the main result of this section is the covariance matrix [formula] associated to the asymptotic normal character of the estimator P for the parameters [formula], for some integer P. This is spelled out in the following lemma whose proof is a straightforward combination of the Delta Method with the results in Section 8.8 of [\cite=BrocDavisYellowBook].

Let {Xt} be a causal and invertible ARMA(p,q) process like in ([\ref=31]). Let [formula], [formula], and [formula] be the ARMA parameter vectors and let [formula] be a collection of length 2P of the parameters that provide the linear causal and invertible representations of that model. Then:

and [formula], [formula], [formula]. Details on how to algorithmically compute the Jacobian [formula] are provided in Appendix [\ref=computation_of_the_jacobian].

The next theorem is the main result in this section. Its proof can be found in the appendix.

Let [formula] be a sample obtained as a realization of the causal and invertible ARMA(p,q) model in [\eqref=31] using a preset I. In order to forecast out of this sample, we first estimate the parameters of the model [formula], [formula] based on another sample ξ'T that we assume to be independent of ξT, using the maximum likelihood estimator [formula] of the ARMA parameters. If we use the forecasting scheme introduced in Proposition [\ref=prop1], then:

The optimal multistep forecast [formula] for XT + h based on the information set FT generated by the sample ξT and using the coefficients estimated on the independent sample ξ'T is

[formula]

where r =  max {p,q} and [formula].

The mean square forecasting error (MSFE) associated to this forecast is

[formula]

where P  =  T + h - 1 + r.

The first summand will be referred to as the characteristic forecasting error and the second one as the estimation based forecasting error. Notice that the characteristic error coincides with [\eqref=eq:prop13] and amounts to the forecasting error committed when the model parameters are known with the total precision.

Let [formula] with P  =  T + h - 1 + r. Using the notation introduced in Lemma [\ref=xis_and_so_on] and discarding higher order terms in [formula], the MSFE in [\eqref=eq:theor32] can be approximated by

[formula]

where [formula] is the covariance matrix in ([\ref=eq:theor33]).

On Lütkepohl's formula for the total forecasting error

As we already pointed out, H. Lütkepohl [\cite=luetkepohl:book] has proposed formulas for VARMA models similar to the ones presented in Theorem [\ref=theor1] based on a different application of the Delta Method. In this section, we rederive Lütkepohl's result in the ARMA context and show that it is identical to the approximated formula ([\ref=eq:theor34]) presented in part (iii) of Theorem [\ref=theor1]. In passing, this conveys that Lütkepohl's result can be explicitly formulated and computed using neither stationarity hypotheses nor Monte Carlo simulations.

The key idea behind Lütkepohl's formula is applying the Delta Method by thinking of the forecast [formula] in question as a differentiable function [formula] of the model parameters [formula]. In order to develop further this idea, consider first the information sets FT: = σ() and FT': = σ() generated by two independent samples ξT and ξT' of the same size. The sample ξT is used for forecasting and hence FT determines the forecast [formula] once the model parameters [formula] have been specified. The sample ξT' is in turn used for model estimation and hence FT' determines [formula]. Consequently, the random variable () is fully determined by FT and FT'. In this setup, a straightforward application of the statement in Lemma [\ref=delta_method] shows that

[formula]

which, as presented in the next result is enough to compute the total forecasting error.

In the same setup as in Theorem [\ref=theor1], the total error associated to the forecast in ([\ref=eq:theor31]) can be approximated by

[formula]

We refer to this expression as Lütkepohl's formula for the total forecasting error. Moreover:

Finite sample forecasting of temporally aggregated linear processes

The goal of this section is proposing a forecasting scheme for temporal aggregates based on using high frequency data for estimation purposes and the corresponding temporally aggregated model and data for the forecasting task. We show, using the formulas introduced in the previous section, that in some occasions this strategy can yield forecasts of superior quality than those based exclusively on high frequency data that are presented in the literature as the best performing option [\cite=Lutkepohl1986] [\cite=Lutkepohl1987] [\cite=Lutkepohl2009].

We start by recalling general statements about temporal aggregation that we need in the sequel. We then proceed by using various extensions of the results in Section [\ref=Forecasting_with_estimated_linear_processes] regarding the computation of total forecasting errors with estimated series in order to compare the performances of the schemes that we just indicated.

Temporal aggregation of time series

The linear temporal aggregation of time series requires the use of the elements provided in the following definition.

Given [formula], X a time series, and [formula], define the K -period projection pK of X as where [formula] and the corresponding temporally aggregated time series Y as

[formula]

where

[formula]

The integer K is called the temporal aggregation period and the vector [formula] the temporal aggregation vector. Notice that the aggregated time series Y is indexed using the time scale τ  =  mK, with [formula] and its components are given by the X -aggregates [formula] defined by

[formula]

Definition [\ref=defTA] can be reformulated in terms of the backward shift operator L as: where

[formula]

and the indices of the components [formula] of [formula] are uniquely determined by the choice Z1: = w1X1 + ... + wKXK.

There are four important particular cases covered by Definition [\ref=defTA], namely:

Multistep approach to the forecasting of linear temporal aggregates

Let X be a time series and [formula] an K-period aggregation vector. Given a finite time realization [formula] of X such that T = MK with [formula], we aim at forecasting the aggregate w1XT + 1  +  ...  +  wKXT + K. There are two obvious ways to carry this out; first, we can produce a multistep forecast ,..., for X out of which we can obtain the forecast of the aggregate by setting : = w1 + ... + wK. Second, we can temporally aggregate X using [\eqref=TAseries] into the time series Y given by and produce a one-step forecast for Y. The following result recalls a well known comparison [\cite=Amemiya1972] [\cite=Luetkepohl84a] [\cite=Lutkepohl1986] [\cite=Lutkepohl1989] of the forecasting performances of the two schemes that we just described using the mean square characteristic error as an optimality criterion. In that setup, given an information set encoded as a σ-algebra, the optimal forecast is given by the conditional expectation with respect to it [\cite=MR1278033]. Given a time series X, we will denote in what follows by [formula] the information set generated by a realization [formula] of length T of X and the preset I used to produce it; more specifically

Let X be a time series and [formula] a K-period aggregation vector. Let [formula] be the corresponding temporally aggregated time series. Let T = MK with [formula] and consider [formula], [formula] the information sets associated to two histories of X and Y of length T and M, respectively, related to each other by temporal aggregation. Then:

[formula]

The inequality ([\ref=prop31]) has been studied in detail in the VARMA context by H. Lütkepohl [\cite=Lutkepohl1986] [\cite=Lutkepohl1987] [\cite=Lutkepohl2009] who has fully characterized the situations in which the two predictors are identical and hence have exactly the same performance. This condition is stated and exploited in Section [\ref=Numerical_results], where we illustrate with specific examples the performance of the forecasting scheme that we present in the following pages.

In the next two results we spell out the characteristic and the total errors associated to a multistep approach to the forecast of linear aggregates. The characteristic error is given in Proposition [\ref=prop_char_er_aggr] and the total error is provided in Theorem [\ref=theor2] under the same independence hypothesis between the samples used for estimation and forecasting that were already invoked in Theorem [\ref=theor1].

Let X be a time series model as in ([\ref=31]), r =  max {p,q}, K a temporal aggregation period, [formula] an aggregation vector, and [formula] the information set generated by a realization [formula] of length T of X. Let [formula] be the forecast of X-aggregate [formula] based on FT using the forecasting scheme in Proposition [\ref=prop1]. Then:

The forecast [formula] is given by:

[formula]

The corresponding mean square forecasting characteristic error is:

[formula]

It is a particular case of the statement in Proposition [\ref=prop_char_er_aggr] obtained by taking [formula]. In this case This shows that the forecast of the stock temporal aggregate coincides with the K-multistep forecast of the original time series. Consequently, it is easy to see by using [\eqref=prop22] and [\eqref=eq:prop13] that

It is a particular case of the statement in Proposition [\ref=prop_char_er_aggr] obtained by taking [formula]. In this case Consequently,

[formula]

Consider a sample [formula] obtained as the realization of a model of the type [\eqref=31] using the preset I. In order to forecast out of this sample, we first estimate the parameters of the model [formula] and [formula] based on another sample ξ'T of the same size that we assume to be independent of ξT. Let [formula] be an aggregation vector and let [formula] be the forecast of the aggregate [formula] based on [formula] using Proposition [\ref=prop_char_er_aggr] and the estimated parameters [formula], [formula]. Then:

The optimal forecast [formula] for [formula] given the samples ξT and ξ'T is

[formula]

where r =  max {p,q} and [formula].

The mean square forecasting error associated to this forecast is

[formula]

where A, B, C are the matrices with components given by

[formula]

[formula]

[formula]

with P(h)  =  T + h - 1 + r, P(h') = T + h' - 1 + r. Notice that Ahh'  =  Acharhh'  +  Areshh', where and [formula] is the characteristic forecasting error in part of Proposition [\ref=prop_char_er_aggr].

Let [formula], with P(K) = T + K - 1 + r. Using the notation introduced in Lemmas [\ref=delta_method] and [\ref=xis_and_so_on] and discarding higher order terms in [formula], the MSFE in [\eqref=eq:theor421] can be approximated by

[formula]

where

In order to compute the total error in [\eqref=eq:theor44] it is necessary to determine the covariance matrix [formula]. By Lemma [\ref=xis_and_so_on], it can be obtained out of the covariance [formula] matrix associated to the estimator of the ARMA parameters combined with the Jacobian JΞP. Details on how to algorithmically compute this Jacobian are provided in Appendix [\ref=computation_of_the_jacobian].

Notice that all the matrices involved in the statement of Theorem [\ref=theor2] are symmetric except for B and F.

A hybrid forecasting scheme using aggregated time series models

In the previous subsection we presented a forecasting method for linear temporal aggregates based exclusively on the use of high frequency data and models. The performance of this approach has been compared in the literature [\cite=Lutkepohl1986] [\cite=Lutkepohl1987] with the scheme that consists of using models estimated using the aggregated low frequency data; as it could be expected due to the resulting smaller sample size, this method yields a performance that is strictly inferior to the one based on working in the pure high frequency setup.

In this section, we introduce and compute the performance of a hybrid recipe that consists of estimating first the model using the high frequency data so that we can take advantage of larger sample sizes and of the possibility of updating the model as new high frequency data become available. This model and the data used to estimate it are subsequently aggregated and used for forecasting. We will refer to this approach as the hybrid forecasting scheme. The main goal in the following pages is writing down explicitly the total MSFE associated to this forecasting strategy so that we can compare it using Theorem [\ref=theor2] with the one obtained with the method based exclusively on the use of high frequency data and models. In the next section we use the resulting formulas in order to prove that there are situations in which the hybrid forecasting scheme provides optimal performance for various kinds of temporal aggregation.

The main tool at the time of computing the MSFE associated to the hybrid scheme is again the use of the Delta Method [\cite=Serfling1980] in order to establish the asymptotic normality of the estimation scheme resulting from the combination of high frequency data with the subsequent model temporal aggregation.

In order to make this more explicit, consider a time series model X determined by the parameters [formula] for which an asymptotically normal estimator [formula] is available, that is, there exists a covariance matrix [formula] such that with T being the sample size on which the estimation is based. Now, let [formula] be an aggregation period, [formula] an aggregation vector, and [formula] the linear temporally aggregated process corresponding to X and [formula].

In the setup that we just described, suppose that the temporally aggregated process Y is also a parametric time series model and that the parameters [formula] that define it can be expressed as a C1 function [formula] of the parameters [formula] that determine X. Using the estimator [formula], we can construct an estimator [formula] for [formula] based on disaggregated X samples by setting [formula] . Then

[formula]

where T is the disaggregated sample size and

[formula]

with [formula] the Jacobian matrix corresponding to the function [formula].

Once the model temporal aggregation function and its Jacobian have been determined, this proposition can be used to formulate an analog of Theorem [\ref=theor2] for the hybrid forecasting scheme by mimicking the proof of Theorem [\ref=theor1]; the only necessary modification consists of replacing the asymptotic covariance matrix [formula] of the estimator for the disaggregated model by that of the aggregated model [formula] obtained using Proposition [\ref=aggregated_covariance_matrix].

We make this statement explicit in the following theorem and then describe how to compute the model aggregation function [formula] and its Jacobian [formula] in order to make it fully functional. The construction of these objects is carried out in the ARMA context where the model aggregation question has already been fully studied. Even though all necessary details will be provided later on in the section, all we need to know at this stage in order to state the theorem is that the linear temporal aggregation of an ARMA(p,q) model is another [formula] model where

[formula]

K is the temporal aggregation period, [formula] is the index of the first nonzero entry of the aggregation vector, and the symbol ⌊  ·  ⌋ denotes the integer part of its argument. We emphasize that if the innovations that drive the disaggregated model are independent with variance σ2, this is not necessarily the case for the resulting aggregated model, whose innovations may be only uncorrelated with a different variance [formula], making it into a so called weak ARMA model.

Let [formula] be a sample obtained as a realization of a causal and invertible ARMA(p,q) model X as in [\eqref=31]. Let [formula] be a temporal aggregation vector such that T = MK, for some [formula], and let [formula] be the temporal aggregation of the model X and [formula] the temporal aggregated sample obtained out of ξT.

We forecast the value of the temporal aggregate [formula] out of the sample ηM by first estimating the parameters [formula] of the model X using another disaggregated sample ξ'T of the same size, that we assume to be independent of ξT. Let [formula] be the function that relates the ARMA parameter values of the disaggregated and the aggregated model and let [formula] be its Jacobian. Consider the [formula] model, with [formula] as in ([\ref=new_q]), determined by the parameters [formula]. Then:

where IK is the preset obtained out of the temporal aggregation of I, [formula], and [formula], with [formula] and [formula] the parameters corresponding to the causal and invertible representations of the temporally aggregated ARMA model with parameters [formula].

where [formula] is the variance of the innovations of the aggregated [formula] model Y and [formula] is the covariance matrix given by with [formula] the Jacobian matrix corresponding to the function [formula] and [formula] the Jacobian of [formula].

As we announced above, we conclude this section by describing in detail the parameters aggregation function [formula] and its Jacobian [formula], so that all the ingredients necessary to apply formula ([\ref=hybrid_error]) are available to the reader. In order to provide explicit expressions regarding these two elements, we provide a brief review containing strictly the results on the temporal aggregation of ARMA processes that are necessary for our discussion; for more ample discussions about this topic we refer the reader to [\cite=Amemiya1972] [\cite=Tiao1972] [\cite=Brewer1973] [\cite=TiaoWei1976] [\cite=WeiTempAggr1979] [\cite=Stram1986] [\cite=Wei:book] [\cite=Silvestrini2008] and references therein.

The temporal aggregation function [formula]. Consider the ARMA(p,q) model [formula], where [formula] and [formula]. In order to simplify the discussion and to avoid hidden periodicity phenomena, we place ourselves in a generic situation in which the autoregressive and moving average polynomials of the model that we want to temporally aggregate have no common roots and all roots are different (see [\cite=Wei:book] for the general case). Consider now a K-period aggregation vector [formula]. Our first goal is to find polynomials [formula] and [formula] that satisfy

[formula]

with [formula] as in ([\ref=projection_for_ta]). The intuition behind [\eqref=TLPHIL] is that for any time series X, its temporal aggregation [formula] satisfies

[formula]

In other words, the polynomial [formula], that we will call the temporal aggregation polynomial transforms the AR polynomial for X into an AR polynomial for Y in the aggregated time scale units. Let be the unknown polynomials. Equation [\eqref=TLPHIL] can be written in matrix form as [\cite=Brewer1973]:

[formula]

where [formula] is the reflection of [formula]. We start by determining the unknown values n and c using the two following dimensional restrictions:

Since A is a matrix of size [formula], Z and D are vectors of size p + 1 and cK + K, respectively, and we have AZ = D then, necessarily

[formula]

The system AZ = D contains n + p + 1 equations that need to coincide with the number of unknowns, that is, the n + 1 + c coefficients [formula] and [formula] of the polynomials [formula] and [formula], respectively. Consequently,

[formula]

The conditions [\eqref=2] and [\eqref=3] yield

[formula]

The first condition in [\eqref=4] shows that the autoregressive order does not change under temporal aggregation.

Let now K*  ≤  K be the index of the first nonzero component in the vector [formula]. This implies that [formula] is a vector of the form [formula] with [formula]. Since [\eqref=Brewer] is a matrix representation of the polynomial equality in [\eqref=TLPHIL], we hence have that [formula], where [formula] is the polynomial associated to the vector in the right hand side of [\eqref=Brewer]. It is clear that [formula]; as [formula], the degree n of [formula] is therefore

[formula]

Solving the polynomial equalities [\eqref=Brewer], we have found polynomials [formula] and [formula] such that the temporally aggregated time series Y satisfies

[formula]

Our goal now is showing the existence of a polynomial [formula] and a white noise [formula] such that

[formula]

This equality, together with [\eqref=5] shows that the temporally aggregated process Y out of the ARMA process X is a weak ARMA process, as it satisfies the relation

[formula]

where B  =  LK, [formula] is a polynomial of degree p, and [formula] a polynomial of degree [formula] whose coefficients will be determined in the following paragraphs. We recall that the symbol ⌊  ·  ⌋ denotes the integer part of its argument. Indeed, by [\eqref=degree_of_t] we have that [formula]. Additionally, by [\eqref=5]

[formula]

Since the right hand side of this expression only involves time steps that are integer multiples of K, the relation ([\ref=7]) only imposes requirements on the left hand side at those time steps. Moreover, it is easy to see that

[formula]

for any [formula]. This implies that the process is [formula] is [formula]-correlated, which guarantees in turn by [\cite=BrocDavisYellowBook] the existence of a weak MA(q*) representation

[formula]

where

[formula]

The coefficients of the polynomial [formula] are obtained by equating the autocovariance functions of the processes on both sides of [\eqref=7] at lags 0,K,2K,...,q*K, which provide q*  +  1 nonlinear equations that determine uniquely the q* + 1 unknowns corresponding to the coefficients [formula] of the polynomial [formula] and the variance [formula] of the white noise of the aggregated model.

In order to explicitly write down the equations that we just described, let us denote [formula] as in [\eqref=7] and set [formula]. Let now γ and Γ be the autocovariance functions of the [formula] and [formula] processes

[formula]

which are given by

[formula]

Consequently, the coefficients of the polynomial [formula] and the variance [formula] are uniquely determined by the q* + 1 equations

[formula]

The equations [\eqref=10] can be written down in matrix form, which is convenient later on at the time of spelling out the Jacobian of the aggregation function. Indeed, we can write:

[formula]

[formula]

where the bars over the polynomials in the previous expressions denote the corresponding coefficient vectors, that is, given a polynomial [formula], then [formula]. Additionally Si is the lower ith-shift matrix, that is,

[formula]

For any given vector [formula], [formula]. With this notation, the equations [\eqref=10] can be rewritten as

[formula]

In conclusion, if we denote [formula] and [formula], the construction that we just examined shows that

[formula]

The function [formula] is given by the solution of the polynomial equalities [\eqref=Brewer] and [formula] by the coefficients [formula] determined by [\eqref=Brewer] and the solutions of ([\ref=12]).

In this case, [formula] and hence K*  =  K, [formula], and [formula].

In this case, [formula] and hence K*  =  1, [formula], [formula].

The Jacobian [formula] of the temporal aggregation function [formula]. The goal of the following paragraphs is the computation of the Jacobian [formula] of the function [formula] in ([\ref=beta_function_1]). We first compute the Jacobian of the function [formula] by taking derivatives with respect to the components of the vector [formula] on both sides of the equations [\eqref=Brewer] that determine [formula]. This results in the following p matrix equations

[formula]

with i  =  1,...,p. These equations uniquely determine the (1,1)-block [formula] of the Jacobian [formula], as well as the derivatives

[formula]

that will be needed later on in the computation of the remaining blocks of the Jacobian. Given that there is no [formula] dependence on the function [formula], the (1,2)-block of the Jacobian is a zero matrix of size p  ×  q*.

The remaining two blocks are computed by using the function [formula] uniquely determined by the equations [\eqref=12]. Its derivatives are obtained out of a new set of equations resulting from the differentiation of both sides of this relation, namely,

[formula]

We recall that the entries of the vector [formula] correspond to the values previously obtained in [\eqref=derd] and that [formula]. Expression [\eqref=13] provides [formula] equations that allow us to find the values of the [formula] unknowns

[formula]

Comparison of forecasting efficiencies. Examples.

In the previous section we proposed a new hybrid scheme for the forecasting of temporal aggregates coming from ARMA processes. We recall that this strategy consists of first using high frequency disaggregated data for estimating a model; then we temporally aggregate both the data and the model, and finally we forecast using these two ingredients. As we announced in the introduction, there are situations in which our strategy is optimal with respect to the total error, that is, the predictor constructed following this procedure performs better than the one based exclusively on high frequency data and the underlying disaggregated model. In this section we give a few examples of specific models for which our scheme provides optimal efficiency of prediction. Before we proceed, we introduce abbreviations for the various predictors that we will be working with:

As we already mentioned, the forecasting performance of the TMS predictor is always superior or equal than that of the TA predictor when we take into account only the characteristic error, and it is strictly superior when the total error is considered. In view of these results and given that the H and the OH predictors carry out the forecasting with temporally aggregated data, they are going to produce worse characteristic errors than their TMS counterpart; hence, the only way in which the H and OH predictors can be competitive in terms of total error performance is by sufficiently lowering the estimation error. In order to check that they indeed do so, we will place ourselves in situations that are particularly advantageous in this respect and will choose models for which the TMS and the TA predictors have identical characteristic errors and hence it is only the estimation error that makes a difference as to the total error. The linear models for which this coincidence of characteristic errors takes place have been identified in the works of H. Lütkepohl [\cite=Lutkepohl1986] [\cite=Lutkepohl1987] [\cite=Lutkepohl2009] via the following statement.

Let [formula] be a linear causal process and let [formula] be a K-period aggregation vector. Then the TMS and TA predictors for the K-temporal aggregate determined by [formula] have identical associated characteristic errors if and only if the following identity holds:

[formula]

The equality [\eqref=charerrorequal] is satisfied for both stock ([formula]) and flow aggregation ([formula]) if {Xt} is a purely seasonal process with period K, that is,

[formula]

Given a specific model we want to compare the performances of the H and the TMS predictors for a variety of forecasting horizons. Given that condition [\eqref=charerrorequal] is different for each aggregation period K and cannot be solved simultaneously for several of them, we will content ourselves either with approximate solutions that are likely to produce very close H and TMS characteristic errors for several periods K or with exact solutions that provide exactly equal errors for only a prescribed aggregation period. The following points describe how we have constructed examples following the lines that we just indicated:

We first choose the orders p and q of the disaggregated ARMA(p,q) model that we want to use as the basis for the example.

We fix an aggregation period K and a number n of parameters ψi for which the equation [\eqref=charerrorequal] will be solved. The choice of p and q imposes a minimal number nmin  =  q - p + 1.

We determine a vector [formula] that consists of the n first components of the set [formula] that satisfies condition [\eqref=charerrorequal]. We emphasize that in general this condition does not determine uniquely the vector [formula] and that arbitrary choices need to be made. The vector [formula] is a truncation at order n - 1 of the MA representation of the ARMA process that we want to construct.

We conclude the construction of the ARMA(p,q) model that we are after by designing either an AR(p) polynomial [formula] consistent with causality or a MA(q) polynomial [formula] consistent with invertibility. Then:

In the first case, the required model is given by

[formula]

In the second case, the required model is given by

[formula]

In both cases, the MA and AR polynomials that are obtained in this way have to be checked regarding invertibility and causality, respectively. Additionally, the finite truncation of [formula] is likely to give rise to common roots between the AR and MA polynomials in ([\ref=truncation_1]) or in ([\ref=truncation_2]) which may make necessary a slight perturbation of the coefficients in order to be avoided.

We emphasize that the resulting ARMA model satisfies [\eqref=charerrorequal] only approximately and hence the characteristic errors of the two predictors will be not identical but just close to each other for the specific aggregation period K used. For pure MA models no truncation is necessary and hence exact equality can be achieved.

Stock aggregation examples

In the particular case of stock temporal aggregation, condition [\eqref=charerrorequal] is written as:

[formula]

We now consider the truncated vector [formula] with n components, that is, [formula]. Then, the truncated version of [\eqref=stockCond] is:

[formula]

where the symbol ⌊  ·  ⌋ denotes the integer part of its argument. We now provide a few examples of models whose specification is obtained following the approach proposed in the previous subsection and the relation ([\ref=stockCond_n]).

MA(10) model.

Let p  =  0, q  =  10, n  =  nmin  =  11 and let K = 2. Equation [\eqref=stockCond_n] becomes

[formula]

which imposes the following relations:

[formula]

This system of nonlinear equations has many solutions. We choose one of them by setting ψj  =  0, for [formula], and ψ10  =  0.3. This way we can trivially determine a MA(10) model which satisfies exactly the relation ([\ref=stockCond]) by taking θj  =  0 for [formula] and θ10  =  0.3.

Figure [\ref=fig:MA10_stock] shows the values of the characteristic errors for different values of the forecasting horizon for the TMS predictor, the H predictor, and the OH predictor. For the horizon h  =  2, the values of the characteristic errors of all the predictors coincide, which is a consequence of the fact that the model has been constructed using the relation ([\ref=stockCond]) with K  =  2. Moreover, it is easy to see by looking at ([\ref=periodic_condition]), that the particular choice of MA coefficients that we have adopted ensures that the resulting model is seasonal for the periods 2, 5, and 10; this guarantees that ([\ref=stockCond]) is also satisfied for the corresponding values of K and hence there is coincidence for the characteristic errors at those horizons too.

The total errors for a sample size of T = 50 are then computed using the formulas presented in sections [\ref=Forecasting_with_estimated_linear_processes] and [\ref=Finite_sample_forecasting_of_temporally_aggregated_linear_processes]. The corresponding results are also plotted in Figure [\ref=fig:MA10_stock] for the different forecasting schemes. This plot shows that for several forecasting horizons both the H and the OH predictors perform better than the TMS predictor.

A quick inspection of this plot reveals another interesting phenomenon consisting on the decrease of the total error associated to the three predictors as the forecasting horizon increases; this feature is due to the decrease of the estimation error using these forecasting schemes as the horizon becomes longer. The characteristic errors for the H and OH predictors do not increase monotonically with the forecasting horizon either; however, in this case, this is due to the fact that for each value of the forecasting horizon, these predictors are constructed using a different model since the aggregation period changes and hence so does the aggregated model used for forecasting.

In conclusion, in this particular example, both the H and the OH predictors exhibit a better forecasting performance than the TMS predictor and, additionally, the results regarding the OH predictor help in making a decision on what is the best possible aggregation period to work with in order to minimize the associated total forecasting error.

ARMA(3,11) model.

Let p  =  3, q  =  11, n  =  10 and let K = 3. In this case, the relation [\eqref=stockCond_n] yields

[formula]

and consequently

[formula]

We choose a solution for these relations of the form [formula] 0,0,0, - 0.7, 0.63, - 0.56,0)'. We now introduce an AR(3) polynomial of the form [formula]. We then determine the MA(11) part of the model by using ([\ref=truncation_1]), which yields the coefficients [formula] 1, - 0.32, - 0.7,1.26, - 1.687,1.288, - 0.7,0.224)'. In order to avoid the common roots between the AR and the MA polynomials that are obtained when the coefficients of the MA part are derived in this manner, we slightly perturb the values of some of the components of the vector [formula] that we now set to be [formula]  - 0.7,1.26, - 1.687, 1.288, - 0.7,0.224)'. Figure [\ref=fig:ARMA311_stock] shows the errors with respect to the forecasting horizon for all the predictors as in the previous example. The H and the OH predictors perform better than the TMS predictor for h = 3,6,9,10. Additionally the OH predictor performs better than the H predictor for h  =  4. Taking into account the initial choice of K = 3 when constructing the example, it becomes clear why the characteristic errors associated to the H and the OH predictors are very close to those associated to the TMS predictor for horizons h that are multiples of 3.

ARMA(1,4) model.

Let p  =  1, q  =  4, n  =  5 and let K = 4. In this setup, relation [\eqref=stockCond_n] yields

[formula]

and consequently ψ0  =  1 and ψ4  =  0, necessarily, while the values of the coefficients ψ1, ψ2, and ψ3 are not subjected to any constraint. We hence set [formula]. We now introduce the AR(1) polynomial determined by the coefficient [formula]. We then determine the MA(4) part of the model by using ([\ref=truncation_1]) which yields [formula]. Again in order to avoid common roots between the AR and the MA polynomials, we perturb the polynomial [formula] by setting: [formula].

Figure [\ref=fig:ARMA14_stock] shows that the H and the OH predictors have equal associated total errors and exhibit a better forecasting efficiency than the TMS predictor for all forecasting horizons except at h = 2. The initial choice of K = 4 at the model construction stage results in the fact that for h = 4 the values of the characteristic errors associated to the H and the OH predictors are very close to the one committed by the TMS predictor.

Flow aggregation examples

In the particular case of flow temporal aggregation, condition [\eqref=charerrorequal] can be written as:

[formula]

We now consider the truncation [formula]of [formula] with n components, that is, [formula]. Then, the truncated version of [\eqref=flowCond] can be expressed as:

[formula]

where symbol ⌊  ·  ⌋ denotes the integer part of its argument. We now provide a few examples of models whose specification is obtained following the approach described in the beginning of the section and the relation ([\ref=flowCond_n]).

MA(10) model.

Let p  =  0, q  =  10, n  =  nmin = 11, and let K = 2. Then the expression [\eqref=flowCond_n] reads

[formula]

and consequently

[formula]

A solution for these equations is given by the choice ψj  =  0, for [formula], and ψ10  =  0.3. Since the order of the AR polynomial is zero, the method that we proposed determines uniquely in this case the MA(10) polynomial that we are after with [formula]. The evolution of the forecasting errors versus the forecasting horizon in plotted in the Figure [\ref=fig:MA10_flow]. Both the H and the OH predictors perform better than the TMS predictor. For h = 4 the OH predictor has the smallest total error among the three predictors.

ARMA(3,10) model.

In the previous example we chose ψ10  ≠  0. Let us now use another solution of the system ([\ref=system_ma10]) in order to obtain another model with target orders p = 3 and q = 10. If we set ψ10 = 0, then a possible solution is [formula]. Let now [formula] be a causal AR(3) polynomial which determines via ([\ref=truncation_1]) the MA(10) polynomial [formula]  - 0.3595,0.1270, - 0.1894, 0.0368,0.0488,0.0039)'. In order to avoid common roots for the AR and MA polynomials, we perturb the MA coefficients and set [formula]  - 0.3595,0.1270,  - 0.1894,0.0368,0.0488,0.0039)'. Figure [\ref=fig:ARMA310_flow] shows the corresponding characteristic and total errors for the three predictors. The H and the OH predictors exhibit better performance than the TMS predictor for horizons h  =  2,4,5,6,7.

The model that we just presented can be used to illustrate the fact that the construction method that we presented in this sections is not the unique source of examples in which the H and the OH predictors perform better than the TMS scheme. Indeed, as it can be seen in Figure [\ref=fig:ARMA310_stock], the very same ARMA(3,10) model prescription used in the context of stock aggregation also shows this feature even though it has not been obtained by finding a solution of the equation ([\ref=stockCond]).

Notice that when the forecasting horizon h equals one all predictors coincide because there is no temporal aggregation and hence they obviously have the same errors associated.

Conclusions

In this work we have carried out a detailed study of the total error committed when forecasting with one dimensional linear models by minimizing the mean square error. We have introduced a new hybrid scheme for the forecasting of linear temporal aggregates that in some situations shows optimal performance in comparison with other prediction strategies proposed in the literature.

We work in a finite sample context. More specifically, the forecasting is based on the information set generated by a sample and a model whose parameters have been estimated on it and we avoid the use of second order stationarity hypotheses or the use of time independent autocovariance functions.

In this setup, we provide explicit expressions for the forecasting error that incorporate both the error incurred in due to the stochastic nature of the model (we call it characteristic error) as well as the one associated to the sample based estimation of the model parameters (estimation error). In order to derive these expressions we use certain independence and asymptotic normality hypotheses that are customary in the literature; our main contribution consists of providing expressions for the total error that do not require neither stationarity on the samples used nor Monte Carlo simulations to be evaluated.

We subsequently use these formulas to evaluate the performance of a new forecasting strategy that we propose for the prediction of linear temporal aggregates; we call it hybrid scheme. This approach consists of using high frequency data for estimation purposes and the corresponding temporally aggregated data and model for forecasting. This scheme uses all the information available at the time of estimation by using the bigger sample size provided by the disaggregated data, and allows these parameters to be updated as new high frequency data become available. More importantly, as we illustrate with various examples, in some situations the total error committed using this scheme is smaller than the one associated to the forecast based on the disaggregated data and model; in those cases our strategy becomes optimal. As the increase in performance obtained with our method comes from minimizing the estimation error, we are persuaded that this approach to forecasting may prove very relevant in the multivariate setup where in many cases the estimation error is the main source of error.

Appendices

Proof of Proposition [\ref=prop1]

It is a straightforward consequence of the causality and invertibility hypotheses on the ARMA model that we are dealing with. Indeed, we can write

[formula]

which proves [\eqref=eq:prop11].

Suppose first that the innovations [formula] are IID(0,σ2). Then the forecast [formula] that minimizes the mean square forecasting error [formula] is given by the conditional expectation (see for example [\cite=MR1278033], page 72):

[formula]

as required.

When [formula] is WN(0,σ2) our goal is finding the linear combination [formula] that minimizes Given that by [\eqref=eq:prop11proof], the elements XT  -  i can be written as a linear combination of the elements in εT  -  i, this task is equivalent to finding the vector [formula] that minimizes the function

[formula]

Hence, in order to minimize the function [formula] we compute the partial derivatives ∂S / ∂bi and we set them to zero, which shows that the optimal values are attained when bi  =  ψi + h. Consequently, the optimal linear forecast is given by [formula], as required.

We first compute XT  +  h  -  . By [\eqref=eq:prop12] and [\eqref=eq:prop11proof] we have

[formula]

Therefore

[formula]

Given the model [formula], we have We first recall that by [\eqref=eq:prop11] we have that [formula]. We now project both sides of this equality onto the information set FT by thinking of this σ-algebra as [formula] for the left hand side projection and as [formula] for the right hand side. We obtain:

[formula]

In the presence of white noise innovations, the conditional expectation in the previous equality should be replaced by a linear projection.   [formula]

Computation of the Jacobian [formula]

In this section we provide a simple algorithmic construction for the computation of the Jacobian [formula] when the elements in [formula] are considered as a function of [formula], that is, [formula]. We will separately compute the components [formula] and [formula], [formula], [formula].

The causality and invertibility hypotheses on the ARMA process we are working with, guarantee that for any [formula] there exist polynomials [formula], [formula] of order P uniquely determined by the relations:

[formula]

which are equivalent to

[formula]

These polynomial relations determine the functions [formula], [formula] needed in the computation of the Jacobian. We now rewrite [\eqref=psieq] and [\eqref=pieq] as

[formula]

If we take derivatives with respect to θj and φi, [formula], [formula] on both sides of [\eqref=psieqfunc], we obtain a set of p + q polynomial equations:

[formula]

that determine uniquely the corresponding entries of the Jacobian due to the invertibility of [formula]. At the same time, taking derivatives on both the right and left hand sides of [\eqref=pieqfunc] with respect to θj and φi, we obtain another set of p + q polynomial equations

[formula]

that determine uniquely the corresponding entries of the Jacobian due to the invertibility of [formula].

Proof of Theorem [\ref=theor1]

It is a straightforward consequence of the independence hypothesis between the samples ξT and the ξ'T, and part (ii) of Proposition [\ref=prop1].

By [\eqref=31] and part (i) of Proposition [\ref=prop1] we have that In order to compute this error notice that T + h - i can be rewritten in terms of the original innovations as

[formula]

Hence,

[formula]

By part (i) the forecast [formula] is given by

[formula]

According to the statement [\eqref=eq:theor33], both ψ̂i and π̂j can be asymptotically written as

[formula]

with ri and tj as Gaussian random variables of mean 0 and variances [formula] and [formula], respectively. Consequently by [\eqref=recall_forecast] and [\eqref=prop3:proof:2]

[formula]

We now recall that and we eliminate in this expression the term that decays as 1/T; we hence approximate [formula] as

[formula]

Using this approximation we compute now the MSFE:

[formula]

Proof of Theorem [\ref=luetkepohl_formula_theorem]

The mean square error associated to the forecast () carried out using estimated parameters [formula] is given by:

[formula]

We now recall that and notice that

[formula]

since the first term in the product involves the innovations [formula] and the second one [formula]; these two sets are disjoint and hence independent. Consequently by ([\ref=eq:prop13]) and [\eqref=msfe] we have The second summand of this expression can be asymptotically evaluated using ([\ref=delta_use_luetkepohl]). Indeed,

[formula]

with Consequently,

[formula]

In the presence of the stationarity hypothesis in part (ii) of the theorem we have that

[formula]

and hence ([\ref=second_expresion_for_luetkepohl]) follows. Otherwise, since we have in general that

[formula]

we can insert this expression in ([\ref=intermediate_exp1]) and we obtain

[formula]

The required identity ([\ref=first_expresion_for_luetkepohl]) follows directly from ([\ref=intermediate_exp2]) by noticing that and

Proof of Proposition [\ref=prop31]

First, we notice that by [\eqref=TAseriesComp] we have The same relation guarantees that [formula]. Hence the result is a consequence of the following general fact:

Let z be a random variable in the probability space [formula]. Let F* be a sub-sigma algebra of F , that is, F*  ⊂  F. Then

[formula]

Proof of Lemma [\ref=lemma1]

[formula]

Given that [formula], the inequality [\eqref=lemma1bis] follows if we show that Indeed,

[formula]

Proof of Proposition [\ref=prop_char_er_aggr]

Part (i) is a straightforward consequence of [\eqref=eq:prop12]. Regarding (ii), we first have that Consequently,

[formula]

Proof of Theorem [\ref=theor2]

It is a straightforward consequence of part (i) in Theorem [\ref=theor1].

By [\eqref=eq:theor41] we have that where P(h)  =  T + h - 1 + r. We now notice that

[formula]

Hence,

[formula]

where A, B, C are the matrices with components given by

[formula]

[formula]

[formula]

and P(h)  =  T + h - 1 + r, P(h') = T + h' - 1 + r.

We recall that by ([\ref=eq:theor41]), the forecast [formula] is given by

[formula]

According to [\eqref=eq:theor33], both ψ̂i and π̂j can be asymptotically written as

[formula]

with ri and tj Gaussian random variables of mean 0 and variances [formula] and [formula], respectively. Consequently,

[formula]

We now recall that and we eliminate in ([\ref=expression_to_simplify]) the term that decays as 1/T. We hence approximate [formula] as

[formula]

Using this approximation we now compute the MSFE:

[formula]

Using Lemma [\ref=eq:theor33], this expression can be asymptotically approximated by: where Achar, D, F, G are matrices whose components are given by

[formula]

[formula]

[formula]

[formula]