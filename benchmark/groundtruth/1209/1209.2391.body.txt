Theorem Proposition Corollary Remark Definition Conjecture

Reconstructing fully-resolved trees from triplet cover distances

Keywords: phylogenetic tree, tree metric, tree reconstruction, triplet cover.

Email: katharina.huber@cmp.uea.ac.uk (Corresponding author)

Introduction

Any tree T with positively weighted edges, induces a metric d on the set of leaves by considering the weighted path distance in T between each pair of leaves. Moreover, provided T has no vertices of degree 2, and that we ignore the labeling of interior vertices, both T and its edge weights are uniquely determined by the metric d. This uniqueness result has been known since the 1960s and fast algorithms exist for reconstructing both the tree and its edge weights from d (for further background the interested reader may consult  [\cite=bar] and [\cite=sem] and the references therein).

The uniqueness result and the algorithms are important in evolutionary biology for reconstructing an evolutionary tree of species from genetic data [\cite=fel]. However in this setting one frequently may not have d-values available for all pairs of species, due to the patchy nature of genomic coverage [\cite=san].

This raises a fundamental mathematical question - for which subsets of pairs of leaves of a tree do we need to know the d-values in order to uniquely recover the tree and its edge weights? In general this appears a difficult question (indeed determining whether such a partial d-metric is realized by any tree is NP-hard [\cite=far]). However, some sufficient conditions (as well as some necessary conditions) for uniqueness to hold have been found, in [\cite=cha] [\cite=yus], and more recently in [\cite=dre3], and [\cite=gue]. In this paper we consider the uniqueness question for trees that are 'fully-resolved' (i.e. all the interior vertices have degree 3) as these trees are of particular importance in evolutionary biology, and because the uniqueness question is easier to study for this class of trees.

The structure of this paper is as follows. First we introduce some background terminology and concepts, and then we define the particular type of subsets of leaf pairs (called 'stable triplet covers') which we show suffice to uniquely determine a fully-resolved tree. Moreover, we show how this comes about by establishing two combinatorial properties of stable triplet covers - a 'shellability' property and a graph-theoretic property related to tree-width, which we show is quite different to shellability. We conclude by providing a proof that a polynomial-time algorithm will reconstruct a tree and its edge weights for any set of leaf pairs that contains a stable triplet cover (or more generally a shellable subset). Our result answers a special case of the question posed at the end of [\cite=dre3] of whether every 'triplet cover' of a fully-resolved tree determines the tree and its edge weights.

Preliminaries

We now introduce some precise definitions required to state and prove our main results. We mostly follow the notation and terminology of [\cite=sem] and [\cite=dre3].

X - trees, edge-weightings and distances

For the rest of the paper, assume that |X|  ≥  3. An X - tree T = (V,E) is a graph theoretical tree whose leaf set is X and which does not have any vertices of degree 2. We call an X - tree fully-resolved if every interior vertex of T, that is, every non-leaf vertex of T, has degree three. Moreover, we call two distinct leaves x and y of T a cherry of T, denoted by x,y, if the parent of x is simultaneously the parent of y. For any subset Y  ⊆  X, we denote by T|Y the Y-tree obtained by restricting T to Y (suppressing resulting degree two vertices).

An example of a fully-resolved X - tree for X = {a,b,c,d,e,f,g}, and having two cherries, is shown in Fig. [\ref=figure1](i).

In case |Y| = 4, say Y = {a,b,c,d}, and the path from a to b does not share a vertex with the path from c to d in T|Y, we refer to T|Y as a quartet tree and denote it by ab||cd. Note that by deleting any edge e∈E from T the leaf sets Ae and Be: = X - Ae of the resulting two trees induce a bipartition of X. We refer to such a bipartition as X - split and denote it by A|B where A: = Ae and B: = Be and Ae and Be are as above. We say that two X - trees T = (V,E) and T' = (V',E') are equivalent if there exists a bijection φ:V  →  V' that is the identity on X and extends to a graph isomorphism from T to T'.

Suppose for the following that T = (V,E) is an X - tree. Then we call a map [formula] that assigns a weight, that is, a non-negative real number, to every edge of T an edge-weighting for T. Note that this definition implies that some of the edges of T might have weight zero. We denote an X - tree T together with an edge-weighting w by the pair (T,w) and call an edge-weighting that assign non-zero weight to every edge of T that is not incident with a leaf of T proper. Note that for any edge-weighting w of T, taking the sum of the weights of the edges on the shortest path from some x∈X to some y∈X induces a distance between x and y and thus a distance d = d(T,w) on X.

For example, in the tree in Fig. [\ref=figure1](i), if each edge has weight 1, then d(a,b) = 2,d(c,e) = 4, and d(c,f) = 5.

Lassos

We call a subset of X of size two a cord of X and, for a,b∈X distinct write ab rather than {a,b} for the cord containing a and b. Also, for any non-empty set [formula] of cords of X, we denote the edges of the graph (X,L) whose vertex set is X and whose edge set is the set {{a,b}:ab∈L} by ab rather than {a,b}, ab∈L.

Suppose for the following that [formula] is a non-empty set of cords of X. If T' = (V',E') is a further X - tree and w and w' are edge-weightings for T and T', respectively, such that d(T,w)(x,y) = d(T',w')(x,y) holds for all xy∈L then we say that (T,w) and (T',w') are L-isometric. Moreover we say that L is

an edge-weight lasso for T if for any two proper edge-weightings w and w' for T such that (T,w) and (T,w') are L-isometric we have that w = w'.

a topological lasso for T if for any other X - tree T' and any two proper edge-weightings w and w' for T and T', respectively, such that (T,w) and (T',w') are L-isometric we have that T and T' are equivalent.

a strong lasso for T if L is simultaneously an edge-weight and a topological lasso for T.

If L is a strong lasso for an X - tree then the graph (X,L) must be connected, and each component of this graph must be non-bipartite [\cite=dre3]. An example of a strong lasso L of the tree in Fig. [\ref=figure1](i) is the set of cords corresponding to the edges of the graph in Fig. [\ref=figure1](ii).

Shellability

Given a subset L of [formula] with [formula], and an X - tree T, we say that [formula] is T-shellable if there exists an ordering of the cords in [formula] as, say, [formula] such that, for every [formula], there exists a pair xμ,yμ of 'pivots' for aμbμ, i.e., two distinct elements xμ,yμ∈X - {aμ,bμ}, for which the tree T|Yμ obtained from T by restriction to Yμ: = {aμ,bμ,xμ,yμ}, is the quartet tree aμxμ||yμbμ, and all cords in [formula] except aμbμ are contained in [formula]. Any such ordering of [formula] will also be called a shellable ordering of [formula], and any subset L of [formula] for which a shellable ordering of [formula] exists will also be called an shellable lasso for T. In [\cite=dre3], it was established that every shellable lasso for an X - tree is in particular a strong lasso for that tree.

Example 1

Consider the seven-taxon tree, shown in Fig. [\ref=figure1](i), and the lasso L  =  {ab,bd,ad,bc,bf,ag,dg,eb,ef,fg,gc} (the edges of the graph in Fig. [\ref=figure1](ii)). The remaining ten chords in [formula] have a shellable ordering, described as follows:

[formula]

where the corresponding cord pivots are:

[formula]

and so L is a shellable (and hence strong) lasso for T. [formula]

Covers, triplet covers

A necessary condition for [formula] to be a edge-weight lasso or a topological lasso for a fully-resolved X - tree is that L forms a cover for T - that is, for each interior vertex v of T, L contains a pair of leaves from each pair of the three components of T - v. However this condition is not sufficient for L to be either an edge-weight lasso or a topological lasso (examples are given in [\cite=dre3]).

A particular type of cover for a fully-resolved X - tree is a triplet cover which is defined as any subset L of [formula] with the property that for each interior vertex v of T we can select leaves a,b,c from each of the three components of T - v so that ab,ac,bc∈L. It can be shown that if L is a triplet cover for a fully-resolved X - tree T then L is an edge-weight lasso. However it is not known whether or not every triplet cover of every such T is also a topological (and thereby a strong) lasso for T.

A special class of triplet covers

Suppose that T = (V,E) is a fully-resolved X - tree, and let

[formula]

where Ae|(X - Ae) denotes the X - split associated with edge e∈E. We call the elements in clus(T) 'clusters' (in biology, they are also sometimes referred to as 'clans' [\cite=wil]). Thus a cluster is a subset of X that corresponds to the leaf labels on one side of some edge of T.

Given a collection C of non-empty subsets of X we say that any function f:C  →  X is a stable transversal for C if it satisfies the two properties:

(transversality) f(A)∈A, for all A∈C;

(stability) [formula] for all A,B∈C.

Mostly we will be concerned with stable transversals for clus(T), which were introduced in [\cite=boc], though for a different purpose.

Example 2

An example of a stable transversals for clus(T) is as follows: Consider any stable transversal g for 2X (equivalently, the function g(A)  =   min A under some total ordering of X), and consider any proper edge weighting w of T. For a cluster A∈clus(T), consider the subset Aw of leaves of T in A that are a closest to the edge e whose deletion induces the split A|X - A. Here 'closest' refers to the path distance in T from each leaf in A to e under the edge weighting w. If we let f(A)  =  g(Aw), for each A∈clus(T) then f is a stable transversal for clus(T). Notice that this holds also for the corresponding function in which 'closest' is replaced by 'furthest' throughout. [formula]

Example 3

Consider the fully-resolved X - tree shown in Fig. [\ref=figure2](i), and the function f defined as follows: f({x})  =  x for all x in X, and

[formula]

and

[formula]

Then f is a stable transversal for T. Note that the choices of b,c,a in the last line could be replaced by, for example, c,a,b or c,c,a and we would still have a stable transveral. [formula]

Stable triplet covers are minimal strong lassos for T

Given a fully-resolved X - tree T, a stable transversal f of clus(T) defines a triplet cover for T as follows: For each interior vertex v of T, consider the three components of the graph T - v, and let A1v,A2v,A3v denote their leaf sets. Then let

[formula]

where Vint denotes the set of interior vertices of T. We say that L is a stable triplet cover (generated by f) if L  =  L(T,f) for some stable transversal f of clus(T). For example, for the pair (T,f) described in Example 3, we have:

[formula]

and the graph (X,L) for L  =  L(T,f) is shown in Fig. [\ref=figure2](ii). Notice that not all triplet covers are stable; indeed the set of triplet covers of a fully-resolved X - tree T is precisely the set of subsets of [formula] of the form L(T,f) where f is required to satisfy only the transversality property above for some f:clus(T)  →  X.

2d-trees

Interestingly, Fig. [\ref=figure2](ii) shows that for the set L  =  L(T,f) with T and f from Example 3, the graph (X,L) is a 2d-tree, where a graph G = (V,E) is called a 2d-tree if there exists an ordering [formula] of V such that {x1,x2}∈E and, for [formula] the vertex xi has degree 2 in the subgraph of G induced by [formula]. 2d-trees are examples of kd-trees which were characterized in [\cite=todd] and also studied in e. g. [\cite=gue]. In Fig. [\ref=figure2](ii) an acceptable vertex ordering is a,b,c,a',b',c'. The graph in Fig. [\ref=figure1](ii) is also a 2d-tree, as can be seen by considering the vertex ordering a,b,d,g,c,f,e.

Main result

We can now state our first main result which relates stable triplet covers with 2d-trees and shellable lassos.

If L is a stable triplet cover of a fully-resolved X - tree T with n: = |X|  ≥  3, then

(X,L) is a 2d-tree.

L is an shellable lasso for T, and so L is a strong lasso for T.

|L| = 2n - 3, and so L is also a minimal strong lasso for T.

We prove parts (i)-(iii) simultaneously by induction on n = |X|. Shellability holds trivially for n = 3 (since then [formula]), so suppose that it holds when n = k  ≥  3, and that T is a fully-resolved tree with k + 1 leaves, and that L is a triplet cover for T generated by a stable transversal f of clus(T). Select any cherry x,y of T. Without loss of generality, we may suppose that f({x,y}) = x. Let

[formula]

and define f':clus(T)  →  X by setting

[formula]

Note that, since f is a stable transversal for clus(T), it follows that y is not an element of any cord of L', and so [formula]. Moreover, [formula] for any A∈clus(T'), and so f':clus(T')  →  X'. It can now be checked that f' is a stable transversal for clus(T') and so L' is a stable triplet cover of T', generated by f'. By the inductive hypothesis (applied to T' and L') it follows with regards to (i) that (X',L') is a 2d-tree. Clearly adding y to the vertex set of that graph and xy and zy to its edge set preserves the 2d-tree property. By the definition of L' it is easy to see that the resulting graph is (X,L).

Note that regarding (ii) and (iii) the induction hypothesis implies that |L'|  =  2k - 3, and so |L|  =  2(k + 1) - 3 and that [formula] is shellable. So let us fix an ordering of [formula] that provides such a shelling. This will form the initial segment of a shellable ordering of [formula].

To describe this extended ordering, let v be the interior vertex of T adjacent to leaves x and y, and let u be the interior vertex of T adjacent to v. Consider the three components of the graph T - u. One component contains x,y, and we will denote the leaf sets of the other two components by X2 and X3, where, without loss of generality, z∈X3. Notice that [formula] is the disjoint union of the three sets:

[formula]

We order [formula] as follows: the elements of [formula] come first, ordered by their shellable ordering, followed by the elements ty with t∈X2 (in any order), followed by the elements ty with t∈X3  -  {z} (in any order).

We claim that any such ordering provides a shellable ordering of [formula]. To see this, observe first that, for any leaf t∈X2, the elements x,z provide 'pivots' for the pair t,y, since T|{x,y,z,t}  =  xy||zt and all cords in [formula] except ty are contained in [formula]. Also, for any leaf t∈X3, if we select any leaf z'∈X2 then the pair x,z' provides a 'pivot' for t,y, since T|{x,y,z',t}  =  xy||z't, and all cords in [formula] except ty are contained in [formula]. In all cases, the cords required for pivoting come earlier in the ordering.

Thus, we have established that L' is an shellable lasso for T, and so, by Theorem 6 of [\cite=dre3], L is also a strong lasso for T. Moreover, we showed that |L|  =  2|X| - 3, and since this equals the number of edges in any fully-resolved X-tree, linear algebra ensures that no strict subset of L' could be an edge weight-lasso for T. Hence, L is a minimal strong lasso for T, which completes the proof of the induction step, and thereby of the theorem.

Remarks

Just because a graph (X,L) is a 2d-tree, it does not follow that L forms a strong (let alone a shellable) lasso for every given fully-resolved X - tree T. A simple example is furnished by X = {a,b,c,d} and L  =  {ab,ac,bc,ad,bd}, for which (X,L) is a 2d-tree, and yet L fails to be a strong lasso for T = ab||cd.

However, if (X,L) forms a 2d-tree, or more generally if L contains a subset L' such that (X,L') is a 2d-tree, then L is a strong lasso for at least one fully-resolved X - tree. The proof is constructive based on the ordering [formula] in the definition of a 2d-tree: Start with the tree consisting of leaves x1 and x2, and construct a fully-resolved tree as follows: for each i > 2, if xi is adjacent to xj and xk in (X,L') (where j,k < i) then let xi be the leaf that is attached by a new edge to a new subdivision vertex on the path connecting xj and xk in the tree so-far constructed.

It may be of interest to explore further the connection between shellability and 2d-trees, and in particular, the question of when the former property for some set [formula] entails the latter property for L, or for some subset of L.

Suppose that T is a fully-resolved X - tree, and [formula] contains a stable triplet cover. A natural setting in which this situation arises is the following. Suppose (T,w) is a properly edge-weighted fully-resolved X - tree, and [formula] has the property that, for any interior vertex, v, L contains every chord xy for which x is a closest leaf to v in one subtree of T - v and y is a closest leaf to v in another subtree of T - v. Then, as noted in Example 2 above, L contains a stable triplet cover.

Now, when L contains a stable triplet cover for T, it follows by Theorem [\ref=maintheorem] that L is a shellable, and thereby also a strong lasso for T (since any superset of a strong lasso for a tree is also a strong lasso for that tree). However, it is perhaps not clear how one might efficiently construct (T,w) from the distances induced by L, particularly when the subset of L corresponding to the stable triplet cover is not also given explicitly. Thus, in the next section we describe a polynomial-time algorithm for reconstructing (T,w) whenever L contains some (unknown) shellable lasso for T.

An algorithm for reconstructing (T,w) from d(T,w)|L when L contains an shellable lasso for T.

Suppose that [formula] and that T is a fully-resolved X - tree, w is a proper edge-weighting of T and d = d(T,w). Starting with L*  =  L add cords to L* and extend the domain of d to those cords, by repeated application of the following extension rule (R), described in [\cite=gue] (Section 6.2, page 246):

Whenever x,y,z,u∈X and

[formula]

[formula]

add xz to L*, and let d(x,z): = d(x,u) + d(y,z) - d(y,u).

Let [formula] be the set of resulting set of cords obtained from the initial set L when this extension rule no longer yields any new cords.

Note that [formula] can be computed in polynomial time, and that d - values are assigned for all cords in [formula]. Moreover, if [formula], then [formula] is a strong lasso for T, however the converse does not hold (Example 6.2 of [\cite=dre3] provides a counterexample).

If [formula] contains an shellable lasso for a fully-resolved X - tree T, and d = d(T,w), for some proper edge weighting w, then [formula]. Consequently, T and w can be reconstructed in polynomial time from the restriction of d to L.

Suppose that L'  ⊆  L is a shellable lasso for T; we will show that [formula] and so [formula]. Suppose to the contrary that [formula] is a strict subset of [formula], and consider any shelling [formula] of the cords in [formula] (such a shelling exists by the assumption that L' is an shellable lasso for T). Let [formula] be the smallest index for which [formula]. Then the condition on the shelling ensures that there exists pivots xj,yj∈X - {aj,bj} so that for Y = {aj,bj,xj,yj} we have T|Y is the quartet tree ajxj||bjyj and that each cord in [formula] either is an element of L' or it occurs earlier in the ordering for the shelling than ajbj, and so, by the minimality assumption concerning j, all these cords lie in [formula]. Consequently, [formula], a contradiction. Thus, our assumption that [formula] is a strict subset of [formula] is not possible, as required.

Finally, to efficiently recover (T,w), once d has been defined on all of [formula], one can apply standard distance-based reconstruction methods for fully-resolved trees, such as the Neighbor-Joining method [\cite=fel].

Acknowledgments

M.S. thanks the Royal Society of NZ under its James Cook Fellowship scheme. Both authors thank the organizers of the "Structure Discovery in Biology: Motifs, Networks & Phylogenies", Schloss Dagstuhl, Germany, meeting where this paper was conceived.