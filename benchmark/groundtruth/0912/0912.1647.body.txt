=2500

Robust Fitting of Ellipses and Spheroids

This research was supported in part by the U.S. Office of Naval Research under grant numbers N00014-07-1-0555 and N00014-09-1-0342, and in part by the U.S. Army Research Office under grant number W911NF-07-1-0185.

Introduction

Ellipse and ellipsoid fitting has been extensively studied and has broad applications. For example, an ellipse can serve as a geometric primitive model in computer vision and pattern recognition, which allows reduction and simplification of data for higher level processing. Ellipse fitting is also essential in applied sciences from observational astronomy (orbit estimation) to structural geology (strain in natural rocks). Moreover, ellipsoid fitting (e.g., minimum volume ellipsoid estimator [\cite=Rousseeuw1987]) is a useful tool in outlier detection.

In this paper, we consider the following issues: In Section [\ref=background], the ellipse fitting problem is formulated and several important algorithms are reviewed. In Section [\ref=Obj], a new objective function based on the geometric definition of ellipse is introduced, and it is further extended to three ellipse fitting algorithms in Section [\ref=algorithms]. Then a spheroid fitting algorithm is proposed in Section [\ref=SecSpheroid], which is followed by the experimental results in Section [\ref=SimuResult].

Formulation and Background

As a classical problem, ellipse fitting has a rich literature. Various algorithms have been proposed from very different perspectives. We start our discussion by reviewing several classes of the most important ellipse fitting algorithms.

The problem of ellipse fitting can be modeled as follows. We have data points [formula], which are points on an ellipse corrupted by noise. The objective is to fit an ellipse with unknown parameters [formula] to the data points, so that the total error is minimized. The measure of error differs for different classes of algorithms.

The most intuitive class of ellipse fitting algorithms is algebraic fitting, which uses algebraic error as a measure of error. An ellipse can be described by an implicit function [formula], where [formula] denotes the ellipse parameters. The algebraic error from a data point [formula] to the ellipse is thus Ax2i + Bxiyi + Cy2i + Dxi + Eyi + F.

The most efficient and widely used algorithm in this category was proposed by Fitzgibbon et al. [\cite=Fitzgibbon1999]. It is a least squares optimization problem with respect to the algebraic criterion:

[formula]

The constraint ensures that the optimization result is an ellipse instead of a general conic section and also prevents the problem of parameter free scaling. This optimization problem is further reduced to a generalized eigenvalue problem, which can be efficiently solved. In addition, Halir et al. improved the algorithm into a numerically stable version [\cite=Halir1998]. Algebraic fitting has the advantage of low computational complexity. However, the algebraic criterion lacks geometric interpretation, and the algorithm is difficult to generalize to three dimensions due to its non-linear constraint.

To overcome the shortcomings of algebraic fitting, Ahn et al. proposed orthogonal least squares fitting (OLSF) [\cite=Ahn2001]. OLSF minimizes the sum of squared Euclidian distance, which is defined as the orthogonal distance from the data point to the ellipse:

[formula]

where [formula] is the orthogonal contacting point, which is the point on the ellipse that has the shortest distance to the corresponding data point. OLSF has a clear geometric interpretation and features high accuracy. Moreover, it can be generalized to the three-dimensional case [\cite=Ahn2002]. Unfortunately, OLSF is computationally intensive. It employs the iterative Gauss-Newton algorithm, and in each iteration, the orthogonal contacting points have to be found for each data point, being iterative itself.

Various extensions to OLSF algorithms have also been proposed. Angular information is incorporated into the OLSF algorithm in Watson's 2002 paper [\cite=WatsonDec.2002], in which the orthogonal geometric distance is replaced by the distance along the known measurement angle. Moreover, instead of the l2 norm in OLSF, l1, l∞ and lp norms have been considered as well [\cite=Watson2002] [\cite=Al-Subaihi2005] [\cite=Atieg2003].

The third class of algorithms consists of Maximum Likelihood (ML) algorithms, which were proposed in [\cite=Chojnacki2000] and [\cite=LeedanJun.2000]. The key steps of the two ML algorithms, the fundamental numerical scheme [\cite=Chojnacki2000] and the heteroscedastic errors-in-variables scheme [\cite=LeedanJun.2000], have been proven to be equivalent in [\cite=Chojnacki2004].

In [\cite=Chojnacki2000], Chojnacki et al. assume that the data points are independent and have a multivariate normal distribution: [formula]. The ML solution is then reduced to an optimization problem based on Mahalanobis distance:

[formula]

The fundamental numerical scheme is implemented to solve a variational equation iteratively by solving an eigenvalue problem at each iteration until it converges. The ML algorithms are accurate with moderate computational cost. However, when the noise is large or the eccentricity of the ellipse is large, the algorithm breaks down, because when any data point is close to the center of the estimated ellipse, one of the matrices in the algorithm has elements that tend to infinity.

All three classes of algorithms described above have their advantages and perform well when the noise level is low. However, they share a common disadvantage of not being robust enough for highly noisy data. In this paper, we propose a series of algorithms that are resistant to large noise, and can be generalized to three-dimensions easily, with competitive accuracy and moderate computational cost.

A New Geometric Objective Function

Note that both OLSF and ML algorithms estimate the nuisance parameters [formula] (point on the ellipse that generates the data point) in addition to the parameters of the ellipse. It is desirable to bypass these nuisance parameters and have a more intrinsic fitting method with a clear geometric interpretation.

Recall the geometric definition of an ellipse. An ellipse is the locus of points such that the sum of the distances from that point to two other fixed points (called the foci of the ellipse) is constant. I.e., [formula] is a point on the ellipse if and only if

[formula]

where [formula] denotes the l2 norm, [formula] and [formula] are the two foci, and a is the length of the semi-major axis.

Based on the geometric definition, the ellipse fitting problem can be naturally formulated as an optimization problem with a new geometric objective function:

[formula]

where n denotes the number of data points.

The objective function in ([\ref=NewObjective]) has several advantages. First, it has a clear geometric interpretation: it is the expected squared difference between the sum of the distances from the data points to the foci and the length of the major axis. Second, the parameters in the objective function, [formula], [formula] and a, are intrinsic parameters of ellipses, which are translation and rotation invariant. The third advantage is that the objective function is ellipse specific, and thus no extra constraints are needed. As a result, the minimization problem can be readily solved by gradient descent algorithms. Lastly, and most importantly, the objective function possess one more property that contributes to the robustness of our algorithm, which is demonstrated by comparing with the objective function of OLSF.

Assume that the data points are independent and have a multivariate normal distribution: [formula]. The expected contribution of a noisy data point to the objective function of OLSF is approximately

[formula]

Note that this is homogeneous for all the data points. However, for our objective function, the expected contribution can be approximated as (see Fig. [\ref=analysisgraph])

[formula]

where ζi is the angle [formula]. This quantity is heterogeneous around the periphery of the ellipse: the objective function puts a large weight on the data points located at two ends of the major axis. As a result, our algorithm provides a highly robust and accurate major axis orientation estimate.

However, the objective function in ([\ref=NewObjective]) has a global minimum at infinity. When the foci move away from each other toward infinity and the semi-major axis length tends to infinity, the value of the objective function approaches zero. So when the noise level is high, the local minimum (that we desire in this case) is smeared out by the noise, resulting in the estimated foci slipping away along the major axis.

In order to take advantage of the robustness of ellipse axis orientation estimation while overcoming the problem of having a global minimum at infinity, we propose three modified algorithms in the next section, so as to increase the robustness and accuracy of the algorithm directly using our new objective function.

Three Modified Algorithms for Ellipse Fitting

In this section, we introduce three modified algorithms based on the objective function proposed in Section [\ref=Obj]. Each of the three algorithms overcomes the problem of a global minimum at infinity and achieves a robust and accurate result.

Penalized Objective Function

The most intuitive way to eliminate the global minimum at infinity is penalization. The penalty term should favor smaller semi-major lengths, so that the foci will not diverge. As a result, we propose the following penalized objective function:

[formula]

where the second term is the penalty term, λ is a tuning parameter, âmax is an estimated upper bound for the semi-major length a, and σ̂ is an estimate of the noise standard deviation. σ̂ and âmax are estimated during the initialization procedure.

The term [formula] tends to infinity rapidly when a exceeds âmax, thus eliminating the global minimum at infinity. The penalty term is also proportional to the estimated noise level. When the noise level is high, the penalty term is large, so as to increase the robustness of the algorithm. On the other hand, when the noise level is low, the penalty term is small to ensure a small bias added to the objective function. The coefficient âmax is a scaling factor to accommodate the size of the ellipse we are fitting.

In the initialization, âmax is estimated as the largest distance from a data point to the mean of all the data points [formula]. a is initialized as the mean of the distance from the data points to [formula]. To estimate σ̂, we run the gradient descent algorithm for ([\ref=NewObjective]) and terminate when a exceeds âmax. Then σ̂ is estimated as the square root of the resulting objective function value. This simple noise level estimation method suffices for our purposes here.

The penalized optimization problem ([\ref=Penalized]) can be readily solved by gradient descent algorithms once initialized. The global minimum at infinity is eliminated and the resulting algorithm has good accuracy and high robustness, which we will show in Section [\ref=SimuResult] via simulation results.

Axial Guided Ellipse Fitting

The second algorithm we propose to overcome the problem described in Section [\ref=Obj] is axial guided fitting. Recall that the major axis orientation estimate is accurate and robust. So the only thing left to be determined is the size of the ellipse, i.e., the semi-major length a and semi-minor length b.

To estimate a and b, we first solve ([\ref=NewObjective]) to estimate the major-axis orientation φ and ellipse center (xc,yc). Then we translate and rotate the data points {(xi,yi)}ni = 1 so that the estimated ellipse is in the standard position (centered at the origin with its major axis coinciding with the x-axis). The resulting data points are

[formula]

and

[formula]

Then the semi-major length a is determined such that a certain percentage, Pa, of the data points satisfy xi'∈[xc  -  a,xc  +  a]. The semi-minor length b is determined in a similar manner with percentage Pb. Naturally, Pa and Pb are related to the noise level. If we make additional assumptions that the data points are independent of each other and have a multivariate normal distribution: [formula], and that they are distributed uniformly in angle around the periphery, then the relationship between Pa, Pb and the noise level σ can be approximated as

[formula]

and

[formula]

where [formula] and [formula]. Recall that we have the approximation ([\ref=analysis]). Assuming that the estimated ellipse is close to the true model, the noise level can be readily estimated as

[formula]

With this noise estimate, we can perform the axial guided fitting as described, which results in the following procedure:

Solve ([\ref=NewObjective]) by gradient descent algorithms to obtain φ, (xc,yc), [formula] and ζi, [formula];

Translate and rotate the data set so that the estimated ellipse is located at the standard position;

Estimate the noise level by ([\ref=NoiseEst]);

Calculate Pa and Pb from ([\ref=Pa]) and ([\ref=Pb]);

Find a and b so that a portion Pa of the data points satisfy xi'∈[xc  -  a,xc  +  a] and a portion Pb of the data points satisfy yi'∈[yc  -  b,yc  +  b].

Axial guided ellipse fitting divides the ellipse fitting problem into two stages: orientation estimation and size estimation. In applications where the noise level is known a priori, axial guided fitting could be simplified and becomes more efficient and accurate.

Weighted Objective Function

In order to take advantage of the robust ellipse orientation estimation and obtain an accurate size estimation as well, we propose the following weighted objective function:

[formula]

where β is a tuning parameter which varies from 0 to 1.

When β = 0, ([\ref=weighted]) is the same as the original objective function, so that we can obtain accurate ellipse orientation estimation. On the other hand, when β = 1, the angle dependent weight 1 +  cos ζi is applied to mimic the objective function of OLSF so as to obtain an accurate size estimation. By varying β from 0 to 1 gradually, we avoid stray local minima at first, and aim for accuracy in the end.

The weighted objective minimization problem is solved by gradient descent in such a way that 1 + β cos ζi, [formula] is assumed to be constant in each iteration and updated afterwards. The parameter β is updated in a linear manner. We will show the efficacy of this algorithm in Section [\ref=SimuResult].

Spheroid Fitting

So far, we have proposed three modified algorithms based on the geometric definition of an ellipse. In this section, we generalize our method to the three-dimensional case.

Unfortunately, general ellipsoids do not have a natural geometric definition similar to ellipses. Nonetheless, we can still generalize our algorithm to three-dimensions in the case of a spheroid. A spheroid is defined as a quadric surface obtained by rotating an ellipse about one of its principal axes; in other words, a spheroid is an ellipsoid with two equal semi-diameters. Although a spheroid is a special case of an ellipsoid, this special case may have broad applications.

According to the definition, a spheroid has the same basic geometric property as an ellipse. This means that all algorithms proposed in Section [\ref=Obj] and [\ref=algorithms] can be easily generalized to three dimensions in the natural way. For example, in the case of the weighted objective function, we still have the optimization problem

[formula]

with [formula], [formula], [formula].

We now have a group of algorithms almost the same as in the ellipse fitting case, and we will demonstrate the fitting result of ([\ref=spheroid]) as an example at the end of the next section.

Experimental Results

To demonstrate the efficacy of the algorithms described above, we describe a series of experiments in different settings. Synthetic data has been used for the simulations.

A set of points on the perimeter of the ellipse were drawn according to a uniform distribution in angle. The data points were obtained by corrupting the true points with independent and identically distributed (i.i.d.) additive Gaussian noise, with mean [formula] and covariance [formula]. The error rate is defined as the normalized area difference between the true ellipse Et and the fitted ellipse Ef:

[formula]

where [formula] is the area difference and SEt denotes the area of the true ellipse.

Comparison of the proposed algorithms

The accuracy of the method based on the original objective function, penalized fitting, axial guided fitting and weighted objective fitting were tested and compared under a wide range of noise levels.

We consider an ellipse in standard position (centered at the origin and without rotation) with semi-major and semi-minor lengths 5 and 3 respectively. Fifty data points were drawn for each trial for a total run of 50 trials per noise level. Fig. [\ref=Comparison] shows the mean error rate for each algorithm under a range of noise levels (σ2 from 0 to 0.5). The lower bounds of the error bars are the 20 percent quantiles and the upper bounds are the 80 percent quantiles of the 50 trials.

As shown by the simulation results, the three revised algorithms exhibit substantial improvement compared with the method using the original objective function. Penalized fitting and weighted objective fitting have comparable performance, which is slightly better than that of axial guided fitting.

Fig. [\ref=Convergence] shows the convergence rate of weighted objective fitting. Note that the plot is on a log scale. So the algorithm converges faster than exponential in the first few iterations. As for penalized fitting and axial guided fitting, they converge at similar speeds, except that penalized fitting has an initialization procedure and axial guided fitting needs noise estimation.

Comparison with Algebraic Fitting, OLSF, and ML

In this subsection, we describe simulations to compare our method with the previous methods (algebraic fitting, OLSF and ML), in terms of accuracy, under a high-eccentricity situation over a wide range of noise levels. Penalized fitting is used as a representative for the proposed algorithms. For algebraic fitting, OLSF and ML algorithms, we implemented the numerically stable version of algebraic fitting from [\cite=Halir1998], the OLSF algorithm proposed by Ahn et al. from [\cite=Ahn2001], and the FNS ellipse fitting algorithm from [\cite=Chojnacki2000] respectively.

An ellipse in standard position with semi-major and semi-minor lengths 8 and 2, respectively, were used in the simulations. Fifty data points were drawn for each trial for a total run of 50 trials per noise level for penalized fitting, algebraic fitting and OLSF, and a total run of 1000 trials for FNS.

Fig. [\ref=ComparisonMean] shows the mean error rate under a range of noise levels (σ2 from 0 to 0.8) for the four algorithms. Although penalized fitting performs slightly worse than the other three algorithms when the noise level is low, it outperforms them when the noise level increases, which shows the robustness of our algorithms. The curve with triangle markers represents the FNS algorithm. It has high accuracy when the noise level is low, yet it breaks down when there are data points near the center of the estimated ellipse, which happens often for moderate or high noise levels. The FNS curve represrents the average error on those trials (out of 1000 trials) for which the algorithm produced an estimate. The dotted segment of the FNS plot indicates that the algorithm failed to produce an estimate for more than 90% of the trials.

Fig. [\ref=ConvergenceVar] shows the comparison with error bars for the algebraic fitting, OLSF and penalized fitting. As in the previous case, the lower bounds and upper bounds of the error bars are the 20% and 80% quantiles of 50 trials. This demonstrates the robustness of our algorithms.

As for the computational cost, our algorithms perform almost the same as the ML algorithms and are much more efficient than the OLSF algorithms in a typical setting.

Spheroid Fitting

Here we present an example of a typical spheroid fitting result to demonstrate the efficacy of our spheroid fitting algorithm based on the weighted objective function. Fifty true points are generated from the surface of a [formula] spheroid centered at the origin with rotation. The data points are generated from the true points with additive Gaussian noise with mean [formula] and variance [formula]. Fig. [\ref=SpheroidSimu] shows the fitting result of our algorithm.