Proposition Remark

Proof.[formula]

Optimal construction of k-nearest neighbor graphs for identifying noisy clusters

,

,

Introduction

Using graphs to model real world problems is one of the most widely used techniques in computer science. This approach usually involves two major steps: constructing an appropriate graph which represents the problem in a convenient way, and then constructing an algorithm which solves the problem on the given type of graph. While in some cases there exists an obvious natural graph structure to model the problem, in other cases one has much more choice when constructing the graph. In the latter cases it is an important question how the actual construction of the graph influences the overall result of the graph algorithm.

The kind of graphs we want to study in the current paper are neighborhood graphs. The vertices of those graphs represent certain "objects", and vertices are connected if the corresponding objects are "close" or "similar". The best-known families of neighborhood graphs are [formula]-neighborhood graphs and k-nearest neighbor graphs. Given a number of objects and their mutual distances to each other, in the first case each object will be connected to all other objects which have distance smaller than [formula], whereas in the second case, each object will be connected to its k nearest neighbors (exact definitions see below). Neighborhood graphs are used for modeling purposes in many areas of computer science: sensor networks and wireless ad-hoc networks, machine learning, data mining, percolation theory, clustering, computational geometry, modeling the spread of diseases, modeling connections in the brain, etc.

In all those applications one has some freedom in constructing the neighborhood graph, and a fundamental question arises: how exactly should we construct the neighborhood graph in order to obtain the best overall result in the end? Which type of neighborhood graph should we choose? How should we choose its connectivity parameter, for example the parameter k in the k-nearest neighbor graph? It is obvious that those choices will influence the results we obtain on the neighborhood graph, but often it is completely unclear how.

In this paper, we want to focus on the problem of clustering. We assume that we are given a finite set of data points and pairwise distances or similarities between them. It is very common to model the data points and their distances by a neighborhood graph. Then clustering can be reduced to standard graph algorithms. In the easiest case, one can simply define clusters as connected components of the graph. Alternatively, one can try to construct minimal graph cuts which separate the clusters from each other. An assumption often made in clustering is that the given data points are a finite sample from some larger underlying space. For example, when a company wants to cluster customers based on their shopping profiles, it is clear that the customers in the company's data base are just a sample of a much larger set of possible customers. The customers in the data base are then considered to be a random sample.

In this article, we want to make a first step towards such results in a simple setting we call "cluster identification" (see next section for details). Clusters will be represented by connected components of the level set of the underlying probability density. Given a finite sample from this density, we want to construct a neighborhood graph such that we maximize the probability of cluster identification. To this end, we study different kinds of k-nearest neighbor graphs (mutual, symmetric) with different choices of k and prove bounds on the probability that the correct clusters can be identified in this graph. One of the first results on the consistency of a clustering method has been derived by [\citet=Hartigan81], who proved "fractional consistency" for single linkage clustering.

The question we want to tackle in this paper is how to choose the neighborhood graph in order to obtain optimal clustering results. The mathematical model for building neighborhood graphs on randomly sampled points is a geometric random graph, see [\citet=Penrose03] for an overview. Such graphs are built by drawing a set of sample points from a probability measure on [formula], and then connecting neighboring points (see below for exact definitions). Note that the random geometric graph model is different from the classical Erds-Rényi random graph model (cf. [\citet=Bollobas01] for an overview) where vertices do not have a geometric meaning, and edges are chosen independently of the vertices and independently of each other. In the setup outlined above, the choice of parameter is closely related to the question of connectivity of random geometric graphs, which has been extensively studied in the random geometric graph community. Connectivity results are not only important for clustering, but also in many other fields of computer science such as modeling ad-hoc networks (e.g., [\citet=SanBlo03], [\citet=Bettstetter02], [\citet=KunVen]) or percolation theory ([\citet=BolRio06]). The existing random geometric graph literature mainly focuses on asymptotic statements about connectivity, that is results in the limit for infinitely many data points. Moreover, it is usually assumed that the underlying density is uniform - the exact opposite of the setting we consider in clustering. What we would need in our context are non-asymptotic results on the performance of different kinds of graphs on a finite point set which has been drawn from highly clustered densities.

Our results on the choice of graph type and the parameter k for cluster identification can be summarized as follows. Concerning the question of the choice of k, we obtain the surprising result that k should be chosen surprisingly high, namely in the order of O(n) instead of O( log n) (the latter would be the rate one would "guess" from results in standard random geometric graphs). Concerning the types of graph, it turns out that different graphs have advantages in different situations: if one is only interested in identifying the "most significant" cluster (while some clusters might still not be correctly identified), then the mutual [formula] graph should be chosen. If one wants to identify many clusters simultaneously the bounds show no substantial difference between the mutual and the symmetric [formula] graph.

Main constructions and results

In this section we give a brief overview over the setup and techniques we use in the following. Mathematically exact statements follow in the next sections.

Neighborhood graphs. We always assume that we are given n data points X1,...,Xn which have been drawn i.i.d. from some probability measure which has a density with respect to the Lebesgue measure in [formula]. As distance function between points we use the Euclidean distance, which is denoted by [formula]. The distance is extended to sets [formula] via [formula]. The data points are used as vertices in an unweighted and undirected graph. By [formula] we denote the set of the k nearest neighbors of Xj among X1,...,Xj - 1,Xj + 1,...,Xn. The different neighborhood graphs are defined as follows:

[formula]-neighborhood graph [formula]: Xi and Xj connected if [formula],

symmetric k-nearest-neighbor graph [formula]: Xi and Xj connected if [formula] or [formula],

mutual k-nearest-neighbor graph [formula]: Xi and Xj connected if [formula] and [formula].

Note that the literature does not agree on the names for the different [formula] graphs. In particular, the graph we call "symmetric" usually does not have a special name.

Most questions we will study in the following are much easier to solve for [formula]-neighborhood graphs than for [formula] graphs. The reason is that whether two points Xi and Xj are connected in the [formula]-graph only depends on [formula], while in the [formula] graph the existence of an edge between Xi and Xj also depends on the distances of Xi and Xj to all other data points. However, the [formula] graph is the one which is mostly used in practice. Hence we decided to focus on [formula] graphs. Most of the proofs can easily be adapted for the [formula]-graph.

The cluster model. There exists an overwhelming amount of different definitions of what clustering is, and the clustering community is far from converging on one point of view. In a sample based setting most definitions agree on the fact that clusters should represent high density regions of the data space which are separated by low density regions. Then a straight forward way to define clusters is to use level sets of the density. Given the underlying density p of the data space and a parameter t > 0, we define the t-level set L(t) as the closure of the set of all points [formula] with p(x)  ≥  t. Clusters are then defined as the connected components of the t-level set (where the term "connected component" is used in its topological sense and not in its graph-theoretic sense).

Note that a different popular model is to define a clustering as a partition of the whole underlying space such that the boundaries of the partition lie in a low density area. In comparison, looking for connected components of t-level sets is a stronger requirement. Even when we are given a complete partition of the underlying space, we do not yet know which part of each of the clusters is just "background noise" and which one really corresponds to "interesting data". This problem is circumvented by the t-level set definition, which not only distinguishes between the different clusters but also separates "foreground" from "background noise". Moreover, the level set approach is much less sensitive to outliers, which often heavily influence the results of partitioning approaches.

The cluster identification problem. Given a finite sample from the underlying distribution, our goal is to identify the sets of points which come from different connected components of the t-level set. We study this problem in two different settings:

The noise-free case. Here we assume that the support of the density consists of several connected components which have a positive distance to each other. Between those components, there is only "empty space" (density 0). Each of the connected components is called a cluster. Given a finite sample X1,...,Xn from such a density, we construct a neighborhood graph G based on this sample. We say that a cluster is identified in the graph if the connected components in the neighborhood graph correspond to the corresponding connected components of the underlying density, that is all points originating in the same underlying cluster are connected in the graph, and they are not connected to points from any other cluster.

The noisy case. Here we no longer assume that the clusters are separated by "empty space", but we allow the underlying density to be supported everywhere. Clusters are defined as the connected components of the t-level set L(t) of the density (for a fixed parameter t chosen by the user), and points not contained in this level set are considered as background noise. A point [formula] is called a cluster point if x∈L(t) and background point otherwise. As in the previous case we will construct a neighborhood graph G on the given sample. However, we will remove points from this graph which we consider as noise. The remaining graph [formula] will be a subgraph of the graph G, containing fewer vertices and fewer edges than G. As opposed to the noise-free case, we now define two slightly different cluster identification problems. They differ in the way background points are treated. The reason for this more involved construction is that in the noisy case, one cannot guarantee that no additional background points from the neighborhood of the cluster will belong to the graph.

We say that a cluster is roughly identified in the remaining graph [formula] if the following properties hold:

all sample points from a cluster are contained as vertices in the graph, that is, only background points are dropped,

the vertices belonging to the same cluster are connected in the graph, that is, there exists a path between each two of them, and

every connected component of the graph contains only points of exactly one cluster (and maybe some additional noise points, but no points of a different cluster).

We say that a cluster is exactly identified in [formula] if

it is roughly identified, and

the ratio of the number of background points and the number of cluster points in the graph [formula] converges almost surely to zero as the sample size approaches infinity.

If all clusters have been roughly identified, the number of connected components of the graph [formula] is equal to the number of connected components of the level set L(t). However, the graph [formula] might still contain a significant number of background points. In this sense, exact cluster identification is a much stronger problem, as we require that the fraction of background points in the graph has to approach zero. Exact cluster identification is an asymptotic statement, whereas rough cluster identification can be verified on each finite sample. Finally, note that in the noise-free case, rough and exact cluster identification coincide.

The clustering algorithms. To determine the clusters in the finite sample, we proceed as follows. First, we construct a neighborhood graph on the sample. This graph looks different, depending on whether we allow noise or not:

Noise-free case. Given the data, we simply construct the mutual or symmetric k-nearest neighbor graph ([formula] resp. [formula]) on the data points, for a certain parameter k, based on the Euclidean distance. Clusters are then the connected components of this graph.

Noisy case. Here we use a more complex procedure:

As in the noise-free case, construct the mutual (symmetric) [formula] graph [formula] (resp. [formula]) on the samples.

Estimate the density p̂n(Xi) at every sample point Xi (e.g., by kernel density estimation).

If p̂n(Xi)  <  t', remove the point Xi and its adjacent edges from the graph (where t' is a parameter determined later). The resulting graph is denoted by [formula] (resp. [formula]).

Determine the connected components of [formula] (resp. [formula]), for example by a simple depth-first search.

Remove the connected components of the graph that are "too small", that is, which contain less than δn points (where δ is a small parameter determined later).

The resulting graph is denoted by [formula] (resp. [formula]); its connected components are the clusters of the sample.

Note that by removing the small components in the graph the method becomes very robust against outliers and "fake" clusters (small connected components just arising by random fluctuations).

Main results, intuitively. We would like to outline our results briefly in an intuitive way. Exact statements can be found in the following sections.

For the noise-free case, the lower bound on k has already been proven in [\citet=BriChaQuiYuk1997], for the noisy case it is new. Importantly, in the exact statement of the result all constants have been worked out more carefully than in [\citet=BriChaQuiYuk1997], which is very important for proving the following statements.

This result is completely new, both in the noise-free and in the noisy case. In the light of the existing literature, it is rather surprising. So far it has been well known that in many different settings the lower bound for obtaining connected components in a random [formula] graph is of the order k  ~   log n. However, we now can see that maximizing the probability of obtaining connected components on a finite sample leads to a dramatic change: k has to be chosen much higher than log n, namely of the order n itself. Moreover, we were surprised ourselves that this result does not only hold in the noise-free case, but can also be carried over to rough cluster identification in the noisy setting.

For exact cluster identification we did not manage to determine an optimal choice of k due to the very difficult setting. For large values of k, small components which can be discarded will no longer exist. This implies that a lot of background points are attached to the real clusters. On the other hand, for small values of k there will exist several small components around the cluster which are discarded, so that there are less background points attached to the final cluster. However, this tradeoff is very hard to grasp in technical terms. We therefore leave the determination of an optimal value of k for exact cluster identification as an open problem. Moreover, as exact cluster identification concerns the asymptotic case of n  →    ∞   only, and rough cluster identification is all one can achieve on a finite sample anyway, we are perfectly happy to be able to prove the optimal rate in that case.

This result shows that if one is interested in identifying the "most significant" clusters only, one is better off using the mutual [formula] graph. When the goal is to identify all clusters, then there is not much difference between the two graphs, because both of them have to deal with the "worst" cluster anyway. Note that this result is mainly due to the different between-cluster connectivity properties of the graphs, the within-cluster connectivity results are not so different (using our proof techniques at least).

Proof techniques, intuitively. Given a neighborhood graph on the sample, cluster identification always consists of two main steps: ensuring that points of the same cluster are connected and that points of different clusters are not connected to each other. We call those two events "within-cluster connectedness" and "between-cluster disconnectedness" (or "cluster isolation").

To treat within-cluster connectedness we work with a covering of the true cluster. We cover the whole cluster by balls of a certain radius z. Then we want to ensure that, first, each of the balls contains at least one of the sample points, and second, that points in neighboring balls are always connected in the [formula] graph. Those are two contradicting goals. The larger z is, the easier it is to ensure that each ball contains a sample point. The smaller z is, the easier it is to ensure that points in neighboring balls will be connected in the graph for a fixed number of neighbors k. So the first part of the proof consists in computing the probability that for a given z both events occur at the same time and finding the optimal z.

Between-cluster connectivity is easier to treat. Given a lower bound on the distance u between two clusters, all we have to do is to make sure that edges in the [formula] graph never become longer than u, that is we have to prove bounds on the maximal [formula] distance in the sample.

In general, those techniques can be applied with small modifications both in the noise-free and in the noisy case, provided we construct our graphs in the way described above. The complication in the noisy case is that if we just used the standard [formula] graph as in the noise-free case, then of course the whole space would be considered as one connected component, and this would also show up in the neighborhood graphs. Thus, one has to artificially reduce the neighborhood graph in order to remove the background component. Only then one can hope to obtain a graph with different connected components corresponding to different clusters. The way we construct the graph [formula] ensures this. First, under the assumption that the error of the density estimator is bounded by [formula], we consider the [formula]-level set instead of the t-level set we are interested in. This ensures that we do not remove "true cluster points" in our procedure. A second, large complication in the noisy case is that with a naive approach, the radius z of the covering and the accuracy [formula] of the density estimator would be coupled to each other. We would need to ensure that the parameter [formula] decreases with a certain rate depending on z. This would lead to complications in the proof as well as very slow convergence rates. The trick by which we can avoid this is to introduce the parameter δ and throw away all connected components which are smaller than δn. Thus, we ensure that no small connected components are left over in the boundary of the [formula]-level set of a cluster, and all remaining points which are in this boundary strip will be connected to the main cluster represented by the t-level set. Note, that this construction allows us to estimate the number of clusters even without exact estimation of the density.

Building blocks from the literature. To a certain extent, our proofs follow and combine some of the techniques presented in [\citet=BriChaQuiYuk1997] and [\citet=BiaCadPel:2007].

In [\citet=BriChaQuiYuk1997] the authors study the connectivity of random mutual k-nearest neighbor graphs. However, they are mainly interested in asymptotic results, only consider the noise-free case, and do not attempt to make statements about the optimal choice of k. Their main result is that in the noise-free case, choosing k at least of the order O( log n) ensures that in the limit for n  →    ∞  , connected components of the mutual k-nearest neighbor graph correspond to true underlying clusters.

In [\citet=BiaCadPel:2007], the authors study the noisy case and define clusters as connected components of the t-level set of the density. As in our case, the authors use density estimation to remove background points from the sample, but then work with an [formula]-neighborhood graph instead of a k-nearest neighbor graph on the remaining sample. Connectivity of this kind of graph is much easier to treat than the one of k-nearest neighbor graphs, as the connectivity of two points in the [formula]-graph does not depend on any other points in the sample (this is not the case in the k-nearest neighbor graph). Then, [\citet=BiaCadPel:2007] prove asymptotic results for the estimation of the connected components of the level set L(t), but also do not investigate the optimal choice of their graph parameter [formula]. Moreover, due to our additional step where we remove small components of the graph, we can provide much faster rates for the estimation of the components, since we have a much weaker coupling of the density estimator and the clustering algorithm.

Finally, note that a considerably shorter version of the current paper dealing with the noise-free case only has appeared in [\citet=OurALTPaper:2007]. In the current paper we have shortened the proofs significantly at the expense of having slightly worse constants in the noise-free case.

General assumptions and notation

Density and clusters. Let p be a bounded probability density with respect to the Lebesgue measure on [formula]. The measure on [formula] that is induced by the density p is denoted by μ. Given a fixed level parameter t > 0, the t-level set of the density p is defined as L(t) = . where the bar denotes the topological closure (note that level sets are closed by assumptions in the noisy case, but this is not necessarily the case in the noise-free setting).

Geometry of the clusters. We define clusters as the connected components of L(t) (where the term "connected component" is used in its topological sense). The number of clusters is denoted by m, and the clusters themselves by [formula]. We set β(i): = μ(C(i)), that means, the probability mass in cluster C(i).

We assume that each cluster C(i) ([formula]) is a disjoint, compact and connected subset of [formula], whose boundary ∂C(i) is a smooth (d - 1)-dimensional submanifold in [formula] with minimal curvature radius κ(i) > 0 (the inverse of the largest principal curvature of ∂C(i)). For ν  ≤  κ(i), we define the collar set [formula] and the maximal covering radius [formula]. These quantities will be needed for the following reasons: It will be necessary to cover the inner part of each cluster by balls of a certain fixed radius z, and those balls are not supposed to "stick outside". Such a construction is only possible under assumptions on the maximal curvature of the boundary of the cluster. This will be particularly important in the noisy case, where all statements about the density estimator only hold in the inner part of the cluster.

For an arbitrary [formula], the connected component of [formula] which contains the cluster C(i) is denoted by [formula]. Points in the set [formula] will sometimes be referred to as boundary points. To express distances between the clusters, we assume that there exists some   >  0 such that [formula] for all [formula]. The numbers u(i) will represent lower bounds on the distances between cluster C(i) and the remaining clusters. Note that the existence of the u(i)  >  0 ensures that [formula] does not contain any other clusters apart from C(i) for [formula]. Analogously to the definition of β(i) above we set (i)  =  μ(C(i)-(2)), that is the mass of the enlarged set C(i)-(2). These definitions are illustrated in Figure [\ref=fig:cluster_definition]. Furthermore, we introduce a lower bound on the probability mass in balls of radius u(i) around points in C(i)-(2) In particular, under our assumptions on the smoothness of the cluster boundary we can set ρ(i)  =  O(i)(u(i))tηd(u(i))d for an overlap constant O(u)=inf ( B(x,u) C ( 2 ) ) / ( B(x,u) ) > 0 . The way it is constructed, ρ(i) becomes larger the larger the distance of C(i) to all the other clusters is and is upper bounded by the probability mass of the extended cluster (i).

Example in the noisy case. All assumptions on the density and the clusters are satisfied if we assume that the density p is twice continuously differentiable on a neighborhood of {p  =  t}, for each x∈{p = t} the gradient of p at x is non-zero, and [formula].

Example in the noise-free case. Here we assume that the support of the density p consists of m connected components [formula] which satisfy the smoothness assumptions above, and such that the densities on the connected components are lower bounded by a positive constant t. Then the noise-free case is a special case of the noisy case.

Sampling. Our n sample points X1,...,Xn will be sampled i.i.d. from the underlying probability distribution.

Density estimation in the noisy case. In the noisy case we will estimate the density at each data point Xj by some estimate p̂n(Xj). For convenience, we state some of our results using a standard kernel density estimator, see [\citet=DevLug01] for background reading. However, our results can easily be rewritten with any other density estimate.

Further notation. The [formula] radius of a point Xj is the maximum distance to a point in [formula]. R(i)min denotes the minimal [formula] radius of the sample points in cluster C(i), whereas (i)max denotes the maximal [formula] radius of the sample points in C(i)-(2). Note here the difference in the point sets that are considered.

[formula] denotes the binomial distribution with parameters n and p. Probabilistic events will be denoted with curly capital letters [formula], and their complements with [formula].

Exact statements of the main results

In this section we are going to state all our main results in a formal way. In the statement of the theorems we need the following conditions. The first one is necessary for both, the noise-free and the noisy case, whereas the second one is needed for the noisy case only.

Condition 1: Lower and upper bounds on the number of neighbors k,

[formula]

Condition 2: The density p is three times continuously differentiable with uniformly bounded derivatives, β(i)  >  2δ, and [formula] sufficiently small such that [formula].

Note that in Theorems 1 to 3 [formula] is considered small but constant and thus we drop the index n there.

In our first theorem, we present the optimal choice of the parameter k in the mutual [formula] graph for the identification of a cluster. This theorem treats both, the noise-free and the noisy case.

The optimal choice of k for identification of cluster C(i) in [formula] (noise-free case) resp. rough identification in [formula] (noisy case) is

[formula]

provided this choice of k fulfills Condition 1. In the noise-free case we obtain with [formula] and for sufficiently large n

[formula]

For the noisy case, assume that additionally Condition 2 holds and let p̂n be a kernel density estimator with bandwidth h. Then there exist constants C1,C2 such that if [formula] we get with

[formula]

and for sufficiently large n

[formula]

This theorem has several remarkable features. First of all, we can see that both in the noise-free and in the noisy case, the optimal choice of k is roughly linear in n. This is pretty surprising, given that the lower bound for cluster connectivity in random geometric graphs is k  ~   log n. We will discuss the important consequences of this result in the last section.

Secondly, we can see that for the mutual [formula] graph the identification of one cluster C(i) only depends on the properties of the cluster C(i), but not on the ones of any other cluster. This is a unique feature of the mutual [formula] graph which comes from the fact that if cluster C(i) is very "dense", then the neighborhood relationship of points in C(i) never links outside of cluster C(i). In the mutual [formula] graph this implies that any connections of C(i) to other clusters are prevented. Note that this is not true for the symmetric [formula] graph, where another cluster can simply link into C(i), no matter which internal properties C(i) has.

For the mutual graph, it thus makes sense to define the most significant cluster as the one with the largest coefficient Ω(i), since this is the one which can be identified with the fastest rate. In the noise-free case one observes that the coefficient Ω(i) of cluster C(i) is large given that

ρ(i) is large, which effectively means a large distance u(i) of C(i) to the closest other cluster,

p(i)max  /  t is small, so that the density is rather uniform inside the cluster C(i)..

Note that those properties are the most simple properties one would think of when imagining an "easily detectable" cluster. For the noisy case, a similar analysis still holds as long as one can choose the constants δ,h and [formula] small enough.

Formally, the result for identification of clusters in the symmetric [formula] graph looks very similar to the one above.

We use the same notation as in Theorem [\ref=cor:optimal-k-noise] and define [formula]. Then all statements about the optimal rates for k in Theorem [\ref=cor:optimal-k-noise] can be carried over to the symmetric [formula] graph, provided one replaces ρ(i) with ρmin in the definitions of Γ(i), [formula] and [formula]. If Condition 1 holds and the condition k  ≤  (n - 1)ρmin / 2  -  2 log (n) replaces the corresponding one in Condition 1, we have in the noise-free case for sufficiently large n If additionally Condition 2 holds we have in the noisy case for sufficiently large n

Observe that the constant ρ(i) has now been replaced by the minimal ρ(j) among all clusters C(j). This means that the rate of convergence for the symmetric [formula] graph is governed by the constant ρ(j) of the "worst" cluster, that is the one which is most difficult to identify. Intuitively, this worst cluster is the one which has the smallest distance to its neighboring clusters. In contrast to the results for the mutual [formula] graph, the rate for identification of C(i) in the symmetric graph is governed by the worst cluster instead of the cluster C(i) itself. This is a big disadvantage if the goal is to only identify the "most significant" clusters. For this purpose the mutual graph has a clear advantage.

On the other hand as we will see in the next theorem that the difference in behavior between the mutual and symmetric graph vanishes as soon as we attempt to identify all clusters.

We use the same notation as in Theorem [\ref=cor:optimal-k-noise] and define [formula], [formula]. The optimal choice of k for the identification of all clusters in the mutual [formula] graph in [formula] (noise-free case) resp. rough identification of all clusters in [formula] (noisy case) is given by

[formula]

provided this choice of k fulfills Condition 1 for all clusters C(i). In the noise-free case we get the rate

[formula]

such that for sufficiently large n

[formula]

For the noisy case, assume that additionally Condition 2 holds for all clusters and let p̂n be a kernel density estimator with bandwidth h. Then there exist constants C1,C2 such that if [formula] we get with

[formula]

and for sufficiently large n

[formula]

We can see that as in the previous theorem, the constant which now governs the speed of convergence is the worst case constant among all the ρ(j). In the setting where we want to identify all clusters this is unavoidable. Of course the identification of "insignificant" clusters will be difficult, and the overall behavior will be determined by the most difficult case. This is what is reflected in the above theorem. The corresponding theorem for identification of all clusters in the symmetric [formula] graph looks very similar, and we omit it.

So far for the noisy case we mainly considered the case of rough cluster identification. As we have seen, in this setting the results of the noise-free case are very similar to the ones in the noisy case. Now we would like to conclude with a theorem for exact cluster identification in the noisy case.

Let p be three times continuously differentiable with uniformly bounded derivatives and let p̂n be a kernel density estimator with bandwidth hn = h0( log n  /  n)1 / (d + 4) for some h0 > 0. For a suitable constant [formula] set [formula]. Then there exist constants c1,c2 such that for n  →    ∞   and c1 log n  ≤  k  ≤  c2n we obtain

[formula]

Note that as opposed to rough cluster identification, which is a statement about a given finite nearest neighbor graph, exact cluster identification is an inherently asymptotic property. The complication in this asymptotic setting is that one has to balance the speed of convergence of the density estimator with the one of the "convergence of the graph". The exact form of the density estimation is not important. Every other density estimator with the same convergence rate would yield the same result. One can even lower the assumptions on the density to [formula] (note that differentiability is elsewhere required). Finally, note that since it is technically difficult to grasp the graph after the small components have been discarded, we could not prove what the optimal k in this setting should be.

Proofs

The propositions and lemmas containing the major proof steps are presented in Section [\ref=sec:main_props]. The proofs of the theorems themselves can be found in Section [\ref=sec:proof_thms]. An overview of the proof structure can be seen in Figure [\ref=fig:proof_structure].

Main propositions for cluster identification

In Proposition [\ref=pro:super_connectedness] we identify some events whose combination guarantee the connectedness of a cluster in the graph and at the same time that there is not a connected component of the graph that consists of background points only. The probabilities of the events appearing in the proposition are then bounded in Lemma [\ref=lem:conn_within_noise]-[\ref=lem:boundary_size]. In Proposition [\ref=pro:inter-mutual] and Lemma [\ref=pro:asymp_iso] we examine the probability of connections between clusters. The section concludes with Proposition [\ref=prop:RatioClusterPoints] and Lemma [\ref=pro:boundarymass], which are used in the exact cluster identification in Theorem [\ref=cor:optimal-k-noise-exact], and some remarks about the differences between the noise-free and the noisy case.

Let C(i)n denote the event that in [formula] (resp. [formula]) it holds that

all the sample points from C(i) are contained in the graph,

the sample points from C(i) are connected in the graph,

there exists no component of the graph which consists only of sample points from outside L(t).

Then under the conditions

β(i)  >  2δ,

[formula] sufficiently small such that [formula],

[formula], [formula] ,

and for sufficiently large n, we obtain

[formula]

where the events are defined as follows:

A(i)n: the subgraph consisting of points from C(i) is connected in [formula] (resp. [formula]),

B(i)n: there are more than δn sample points from cluster C(i),

En: there are less than δn sample points in the set [formula], and

Dn: [formula] for all sample points Xi, [formula].

We bound the probability of C(i)n using the observation that [formula] implies

[formula]

This follows from the following chain of observations. If the event Dn holds, no point with p(Xi)  ≥  t is removed, since on this event [formula] and thus [formula], which is the threshold in the graph [formula].

If the samples in cluster C(i) are connected in [formula] (A(i)n), and there are more than δn samples in cluster C(i) (B(i)n), then the resulting component of the graph [formula] is not removed in the algorithm and is thus contained in [formula].

Conditional on Dn all remaining samples are contained in [formula]. Thus all non cluster samples lie in [formula]. Given that this set contains less than δn samples, there can exist no connected component only consisting of non cluster points, which implies that all remaining non cluster points are connected to one of the clusters.

The probabilities for the complements of the events A(i)n, B(i)n and En are bounded in Lemmas 3 to 5 below. Plugging in those bounds into Equation [\eqref=eq:bound_conn_event] leads to the desired result.

We make frequent use of the following tail bounds for the binomial distribution introduced by Hoeffding.

Let [formula] and define α = k / n. Then,

[formula]

where K(α||p) is the Kullback-Leibler divergence of (α,1 - α) and (p,1 - p),

[formula]

In the following lemmas we derive bounds for the probabilities of the events introduced in the proposition above.

As in Proposition [\ref=pro:super_connectedness] let A(i)n denote the event that the points of cluster C(i) are connected in [formula] (resp. [formula]). For z∈(0,4   min {u(i),ν(i)max}),

[formula]

where M is a [formula]-distributed random variable and [formula].

Given that Dn holds, all samples lying in cluster C(i) are contained in the graph [formula]. Suppose that we have a covering of [formula] with balls of radius [formula]. By construction every ball of the covering lies entirely in C(i), so that t is a lower bound for the minimal density in each ball. If every ball of the covering contains at least one sample point and the minimal [formula] radius of samples in C(i) is larger or equal to z, then all samples of [formula] are connected in [formula] given that z  ≤  4ν(i)max. Moreover, one can easily check that all samples lying in the collar set Col(i)(z / 4) are connected to [formula]. In total, then all samples points lying in C(i) are connected. Denote by F(i)z the event that one ball in the covering with balls of radius z / 4 contains no sample point. Formally, [formula] implies connectedness of the samples lying in C(i) in the graph [formula].

Define [formula] for 1  ≤  s  ≤  n. Then [formula]. We have

[formula]

where [formula]. The final result is obtained using the upper bound sup x∈C(i)μ(B(x,z))  ≤  p(i)maxηdzd.

For the covering a standard construction using a z / 4-packing provides us with the covering. Since z / 4  ≤  ν(i)max we know that balls of radius z / 8 around the packing centers are subsets of C(i) and disjoint by construction. Thus, the total volume of the N balls is bounded by the volume of C(i) and we get [formula]. Since we assume that Dn holds, no sample lying in C(i) has been discarded. Thus the probability for one ball of the covering being empty can be upper bounded by (1 - t  ηd  zd  /  4d)n, where we have used that the balls of the covering are entirely contained in C(i) and thus the density is lower bounded by t. In total, a union bound over all balls in the covering yields, Plugging both results together yields the final result.

In Lemma [\ref=lem:conn_within_noise] we provided a bound on the probability which includes two competing terms for the choice of z. One favors small z whereas the other favors large z. The next lemma will provide a trade-off optimal choice of the radius z in terms of k.

If k fulfills Condition (3) of Proposition [\ref=pro:super_connectedness], we have for sufficiently large n

The upper bound on the probability of (A(i)n)c given in Lemma [\ref=lem:conn_within_noise] has two terms dependent on z. The tail bound for the binomial distribution is small if z is chosen to be small, whereas the term from the covering is small given that z is large. Here, we find a choice for z which is close to optimal. Define p = p(i)maxηdzd and α = k / (n - 1). Using Theorem [\ref=th:Hoeff] we obtain for [formula] and a choice of z such that p < α,

[formula]

where we have used log (z)  ≥  (z - 1) / z for z > 0. Now, introduce θ: = ηdzd  /  α so that p = p(i)max  θ  α, where with p  ≤  α we get, 0  ≤  θ  p(i)max  ≤  1. Then,

[formula]

where we used in the last step an upper bound on the term nβ(i) which holds given [formula]. On the other hand,

[formula]

where we used log (1 - x)  ≥   - x for x  ≤  1. With ηdzd  =  θα and the upper bound on N we get using n  /  (n - 1)  ≥  1,

[formula]

where the last step holds given [formula]. Upper bounding the bound in [\eqref=eq:bound1] with the one in [\eqref=eq:bound2] requires,

[formula]

Introduce, γ  =  θ  p(i)max, then this is equivalent to γt / (4dp(i)max)  ≤  ( -  log (γ)  +  γ - 1). Note, that t / (4dp(i)max)  ≤  1 / 4. Thus, the above inequality holds for all d  ≥  1 given that -   log (γ)  ≥  1 - 3γ / 4. A simple choice is γ = 1 / 2 and thus θ = 1 / (2p(i)max), which fulfills θp(i)max  ≤  1. In total, we obtain with the result from Lemma [\ref=lem:conn_within_noise], We plug in the choice of θ into the lower bounds on k. One can easily find an upper bound for the maximum of the two lower bounds which gives, The upper bound, z  ≤  4 min {u(i),ν(i)max}, translates into the following upper bound on k, [formula].

The result of this lemma means that if we choose k  ≥  c1  +  c2 log n with two constants c1,c2 that depend on the geometry of the cluster and the respective density, then the probability that the cluster is disconnected approaches zero exponentially in k.

Note that due to the constraints on the covering radius, we have to introduce an upper bound on k which depends linearly on n. However, as the probability of connectedness is monotonically increasing in k, the value of the within-connectedness bound for this value of k is a lower bound for all larger k as well. Since the lower bound on k grows with log n and the upper bound grows with n, there exists a feasible region for k if n is large enough.

As in Proposition [\ref=pro:super_connectedness] let B(i)n denote the event that there are more than δn sample points from cluster C(i). If β(i)  >  δ then

[formula]

Let M(i) be the number of samples in cluster C(i). Then,

[formula]

where we used [formula] and a Chernoff bound.

As in Proposition [\ref=pro:super_connectedness] let En denote the event that there are less than δn sample points in all the boundary sets [formula] together. If [formula], we have [formula].

By assumption, for the probability mass in the boundary strips we have [formula]. Then the probability that there are at least δn points in the boundary strips can be bounded by the probability that a [formula]-distributed random variable V exceeds δn. Using a Chernoff bound we obtain [formula].

The proposition and the lemmas above are used in the analysis of within-cluster connectedness. The following proposition deals with between-cluster disconnectedness.

We say that a cluster C(i) is isolated if the subgraph of [formula] (resp. [formula]) corresponding to cluster C(i) is not connected to another subgraph corresponding to any other cluster C(j) with j  ≠  i. Note, that we assume [formula] for all [formula]. The following proposition bounds the probability for cluster isolation. This bound involves the probability that the maximal k-nearest-neighbor radius is greater than some threshold. Therefore in Lemma [\ref=pro:asymp_iso] we derive a bound for this probability. Note that our previous paper [\cite=OurALTPaper:2007] contained an error in the result corresponding to Lemma [\ref=pro:asymp_iso], which changed some constants but did not affect the main results.

Let I(i)n denote the event that the subgraph of the samples in [formula] is isolated in [formula]. Then given that [formula], k  <  ρ(i)n / 2  -  2 log ((i)n), we obtain

[formula]

Let (i)n be the event that the subgraph of samples in [formula] is isolated in [formula]. Define [formula] and [formula]. Then for [formula], k  <  ρminn / 2  -  2 log (max  n), we obtain

[formula]

We have [formula]. Given the event Dn, the remaining points in [formula] are samples from [formula] ([formula]). By assumption we have for [formula] that [formula]. In order to have edges from samples in [formula] to any other part in [formula], it is necessary that (i)max  ≥  u(i). Using Lemma [\ref=pro:asymp_iso] we can lower bound the probability of this event. For the symmetric [formula] graph there can be additional edges from samples in [formula] to other parts in the graph if samples lying in [formula] are among the [formula]-neighbors of samples in [formula], j  ≠  i. Let uij be the distance between C(i)-(2) and C(j)-(2). There can be edges from samples in [formula] to any other part in [formula] if the following event holds: [formula]. Using a union bound we obtain,

[formula]

With u(j)  ≤  uij and Lemma [\ref=pro:asymp_iso] we obtain the result for [formula].

The following lemma states the upper bound for the probability that the maximum k-nearest neighbor radius (i)max of samples in [formula] used in the proof of Proposition [\ref=pro:inter-mutual].

Let k  <  ρ(i)n / 2  -  2 log ((i)n). Then

Define Ns  =  |{j  ≠  s  |  Xj∈B(Xs,u(i))}| for 1  ≤  s  ≤  n. Then [formula]. Thus,

[formula]

Let [formula]. Then [formula]. Using the tail bound from Theorem [\ref=th:Hoeff] we obtain for k - 1 < ρ(i)(n - 1),

[formula]

where we use that log (x)  ≥  (x - 1) / x, that - w / e is the minimum of x log (x / w) attained at x = w / e and (1 - 1 / e)  ≥  1 / 2. Finally, we use that under the stated condition on k we have log (n(i))  ≤  [null]  /  2.

The following proposition quantifies the rate of exact cluster identification, that means how fast the fraction of points from outside the level set L(t) approaches zero.

Let [formula] and [formula] be the number of cluster points and background points in [formula] (resp. [formula]) and let [formula] denote the event that the points of each cluster form a connected component of the graph. Let [formula] for n  →    ∞   and define [formula]. Then there exists a constant  > 0 such that for sufficiently large n,

[formula]

According to Lemma [\ref=pro:boundarymass] we can find constants (i) > 0 such that [formula] for n sufficiently large, and set [formula]. Suppose that Dn holds. Then the only points which do not belong to a cluster lie in the set [formula]. Some of them might be discarded, but since we are interested in proving an upper bound on [formula] that does not matter. Then with [formula] and [formula] we obtain with Theorem [\ref=th:Hoeff] and for sufficiently small [formula], where K denotes the Kullback-Leibler divergence. Here we used that for [formula] we have [formula] and with log (1 + x)  ≥  x / (1 + x) for x >  - 1 we have [formula]. Given that Dn holds and the points of each cluster are a connected component of the graph, we know that all cluster points remain in the graph and we have using Theorem [\ref=th:Hoeff] and similar arguments to above.

Assume that [formula] with [formula] and that for each x in a neighborhood of {p  =  t} the gradient of p at x is non-zero, then there exists a constant (i) > 0 such that for [formula] sufficiently small,

[formula]

Under the conditions on the gradient and [formula] small enough, one has [formula] for some constant C1. Here " + " denotes set addition, that is for sets A and B we define A  +  B  =  {a  +  b  |  a∈A,  b∈B}. Since the boundary ∂C(i) is a smooth (d - 1)-dimensional submanifold in [formula] with a minimal curvature radius κ(i) > 0, there exists γ1 > 0 and a constant C2 such that [formula] for [formula] (see Theorem 3.3.39 in [\cite=Federer:1969]). Thus, by the additivity of the volume,

[formula]

Since p is bounded, we obtain, [formula], for [formula] small enough. Setting [formula] the result follows.

Noise-free case as special case of the noisy one. In the noise-free case, by definition all sample points belong to a cluster. That means

we can omit the density estimation step, which was used to remove background points from the graph, and drop the event Dn everywhere,

we work with L(t) directly instead of [formula],

we do not need to remove the small components of size smaller than δn, which was needed to get a grip on the "boundary" of [formula] .

In particular, setting δ = 0 we trivially have [formula] and [formula] for all [formula] and all [formula].

As a consequence, we can directly work on the graphs [formula] and [formula], respectively. Therefore, the bounds we gave in the previous sections also hold in the simpler noise-free case and can be simplified in this setting.

Proofs of the main theorems

Given we work on the complement of the event I(i)n of Proposition [\ref=pro:inter-mutual], there are no connections in [formula] between the subgraph containing the points of cluster C(i) and points from any other cluster. Moreover, by Proposition [\ref=pro:super_connectedness] we know that the event [formula] implies that the subgraph of all the sample points lying in cluster C(i) is connected and all other sample points lying not in in the cluster C(i) are either discarded or are connected to the subgraph containing all cluster points. That means we have identified cluster C(i). Collecting the bounds from Proposition [\ref=pro:inter-mutual] and [\ref=pro:super_connectedness], we obtain

[formula]

In the noise-free case the events B(i)n, En and Dn can be ignored. The optimal choice for k follows by equating the exponents of the bounds for (I(i)n)c and (A(i)n)c and solving for k. One gets for the optimal k,

[formula]

In the noisy case, we know that for n sufficiently large we can take [formula] small enough ([formula] is small and fixed) such that the condition [formula] holds. It is well known that under our conditions on p there exist constants C1,C2 such that [formula] given [formula] (cf. [\citet=Rao:1983]). Plugging this result into the bounds above the rate of convergence is determined by the worst exponent,

[formula]

However, since the other bounds do not depend on k the optimal choice for k remains the same.

Compared to the proof for cluster identification in the mutual [formula] graph in Theorem [\ref=cor:optimal-k-noise] the only part which changes is the connectivity event. Here we have to replace the bound on [formula] by the bound on [formula] from Proposition [\ref=pro:inter-mutual]. With [formula] we obtain

[formula]

Following the same procedure as in the proof of Theorem [\ref=cor:optimal-k-noise] provides the result (for both, the noise-free and the noisy case).

We set [formula] and [formula]. By a slight modification of the proof of Proposition [\ref=pro:super_connectedness] and [formula]

[formula]

By a slight modification of the proof of Proposition [\ref=pro:inter-mutual] with [formula],

[formula]

Combining these results we obtain

[formula]

The result follows with a similar argumentation to the proof of Theorem [\ref=cor:optimal-k-noise].

Clearly we can choose [formula] such that [formula] for a suitable constant C > 0. Then there exists a constant C2 > 0 with [formula]. Since

[formula]

we have [formula]. Moreover, let [formula] denote the event that the points of each cluster form a connected component of the graph. Then it can be easily checked with Proposition [\ref=prop:RatioClusterPoints] that we have [formula]. Moreover, similar to the proof of Theorem [\ref=thm:all-cluster-identification] one can show that there are constants c1,c2 > 0 such that for c1 log n  ≤  k  ≤  c2n cluster C(i) will be roughly identified almost surely as n  →    ∞  . (Note here that the bounds on k for which our probability bounds hold are also logarithmic and linear, respectively, in n). Thus, the event [formula] occurs almost surely and consequently [formula] almost surely.

Discussion

In this paper we studied the problem of cluster identification in [formula] graphs. As opposed to earlier work ([\citet=BriChaQuiYuk1997], [\citet=BiaCadPel:2007]) which was only concerned with establishing connectivity results for a certain choice of k (resp. [formula] in case of an [formula]-neighborhood graph), our goal was to determine for which value of k the probability of cluster identification is maximized. Our work goes considerably beyond [\citet=BriChaQuiYuk1997] and [\citet=BiaCadPel:2007], concerning both the results and the proof techniques. In the noise-free case we come to the surprising conclusion that the optimal k is rather of the order of c  ·  n than of the order of log n as many people had suspected, both for mutual and symmetric [formula] graphs. A similar result also holds for rough cluster identification in the noisy case. Both results were quite surprising to us -- our first naive expectation based on the standard random geometric graph literature had been that k  ~   log n would be optimal. In hindsight, our results perfectly make sense. The minimal k to achieve within-cluster connectedness is indeed of the order log n. However, clusters can be more easily identified the tighter they are connected. In an extreme case where clusters have a very large distance to each other, increasing k only increases the within-cluster connectedness. Only when the cluster is fully connected (that is, k coincides with the number of points in the cluster, that is k is a positive fraction of n), connections to other clusters start to arise. Then the cluster will not be identified any more. Of course, the standard situation will not be as extreme as this one, but our proofs show that the tendency is the same.

While our results on the optimal choice of k are nice in theory, in practical application they are often hard to realize. The higher the constant k in the [formula] graph is chosen, the less sparse the neighborhood graph becomes, and the more resources we need to compute the [formula] graph and to run algorithms on it. This means that one has to make a trade-off: even if in many applications it is impossible to choose k of the order of c  ·  n for computational restrictions, one should attempt to choose k as large as one can afford, in order to obtain the most reliable clustering results.

When comparing the symmetric and the mutual [formula] graph, in terms of the within-cluster connectedness both graphs behave similar. But note that this might be an artifact of our proof techniques, which are very similar in both cases and do not really make use of the different structure of the graphs. Concerning the between-cluster disconnectedness, however, both graphs behave very differently. To ensure disconnectedness of one cluster C(i) from the other clusters in the mutual [formula] graph, it is enough to make sure that the nearest neighbor of all points of C(i) are again elements of C(i). In this sense, the between-cluster disconnectedness of an individual cluster in the mutual graph can be expressed in terms of properties of this cluster only. In the symmetric [formula] graph this is different. Here it can happen that some other cluster C(j) links inside C(i), no matter how nicely connected C(i) is. In particular, this affects the setting where the goal is to identify the most significant cluster only. While this is easy in the mutual [formula] graph, in the symmetric [formula] graph it is not easier than identifying all clusters as the between-cluster disconnectedness is governed by the worst case.

From a technical point of view there are some aspects about our work which could be improved. First, we believe that the geometry of the clusters does not influence our bounds in a satisfactory manner. The main geometric quantities which enter our bounds are simple things like the distance of the clusters to each other, the minimal and maximal density on the cluster, and so on. However, intuitively it seems plausible that cluster identification depends on other quantities as well, such as the shapes of the clusters and the relation of those shapes to each other. For example, we would expect cluster identification to be more difficult if the clusters are in the forms of concentric rings than if they are rings with different centers aligned next to each other. Currently we cannot deal with such differences. Secondly, the covering techniques we use for proving our bounds are not well adapted to small sample sizes. We first cover all clusters completely by small balls, and then require that there is at least one sample point in each of those balls. This leads to the unpleasant side effect that our results are not valid for very small sample size n. However, we did not find a way to circumvent this construction. The reason is that as soon as one has to prove connectedness of a small sample of cluster points, one would have to explicitly construct a path connecting each two points. While some techniques from percolation theory might be used for this purpose in the two-dimensional setting, we did not see any way to solve this problem in high-dimensional spaces.

In the current paper, we mainly worked with the cluster definition used in the statistics community, namely the connected components of t-level sets. In practice, most people try to avoid to perform clustering by first applying density estimation -- density estimation is inherently difficult on small samples, in particular in high-dimensional spaces. On the other hand, we have already explained earlier that this inherent complexity of the problem also pays off. In the end, not only have we detected where the clusters are, but we also know where the data only consists of background noise.

In the computer science community, clustering is often solved via partitioning algorithms such as mincuts or balanced cuts. Now we have treated the case of the level sets in this paper, discussing the graph partitioning case will be the next logical step. Technically, this is a more advanced setting. The ingredients are no longer simple yes/no events (such as "cluster is connected" or "clusters are not connected to each other"). Instead, one has to carefully "count" how many edges one has in different areas of the graph. In future work we hope to prove results on the optimal choice of k for such a graph partitioning setting.