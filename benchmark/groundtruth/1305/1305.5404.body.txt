Lemma Corollary Definition Conjecture

Pure Price of Anarchy for Generalized Second Price Auction

This work was done when the first author and the second author were visiting Microsoft Research Asia.

Tao Wu

Tao Qin

Tie-Yan Liu

Introduction

The Generalized Second Price auction (GSP), a generalization of the Vickrey auction, is the primary method used by search engines to sell online ad slots. With GSP, advertisers compete for several ad slots with decreasing click-through rates (CTR) by submitting bids to the search engine. Ad slots are assigned to advertisers according to the descending order of their bids (ad-specific CTR is also considered in practice) and each advertiser pays an amount of money if his/her ad is clicked according to the second-price rule.

GSP has drawn a lot of attention from the academic community. For example, the pure Price of Anarchy (POA) of GSP has been extensively studied. Leme and Tardos [\cite=leme2010pure] exhibited the weakly feasible condition and obtained an upper bound of 1.618 for the pure POA of GSP. They also proved that the pure POA equals 1.25 when there are exactly two ad slots. Caragiannis et al. [\cite=caragiannis2011efficiency] improved the upper bound (for any number of ad slots) to 1.282 based on the same condition. Lucier and Leme [\cite=lucier2010improved] extended Leme and Tardos’ results and proved that the pure POA is also 1.259 when there are three ad slots. However, for the case with more than three ad slots, no tighter bounds for the pure POA of GSP have been derived, as far as we know. The motivation of this work is just to look into this issue, and advance the state of the art.

Preliminaries

Consider GSP auctions with n advertisers and n ad slots. Denote [formula] as the advertisers' value vector, where vi is the value of the i-th advertiser. Denote [formula] as the click-through rate (CTR) of ad slots, where αj corresponds to the CTR of the j-th slot. Without loss of generality, we assume [formula] and [formula]. Given bid vector [formula], we can obtain a permutation [formula] of advertisers according to the descending order of their bids, where π(k) is the index of the advertiser with the k-th highest bid. Following the common practice [\cite=caragiannis2011efficiency] [\cite=lucier2010improved] [\cite=leme2010pure], all advertisers are assumed to be conservative, i.e., [formula].

Given the above notations, the pure POA of GSP with n ad slots can be defined as follows,

[formula]

where [formula] is the set of the pure Nash equilibrium bid vectors given [formula] and [formula]. We further define the pure POA of a given permutation π with n ad slots as:

[formula]

where [formula] is the set of the pure Nash equilibrium bid vectors admitting the permutation π given [formula] and [formula]. It is not difficult to get POAn  =   max π∈ΩnPOAn(π), where Ωn is the set of permutations of length n admitting pure Nash Equilibria.

Pure POA of GSP when n = 4

The following theorem shows that when n = 4, the pure POA of GSP equals 1.259.

POA4 = 1.259.

First, we prove [formula] by enumerating all possible π's. Here we only give the details for one permutation π = (2,3,1,4). The proofs for other permutations are just similar.

For the pure POA of the permutation π = (2,3,1,4), we have [formula], where [formula]. It can be verified that [formula]. So [formula] and [formula] Since v4 = 0 now, we have b4 = 0, and then (b1,b2,b3) is a Nash equilibrium of the game restricted to advertiser 1,2 and 3. The right-hand-side of the above equation should be no larger than POA3 which is 1.259 [\cite=caragiannis2011efficiency] [\cite=lucier2010improved].

Second, we can use the following example to show [formula], and therefore prove POA4(π) = 1.259. Suppose α1 = 1,α2 = 0.55,α3  =  α4 = 0.47,v1 = 1,v2 = 0.53,v3 = 0.15,v4 = 0,b1 = 0,b2 = 0.53,b3 = 0.15,b4 = 0. It is easy to verify that the bid vector together with the value and CTR vector compose a Nash equilibrium and its efficiency is 1.259.

Remark: Please note that the proof technique we use here is different from those used by previous works [\cite=leme2010pure] [\cite=caragiannis2011efficiency] [\cite=lucier2010improved]. The previous works basically leverage the weakly feasible condition [\cite=leme2010pure] to upper bound the pure POA: instead of directly finding the worst efficiency of all Nash equilibrium permutations, they use the worst efficiency of all permutations satisfying the weakly feasible condition as a bound. The following example shows that the upper bound obtained by using the weakly feasible condition as done in these previous works cannot be tight for n = 4. Example Assume there are 4 advertisers in a GSP auction. Consider value vector (1.00,0.53,0.25,0.16) and slot CTR vector (1.00,0.57,0.47,0.19). Permutation π = (2,3,1,4) satisfies the weakly feasible condition, and its efficiency 1.269. Therefore, the upper bound obtained from the weakly feasible condition is at least 1.269. Note that we have proved POA4 = 1.259, thus this upper bound cannot be tight.

Pure POA for n > 4

Although we can prove POA4 = 1.259 by enumerating all possible Nash equilibrium permutations, this approach is difficult to generalize to the cases with more ad slots. This is because there are simply too many permutations to enumerate.

[\cite=lucier2010improved] provided a possible approach to prove the pure POA for any n  ≥  3 based on a conjecture and a lemma: The conjecture states that the permutation πn = (2,3,...,n,1) is the worst one in terms of pure POA among the permutations of length n: [formula] and the lemma states that POAn(πn) = 1.259 for [formula] and n  ≥  3. However, we find that their proof of the result is non-rigorous (if not mistaken): In particular, the key inequality used in their proofs, [formula] given a  ≤  b and v  ≥  v', is incorrect; to guarantee the correctness of the inequality, a further condition [formula] is required. In this paper, we give a rigorous proof to this lemma, which is based on very different techniques from those used in [\cite=lucier2010improved].

Given a permutation πn = (2,3,...,n,1) where [formula], we have [formula], and the bound is tight.

We prove the result for [formula] by induction and contradiction, since the result has been obtained for n = 3 and n = 4 (see Theorem 1). Assume that the result holds for 3  ≤  n  ≤  k - 1, and by contradiction POAk(πk) > 1.259.

Let [formula]. Since f(α,v,πk) > 1, it can be verified that [formula]. The constraints that v2 must satisfy are v2  ≥  v3 and [formula]. To reach the maximal POAk(πk), either v2 = v3 or [formula]. There are three possible cases for the relationship between v2 and v3.

[formula]: [formula]

Because [formula], we have v3 = v4. Similarly we get [formula], which leads to a contradiction.

[formula]: [formula]

If α1  ≠  α2, we have [formula], which leads to a contradiction.

If α1  =  α2, we can eliminate slot α2 and bidder v2 simultaneously and obtain POAk(πk)  ≤  POAk - 1(πk - 1), which leads to a contradiction.

[formula]: v2 > v3

Now we need to consider v3 and v4. Similarly, there are three possible cases for the relationship between v3 and v4; one can discuss the three cases seperately, and for the third case one needs to dig into the relationship between v4 and v5 recursively. Doing so we have

[formula]

By standard techniques, we get (1) [formula] and (2) [formula], where [formula] and 0 < λ < 1. Thus, [formula], which leads to another contradiction.

Combing the above three cases, we proved that POAn(πn)  ≤  1.259. Further, we can construct an example to show the tightness of the bound by extending the example used in the proof of Theorem 1: [formula].