The propagator for the step potential using the path decomposition expansion

Introduction

The propagator for the step potential, V(x) = V0Θ( - x), is a simple model for scattering, and a useful ingredient in arrival time problems [\cite=halliwell]. Expressions for this propagator are known [\cite=CO], but existing derivations are complex, and give little insight into the structure. Here we show how this propagator may be obtained in a natural way via the Path Decomposition Expansion (PDX), in which the propagator is factored across a surface of constant time [\cite=pdx] and the Brownian motion definition of the path integral.

This propagator may be viewed as a conditional probability density for a random walk on the real line. We then make this integral over paths into a concrete object by defining it as the continuum limit of a discrete sum of lattice paths, u(0,T|0,0). We consider a rectangular lattice with spacing in the time direction of ε, and spacing in the x direction of η, and consider propagation for a time T = 2εn, so we have 2n steps in our paths. The Euclidean propagator [formula] is then defined as the continuum limit of u / 2η where we take ε,η  →  0, n  →    ∞  , keeping ε  /  η2  =  m and T = 2εn fixed. That is,

[formula]

The Path Decomposition Expansion (PDX)

The PDX is a very useful tool for evaluating discontinuous potentials, such as the step potential. A typical path from x0 < 0 to x1 may cross x = 0 many times, but the set of paths may be partitioned according to their first and last crossing time. We therefore split every path into three parts: (A) a restricted part that starts at x0 and does not cross x = 0, but that ends on x = 0 at time t1, (B) an unrestricted part from x = 0 to x = 0 that may cross x = 0 many times and, (C) a further restricted part from x = 0 to x1 that does not re-cross x = 0, see Fig. 1. The propagator can therefore be written as [\cite=pdx];

[formula]

Where t1 and t2 are the first and last crossing times and the gr are the restricted propagators for the regions x < 0 and x > 0, where the potential is constant. They are therefore easily computed by the method of images. Note that when x1 and x0 are both positive, there is an additional contribution from paths which never cross x = 0 [\cite=pdx]. The calculation of the propagator therefore reduces to the much simpler task of computing g(0,T|0,0), the propagator along the edge of a step potential.

Lattice Paths

We first switch to working with the Euclidean propagator [formula] by means of a Wick rotation and we specialise immediately to the case of x0 = x1 = 0. That is, we wish to calculate

[formula]

where SE is the Euclidean action given by

[formula]

On the lattice the conditional probability u(0,T|0,0) is given by a sum of paths, each weighted by e- V0τ, where τ is the length of time spent in x < 0. This may be written as

[formula]

where nk is the number of paths spending a time 2kε < T in the region x < 0. Expresions for these nk are known and are in fact independent of k and are equal to the Catalan numbers [\cite=me] [\cite=combinatorics].

[formula]

where 2n is the total number of time steps. This is the central observation that allows this propagator to be computed in closed form.

The sum can therefore be performed and, using the very useful asymptotic form for the Cn

[formula]

we find Taking the continuum limit and Wick rotating back to real time then yields the final result,

[formula]

which is the expression for the propagator along the edge of a step potential. The full propagator from x0 to x1 may now be obtained using the PDX [\cite=me].

Summary

The PDX, together with some elementary combinatorics, allows for a simple derivation of the propagator for this potential. A similar method allows for the computation of the propagator for a delta function potential, by counting the number of crossings of the origin [\cite=me]. It is interesting to note that the method described reduces the computation of a path integral to a problem in combinatorics, and this suggests that other propagators may be computed in this way.

The author would like to thank the organisers of DICE 2008, especially Hans-Thomas Elze, for the opportunity to to take part in this conference. He is also indebted to Jonathan J Halliwell for his support, and for many useful discussions.

References