Timed Tuplix Calculus and the Wesseling and van den Bergh Equation

This research was carried out in the framework of the Jacquard-project Symbiosis, which is funded by the Netherlands Organisation for Scientific Research (NWO).

Introduction

In [\cite=WB00a], Wesseling and van den Bergh claim that interest calculations relating to financial products should always be based on cumulative interests. By strictly adhering to the use of cumulative interests, the design of financial products is made symmetric between client and provider and an implicit bias towards either party can be avoided. This is the point of departure of their 'realistic interest calculation approach'. Applying this approach involves a strict separation between transfers related to a financial product proper and transfers related to its costs of delivery. Transfers related to the financial product proper include transfers due to interests. Transfers related to the costs of delivery may include clear profit, general running cost, cost of insurance against non-payment, costs of marketing and communication, etc. Having made this separation, Wesseling and van den Bergh formulate a cumulative interest compliant conservation requirement for pure financial products: the sum of all transfers relating to the product, transposed to some point of time (the focal date) by means of cumulative interest at the actual interest rate of the product, is zero.

Our objective is to formalize this conservation requirement in the setting of tuplix calculus [\cite=BPZ07a], a calculus that has been applied earlier in modular financial budget design. In order to achieve that objective, we introduce a timed extension of tuplix calculus. A single equational axiom of the extended calculus expresses that interest calculations are based on cumulative interests. We formalize the above-mentioned conservation requirement for pure financial products by an equation in the extended calculus. Unaware of previous occurrences of the requirement in the financial literature, we call this equation the Wesseling and van den Bergh equation. Moreover, we adapt the notion of implicit capital of a process introduced in [\cite=BM06e] to the setting of timed tuplices and use it to show how wanted financial behaviours may profit from using pure financial products. The implicit capital associated with a financial behaviour may be viewed as the least amount of money that must be at disposal to exhibit that behaviour - taking cumulative interest into account.

In [\cite=BPZ07a], tuplix calculus is presented by first introducing a core tuplix calculus and after that extending the core tuplix calculus with several operators. In the timed tuplix calculus introduced in this paper, only the core tuplix calculus is included. In the core tuplix calculus as well as its extensions, the mathematical structure for quantities is a signed cancellation meadow [\cite=BP08a]. The prime example of cancellation meadows is the field of rational numbers with the multiplicative inverse operation made total by imposing that the multiplicative inverse of zero is zero. A cancellation meadow is an appropriate mathematical structure for quantities if quantities are measured with finite accuracy. A signed cancellation meadow is a cancellation meadow expanded with a signum operation.

This paper is organized as follows. First, we give a brief summary of signed cancellation meadows (Section [\ref=sect-canc-meadows]). Next, we review the core of tuplix calculus (Section [\ref=sect-CTC]). Then, we extend the core of tuplix calculus to a timed tuplix calculus (Section [\ref=sect-TTC]). After that, we formalize the conservation requirement for pure financial products and show how financial behaviours may profit from using pure financial products (Section [\ref=sect-pfp]). Following this, we construct the standard model of the timed tuplix calculus (Section [\ref=sect-model]). Finally, we make some concluding remarks (Section [\ref=sect-conclusions]).

Signed Cancellation Meadows

In the timed tuplix calculus presented in this paper, the mathematical structure for quantities is a signed cancellation meadow. Signed cancellation meadows were first introduced in [\cite=BP08a]. In this section, we give a brief summary of signed cancellation meadows.

A meadow is a commutative ring with identity and a multiplicative inverse operation satisfying a reflexivity equation and a restricted inverse equation which imply that the multiplicative inverse of zero is zero. A cancellation meadow is a meadow in which the multiplicative inverse operation satisfies a general inverse law. A signed meadow is a meadow expanded with a signum operation. Meadows are defined for the first time in [\cite=BT07a]. In that paper, cancellation meadows are called zero-totalized field. The expansion of meadows with a signum operation originates from [\cite=BP08a].

The signature of meadows consists of the following constants and operators:

the constants 0 and 1;

the binary addition operator [formula] ;

the binary multiplication operator [formula];

the unary additive inverse operator [formula];

the unary multiplicative inverse operator [formula].

We assume that there are infinitely many variables, including u, v and w. Terms are build as usual. We use infix notation for the binary operators [formula] and [formula], prefix notation for the unary operator [formula], and postfix notation for the unary operator [formula]. We use the usual precedence convention to reduce the need for parentheses. We introduce subtraction and division as abbreviations: p  -  q abbreviates p  +  ( - q) and p  /  q abbreviates [formula]. We use numerals in the common way (2 abbreviates 1  +  1, etc.). We also use the notation pn for exponentiation with a natural number as exponent. For each term p over the signature of meadows, the term pn is defined by induction on n as follows: p0  =  1 and [formula].

The constants and operators from the signature of meadows are adopted from rational arithmetic, which gives an appropriate intuition about these constants and operators.

A meadow is an algebra over the signature of meadows that satisfies the equations given in Table [\ref=eqns-meadow]. Thus, a meadow is a commutative ring with identity and a multiplicative inverse operation [formula] satisfying the reflexivity equation [formula] and the restricted inverse equation [formula]. From the equations given in Table [\ref=eqns-meadow], the equation [formula] is derivable.

In meadows, the multiplicative inverse operation is total. The advantage of working with a total multiplicative inverse operation lies in the fact that conditions like u  ≠  0 in [formula] are not needed to guarantee meaning.

A non-trivial meadow is a meadow that satisfies the separation axiom A cancellation meadow is a meadow that satisfies the cancellation axiom or equivalently, the general inverse law An important property of non-trivial cancellation meadows is the following: 0  /  0  =  0, whereas u  /  u  =  1 for u  ≠  0.

A signed meadow is a meadow expanded with a unary signum operation [formula] satisfying the equations given in Table [\ref=eqns-signum]. In combination with the cancellation axiom, the last equation in this table is equivalent to the conditional equation [formula].

In signed cancellation meadows, the function max  has a simple definition: Henceforth, we will write p  ≤  q for max (p,q)  =  q.

Core Tuplix Calculus and Encapsulation

The timed tuplix calculus presented in this paper extends  (Core Tuplix Calculus).  has been introduced in [\cite=BPZ07a] as the core of  (Tuplix Calculus). In this section, we give a brief summary of  and its extension with encapsulation operators. These operators have been introduced in [\cite=BPZ07a] as well. The operators of the timed tuplix calculus that will be introduced in Section [\ref=sect-TTC] include generalizations of the encapsulation operators.

It is assumed that a fixed but arbitrary set A of transfer actions has been given. It is also assumed that a fixed but arbitrary signed non-trivial cancellation meadow [formula] has been given.

has two sort: the sort [formula] of tuplices and the sort [formula] of quantities. To build terms of sort [formula], it has the following constants and operators:

the empty tuplix constant [formula];

the blocking tuplix constant [formula];

for each a∈A, the unary transfer action operator [formula];

the unary zero test operator [formula];

the binary conjunctive composition operator [formula].

To build terms of sort [formula],  has the constants and operators from the signature of meadows.

We assume that there are infinitely many variables of sort [formula], including x, y and z, and infinitely many variables of sort [formula], including u, v and w. Terms are build as usual for a many-sorted signature (see e.g. [\cite=ST99a] [\cite=Wir90a]). We use infix notation for the binary operator [formula].

A term of sort [formula] is tuplix-closed if it does not contain variables of sort [formula]. A term of sort [formula] is closed if it does not contain variables of any sort.

We look at  as a calculus that is concerned with transfers of quantities of something. Let t and t' be closed terms of sort [formula], and let q be a closed term of sort [formula]. Intuitively, the constants and operators introduced above can be explained as follows:

[formula] is a tuplix with no effect;

[formula] blocks any joint effect of tuplices;

the effect of a(q) is performing action a and transferring quantity q on performing that action;

[formula] is with no effect if q equals 0 and blocks any joint effect otherwise;

the effect of [formula] is the joint effect of t and t'.

In [\cite=BPZ07a], these constants and operators are explained in a different way. We consider that way of explanation less appropriate for the timed extension of  that will be presented in Section [\ref=sect-TTC].

We use the following convention: a transfer of a positive quantity is taken as an outgoing transfer and a transfer of a negative quantity is taken as an incoming transfer.

Notice that  can be looked upon as a special purpose process algebra in which processes are considered at a level of detail where not even the order in which actions are performed matter. This makes  suitable for formalizing budgets: budgets are in fact descriptions of financial behaviour at the level of detail where only the actions to be performed and the quantities transferred on performing those actions matter.

The axioms of  are given in Table [\ref=axioms-CTC]. The following proof rule is adopted to lift the valid equations between terms of sort [formula] to : We will refer to this proof rule by DE.

To prove a statement for all  terms of sort [formula], it is is sufficient to prove it for all  canonical terms. A CTC canonical term is a  term of sort [formula] of the form where k,l  ≥  0 and [formula] are distinct transfer actions.

For all  terms t of sort [formula], there exists a  canonical term t' such that t  =  t' is derivable from the axioms of .

This proposition is a reformulation of Lemma 1 from [\cite=BPZ07a].

Like in [\cite=BPZ07a], we can add the following operators to the operators of  to build terms of sort [formula]:

for each H  ⊆  A, the unary encapsulation operator [formula].

Let t be a closed term of sort [formula]. Intuitively, the encapsulation operators can be explained as follows:

if, for each a∈H, the sum of all quantities transferred by t on performing a equals 0, then [formula] differs from t in that, for each a∈H, the effect of all transfer actions of the form a(p) occurring in t is eliminated; otherwise, [formula] has the same effect as [formula].

The name encapsulation was introduced earlier in the setting of the process algebra  for similar operations in [\cite=BK84b].

The axioms for encapsulation are given in Table [\ref=axioms-encap-pabstr].

Timed Tuplix Calculus

In this section, we extend  to  (Timed Tuplix Calculus). In the informal explanation of the constants and operators of  given in Section [\ref=sect-CTC], we could disregard what it is of which quantities are transferred. Clearly, if  is used to formalize budgets, quantities of money are transferred. It happens to be far from obvious to give informal explanations of two of the additional operators of  that are not couched in terms of quantities of money, usually called amounts of money. Therefore, we change over in this section to explanations couched in terms of amounts of money. This should not be taken as a suggestion that more abstract explanations are impossible. In subsequent sections, tuplices are viewed as representations of financial behaviours. The change-over made in this section agrees with this viewpoint.

Like ,  has two sort: the sort [formula] of tuplices and the sort [formula] of quantities. To build terms of sort [formula], it has the constants and operators of  to build terms of sort [formula], and in addition the following operators:

the unary delay operator [formula];

for each I  ⊆  A, the unary pre-abstraction operator [formula];

for each H  ⊆  A, the binary interest counting encapsulation operator [formula].

To build terms of sort [formula], it has the constants and operators from the signature of meadows, and in addition the following operator:

the binary implicit capital operator [formula].

We write [formula] and [formula], where p is a term of sort [formula] and t is a term of sort [formula], for [formula] and [formula], respectively. We also use the notation [formula]. For each term t of sort [formula], the term [formula] is defined by induction on n as follows: [formula] and [formula].

In , it is assumed that [formula]. A special role is assigned to [formula]: transfer actions of the form a(p) are renamed to [formula] on pre-abstraction in order to abstract from their identity, but not from their presence.

Let t be a closed term of sort [formula] and let p be a closed term of sort [formula]. Intuitively, the additional operators introduced above can be explained as follows:

[formula] differs from t in that the effect of each transfer action occurring in t is delayed one time slice;

[formula] differs from t in that, for each a∈I, the effect of each transfer action of the form a(p) occurring in t is replaced by the effect of [formula];

[formula] differs from [formula] in that, for each a∈H, a cumulative interest at the rate of p per time slice is taken into account on the summation of all amounts of money transferred by t on performing a;

[formula] is the least amount of money that must be at disposal to exhibit financial behaviour t if a cumulative interest at the rate of p per time slice is taken into account.

The delay operator introduced here is comparable to the relative discrete time unit delay operator and the absolute discrete time unit delay operator introduced earlier in the setting of the process algebra  in [\cite=BB95a]. The pre-abstraction operators introduced here are comparable to the pre-abstraction operators introduced earlier in the setting of the process algebra  in [\cite=BB88]. The interest counting encapsulation operators are generalizations of the encapsulation operators introduced in Section [\ref=sect-CTC]: [formula] can be taken as abbreviation of [formula]. The implicit capital operator introduced here is comparable to the implicit computational capital operator introduced earlier in the setting of the process algebra  in [\cite=BM06e].

The implicit capital of a financial behaviour is an amount of money that cannot be negative. However, it is undefined if the behaviour is [formula]. In order to circumvent the use of algebras with partial operations, - 1 is used to represent the undefinedness of the implicit capital of a financial behaviour.

Notice that  can be looked upon as a special purpose timed process algebra in which processes are considered at a level of detail where the time slices in which actions are performed matter, but not their order within the time slices. This makes  suitable for formalizing financial products: financial products exhibit financial behaviours where the day, week, month or year in which actions are performed and the amounts of money are transferred in doing so are relevant, but not their order within the periods concerned.

The axioms of  are the axioms of  and the additional axioms given in Tables [\ref=axioms-delay-pabstr-iencap] and [\ref=axioms-implicit-capital]. Like in , the proof rule DE is adopted to lift the valid equations between terms of sort [formula] to .

Axiom RICA (Realistic Interest Calculation Axiom) is equivalent to which can be paraphrased as follows: when encapsulating a, reckoning with an interest rate u different from - 1, a transfer of an amount v in time slice n is equivalent to a transfer of an amount [formula] in time slice n  +  1. The exclusion of u  =   - 1 prevents that the equation [formula] can be derived. Axioms IC5 and IC6 are equivalent to The exclusion of [formula] is needed because - 1 is used to represent undefinedness of the implicit capital of a financial behaviour.

Let p be a closed term of sort [formula] such that [formula]. The following is a derivation from the axioms of  and the proof rule DE: Because [formula], it follows immediately that Moreover, it follows immediately that for all closed terms q of sort [formula] such that not [formula].

Let p and q be closed terms of sort [formula]. The following is a derivation from the axioms of  and the proof rule DE: It follows immediately that for all closed terms p and q of sort [formula] such that [formula]. There are many such p and q, for example, p and q such that [formula] and [formula], but also p and q such that [formula] and [formula]. We will return to this example in Section [\ref=sect-pfp], where p and q are taken as interest rates on savings and loans, respectively.

To prove a statement for all tuplix-closed  terms of sort [formula], it is sufficient to prove it for all tuplix-closed  canonical terms. The set of TTC canonical terms is inductively defined by the following rules:

if t is a  canonical term, then t is a  canonical term;

if t is a  canonical term and t' is a  canonical term, then [formula] is a  canonical term.

For all tuplix-closed  terms t of sort [formula], there exists a tuplix-closed  canonical term t' such that t  =  t' is derivable from the axioms of .

The proof is straightforward by induction on the structure of t, and in the cases [formula] and [formula] (where we can restrict ourselves to tuplix-closed  canonical terms s) by induction on the structure of s. The following easy to prove fact is used in the proof for the case [formula]: for all  terms t1 of sort [formula] and all tuplix-closed  terms t2 of sort [formula] in which no element of H occurs, [formula] is derivable from the axioms of   (cf. Lemma 5 in [\cite=BPZ07a]).

Pure Financial Products

is concerned with financial behaviours. A financial product exhibits a financial behaviour. In [\cite=WB00a], Wesseling and van den Bergh propose a cumulative interest compliant conservation requirement as a criterion for pure financial products: the sum of all transfers relating to the product, transposed to some point of time by means of cumulative interest at the actual interest rate of the product, is zero. In this section we formalize this requirement and show how financial behaviours may profit from using pure financial products.

Let p be a closed term of sort [formula]. Then the cumulative interest compliant conservation requirement for interest rate p is formalized by the equation This equation is called the Wesseling and van den Bergh equation or shortly the W-vdB equation. Suppose that p represents the actual interest rate of a financial product. Then a tuplix that represents the behaviour of that financial product is a tuplix that represent the behaviour of a pure financial product if it satisfies the W-vdB equation for interest rate p.

Let p be a closed term of sort [formula] and t be a closed term of sort [formula]. Suppose that p represents the actual interest rate of a pure financial product and t represents the behaviour of that pure financial product. If that pure financial product is a financial product of credit type, then usually [formula]. However, if that pure financial product is a financial product of savings type, then [formula].

Let p and q be closed terms of sort [formula] and let t and t' be closed terms of sort [formula]. Suppose that p represents the expected interest rate on savings and q represents the actual interest rate of a pure financial product of credit type. Moreover, suppose that t represents the behaviour of that pure financial product and t' represents some wanted financial behaviour. We say that the wanted financial behaviour t' profits from using the pure financial product whose behaviour is t with interest rate p on savings if [formula]. In any case, we have [formula]. The important observation is that we may have [formula]. As an example, we take the case where p and q are such that [formula], [formula], and [formula]. We have that [formula], so t actually represents the behaviour of a pure financial product. We can easily derive that [formula] and [formula]. In Example [\ref=example-icap], we have already derived that [formula]. This means that in this case [formula]. In other words, the wanted financial behaviour t' profits from the pure financial product t with interest rate p on savings.

Let p be a closed term of sort [formula], and let t' be a closed term of sort [formula]. Suppose that p represents the expected interest rate on savings and t' represents some wanted financial behaviour. Then there exists a closed term t of sort [formula] that represents the behaviour of a pure financial product of credit type such that [formula] and [formula]:

if [formula], then take [formula];

if [formula], then take [formula], where n is the greatest number of nested occurrences of terms of the form [formula] in t'.

In other words, we arrive at the conclusion that any wanted financial behaviour can be exhibited without capital by using a pure financial product of credit type if we take the actual interest rate of the pure financial product as the expected interest rate on savings.

Standard Model of

In this section, we construct the standard model of . The standard model of  presented in [\cite=BPZ07a] lies at the root of this model. However, the use of partial functions is circumvented.

We write [formula] for the domain of the signed cancellation meadow [formula], and we write [formula], where [formula] is a constant or operator from the signature of signed cancellation meadows, for the interpretation of [formula] in [formula]. To prevent confusion, we write [formula] and [formula] for the identity elements of addition and multiplication on natural numbers.

We define the set [formula] of tuplix elements, the set [formula] of untimed tuplices, and the set [formula] of timed tuplices as follows: In the definition of the standard model of , the auxiliary set [formula] defined by is used as well. We write [formula], where [formula], for the unique element [formula] such that f∈U if [formula], and an arbitrary [formula] otherwise.

The standard model of , written [formula], is the expansion of the signed cancellation meadow [formula] with

for the sort [formula], the set [formula];

for each additional constant [formula] of , the element [formula] defined in Table [\ref=interpretation-TTC];

for each additional operator [formula] of , the operation [formula], where [formula] if [formula] and [formula] if [formula], defined in Table [\ref=interpretation-TTC]. We write [formula] for the empty function and [formula] for the function f with [formula] such that f(e)  =  e'.

In Table [\ref=interpretation-TTC], the following auxiliary functions are used:

the function [formula] defined by

[formula];

for each [formula]:

for each [formula], the function [formula] defined by

[formula];

for each [formula]:

for each [formula], the function [formula] defined by

[formula];

for each [formula]:

for each [formula], the function [formula] defined by

the function [formula] defined by where:

[formula] is defined by [formula] for all [formula];

[formula] is defined by [formula].

It is easy to establish the following soundness result: for all terms t and t' of sort [formula], t  =  t' is derivable from the axioms of  and the proof rule DE only if [formula]. We also have a completeness result.

For all closed terms t and t' of sort [formula], [formula] only if t  =  t' is derivable from the axioms of  and the proof rule DE.

By Proposition [\ref=prop-TTC-can-term], it is sufficient to show that, for all closed  canonical terms t and t', [formula] only if t  =  t' is derivable from the axioms of  and the proof rule DE. This is easy to prove by induction on the structure of t using Theorem 1 from [\cite=BPZ07a].

Conclusions

We have developed a timed extension of tuplix calculus. The result can be looked upon as a special purpose timed process algebra in which processes are considered at a level of detail where the time slices in which actions are performed matter, but not their order within the time slices. This makes it suited for the description and analysis of financial products: financial products exhibit financial behaviours where the day, week, month or year in which actions are performed and the amounts of money are transferred in doing so are relevant, but not their order within the periods concerned.

We have formalized the cumulative interest compliant conservation requirement for pure financial products proposed by Wesseling and van den Bergh by an equation in the timed tuplix calculus developed. Thus, a formalization of the starting-point of the material on the mathematics of finance presented in [\cite=WB00a] has been achieved. Moreover, we have used the timed tuplix calculus developed to show how wanted financial behaviours may profit from using pure financial products. The timed tuplix calculus appears to be a reasonable setting for further work in this area.

Like Wesseling and van den Bergh, we consider only financial products of which the interest rate is not dependent on changes in the financial market. If the interest rate of a financial product is made dependent on changes in the financial market, then the expressiveness of the timed tuplix calculus is insufficient. In this more dynamic case, discrete time process algebra [\cite=BB95a] looks to be a reasonable setting for the formalization of an adapted version of the cumulative interest compliant conservation requirement.

Wesseling and van den Bergh have informed us that their conservation requirement for pure financial products has been formulated under the influence of basic ideas on the mathematics of finance presented in [\cite=CCF90a].