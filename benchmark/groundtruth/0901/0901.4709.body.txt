Lemma Proposition Corollary Definition Problem Remark

Semidefinite programs for completely bounded norms

Introduction

Linear mappings from one space of operators to another, which are often called super-operators, play an important role in quantum information theory. Quantum channels in particular, which model general discrete-time changes in quantum systems, are represented by super-operators that act on operators on finite-dimensional complex vector spaces.

It is natural to consider distances between quantum channels, so as to quantify the similarity with which they act on quantum states. One way to define such a notion is to define a suitable norm on the space of super-operators in which channels of a given size are represented. Then, the distance between two channels is defined as the norm of their difference. A natural question that arises is: what norms give rise to the most physically meaningful notions of distance? As is argued in [\cite=GilchristLN05], the answer to this question may depend on the problem at hand--but perhaps the most natural and widely applicable choice within quantum information theory is the completely bounded trace norm, also known as the diamond norm. This norm was first used in the setting of quantum information by Kitaev [\cite=Kitaev97], who used it mainly as a tool in studying quantum error correction and fault-tolerance. It is equivalent, up to taking the adjoint of a super-operator, to its spectral norm variant, which is usually known simply as the completely bounded norm. The completely bounded norm, as well as variants that include the completely bounded trace norm, have been studied in operator theory for many years. (See [\cite=Paulsen02] for historical comments and further details.)

The definition of these completely bounded norms, which can be found in the section following this introduction, may seem unusual at first glance. It turns out, however, that they are quite natural and satisfy many remarkable properties. They are, in particular, much easier to reason about and to work with than the seemingly simpler super-operator norms that are induced by the trace norm and spectral norm, primarily because the completely bounded norms respect the structure of tensor products while the induced norms do not. The physical importance of this property, within the setting of quantum information theory, has been discussed in several sources [\cite=Kitaev97] [\cite=AharonovKN98] [\cite=ChildsPR00] [\cite=D'ArianoPP01] [\cite=Acin01] [\cite=GilchristLN05] [\cite=RosgenW05] [\cite=Sacchi05b] [\cite=Sacchi05] [\cite=Rosgen08] [\cite=Watrous08] [\cite=PianiW09]. Additional references that highlight the properties and uses of completely bounded norms in quantum information include [\cite=DevetakJKR06] [\cite=Jenvccova06] [\cite=Perez-GarciaWPVJ08].

One obvious question that comes to mind about the completely bounded trace and spectral norms is: can they be efficiently computed? Unlike the norms of operators that are most typically encountered in quantum information theory, which are trivially computable from spectral or singular-value decompositions, the computation of completely bounded norms is not known to be straightforward. To the author's knowledge there are only two papers written prior to this one, namely [\cite=Zarikian06] and [\cite=JohnstonKP09], that present methods to compute the completely bounded spectral or trace norm of a given super-operator. Both papers describe iterative methods, and analyze the complexity of each iteration of these methods, but do not analyze their rates of convergence. So, although these papers may describe potentially efficient methods, they do not include complete proofs of their efficiency.

The purpose of this paper is to explain how the completely bounded trace norm of a given super-operator (and therefore its completely bounded spectral norm as well) can be expressed as the optimal value of a semidefinite program whose size is polynomial in the dimension of the spaces on which the super-operator acts. Using known polynomial-time algorithms for solving semidefinite programs, one obtains a provably efficient algorithm (meaning a deterministic polynomial time algorithm) for calculating these norms. This approach also has the obvious practical advantage that it is more easily implemented through the use of existing semidefinite programming optimization libraries, and allows one to take advantage of the extensive work that has been done to solve semidefinite programs efficiently and accurately. Moreover, through semidefinite programming duality, one obtains a means by which a certificate of the value of the completely bounded trace or spectral norm of a given super-operator may be quickly verified.

In a recent paper written independently from this one, Ben-Aroya and Ta-Shma [\cite=Ben-AroyaT09] have found a different (but related) way to efficiently compute the completely bounded trace norm of super-operators using convex programming.

The essence of the semidefinite programming formulation of the completely bounded trace norm that is described in this paper appears, at least to some extent, in the paper [\cite=KitaevW00]; although it was not made explicit or considered in full generality therein. The present paper aims to present this formulation explicitly and without any discussion of the quantum interactive proof system model of computation, which is the primary focus of [\cite=KitaevW00]. A second semidefinite programming formulation of the completely bounded trace norm is also presented, based on the competitive quantum game framework of [\cite=GutoskiW07]. This formulation is slightly simpler, but is valid only for super-operators that are the difference between two quantum channels--which happens to be an important special case in quantum information.

Semidefinite programming is useful not only as a computational tool, but as an analytic tool as well. The last section of this paper gives two examples along these lines that are derived from the more general semidefinite programming formulation of the completely bounded trace norm. The first example concerns an alternate characterization of the completely bounded trace norm and the second illustrates a precise sense in which two known characterizations of the fidelity function (given by Uhlmann's Theorem and Alberti's Theorem) are dual statements to one another.

Background

The two subsections that follow aim to provide the reader with an account of the background knowledge assumed in the remainder of the paper. The first subsection discusses well-known concepts from finite-dimensional operator or matrix theory, and is mainly intended to make clear the notation and terminology that is used later. It also includes the definitions of the completely bounded norms that are the focus of this paper. The second subsection discusses semidefinite programming, using a form that is less common than the so-called standard form of semidefinite programs, but that is equivalent and better suited to the needs of this paper.

Operators and super-operators

The scripted letters X, Y, Z, and W will denote vector spaces of the form [formula] for n  ≥  1, whose elements are identified with n-dimensional column vectors. The j-th elementary unit vector in such a space is denoted ej, and the unit sphere in X (with respect to the Euclidean norm) is denoted

[formula]

For [formula] and [formula], the space consisting of all linear operators of the form A:X  →  Y is denoted [formula] and is identified with the set of m  ×  n complex matrices in the usual way. The notation [formula] is shorthand for [formula], and the space X is identified with [formula] when necessary. An inner product on [formula] is defined as [formula] for all [formula], where [formula] denotes the adjoint (or conjugate transpose) of A. The identity operator on X is denoted [formula], and for each choice of indices i,j we write [formula].

Three operator norms are discussed in this paper: the trace norm, Frobenius norm, and spectral norm, defined as

[formula]

respectively, for each [formula]. For every operator A it holds that

[formula]

The following special types of operators are also discussed.

A super-operator is a linear mapping of the form [formula], and the space of all mappings of this form is denoted [formula]. The identity super-operator on [formula] is denoted [formula]. The adjoint super-operator to [formula] is the unique super-operator [formula] for which [formula] for all [formula] and [formula]. The following special types of super-operators are discussed.

The Choi-Jamiołkowski representation [formula] of a super-operator [formula] is the operator defined as

[formula]

(where this expression assumes [formula]). The mapping J is a linear bijection from [formula] to [formula]. The operator J(Φ), written as an nm  ×  nm matrix, represents one convenient way that a super-operator may be expressed in concrete terms.

A pair of operators (A,B) in [formula] is a Stinespring pair for [formula] if it holds that

[formula]

for all [formula], and an expression of the form [\eqref=eq:Stinespring] is called a Stinespring representation of Φ. Stinespring representations exist for every super-operator, provided the space Z has dimension at least [formula]. It is straightforward to compute such a Stinespring pair (A,B) from the Choi-Jamiołkowski representation of [formula]: for any expression

[formula]

it holds that

[formula]

forms a Stinespring pair of Φ.

For every super-operator [formula], one defines the induced super-operator norms:

[formula]

as well as completely bounded variants of these norms:

[formula]

As was done in the introduction, we will refer to [formula] as the completely bounded trace norm and to [formula] as the completely bounded spectral norm. It is common that [formula] is denoted [formula] and called the diamond norm, and that [formula] is denoted [formula] and called simply the completely bounded norm. It holds that

[formula]

and that [formula] for every [formula]. These norms are both multiplicative with respect to tensor products, meaning that

[formula]

for any choice of super-operators Φ and Ψ.

Semidefinite programming

This section gives a brief overview of semidefinite programming, which is discussed in greater detail in several sources (including [\cite=Alizadeh95] [\cite=VandenbergheB96] [\cite=Lovasz03] [\cite=deKlerk02], for instance). The particular formulation that is described here is somewhat different than the well-known standard form that is used by most authors, but it is equivalent and more convenient for the purposes of this paper.

A semidefinite program over [formula] and [formula] is specified by a triple (Ψ,A,B), where The following two optimization problems are associated with such a semidefinite program:

With these problems in mind, one defines the primal feasible set A and the dual feasible set B as

[formula]

Operators X∈A and Y∈B are also said to be primal feasible and dual feasible, respectively. For the sake of the discussion of computational efficiency below, it will be helpful to also define, for each ε > 0, the sets

[formula]

Intuitively speaking, Aε contains primal feasible operators that are not too close to the boundary of the primal feasible set, and likewise for Bε.

The functions [formula] and [formula] are called the primal and dual objective functions, and the optimal values associated with the primal and dual problems are defined as follows:

[formula]

(If it is the case that [formula] or [formula], the above definitions are to be interpreted as α  =    -    ∞   and β  =    ∞  , respectively.) The supremum and infimum cannot always be replaced by the maximum and minimum--in some cases even finite values α and β may not be achieved for any choice of X∈A and Y∈B.

Semidefinite programs have associated with them a powerful theory of duality, which refers to the special relationship between the primal and dual problems. The property of weak duality, which holds for all semidefinite programs, is stated in the following theorem.

For every semidefinite program (Ψ,A,B) as defined above, it holds that α  ≤  β.

This property implies that every dual feasible operator Y∈B provides an upper bound of [formula] on the value [formula] that is achievable over all choices of a primal feasible X∈A, and likewise every primal feasible operator X∈A provides a lower bound of [formula] on the value [formula] that is achievable over all choices of a dual feasible Y∈B.

It is not always the case that α  =  β for a given semidefinite program (Ψ,A,B), even when α and β are finite. For most semidefinite programs that arise in practice, however, it is the case that α  =  β, which is a situation known as strong duality. There are different conditions under which this property is guaranteed, one of which is given by the following theorem.

The following two implications hold for every semidefinite program (Ψ,A,B) as defined above.

One may consider a general computational problem that asks for the optimal primal and dual values of a given semidefinite program, possibly up to some specified accuracy. There are various ways in which this may be done, one of which is to phrase the problem as a promise problem [\cite=EvenS+84] such as the following one.

The semidefinite programming approximation problem is as follows.

The description of this problem does not explicitly state how the super-operator Ψ is to be represented, but we will assume it is specified by the matrix representation of J(Ψ). Other forms, including Stinespring representations and Kraus representations, are easily converted to this form. It is also assumed that the entries of J(Ψ), A, and B have rational real and imaginary parts.

The computational problem stated above can be solved in polynomial time using the ellipsoid method [\cite=GrotschelLS93], as the following theorem states.

There exists an algorithm that solves the semidefinite programming approximation problem stated above that runs in time polynomial in n, m, log (R), log (1 / ε), and the maximum bit-length of the entries of J(Ψ), A, and B.

Here, the bit length of a complex number z  =  (a / b)  +  i(c / d) is the number of bits needed to represent the 4-tuple (a,b,c,d), where a, b, c, and d are integers represented in binary.

Note that the above problem asks only for an approximation to the optimal primal value, but the simple transformation (Ψ,A,B)  →  ( - Ψ, - B, - A) shows that any algorithm for it also allows one to approximate the optimal dual value. (Alternately, the ellipsoid method can be applied directly to the dual problem.)

It is possible to approximate more general classes of semidefinite programs efficiently. For instance, the bound [formula] need not hold for every primal feasible X, provided certain assumptions are known about the size of the optimal solution. These generalizations are not important for this paper, and the above problem can be more easily fit to the general presentation of [\cite=GrotschelLS93] (which is described in the setting of semidefinite programming in [\cite=Lovasz03]).

It should be noted that one would typically not use the ellipsoid method to solve semidefinite programming problems in practise, given that interior point methods [\cite=Alizadeh95] [\cite=deKlerk02] are significantly faster. In strictly formal terms, however, interior point methods have not been proved to run in polynomial time using the Turing machine model of computation.

A semidefinite program for the completely bounded trace norm

We will now describe and analyze a semidefinite program whose optimal (primal and dual) value is [formula], where [formula] is an arbitrary super-operator given by a Stinespring representation

[formula]

for [formula]. It is assumed further that Z has the minimal dimension [formula] for which such a Stinespring representation exists.

The primal and dual problems for the semidefinite program we will consider may be stated informally as follows:

These problems are associated with the semidefinite program that is more formally specified as follows. We define a Hermiticity-preserving super-operator

[formula]

as

[formula]

The adjoint super-operator

[formula]

is given by

[formula]

(In these expressions of Ψ and [formula], the symbol ·   denotes an operator or vector of the appropriate dimensions upon which the output of these super-operators does not depend.) We also define [formula] and [formula] as

[formula]

Now, the primal and dual problem associated with (Ψ,C,D) may be expressed as follows:

Notice that for any choice of a primal feasible operator

[formula]

there exist operators [formula] and [formula] such that [formula] and

[formula]

The operator

[formula]

is therefore primal feasible, and obtains at least the value achieved by [\eqref=eq:block-matrix] (by virtue of the fact that [formula] is positive semidefinite). This accounts for the informal statement of the primal problem above, where the inequality constraints are replaced by equality constraints. The dual problem above is obviously equivalent to its informal statement, because [formula] is positive semidefinite for positive semidefinite Z, and therefore

[formula]

Strong duality

We will first verify that strong duality holds for the above semidefinite program, using Theorem [\ref=theorem:strong-duality]. First note that it is clear that the optimal primal value α is finite, for it must hold that [formula] for any primal feasible operator with the form [\eqref=eq:block-matrix], and therefore [formula].

Now, to verify strict dual feasibility, suppose that μ and λ are positive real numbers such that [formula] and [formula]. Then

[formula]

which illustrates strict dual feasibility. Thus, by Theorem [\ref=theorem:strong-duality], the optimal value α associated with the primal problem is equal to the optimal dual value β, and is achieved for some choice of a primal feasible operator.

One may wonder whether the semidefinite program above is also strictly primal feasible. Having already established strong duality, it is not really essential that this is proved, but it may be noted that strict primal feasibility indeed does hold, relying on the assumption [formula]. This observation, which happens to imply that the optimal dual value is achieved for some dual feasible operator, will follow from the discussion of computational efficiency below.

Optimal value

Now let us verify that the optimal value α  =  β of our semidefinite program is equal to [formula]. Define [formula] for [formula]. Given that [formula], it holds that

[formula]

Now define two sets [formula] as

[formula]

Our interest in the set R is clear, for the equation above has established that

[formula]

The set Q, on the other hand, is of interest because the optimal value α of the primal problem for the semidefinite program defined above is given by

[formula]

To establish that [formula], if therefore suffices to prove that Q  =  R, which is easily done as follows.

First consider an arbitrary choice of [formula] and [formula], and let

[formula]

Then [formula], and so it holds that W∈Q, which proves R  ⊆  Q.

Now consider an arbitrary element W∈Q, and let [formula] be a density operator satisfying [formula]. Given that we have chosen W to have dimension at least as large as that of both X and [formula], there must exist vectors [formula] and [formula] such that [formula] and [formula]. This implies that

[formula]

so there must exist [formula] such that [formula]. Therefore

[formula]

which proves that W∈R, so that Q  ⊆  R as required.

Computational efficiency

Now let us verify that the optimal value [formula] of the semidefinite program described above can be approximated by an efficient computation. By Theorem [\ref=theorem:ellipsoid-algorithm] our task is to argue that suitable parameters R and ε for the promise in Problem [\ref=prob:sdp-approximation] can be determined.

For the sake of clarity, let us summarize our notation: we have [formula], [formula], and [formula], and [formula] is the super-operator given by

[formula]

for which we wish to approximate [formula]. The semidefinite program that represents this quantity is represented by the Hermiticity-preserving super-operator [formula] and Hermitian operators [formula] and [formula] as described above. We will take N to be the total bit-length of this semidefinite program, which is polynomially related to n, m and the maximum bit-length of the entries of A and B.

First, it is clear that every primal feasible operator has trace bounded by [formula]. Given that the Frobenius norm is upper-bounded by the trace for positive semidefinite operators, it therefore suffices to choose [formula], which is obviously bounded by 2cN for some positive integer constant c.

The specification of ε is slightly more complicated. Consider first the operator [formula]. We have chosen Z to have minimal dimension to admit a Stinespring representation of Φ, and from this assumption it follows that [formula] is positive definite. Using the assumption that the real and imaginary parts of the entries of A are rational, along with the fact that nonzero roots of integer polynomials cannot be too close to zero (see, for instance, Theorem 2.9 of [\cite=Bugeaud04]), one may derive a lower-bound on the smallest eigenvalue of [formula]. For the purposes of this analysis, it suffices to note that there exists an integer constant d0  ≥  1 such that for δ  =  2- d0N we have that the smallest eigenvalue of [formula] is at least δ, and therefore [formula].

Now consider the operator

[formula]

where

[formula]

along with any choice of a real number ε  >  0 that satisfies

[formula]

Let us note, in particular, that this bound holds for ε  =  2- dN for some choice of a positive integer constant d. It is our goal to show that every Hermitian operator whose distance from P is at most ε (with respect to the Frobenius norm) lies within the primal feasible set A, and therefore that Aε is nonempty. In other words, for any choice of operators [formula], [formula], and [formula] satisfying

[formula]

we wish to prove that

[formula]

is primal feasible.

It is clear that [formula], and therefore [\eqref=eq:perturbed] is positive semidefinite. As [formula] it follows that

[formula]

and therefore

[formula]

As [formula] it holds that

[formula]

and therefore

[formula]

It follows that [formula] and therefore the above operator [\eqref=eq:perturbed] is primal feasible as required.

We have shown that the requirements of the promise in Problem [\ref=prob:sdp-approximation] are met for R  =  2cN and ε  =  2- dN for some positive integer constants c and d. By Theorem [\ref=theorem:ellipsoid-algorithm] the value [formula] may therefore be approximated to within error ε in time polynomial in n, m and the size of the entries of A and B. (It is possible of course to choose a smaller error, ε  =  2- p(N) for any polynomial p for instance, if this is desired.)

A simpler semidefinite program for quantum channel distance

A somewhat simpler semidefinite program exists for the completely bounded trace norm of the difference between two quantum channels, which is a special case that is relevant to quantum information. This case was discussed in [\cite=GilchristLN05], and shown to reduce to a convex optimization problem. The discussion that follows is somewhat different, and is derived from the refereed quantum games framework of [\cite=GutoskiW07].

Suppose hereafter in this section that Φ  =  Φ0  -  Φ1 for quantum channels [formula], and consider the semidefinite program whose primal and dual problems are as follows:

As in the previous section, these problems can be matched to the formal description of a semidefinite program (Ψ,C,D), for which strong duality is easily proved. Our goal will be to prove that the optimal value of this semidefinite program is given by [formula].

Given that Φ is the difference between completely positive super-operators, it holds [\cite=GilchristLN05] [\cite=RosgenW05] [\cite=Watrous05] that

[formula]

Given that the operator [formula] is the difference between two density operators for every [formula], it follows that

[formula]

Now, for every unit vector [formula] there is a corresponding operator [formula] with [formula] such that

[formula]

For this choice of B we have

[formula]

and so

[formula]

where the maximum is over all [formula] with [formula] and [formula] with [formula].

Now define sets Q and R as follows:

[formula]

It holds that

[formula]

while the optimal value of the semidefinite program is

[formula]

The fact that [formula] therefore follows from the equality Q  =  R, which is easily proved by selecting ρ or B so that [formula].

Connections with known results

This section describes two interesting connections between the semidefinite programming formulation from Section [\ref=sec:SDP] and known results, the first being directly about completely bounded norms, and the second concerning the fidelity function.

Spectral norms of Stinespring representations

The following theorem gives an alternate characterization of the completely bounded trace norm (or diamond norm). Proofs can be found in Kitaev, Shen and Vyalyi [\cite=KitaevSV02] and Paulsen [\cite=Paulsen02]. The two proofs use rather different techniques, and here the theorem is proved in a third way using semidefinite programming duality.

For every super-operator [formula], it holds that

[formula]

where the infimum is over all Stinespring pairs (A,B) for Φ.

For any Stinespring pair (A,B) of Φ, where [formula], and for any choice of [formula], it holds that

[formula]

for all [formula]. It follows that [formula].

To prove that the infimum is no larger than [formula], first choose an arbitrary Stinespring pair (A,B) of Φ, where [formula]. The optimal value for the dual problem stated in Section [\ref=sec:SDP] does not change if Z is restricted to be positive definite, provided we accept that an optimal solution may not be achieved. We therefore have

[formula]

Thus, for a given ε  >  0, we may choose [formula] such that

[formula]

and [formula]. This second inequality is equivalent to

[formula]

So now we have that

[formula]

and it holds that

[formula]

is a Stinespring pair for Φ. This establishes that the infimum equals [formula] in the expression [\eqref=eq:diamond-inf], which completes the proof.

Connection with fidelity

Consider the semidefinite program from Section [\ref=sec:SDP], for the special case where [formula]. Replacing A and B with vectors [formula], and making simplifications, the problems become as follows:

The quantity that is represented by the optimal value of these problems is given by the fidelity function, which is defined as

[formula]

for positive semidefinite operators P and Q. In particular, the optimal value (for the primal and dual problems) is

[formula]

as is now explained.

First, the optimal value of the primal problem follows from Uhlmann's Theorem [\cite=Uhlmann76], which is as follows.

Let Y and Z be finite-dimensional complex vector spaces, and let [formula] be positive semidefinite operators, both having rank at most [formula]. Then for any choice of [formula] satisfying [formula], it holds that

[formula]

It is straightforward to obtain from this theorem (along with simple properties of the fidelity) the following corollary, which is precisely the statement that the optimal primal value of our semidefinite program is given by the fidelity.

Assume [formula] are vectors, and let [formula] and [formula]. Then

[formula]

The optimal value of the dual problem is, of course, equal to [\eqref=eq:fidelity1] by strong duality. A different way to evaluate the optimal dual value begins with the following simple proposition.

For any vector [formula] and any positive definite operator [formula] it holds that [formula] if and only if [formula].

It holds that [formula] if and only if

[formula]

Given that the operator on the left-hand-side of [\eqref=eq:Alberti-2] is positive semidefinite and has rank equal to 1, we have that [\eqref=eq:Alberti-2] is equivalent to

[formula]

which in turn is equivalent to

[formula]

As

[formula]

the proof is complete.

We have that the optimal value of the dual problem does not change if Z is optimized over only positive definite rather than positive semidefinite operators (again accepting that the optimal value may not be achieved for such an operator). Combined with the proposition just proved, we find that the optimal dual value is given by

[formula]

That this value is given by [\eqref=eq:fidelity1] follows from a different characterization of the fidelity due to Alberti [\cite=Alberti83].

Let [formula] be positive semidefinite operators. Then

[formula]

We have therefore established a simple and precise sense in which Uhlmann's Theorem and Alberti's Theorem are dual statements in finite dimensions, each implying the other.

Acknowledgments

Many of the key ideas presented in this paper are contained in the papers [\cite=KitaevW00] and [\cite=GutoskiW07]. I thank Alexei Kitaev and Gus Gutoski for discussions during and after the collaborations that produced these papers, which helped to clarify these ideas. I also thank Bill Rosgen and Mary Beth Ruskai for helpful comments. This research was supported by Canada's NSERC and the Canadian Institute for Advanced Research (CIFAR).