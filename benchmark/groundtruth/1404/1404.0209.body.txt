An introduction to Monte Carlo methods

Introduction

Most models in statistical physics are not solvable analytically, and therefore an alternative way is needed to determine thermodynamical quantities. Numerical simulations help in this task, but introduce another challenge: it is not possible, in most cases, to enumerate all the possible configurations of a system; one therefore has to create a set of configurations that are representative for the entire ensemble. In this section, we will illustrate our purpose with the Ising model. This is a renowned model because of its simplicity and success in the description of critical phenomena [\cite=Binney95]. The degrees of freedom are spins [formula] placed at the vertex i of a lattice. This lattice will be square or cubic for simplicity, with edge size L and dimension D. Thus, the system contains N = LD spins. The hamiltonian of the Ising model is:

[formula]

where the summation runs over all pairs of nearest-neighbor spins 〈ij〉 of the lattice and J is the strength of the interaction. The statistical properties of the system are obtained from the partition function:

[formula]

where the summation runs over all the configurations C. The energy of a configuration is denoted by E(C). Here, [formula] is the inverse temperature (temperature T and Boltzmann constant kB). The Ising model displays a second-order phase transition at the temperature Tc, characterised by a high temperature phase with an average magnetization zero (disordered phase) and a low temperature phase with a non-zero average magnetization (ordered phase). The system is exactly solvable in one and two dimensions. For [formula], the critical properties are easily obtained by the renormalization group. In three dimensions no exact solution is available. Even a 3D cubic lattice of very modest size 10  ×  10  ×  10 generates [formula] configurations in the partition function. If we want to obtain e.g. critical exponents with a sufficient accuracy, we need sizes that are at least an order of magnitude larger. An exact enumeration is a hopeless effort. Monte Carlo simulations are one of the possible ways to perform a sampling of configurations. This sampling is made out of a set of configurations of the phase space that contribute the most to the averages, without the need of generating every single configuration. This is referred to as importance sampling. In this sampling of the phase space, it is important to choose the appropriate Monte Carlo scheme to reduce the computational time. In that respect, the Ising model is interesting because the different regimes in temperature lead to the development of new algorithm that reduce tremendously the computational time, specifically close to the critical temperature.

We will start these notes by introducing two important principles of Monte Carlo simulations: detailed balance and ergodicity. Then we will review different examples of Monte Carlo methods applied to the Ising model: local and cluster algorithms, the rejection free (or continuous time) algorithm, and another kind of Monte Carlo simulations based on an alternative representation of the spin system, namely the so-called worm algorithm. We continue with discussing dynamical quantities, such as the thermalization and correlation times.

Principles of MC simulations: Ergodicity & detailed balance condition

The basic idea of most Monte Carlo simulations is to iteratively propose a small random change in a configuration Ci, resulting in the trial configuration Cti + 1 (the index "t" stands for trial). Next, the trial configuration is either accepted, i.e. Ci + 1 = Cti + 1, or rejected, i.e. Ci + 1 = Ci. The resulting set of configurations for [formula] is known as a Markov chain in the phase space of the system. We define PA(t) as the probability to find the system in the configuration A at the time t and W(A  →  B) the transition rate from the state A to the state B. This Markov process can be described by the master equation:

[formula]

with the condition [formula] and [formula] for all A and B. The transition probability W(A  →  B) can be further decomposed into a trial proposition probability T(A  →  B) and an acceptance probability A(A  →  B) so that W(A  →  B) = T(A  →  B)  ·  A(A  →  B). A proposed change in the configuration is usually referred to as a Monte Carlo move. Conventionally, the time scale in Monte Carlo simulations is chosen such that each degree of freedom of the system is proposed to change once per unit time, statistically.

The first constraint on this Markov chain is called ergodicity: starting from any configuration C0 with nonzero Boltzmann weight, any other configuration with nonzero Boltzmann weight should be reachable through a finite number of Monte Carlo moves. This constraint is necessary for a proper sampling of phase space, as otherwise the Markov chain will be unable to access a part of phase space with a nonzero contribution to the partition sum.

Apart from a very small number of peculiar algorithms, a second constraint is known as the condition of detailed balance. For every pair of states A and B, the probability to move from A to B, as well as the probability for the reverse move, are related via:

[formula]

The meaning of this condition can be seen in Eq. ([\ref=meq]): a stationary probability (i.e. dPA / dt = 0) is reached if each individual term in the summation on the right hand side cancels. This prevents the Markov chain to be trapped in a limit cycle [\cite=Newman99]. This is a strong, but not necessary, condition. We mention that generalizations of Monte Carlo process that do not satisfy detailed balance exist. The combination of ergodicity and detailed balance assures a correct algorithm, i.e., given a long enough time, the desired distribution probability is sampled.

The key question in Monte Carlo algorithms is which small changes one should propose, and what acceptance probabilities one should choose. The trial proposition and acceptance probabilities have to be well chosen so that the probability of sampling of a configuration A (after thermalization) is equal to the Boltzmann weight:

[formula]

in which EA is the energy of configuration A. The knowledge of the partition function Z is not necessary because the transition probabilities are constructed with the ratio of probabilities. The detailed balance condition ([\ref=detbal]), using ([\ref=bolweight]), can be rewritten as:

[formula]

Local MC algorithms: Metropolis & Glauber

One often-used approach to realize detailed balance is to propose randomly a small change in state A, resulting in another state B, in such a way that the reverse process (starting in B and then proposing a small change that results in A) is equally likely. More formally, a process in which the condition T(A  →  B)  =  T(B  →  A) holds for all pairs of states {A,B}. For example, taking the example of an Ising model containing N spins, it corresponds to chose randomly one of the spins on the lattice, therefore T(A  →  B)  =  T(B  →  A) = 1 / N. Detailed balance allows for a common scale factor in the acceptance probabilities for the forward and reverse Monte Carlo moves, but being probabilities, they cannot exceed 1. Simulations are then fastest if the bigger of the two acceptance probabilities is equal to 1, i.e. either A(A  →  B) or A(B  →  A) is equal to 1. These conditions (including detailed balance) are realized by the so-called Metropolis algorithm, in which the acceptance probability is given by:

[formula]

Thus, a proposed move that does not raise the total energy is always accepted, but a proposed move which results in higher energy is accepted with a probability that decreases exponentially with the increase of the energy difference. For the sake of illustration, let us describe how a simulation of the Ising model looks like:

Initialize all spins (either random or all up)

Perform N random trial moves (N = LD):

randomly select a site

compute the energy difference ΔE = EB - EA if the trial (here a spin flip) induces a change in energy

generate a random number [formula] uniformly distributed in

[formula]

Perform sampling of some observables

The step 2 corresponds to one unit time step of the Monte Carlo simulation. An alternative to the Metropolis algorithm is the Glauber dynamics [\cite=Glauber63]. The trial probability is the same as Metropolis i.e. T(A  →  B)  =  T(B  →  A) = 1 / N. However the acceptance probability is now:

[formula]

which also satisfies the detailed balance condition Eq.([\ref=detbalbol1]).

Cluster algorithms: the example of the Wolff algorithm

Many models encounter phase transitions at some critical temperature. The paradigmatic example for the second order phase transitions is the Ising model defined in Eq. ([\ref=HIsing]). In the vicinity of the critical temperature, the spins display critical fluctuations. As shown in Figure [\ref=Ising] (middle), large aligned spin domains appear. This phenomenon is associated with (i) the divergence of the correlation length ξ of the connected spin-spin correlation function C(|i - j|) = 〈Si  ·  Sj〉  -  〈Si〉2 (ii) the divergence of the correlation time of the autocorrelation function C(|t - t'|) = 〈Si(t)  ·  Si(t')〉  -  〈Si(t)〉2. Moreover, the correlation time increases with the size of the system like τ  ~  Lzc where zc is the critical dynamical exponent. For the 2D Ising model simulated with the Metropolis algorithm, zc = 2.1665(12) [\cite=Nightingale96]. This phenomenon of critical slowing down reflects the difficulty to change the magnetization of a correlated spin cluster. Take again the example of a 2D spin system where one spin has four nearest neighbors. If this spin is surrounded by aligned spins, its contribution to the energy is EA =  - 4J and after the reversal of this spin, this becomes EB = 4J. Right at [formula], the acceptance probability is low for the Metropolis algorithm: A(A  →  B) = e- 8βcJ = 0.0294.... Thus, most of the flipping attempts are rejected. Making matters worse, even if such a spin with aligned neighbours is flipped, the next time it is selected, it will surely flip back. Only spin flips at the edge of a cluster have a significant effect over a longer time; but their fraction becomes vanishingly small when the critical temperature is approached and the cluster size diverges.

One remedy is to develop a non-local algorithm that flips a whole cluster of spins at once. Such an algorithm has been designed for the Ising model by Wolff [\cite=Wolff89], following the idea of Swendsen and Wang [\cite=Swendsen87] for more general spin systems. A sketch of this procedure is shown in Figure [\ref=Wolff].

The procedure consists of first choosing a random initial site (seed site). Then, we add each neighboring spin, provided it is aligned, with the probability Padd. If it is not aligned, it cannot belong to the cluster. This step is iteratively repeated with each neighbor added to the cluster. When no neighbor can be added to the cluster anymore, all the spins in the cluster flip at once. The probability to form a certain cluster of spins in state A before the Wolff move is the same as that in state B after the Wolff move, except for the aligned spins that have not been added to the cluster at the boundaries. The probability to not add an aligned spin is 1 - Padd. If m and n stand for non-added aligned spins to the cluster for A and B, T(A  →  B) / T(B  →  A) = (1 - Padd)m - n and the detailed balance condition ([\ref=detbalbol1]) can be rewritten as:

[formula]

Noticing that EA - EB = 2J(n - m), it follows that:

[formula]

Therefore, choosing Padd = 1 - e2βJ, the acceptance probabilities simplifies: A(A  →  B) = A(B  →  A) = 1. For this reason the spins can be automatically flipped when the cluster is formed. In the vicinity of the critical point, the Wolff algorithm significantly reduces the autocorrelation time and the critical dynamical exponent compared to a local algorithm (such as Metropolis or Glauber). We notice that the time W measured in units of Wolff iterations involves a subset of spins corresponding to the averaged size 〈p〉 of a cluster. On the other hand a time τM measured in units of Metropolis iterations involves all spins of the network i.e. N = LD spins. To compare the efficiency of both algorithms fairly, it is therefore necessary to define a rescaled Wolff autocorrelation time τW  =  W〈p〉 / LD. Moreover, it is possible to show that χ  =  β〈p〉 [\cite=Newman99]. Noticing that W  ~  LWc, it follows (remembering ξ  ~  L) τW  ~  ξzWc  ~  LWc  +  γ  /  ν - D leading to the definition of the dynamical critical exponent zWc  =  Wc  +  γ  /  ν - D. In 2D for example, remarkably, the dynamical exponent is [formula] for Wolff (see e.g. [\cite=Gunduc05] [\cite=Du06] and references therein) whereas zMc = 2.1665(12) [\cite=Nightingale96] for Metropolis.

Continuous-time or rejection free algorithm

As we have seen in the previous subsection, with a local algorithm (like e.g. Metropolis) a spin flip of the Ising model at criticality has a high probability to be rejected, and this holds even more in the ferromagnetic phase. A significant amount of the computational time will therefore be spent without making the system evolve. An alternative way has been proposed by Gillespie [\cite=Gillespie76] in the context of chemical reactions and afterwards applied by Bortz, Kalos and Lebowitz in the context of spin systems [\cite=bkl].

Briefly, this algorithm lists all possible Monte Carlo moves that can be performed in the system in its current configuration. One of these moves is chosen randomly according to its probability, and the system is forced to move into this state. The time step of evolution during such a move can be estimated rigourously. This time will change from each configuration and cannot be set to unity as in the Metropolis algorithm: it takes a continuous value. this is why this algorithm is sometimes called continuous time algorithm. On the one hand, this algorithm has to maintain a list of all possible moves, which requires a relatively heavy administrative task, on the other hand, the new configuration is always accepted and this saves a lot of time when the probability of rejection would otherwise be high. It is also sometimes called the rejection free algorithm. The efficiency of this algorithm will be maximized for T  ≤  Tc. In detail, one iteration of the continuous time algorithm looks like:

List all possible moves from the current configuration. Each of these n moves has an associated probability Pn.

Calculate the integrated probability that a move occurs [formula].

Generate a random number [formula] uniformly distributed in

[formula]

Implementation of this algorithm becomes easier if the probabilities Pn can only take a small number of values. In that case, lists can be made of all moves with the same probability Pn. The selection process is then first to select one of the lists, with the appropriate probability, after which randomly one move is selected from that list. This is the case e.g. in Ising simulations on a square (2D) or cubic (3D) lattice, when the probability Pn is limited to the values 1, e- 4βJ, e- 8βJ, or e- 12βJ (the latter occurring only in 3D).

The worm algorithm

We present here another example of a local algorithm, the so-called worm algorithm introduced by Prokof'ev, Svistunov and Tupitsyn [\cite=Pro&Svi&Tup] [\cite=Pro&Svi]. The difference with the algorithms presented above is an alternative representation of the system, in terms of graphs instead of spins. The Markov chain is therefore performed along graph configurations rather than spin configurations, but always with Metropolis acceptance rates. The principle is based on the high temperature expansion of the partition function. Suppose that we want to sample the magnetic susceptibility of the Ising model. We can access it via the correlation function using the (discrete) fluctuation-dissipation theorem:

[formula]

where G(i - j) = 〈Si  ·  Sj〉  -  〈Si〉2 is the connected correlation function between sites i and j. In the high temperature phase, the average value of the spin cancels and G(i - j) = 〈SiSj〉. The first step is to write the correlation function G(i - j) of the Ising model in the following form:

[formula]

The configurations that contribute to the sum in ([\ref=Dev2]) contain an even number of spins in the product at any given site. Other products involving an odd number of spins in the product contribute zero. Each term can be associated with a path determined by the sites involved in it. A contribution to the sum is made of a (open) path joining sites i and j and closed loops. The sum over the configurations can be replaced by a sum over such graphs. Figure [\ref=Worm-Bis] sketches such a contribution for a given couple of source sites i and j. The importance sampling is no longer made over spin configurations but over graphs that are generated as follows. One of the two sources, say i, is mobile. At every steps, it moves randomly to a neighboring site n. Any nearest-neighbor site can be chosen with the trial probability T(A  →  B) = 1 / 2D, where D is the dimension of the (hypercubic) lattice. If no link is present between the two sites, then a link is created with the acceptance probability:

[formula]

If a link is already present, it is erased with the acceptance probability:

[formula]

Since 0  ≤   tanh x < 1 for all values x > 0, the probability ([\ref=taux2]) is equal to unity and the link is always erased. These probabilities are obtained considering the Metropolis acceptance rate Eq.([\ref=metro]) and the expression of the correlation function ([\ref=Dev2]). The procedure is illustrated in Figure [\ref=Worm-Bis].

The open paths in the two graphs are resp. made of 5 and 6 lattice spacings (we neglect the loop that does not contribute in this example). According to ([\ref=Dev2]), the graphs on the left and on the right have equilibrium probabilities [formula] and [formula], respectively. The transition probability ([\ref=metro]) is thus written W(A  →  B) = 1 / 2D  ×  Min(1, tanh βJ) and W(B  →  A) = 1 / 2D  ×  Min(1,1 /  tanh βJ), in agreement with ([\ref=taux1]) and ([\ref=taux2]).

If the two sources meet, they can move together on another random site with a freely chosen transition probability. When the two sources move together, they leave a closed loop behind that justifies the simultaneous presence of open path and closed loop in Figure [\ref=Worm-Bis]. These loops may disappear if the head of the worm meets them. Compared to the Swendsen-Wang algorithm, the worm algorithm has a dynamical exponent slightly higher in 2D but significantly lower in 3D [\cite=Deng07]. The efficiency of this algorithm can be improved with the use of a continuous time implementation [\cite=berche08]. The formalism of the worm algorithm is suitable for high temperature. In the critical region, the number of graphs that contribute to the correlation function increases exponentially. In order to check the convergence of the algorithm, we can compare it with the Wolff algorithm for the 5D Ising model with different lattice sizes in Figure [\ref=test]. The two algorithms give results in good agreement, except in the critical region where the converge of the worm algorithm is slower as the lattice size L increases.

Dynamical aspects: thermalization & correlation time

In order to perform a sampling of thermodynamical quantities at a given temperature, one has to first thermalize the system. Usually, it is possible to set up the system either at infinite temperature (all spins random) or in the ground state (all spins up or down). Let us start from an initial random configuration. If the thermalization takes place above the critical temperature, then the relaxation is exponential. As we come closer to the critical point, the equilibrium correlation length becomes larger and the relaxation becomes much slower and eventually algebraic right at Tc. An example of such process for the 2D Ising model is given in Fig. [\ref=quench]. Initially (t = 0), the system is prepared at infinite temperature, all the spins are random. Then the Glauber dynamics is applied at the critical temperature. We see the nucleation and the evolution of correlated spin domains in time (t = 0, 10, 100, 1000 from left to right). It is possible to show that in such a quench, the correlation length grows with time like [\cite=Bra94]:

[formula]

where zc is the critical dynamical exponent (zc = 2.1665(12) [\cite=Nightingale96] for the 2D Ising model). The time needed to complete thermalization at criticality is therefore τth  ~  Lzc. In case of a subcritical quench, the system has to choose between two ferromagnetic states of opposite magnetization. Again, the relaxation is slow because there is nucleation and growth of domain of opposite magnetization. We define the typical size of a domain at a time t by Ld(t). The thermalization process involves the growth (coarsening) of these domains, until eventually one domain spans the whole system. Only then, equilibrium is reached (in the low temperature phase, the expectation of the absolute value of the magnetization is nonzero). The motion of the domain walls is mostly diffusive Ld(t)  ~  t1 / z with a dynamical exponent z = 2 [\cite=Bra94]. The walls have to cover a distance ~  L, so that the thermalization time scales as τth  ~  L2. This time diverges again with system size. Starting from an ordered state does not help for the critical quench (but it does help to start in the ground state to thermalize the system at T < Tc).

Once the system is thermalized, one has to be aware of another dynamical effect: the correlation time. This is the time needed to perform sampling between statistically uncorrelated configurations. In the high temperature phase, the correlation time is equal to the thermalization time, up to some factor close to unity. This is not surprising, as proper thermalization requires the configuration to become uncorrelated from the initial state. Practically, in all Monte Carlo simulations, one has to estimate τ at the temperature of sampling to treat properly the error bars.

In the low temperature phase, after thermalization, the magnetization is either positive or negative, and stays like that over prolonged periods of time. So-called magnetization reversals do occur now and then, but the characteristic time between those increases exponentially with system size. Because of the strict symmetry between the parts of phase space with positive and negative magnetization, in practice one is not so much interested in the time of magnetization reversals, but rather in the correlation time τ within the up- or down-phase; and this time is some temperature-dependent constant, irrespective of the system size provided it is significantly larger than the correlation length.

Let us consider now the two-time spin-spin correlation functions in the framework of dynamical scaling [\cite=hohenberg_theory_1977]. We will use for this purpose a continuous space, so that the spin Si on the site i is now denoted by [formula] where [formula] is the position vector. Upon a dilatation with a scale factor b, the equilibrium correlation [formula] is assumed to satisfy the homogeneity relation:

[formula]

where xσ is the scaling dimension of magnetization density with 2xσ  =  η for two-dimensional systems and zc is again the critical dynamical exponent. The motivation for the last two arguments of the scaling function in equation ([\ref=eq1c]) comes from the behavior of the correlation length either with time, ξ  ~  t1 / zc, or with temperature, ξ  ~  |T - Tc|- 1 / ν. Setting b = t1 / zc in equation ([\ref=eq1c]), we obtain:

[formula]

The algebraic prefactor corresponds to the critical behavior while the scaling function includes all corrections to it. The characteristic time:

[formula]

appears as the relaxation time of the system. Here we are interested only in autocorrelation functions for which r = 0. Moreover, we expect an exponential decay of the scaling function C(t / τ) in the paramagnetic phase. Therefore, the autocorrelation function can generally be written at equilibrium as:

[formula]

The spin-spin autocorrelation function C(t,T) versus time is plotted in Fig.[\ref=fig:mcor] (left) for the 2D Ising model of size [formula]. The different curves correspond to different inverse temperatures β = 0.35 to 0.39 (the critical inverse temperature is [formula]). We observe an increase of the autocorrelation time as the temperature comes closer to Tc. The autocorrelation time can be obtained from a fit of the curve in the main graph, assuming Eq.([\ref=eq2]). The result is plotted versus |T - Tc| in the inset. The numerics tend to the behavior of Eq.([\ref=ScalTau]) as T goes to Tc.

Some other aspects of critical dynamics are interesting to study, for instance, the time evolution of the equilibrium mean-square displacement of the magnetization. It is defined as:

[formula]

At small time differences (t  <  1), the dynamics consists of sparsely distributed proposed spin flips, each of which has a nonzero acceptance probability. Since these spin flips are uncorrelated and their number scales as LDt, in the short-time regime ([formula]), h(t) behaves diffusively:

[formula]

The magnetization at long time t > τ  ~  Lzc is no longer correlated i.e. [formula]. Moreover, the expectation value of the squared magnetization is directly related to the magnetic susceptibility like [formula] where N = LD (for T  ≥  Tc, [formula]). It diverges at the critical temperature with system size as ~  Lγ  /  ν, implying:

[formula]

Therefore h(t) has to grow from [formula] to h(t  ~  Lzc)  ~  LD + γ  /  ν. Assuming a power law behavior, it follows that h(t)  ~  tγ / (νzc). Therefore, in this regime, we can assume the following form for h(t):

[formula]

where F is a scaling function with the limit F(x) = constant when [formula] and F(x)  ~  xγ / (νzc) at intermediate times. We measured the function h(t) as defined in Eq.([\ref=eq:mcor]) in simulations of the two-dimensional Ising model at the critical temperature for various systems sizes. The scaling function F is plotted in Fig. [\ref=fig:mcor] (right), using the exponents γ = 1.75, ν = 1 and [formula]. With increasing system size, the data become increasingly consistent with a simple power law behavior (for intermediate times between the early-time behavior (Eq. ([\ref=eq:early]) and the time of saturation ~  Lzc). This power law behavior corresponds to an instance of anomalous diffusion i.e. a mean-square deviation growing as a power law with an exponent [formula] compatible with:

[formula]

Assuming Eq.([\ref=AD]), the magnetization autocorrelation function for intermediate times (i.e. between times of order unity and the correlation time, thus spanning many decades) is compatible with the first terms of the Taylor expansion of a stretched exponential:

[formula]

This conjecture compares well with the numercis for the correlation function in Figure [\ref=fig:mcor] (right, in the inset). This shows that the dynamical critical exponent zc appears at relatively small times 1  ≪  t  ≪  Lzc.

Conclusion

In these lecture notes, we provide an introduction to Monte Carlo simulations that are a way to produce a set of representative configurations of a statistical system. We start with the basic principles: ergodicity and detailed balance. In the next parts, we present several Monte Carlo algorithms. To illustrate their functioning, we use the example of the Ising model. This model is defined by scalar spins on a lattice that interact via nearest-neighbor interactions. This is the paradigmatic system for second order phase transitions: a critical temperature shares a disorderered phase at high temperature and an ordered phase at low temperature. These different regimes induce different strategies for the Monte Carlo simulations. In the disordered phase, local algorithms such as Metropolis or Glauber are efficient. In the critical region, the appearance of long range correlations have set a computational challenge. It has been solved by the use of cluster algorithms such as the Wolff algorithm that flips a whole cluster of correlated spins. Below the critical temperature, when the probability of spin flip is low, it is a gain of computational time to program the continuous time algorithm. It forces the system into a new configurations, with a jump in time according to the probability of transition. Finally, we describe an interesting algorithm based on an alternative representation of the model in terms of graphs instead of spins. We end with important considerations on the dynamics: thermalization and correlation time.

Acknowledgements

We thank Christophe Chatelain for his careful reading of the manuscript and the various collaborations that have largely inspired these notes. We also thank Raoul Schram for stimulating discussions and the reading of the manuscript. J-CW is supported by the Laboratory of Excellence Initiative (Labex) NUMEV, OD by the Scientific Council of the University of Montpellier 2. This work is part of the D-ITP consortium, a program of the Netherlands Organisation for Scientific Research (NWO) that is funded by the Dutch Ministry of Education, Culture and Science (OCW).