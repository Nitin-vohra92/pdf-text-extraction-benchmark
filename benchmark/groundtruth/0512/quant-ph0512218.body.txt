Quantum communication cost of preparing multipartite entanglement

Introduction

In the past, (multipartite) entanglement has been mainly considered as a puzzling artifact of quantum mechanics. More recently, however, the focus on entanglement has shifted, as it was realized that entanglement also constitutes a valuable resource for quantum information processing. Possible applications of multipartite entanglement include certain security tasks in distributed communication scenarios [\cite=Ssh] [\cite=Dqc], the improvement of frequency standards [\cite=GHZ], as well as measurement based quantum computation schemes [\cite=BrRa01].

In this context, the problem of generating multipartite entanglement of high fidelity arises. If entangled states are to be distributed among spatially separated parties, as it is e. g. required in distributed communication scenarios, the main obstacle comes from channel noise. Possible ways to overcome channel noise and hence to successfully generate high-fidelity multipartite entangled states have been developed. These methods are based on (i) quantum error correction and make use of (concatenated) quantum error correction codes [\cite=Kn99], or (ii) entanglement purification [\cite=BBP+96] [\cite=DAJ+96] [\cite=DAB03] [\cite=ADB05]. While (i) is applicable to directly distribute arbitrary states, (ii) concentrates on the generation of specific, maximally entangled pure states. The generation of maximally entangled pairs of particles allows in turn to distribute arbitrary states by means of teleportation. In both cases, a substantial overhead is required to guarantee successful, high fidelity generation of the desired states. In (i) this overhead arises from redundant encoding, enabling one to perform error correction, while for (ii) several identical copies need to be prepared and locally processed to generate high fidelity entangled states. The quantification of this overhead, or the quantum communication cost, which we shall define more precisely, is the main concern of this article.

To be specific, we will concentrate on schemes based on entanglement purification. These schemes are specially suited to generate entangled states of a specific form, and are hence expected to perform better than general purpose schemes such as (i). In fact, a remarkable robustness of entanglement purification protocols against noise in local operations -which we consider in addition to channel noise- has been found [\cite=DAB03] [\cite=ADB05]. That is, errors of the order of several percent in local control operations can be tolerated, still allowing for the generation of high fidelity entangled states, even in the presence of very noisy quantum channels and with only a moderate overhead. For perfect local operations, the required overhead in resources is solely determined by the noisy quantum channels. In this case, the channel capacity [\cite=BKN00] [\cite=DCH04] provides a suitable measure for this overhead. In a bipartite communication scenario, the channel capacity gives the optimal rate of quantum communication, i. e. the amount of quantum information transmitted per actual channel usage. While one might think that the abstract notion of channel capacity may also be employed to our problem -the generation of certain high fidelity entangled pure states-, one actually faces a number of difficulties. First, channel capacities are asymptotic quantities which are very complicated to calculate; second, the definition of channel capacity is not suitable to account for imperfect local operations (e. g. noise in local coding and decoding procedures); and third, we are actually considering a restricted problem, namely the generation of specific multipartite entangled states, rather than the successful transmission of arbitrary quantum information.

We thus introduce a quantity closely related to quantum channel capacity, namely the quantum communication cost CF,G. CF,G denotes a family of quantities which specify the number of uses of the noisy quantum channel required to prepare a specific (multipartite) entangled state |G〉 with fidelity   ≥  F. In this paper, we will focus on target states |G〉 which are so-called two-colorable graph states. These states include, for instance, GHZ states and cluster states -a universal resource for measurement based quantum computation [\cite=BrRa01]- and they are locally equivalent to codewords of Calderbank-Shor-Steane error correcting codes [\cite=Steane96] [\cite=CaSh98]. We establish upper bounds on CF,G by optimizing over a large class of different strategies that generate these multipartite entangled states. These strategies include, as extremal cases, (i) the generation and purification of pairwise entanglement, from which, by suitable connection processes (or, alternatively, teleportation) the desired multipartite states are generated; (ii) the generation and direct multipartite purification of the desired target states. Intermediate strategies, e. g. the purification of smaller states to high fidelity and their subsequent connection to the desired larger state, will also be investigated. Depending on the actual noise parameters for channels and local control operations, and on the desired target fidelity F, the optimal strategy varies. For high target fidelities, multipartite strategies turn out to be favorable.

This article is organized as follows: In Sec. [\ref=sec:basic_concepts], we present the concepts we will use: We start with a review of the graph state formalism in order to introduce notation and the two types of states we wish to distribute, namely GHZ states and 1D cluster states. We shall also introduce a technique to connect two smaller graph states to obtain a larger one. Then, we give details for our noise models and review the employed purification protocols. Readers familiar with these concepts may skip this section. Sec. [\ref=sec:strategies] explains the different strategies for employing the protocols that we wish to compare. The actual comparison is done using extensive numerical Monte Carlo simulations and results are presented in Sec. [\ref=sec:numerical_simulation]. In order to corroborate these results we have done analytical studies for certain restricted noise models (Sec. [\ref=sec:analytical_model]). We conclude with a summary (Sec. [\ref=sec:conclusion]).

Basic concepts

The graph-states formalism

A graph G  =  (V,E) is a collection [formula] of N = |V| vertices connected by edges E  ⊂  [V]2. The description of the edges is given by the adjacency matrix ΓG associated with the graph

[formula]

The neighborhood Na  ⊂  V of vertex a is defined as the set of vertices connected with it by an edge, Na  =  {b:{a,b}∈E}.

With each graph G we associate a pure quantum state. If the graph's vertex set can be separated into two sets A and B such that no edges exist between vertices of the same set, we call it a two-colorable graph (Footnote [\cite=footnote1]). The vertices are qubits and the edges represent interactions.

There are three equivalent descriptions of graph states which are reviewed in the following sections (For a detailed treatment see [\cite=M.Hein307130]):

Graph states in the stabilizer formalism

Associated with a graph G is a set of N operators

[formula]

They form a complete set of commuting observables for the system of qubits associated with the graph and therefore possess a set of common eigenstates which form a basis of the Hilbert space. These eigenstates are called graph states and are here written as [formula] where the ath component of vector [formula] is equal to 0 if [formula] and 1 if [formula]. We abbreviate [formula]. We also sometimes suppress the letter "G" and write just [formula], if the context makes clear which graph G is meant.

Graph states in the interaction picture

A graph state with [formula] can be written in the computational basis in the following manner:

[formula]

where ΛZ is the controlled phase gate,

[formula]

which corresponds to an Ising-type interaction, ΛZ(ab)  =  e- iπH(ab), with interaction Hamiltonian H(ab) given by

[formula]

That is, |G〉 is generated from a pure product state by applying interactions between all pairs of particles connected by edges.

We list some useful relations for later reference: The 2N common eigenstates of the operators K(a) can be generated from |G〉 by applying all possible products of [formula]. This can be seen from

[formula]

which means that [formula]. From this relation, together with the fact that σ(a)y  =  iσ(a)xσ(a)z, one can deduce the effect of σ(a)x and σ(a)y (see Ref. [\cite=M.Hein307130] and [\cite=ADB05] for proofs): Splitting the index vector [formula] into μa, [formula] (neighborhood of vertex a), and [formula] (remaining vertices), we write

[formula]

where the over-bar means bit complementation.

Graph states in the valence bond solid (VBS) picture

Another description of graph states was introduced in Ref. [\cite=F._Verstraete_and_J._I._Cirac_0311130]. In this picture, every edge is replaced by a pair in a maximally entangled state, usually (|00〉 + |01〉 + |10〉 - |11〉) / 2. Each qubit a gets replaced by da virtual qubits, where da = |Na| is the degree of vertex a. The physical qubit is recovered by projecting the virtual qubits onto the two-dimensional subspace of the physical one (see Fig. [\ref=fig:VBS_graph_states]) using as projector

[formula]

Cluster states and GHZ states

In this article, we study the purification of graph states using two important representatives from this class as examples. By "cluster states", we mean graph states associated with a regular lattice as graph, in this article always a line as in Fig. [\ref=fig:Cl_GHZ_Graph] (a), and with [formula]. The term GHZ state will in this article be used for a graph state (again with [formula]) associated with a star-shaped graph G* as in Fig. [\ref=fig:Cl_GHZ_Graph] (b). Such a state can be written as

[formula]

and is hence in its entanglement properties equivalent to an "ordinary" GHZ state [formula] (where [formula] and Had is the Hadamard operation [formula]).

Bell pairs and graph-state formalism

In order to keep a certain homogeneity, we will employ a new notation for the states of the Bell basis, usually written as:

[formula]

Applying a Hadamard operation on the second qubit, one obtains a new basis formed by the graph states |G2,00〉, |G2,01〉, |G2,10〉 and |G2,11〉, where G2 denotes the graph composed of two vertices and one edge. Our new notation shows directly the relation between this two bases:

[formula]

Connection of graph-states

In this section, we define a procedure to connect two graph states, |G1〉 with N1 qubits, and |G2〉 with N2 qubits, "fusing" together their respective vertices a1 and a2, yielding a state |G〉 with N1 + N2 - 1 qubits. This process is depicted in Fig. [\ref=fig:connection]. To realize this action, one applies a projective measurement on a1 and a2, given by [formula] and [formula] (with outcomes 0 and 1). P2 is defined like in the VBS picture. By similarity with this picture, if the result of the measurement is 0, the final state is the graph state resulting from the connection of G1 and G2. If one obtains 1, a correction has to be done. As shown below, it is sufficient to apply [formula] to the resulting state. Recalling that K(a)G|G〉 = |G〉 with [formula], one sees that any graph state can be decomposed as [formula]. Applying [formula] to the state resulting from [formula] one obtains

Fig. [\ref=fig:connection] shows how to use this technique to assemble cluster and GHZ states from |G2〉 states.

Noise model

Channel noise

In any realistic setting, channels will be noisy. We study the influence of channel noise by considering restricted noise models, where the Kraus representation of the superoperators is diagonal in the Pauli basis. This is a common and usually sufficiently general model [\cite=DHCB05] (In particular, any noisy channel can be brought to such a form by means of (probabilistic) local operations). This allows for an efficient and convenient simulation by Monte Carlo techniques (see Sec. [\ref=sec:technique]). We consider the following channels:

[formula]

[formula]

[formula]

In case of depolarizing channel, we define

[formula]

which allow us to rewrite Eq. ([\ref=eq:channel3]) as

[formula]

(1 - q) will be called the alteration probability and p the reliability.

Local noise

As part of the purification protocols, local one- and two-qubit unitary operations are employed which may be noisy. An imperfect operation is modeled by preceding the perfect operation U(ab) with the application of one of the noise superoperators E from Eqs. ([\ref=eq:channel1]-[\ref=eq:channel3]), i. e. the state is transformed as

[formula]

We assume that the protocols are executed with the least possible number of operations to keep accumulated noise low. Hence, if a two-qubit gate U(ab)12 is preceded by one-qubit gates U(a)1 and U(b)2 we apply one combined unitary U(ab) = U(a)1U(b)2U(ab)12 which is subjected to noise only once.

Commutation between connection and noise

We now state an observation that will later (in Sec. [\ref=sec:toy_model]) be of use.

For any graph states |G1〉 and |G2〉 which are connected by the procedure described in Sec. [\ref=sec:General_connection_procedure], one can show that the noise processes commute with the connection procedure, if they are expressed by a superoperator by only σz Pauli operators. This comes from the fact that the neighborhood of the connected vertices a1 and a2 changes with the connection and hence, σx and σy Pauli operators will affect different vertices (see Eqs. ([\ref=eq:action_of_sigma_z]), ([\ref=eq:action_of_sigma_x]) and ([\ref=eq:action_of_sigma_y])).

The commutation rules between projector P2 (see Eq. ([\ref=eq:projector_Pd_of_VBS_picture])) and σz can be deduced from the following expression of the connected graph state:

[formula]

Recalling that σz|0〉 = |0〉, σz|1〉 =  - |1〉 one can show that:

[formula]

Local noise equivalent

To judge how close state ρ it to the desired state |ψ〉, one often usually employs the fidelity F: = 〈ψ|ρ|ψ〉. However, is may be advantageous to regauge the fidelity by introducing the following derived measure: We define the local noise equivalent (LNE) as the level of local depolarizing noise (in terms of the alteration probability (1 - q) of Eq. ([\ref=eq:channel3])) that one has to apply to each qubit of the perfect state |ψ〉 to deteriorate it to the same fidelity F as ρ has. The advantage of this measure is twofold: (i) It is more natural for uses of states in quantum error correction schemes, as it can be compared directly to the fault-tolerance threshold in case of uncorrelated-noise models. (ii) It does not fall off exponentially with the size of a state for constant noise levels, as the fidelity does. On the other hand, it often cannot be calculated analytically in a straight-forward way. We hence used a numerical Monte Carlo simulation of the state deterioration (which is why the LNE scale in the figures has error bars).

Purification protocols

The purpose of entanglement purification is the following: One is given an ensemble of multi-party states, which all are distributed over two (or more) sites and exhibit entanglement between the sites. These states are only an approximation to the desired state |Ψ〉〈Ψ| with an insufficient fidelity, which one wishes to improve. As the sites are spatially separated, one cannot apply joint operation on the distributed parts of a state. Instead, one compares (in case of the so-called recurrence protocols, which are considered here solely) pairs of entangled states, makes joint operations on them, and then measures one of the state in order to gain information about the other. Only for specific measurement outcomes, the other state is kept. After iterating this procedure, one is left with an ensemble of smaller number of particles but higher fidelity.

Bipartite purification

Several protocols have been proposed to purify bipartite entangled states [\cite=BBP+96] [\cite=BDSW96] [\cite=DAJ+96]. To test the different strategies, we used the most efficient which can be used to purify an ensemble of |Φ+〉 states, namely the one described in Ref. [\cite=DAJ+96]. We present here a modified version of this bipartite entanglement purification protocol (BEPP) which allows for the purification of the connected graph-state pair. As we are concerned only with this graph in this section, we simply write |μν〉 for the different basis states |G2,μν〉. Recall that [formula] (see Eq. ([\ref=eq:definition_of_Phi+])).

Alice and Bob want to share entangled pairs with high fidelity. At the beginning they are given an ensemble of noisy |0,0〉 states, each of them owning one part of the pairs. We consider a state diagonal in the graph-state basis,

[formula]

We remark that such a standard form can always be achieved by means of depolarization, i.e. applying certain (random) local unitary operations. Each step of the protocol consists of the following operations: (i) Alice and Bob perform unitary operations on their particles, with Alice's and Bob's unitaries given by

[formula]

(ii) Alice performs a CNOT operation from the first state to the second and Bob from the second state to the first; (iii) Alice and Bob measure the second state in different bases. To see the effect of this procedure, we calculate the fidelity and yield obtained after one step with two initial states given by ([\ref=eq:initial_state_for_BPP]).

In (i), Alice and Bob apply SA and SB, respectively, in order to swap |11〉 and |10〉. Then, in step (ii), they apply the bilateral CNOT. One can check that the effect of this operation on the graph state basis is given by the following map:

[formula]

(Here, [formula] indicates bitwise and, i. e. addition modulo 2.) Last (iii), Alice and Bob measure the qubits of the target state. This is done in the eigenbasis {|0〉x,|1〉x} of σx for Alice and in the computational basis {|0〉z,|1〉z}, for Bob. By this they obtain the eigenvalue of the correlation operator K2 defined in Eq. ([\ref=eq:KGa]) and determine the value of the second bit describing the state. If it is 0, they keep the first state. They discard it otherwise.

After the measurement, they keep the control state with success probability k = (x00 + x11)2 + (x01 + x10)2 and the new coefficients are given by:

[formula]

Hence, the fidelity is F = x00' = (x200 + x211) / k. The yield of the step, defined as the number of remaining states divided by the number of states before the step, is given by k / 2 as half of the states (the targets) are measured and discarded.

The unitary operations performed at the beginning of the protocol (step (i)) are required for its convergence. It guarantees that fidelity 1 is a fix point of the protocol which is approached when iterating the procedure. The CNOT operation is a means of transferring information from the first qubit to the second. The measurement allows to distinguish between {|0,0〉,|1,0〉} and {|0,1〉,|1,1〉} and hence, determines the second bit of the index vector.

Multipartite purification

Multipartite purification protocols (MEPP) have been introduced in Ref. [\cite=MPP+98] for GHZ states, were further developed in Ref. [\cite=MaSm00] and extended to all two-colorable graph states in Refs. [\cite=DAB03] [\cite=ADB05]. Recall that a two-colorable graph-state is a graph state in which the vertices can be separated into two sets VA and VB such that no edges exist between vertices of the same set. Using the procedure described in Ref. [\cite=ADB05], one can depolarize any mixed state ρ to the form

[formula]

without changing the diagonal coefficients (where [formula], [formula] are binary vectors corresponding to sets VA, VB respectively). Hence we will restrict our attention to input states of this form. The protocol is composed of two subprotocols P1 and P2 which we will describe here:

Subprotocol P1:

The states composing the ensemble of two-colorable graph-states are processed pair-wise. All parties belonging to set VA perform a CNOT operation from the second state of a pair of states to the first one while the parties belonging to set VB perform a CNOT from the first one to the second one. This leads to the transformation

[formula]

As in the bipartite protocol, the last step consists of measuring the second state of the pair. The parties belonging to set VA measure their qubit a in the eigenbasis {|0〉x,|1〉x} of σx, obtaining results ξa∈{0,1}, while the ones belonging to set VB make their measurement in the computational basis, obtaining results ζb∈{0,1}. From this, we can calculate the part of the index vector of the measured state (second state of the r. h. s. of Eq. ([\ref=eq:P1_protocol's_map])) corresponding to set VA:

[formula]

If this is [formula], it is most likely that [formula], and hence, the first state is kept (and otherwise discarded). As consequence, in the expansion ([\ref=rhodecomp]) of the ensemble density matrix, elements of the form [formula] are increased. One finds that the new matrix elements are given by

[formula]

where κ is a normalization constant such that [formula].

Subprotocol P2:

As explained above, subprotocol P1 is employed to purify with respect to the eigenvalues [formula] associated with set VA. The second subprotocol leads to the purification with respect to the eigenvalues of set VB. It is obtained from P1 by exchanging the roles of set VA and VB. The protocol's action is described by the following map:

[formula]

One measures the second state. The measurements on set VB are done in the eigenbasis {|0〉x,|1〉x} of σx while they are done in the computational basis in set VA. This leads to the determination of part [formula] of the index vector. As in subprotocol P1, one keeps the state if [formula]. The new coefficient are given by

[formula]

where κ is a normalization constant such that [formula], as before.

Strategies

Quantum communication cost CF,G

We now define our figure of merit, the quantum communication cost. We consider N spatially separated parties Ak, [formula] which are pairwise connected by noisy quantum channels Ekl, described by completely positive maps acting on density operators for qubits. We will quantify the quantum communication through these quantum channels using the quantum communication cost Ckl, i.e. the number of usages of the quantum channel Ekl, while classical communication between pairs of parties will be considered to be for free. Sending a single qubit through the quantum channel Ekl costs 1 unit, i.e. Ckl = 1, while the transmission of an arbitrary state of M qubits costs Ckl = M. We will be interested in the total quantum communication cost C, where

[formula]

We consider the generation of multipartite entangled states (graph states, to be specific) |G〉 distributed among the parties Ak. The goal is to generate states [formula], where the fidelity of each ρi, [formula], fulfills Fi  ≥  F. That is, each of the states has a fidelity larger than a threshold value F, which we call the "desired target fidelity". We remark that we demand that the ensemble of output states are in a tensor product form. In principle, weaker requirements such as that only the reduced density operators of Λ have fidelity larger than F are conceivable, however one faces certain difficulties in this case. For instance, it is not clear whether each of the copies of the state can be independently used for further quantum information processing tasks due to possible classical correlations among the copies. Hence, we deliberately demand the tensor product structure. We will be interested in the total quantum communication cost C required to generate [formula] with Fi  ≥  F. In particular, we consider the quantum communication cost per copy,

[formula]

where one optimizes over all possible strategies to generate Λ. Due to this optimization, the quantity CF,G is very difficult to calculate. Hence we restrict ourselves to establish upper bounds on CF,G by considering explicit strategies to generate high fidelity multipartite entangled states.

Multiple variations of this problem are conceivable. For simplicity we will assume that all parties are pairwise connected by identical quantum channels, E  =  Ekl. Inhomogeneous situations where only some pairs of parties are connected by quantum channels (a restricted communication web), or where the classical communication is limited, or cases where quantum channels between different pairs of parties are different (i.e. different noise parameter) will not be considered here.

We will look mainly at two scenarios depicted in Fig. [\ref=fig:two_strategies], which we describe now.

Bipartite purification strategy

In the BEPP strategy, the parties Ak, [formula] wish to create a shared ensemble of N-qubit graph states of high fidelity using a BEPP, where party Ak holds the qubit corresponding to vertex ak. For each edge of the graph, one of the two parties connected by this edge prepares a connected graph-state pair, |G2,00〉 (equivalent to a Bell pair up to a local unitary) and sends one qubit of the pair to the other party through a noisy channel. (Alternatively, one could use a teleportation-based strategy: Alice distributes Bell pairs to the N - 1 other parties. The pairs are purified and then used to distribute the multipartite state that Alice has prepared locally.) The effect of the channels is given by Eq. ([\ref=eq:channel3]) leading to states of fidelity [formula] and diagonal in the graph-state basis. The parties repeat the operation M times so that at the end M  |E| entangled pairs are distributed between the different partners, where |E| is the number of edges in the graph. The BEPP (reviewed in Section [\ref=sec:bipartite_purification_protocol]) is then applied. This leads to a smaller ensemble of states given by a density matrix of the same form but with higher fidelity. Finally, the connection procedure described in Sec. [\ref=sec:General_connection_procedure] is applied: Each party Ak merges together the |Nak| qubits which will connect vertex ak with its neighbors leading to the desired graph state. We call

[formula]

the yield of the production of final states with fidelity F. To build up the desired multipartite state |G〉, we need one |G2〉 pair for each edge of G. The number of edges for 1D cluster and GHZ states is (as for any tree graph) |E| = N - 1. Hence, the quantum communication cost is related to the yield by

[formula]

The numerator is the number of channel uses (i. e. number of transmitted qubits) required to distribute one state. This dependence on the size of the state properly reflects that for larger states, already the preparation of the raw states is more costly. To allow for easier comparison with the yield, a figure that may feel more familiar to the reader, we have plotted in all graphs the inverse communication cost C- 1F,G = Y(F) / (N - 1) which is proportional to the yield.

Multipartite purification strategy

Alternatively, in the MEPP strategy, a central party, called Alice, creates M N-qubit graph states locally. For each graph state, she keeps one qubit and sends the other N - 1 qubits through the channels to the N - 1 other parties. The resulting states are then purified using direct multipartite entanglement purification, i. e. the MEPP reviewed in Sec. [\ref=sec:multipartite_purification_protocol]. Hence, to distribute one state, we need N - 1 channel uses, the same as in the BEPP case. Thus, Eq. ([\ref=commcostyield]) holds for MEPP, as well.

Mixing of strategies

Assume that the application of, say, m steps of one of the protocols mentioned above reaches a final fidelity F1 with a communication cost of C1, and application of m + 1 steps achieves fidelity F2 > F1 with communicatioin cost C2 > C1 (i. e. Y2 < Y1). For a certain application, a fidelity of F with F1 < F < F2 is required, i. e. m steps are insufficient, but m + 1 steps achieve a higher fidelity than desired at the cost of lower yield. In this case, one can find a compromise between the two strategies by mixing ensembles:

Choosing an α∈[0,1], one prepares M raw states and then uses the first strategy on αM of them in order to gain αMY1 states of fidelity F1, and the second strategy on the remaining (1 - α)M states to obtain (1 - α)MY2 states of fidelity F2. Mixing these states gives an ensemble of fidelity

[formula]

with a a yield Y = αY1 + (1 - α)Y2. This method allows one to obtain intermediate fidelities with a better yield. The communication cost mixes according to

[formula]

Intermediate strategies

As a "compromise" between BEPP and MEPP, we shall also consider the following set of strategies: Assemble small states of N1 qubits, send them through the channels, purify them, and then use the connection scheme described in Sec. [\ref=sec:General_connection_procedure] to connect L of the N1-qubit states to one state with N = LN1 - L + 1 qubits.

Numerical simulations

Technique

In generic cases, an explicit numerical simulation of a quantum systems is intractable due to the exponential growth of the Hilbert space with the number of involved particles or qubits. In our case, however, an efficient simulation is possible for two reasons: (i) All gates that are employed by the protocols are elements of the so-called Clifford group and hence, the Gottesman-Knill theorem applies, which allows for efficient simulations of pure state evolutions. (ii) The considered noise channels have Kraus representations that are diagonal in the Pauli basis.

To explain (i), we start by reviewing the Gottesman-Knill theorem [\cite=Got98] [\cite=NC00]. It says that it is possible to simulate so-called stabilizer circuits efficiently on a classical computer. These are quantum circuits containing only preparation of computational basis states, operations from the Clifford group, and measurements in the computational basis. The N-qubit Clifford group CN is the group of those unitary operations that map Pauli operators onto Pauli operators under conjugation, i. e.

[formula]

It happens to contain all the operations that we need for purifying, and hence, we can simulate the execution of the purification protocols described in Section [\ref=sec:purification_protocols].

Aaronson and Gottesman have given a fast algorithm which can perform such a simulation, and also supplied an implementation in the C programming language [\cite=AaGo04]. We have used this software at the beginning of our studies, but after realizing that its performance is not sufficient for our purposes, developed a new, faster algorithm, which is described elsewhere [\cite=AnBr05].

The state represented in our simulator is always a pure state (Footnote [\cite=footnote4]). However, in entanglement purification, one usually deals with mixed states, represented as density matrices. Nevertheless, due to the fulfillment of condition (ii), we can get around this problem using a Monte Carlo technique, which we describe now.

To represent the ensembles of states we start with a high number Ni of qubits, typically several thousand times the number of qubits in the states to be purified. The qubits are initalized to a tensor product of [formula] states. Note that all these qubits can potentially get entangled, and hence have to be part of the same simulated quantum register. This would be prohibitive without a very efficient algorithms for the stabilizer simulation.

We then simulate all steps that are required to prepare Bell pairs or graph states, to purify them and to measure them. Depending on the measurement results, states are kept or discarded. Several iterations of the protocols are simulated.

The transmission through the perfect channels amount to a simple relabeling: The program remembers the new site, where the qubit resides, as this indicates which qubits can be subject of joint operations.

Simulating the channel noise is done by randomizing over many simulation runs as follows. The three noisy channels that we have considered, Eqs. ([\ref=eq:channel1]-[\ref=eq:channel3]), are simulated using a pseudo-random number generator (RNG). Whenever noise is to be applied onto a qubit, a random number between 0 and 1 is generated, and if it is smaller than (1 - q) (the noise level), σx (σz) is applied for bit-flip (phase-flip) noise. For depolarizing noise, the RNG is used again to obtain an integer between 1 and 4 which determines which of the operators [formula] to apply.

After the preparation of M initial states, m iterations of the protocol and for the BEPP case, connection of the purified pairs, Nf final states remain. The yield is then given by [formula]. This is, however, not a good estimate for the asymptotic yield in the limit of infinite ensembles for the following reason: If the number Ni - 1 of states at the beginning of purification step i is odd, we have to discard one state, because we can only deal with pairs of states. Hence, we better estimate the yield by

[formula]

(with [formula], [formula], and [formula] for even N, and [formula] for odd N.)

The fidelity can be determined by measuring the final states in the graph basis. This is because all the intended operations and the random noise operations map graph states onto graph states, so that all Nf final states are of the form [formula]. The index [formula] can be determined as follows: For each state, the graph state creation operation of Eq. ([\ref=eq:graph_states:_interaction_picture]), [formula] (which is Hermitian) is applied again onto the state. If one then applies Hadamard gates on all qubits and measures in the σz basis, the measurement results spell out the index vector [formula]. As we intended to create [formula] states, we call the number of states for which we measured [formula] the number Ng of "good" states and hence estimate the fidelity as

[formula]

The superscript "tot" indicates that many runs of the simulations are made and that the numbers are the sums of the numbers in the individual runs. The uncertainty term follows from the expectation that, given a true fidelity FT, the number of good states Ftotg output by the Monte Carlo simulations after many runs is distributed according to a binomial distribution with length Ntotf, hit probability FT and hence standard deviation [formula]. Thus, [formula] is the estimate for FT with the given statistical uncertainty at 1σ level.

In the same way, the yield can be assigned an uncertainty, (Footnote [\cite=footnote5])

[formula]

The 1σ uncertainties are indicated by error bars in the plots.

Extremal strategies

We now present the results obtained for the two extremal strategies described in Secs. [\ref=sec:bipartite_purification_strategy] and [\ref=sec:multipartite_purification_strategy] with the following parameters: The distribution of the qubits is done through noisy channels and each step of protocol requires imperfect two-qubit operations. The noise considered is depolarizing noise as defined in Eq. ([\ref=eq:channel3]) with reliability p = 0.9 (10% noise) for the channels and pl = 0.99 (1% noise) for the local operations. We used the Monte-Carlo simulation method described in Sec. [\ref=sec:technique] to reach a precision on the fidelity varying from 1 to 1% depending on the size of the states and the number of iterations.

For the MEPP case, one has to decide, which sequence of the sub-protocols P1 and P2 to use. The alternating sequence, P1-P2-P1-, turns out to be not optimal in terms of yield and fidelity, neither for GHZ nor for cluster states. To find the optimum, one might hence consider to simulate, after each step, both sub-protocols, and then continue with the better one. Somewhat surprisingly, this leads to worse results (see Fig. [\ref=fig:comparison_of_P1P2] [\ref=P2P1_for_3-GHZ_states]). Thus, to find the optimal sequence of m protocol-steps, one would need to try all 2m possibilities. As this is not practical, we decided to stick with the alternating sequence, which turned out, though it is not optimal, to give very descent performance. For GHZ states, there is also a difference between the alternating sequences P1-P2-P1- and P2-P1-P2-, due to the asymmetry of the sets VA (containing only Alice's qubit) and VB (containing the rest). Starting with P1 works better, and this is what we use in all plots discussed in this section.

GHZ states

We start with the results obtained for GHZ states. We made our simulations for states of three to 10 qubits and a maximum number of steps varying from 5 to 7. As an example, Fig. [\ref=Fig:Numerics_for_GHZ_states] [\ref=N=5] shows the quantum communication cost as a function of desired fidelity for 5-qubit GHZ states. The data points are the outputs for 1 to 6 steps of the protocol. This plots allow us to determine, for a given fidelity, the strategy which will give the best yield (lowest communication cost).

After 6 iterations, the increase in fidelity obtained by an additional step is smaller than the chosen precision of 1%. We therefore take this value as estimate of the maximum reachable fidelity. A comparison of the maximal reachable fidelity for both strategies as a function of the number of parties (Fig. [\ref=Fig:gap_for_GHZ_and_cluster]a) shows that the maximal reachable fidelity is higher in the MEPP case for a number of parties strictly smaller than 10. In this case, there is a transition value of target fidelity from which on the MEPP strategy gives a better yield. We will refer to the value pair of fidelity and communication cost, where this transition happens, as the cross-over point. Fig. [\ref=Fig:Numerics_for_GHZ_states] [\ref=2_strategies] presents the yield as function of fidelity for N = 3 and N = 10 as well as the cross-over points for intermediate number of parties. N = 9 is the highest number of qubits for which there is a cross-over point. For higher number of parties, the BEPP strategy is always better. This is because of the fragility against noise of GHZ states for large particle numbers [\cite=DuBr04] [\cite=HDB05]. The communication cost and fidelity of the cross-over points as function of the number of parties are presented in Fig. [\ref=Fig:cros-over_for_GHZ_and_cluster]a.

Cluster states

Next, we did simulations cluster states using the same parameter as for the GHZ states. The results are quite different.

We made our simulations for states of three to fifteen qubits. In this range, as one can see in Fig. [\ref=Fig:Numerics_for_cluster_states] [\ref=2_strategies], there is always a cross-over point. This is in stark contrast with the GHZ case. This main difference in behavior between this two kind of states is due to the much higher robustness of cluster states against noise [\cite=DuBr04] [\cite=HDB05]. Moreover, the range of target fidelity for which the multipartite strategy is the only one available increases with the number of parties as shown in Fig. [\ref=Fig:gap_for_GHZ_and_cluster]b. In Fig. [\ref=Fig:cros-over_for_GHZ_and_cluster]b, we present the fidelity and communication cost of the cross-over point. Both values decrease with the number of parties. This is due to the increasing cost of producing bigger and bigger states and also to the fact that we consider here the global fidelity and not the LNE presented in Sec. [\ref=sec:local_noise_equivalent].

Intermediate strategies

Since switching from BEPP to MEPP can result in such striking differences in yield, one might expect that, especially near the break-even point, certain intermediate strategies, mixing characteristics of BEPP and MEPP, might perform even better. After all, in the BEPP case, one purifies small states (with only 2 qubits) and then connects them, while in the MEPP scenario, the states are first connected to large units, which are then purified. One can also connect pairs to states of intermediate size, purify these, connect them to the desired full size, and perhaps purify again. This can be seen e. g. in Fig. [\ref=fig:intermediate13]. In this figure, we have simulated many different strategies which are described in short by instruction strings which are processed from left to right and tell the software in which order which preparations, transmissions, connections or purifications should be simulated (cf. Table [\ref=tbl:instrstrings]).

It can be seen that for low fidelities and high yields (left side of the plots), the BEPP case is best, as already seen above, and for high fidelities and low yields (right margin of the plots), MEPP catches up. In the middle region, one may indeed increase the performance by first preparing small states of, say, 4, 5 or 7 qubits, purifying them, and then connecting them to the desired 13-qubit state. (Do not get confused by the appearance of "M13-S" at the left margin. This looks like MEPP, but is not, as it contains no purification at all. Also note that there is a subtle difference between using the BEPP protocol (denoted "B2-S-Pb-[formula]") and using the MEPP protocol on the |G2〉 state (denoted "M2-S-P1-[formula]" or "M2-S-P2-[formula]"), with the former performing better.)

Of course, only discrete ways of assembling the desired states from equal smaller states are available. Recall that connecting L states of n qubits will give a state of

[formula]

qubits because (L - 1) qubits have to be measured in the connection process. In the plots, we have taken all possible values of L for the given state size n and calculated data points for the corresponding strategies with up to four purification steps. The blue curve in the plot marks the optimum that can be achieved using theses strategies, and mixing them as described in Section [\ref=mixing].

To demonstrate the efficiency of our procedure, we also considered purification of cluster states of 31 qubits (Fig. [\ref=fig:intermediate31]). In order to allow for easier comparison, Fig. [\ref=fig:intermediate31], as well as Fig. [\ref=fig:intermediate13], show a regauging of the fidelity axis to the so-called local noise equivalent (LNE) described in Sec. [\ref=sec:local_noise_equivalent].

Analytical treatment for a simplified model

For a better understanding of the numerical results, we now develop an analytical treatment for both BEPP and MEPP. To make this task feasible we have to restrict ourselves to a simplified noise model. We only consider GHZ states.

As before, we define two sets VA and VB corresponding to the bi-coloration of the graph. VA is the set containing only one qubit, namely the central vertex which is connected to all the others, and VB contains the rest.

In the toy models presented below, the central party, called Alice wants to share an N-qubit GHZ state with (N - 1) partners. Depending on the strategy, the initial states are either Bell pairs or GHZ states, which are noisy due to the transmission through the channels. First, in Subsection [\ref=model_perfect], we consider local operations to be perfect. We will see that this fails to reproduce features seen in the numerical results. Hence, we extend our model, in Section [\ref=sec:toy_model], such that it incorporates local noise.

Perfect local operations

To start, we assume to local operations to be perfect. Of the channels we considered in Eqs. ([\ref=eq:channel1]-[\ref=eq:channel3]), only bit-flip channels and phase-flip channels allow for a simple analytical treatment. We present the calculation for phase-flip channels. The calculation and the results for bit-flip channels are very similar. We have hence not included them in the paper.

BEPP strategy

Following the BEPP scenario described in Sec. [\ref=sec:bipartite_purification_strategy], Alice sends one qubit of each entangled pair [formula]of her initial ensemble through the channel to party Bk, obtaining

[formula]

She then applies the BEPP. The state of the pairs that are kept after one step is given by (see Eq. [\ref=eq:map_of_the_Oxford_protocol])

[formula]

In this step, the probability of keeping the source state after the measurement of the other state is given by [formula] (probability of having same measurement outcomes). We denote by [formula] the fidelity after m steps. The quantity k(q,m) is called success probability in step m. Note that the ratios of the ensemble sizes after and before the step is given by k(q,m) / 2 as one half of the states are measured and discarded. One obtains the total yield [formula] after m steps by multiplying these ratios for the individual steps. By iterating the protocol over m steps one finds:

[formula]

After the bipartite purification, Alice connects (N - 1) pairs to produce an N-qubit GHZ state. To connect two pairs, she applies a controlled phase gate (Eq. ([\ref=eq:Ising-like_interation])) followed by a σy measurement on one of the two qubits just connected (cf. Fig. [\ref=fig:connection]). This procedure is repeated (N - 1) times between different pairs of parties (A,Bk), [formula], in order to obtain the N-qubit GHZ state.

Note that the qubits that Alice connects have not been sent through channels and are hence unaffected by channel noise. Thus, it does not matter whether we first apply the superoperator for the channel noise and then the one for the local noise due to the connection process, or vice versa. This means that the final state is obtained by applying noise on all qubits of the GHZ state that do not belong to Alice. This leads to a fidelity

[formula]

and (as the channels are used N - 1 times to create one N-qubit GHZ state) a quantum communication cost

[formula]

MEPP strategy

In the MEPP setting, Alice prepares an N-qubit GHZ state locally and distributes it through depolarizing channels to her (N - 1) partners. We then have the state

[formula]

where E(a)z is the phase-flip channel defined in Eq. ([\ref=eq:channel1]). We shall from now on suppress the symbol G* which indicates the N-vertices star graph of Fig. [\ref=fig:Cl_GHZ_Graph].

We shall see that all states that we encounter have the form

[formula]

where r(m)j denotes the coefficient in front of the terms with j entries "1" after the mth step of the purification protocol. These states are diagonal in the graph state basis and symmetric w. r. t. permutations of the qubits in set VB. They are hence characterized by only N coefficients [formula].

We start by carrying out the application of the superoperator in Eq. ([\ref=eq:MEPPinit]). Indeed, one obtains a mixture of the form ([\ref=eq:r-form]) with coefficients

[formula]

As only set VB is affected by the noise, subprotocol P2 is sufficient to purify the state. Following [\cite=ADB05], one sees that after each step of the subprotocol, the state is changed such that each coefficient becomes proportional to the square of its former value, i. e.

[formula]

Inserting Eq. ([\ref=eq:r0]), one gets for the first step (using the binomial theorem)

[formula]

and iterating the formula, one finds

[formula]

The fidelity of the state at step m can now be read off:

[formula]

Note that this is the same expression as we got before for the BEPP: [formula].

To calculate the yield, we need the success probability [formula] that a state is kept. Using a similar argument as we did for Eq. ([\ref=eq:rsquared]) we finds

[formula]

From this, we can find the yield as before

[formula]

Comparing to the BEPP case, one sees that

[formula]

Conclusion

In the particular case of dephasing channels and perfect local operations, both strategies lead to the same fidelity after iterating the protocol the same number of steps. However, they differ in the communication cost. As one sees from Eq. ([\ref=eq:yieldcomp]), the yield of the MEPP strategy is always lower (and the communication cost hence larger). This fact can be explained from the higher probability of throwing away states at each step, which even increases further with the number of parties.

We have also done analytical calculations for bit-flip channels (Eq. ([\ref=eq:channel1])) and numerical simulations for depolarizing channels (Eq. ([\ref=eq:channel3])) (always in case of perfect local operations) and found a similar behavior.

In order to see regions where MEPP is superior as we did with the Monte Carlo simulations, it is hence necessary to give up the simplification of assuming noiseless local operations.

Imperfect local operations

If local operations are not assumed to be perfect, results are quite different. We again consider GHZ states of arbitrary size, to be purified with the BEPP or MEPP strategy.

For the noise, we define a model which is simple enough to allow for analytical calculations but still shows the general features obtained numerically (especially it shows cross-over points): The channel through which Alice sends qubit to the other parties is the phase-flip channel of Eq. ([\ref=eq:channel1]) with alteration probability (1 - q). The imperfection of the local gates are modeled by bit-flip noise (Eq. ([\ref=eq:channel2])), for Alice's operations, and phase-flip noise for all other parties, always with alteration probability (1 - ql).

MEPP strategy

As before, Alice prepares perfect N-qubit GHZ state and distributes them using the channels. We get the same initial state ρ(0) as before, again of the form ([\ref=eq:r-form]) with coefficients as in Eq. ([\ref=eq:r0]). We shall see that, again, the form ([\ref=eq:r-form]) is preserved by the purification steps even though they are now assumed to be noisy.

The values of the ri are changed according to a linear map:

[formula]

We shall construct this map in two steps. First, we see, how the phase-flip noise of the local gates acting on the qubits in VB,

[formula]

changes the coefficients and denote the map corresponding to this action by λ:

[formula]

Then, we consider the action of the bit-flip noise on Alice's qubit get the full map Λ.

For the first step, we call a state [formula] a k-state, if [formula] starts with a 0 (for the central qubit in VA) and contains, within the indices corresponding to VB, k entries "1" and (N - 1  -  k) entries "0". We can now calculate the probability pj←k that the superoperator ([\ref=Bobs_noise]) changes a pure k-state to any j-state: Say, s of the k entries "1" are flipped to "0". Then s̄ = j - k + s of the (N - 1  -  k) entries "0" have to be flipped to "1". Hence,

[formula]

There are [formula] j-states and [formula] k-states, and so

[formula]

which can also be written in terms of Gauß's hypergeometric function F as

[formula]

Now, we can do the second step and apply the noise for the imperfection of Alice's local gates, modeled by E(1)x(ql). We get, due to Eq. ([\ref=eq:action_of_sigma_x]),

[formula]

where

[formula]

The fidelity and the yield corresponding to one step of protocol can then be calculated:

[formula]

As before, the denominator of the previous expression is the success probability k(N,q,ql,m) of the step m (Footnote [\cite=footnote3]), and we get the total yield [formula] by multiplying up the factors k / 2 of all m steps:

[formula]

(For the corresponding quantum communication cost, Eq. ([\ref=commcostyield]) has to be used.)

BEPP strategy

Next, we find an analytical treatment for the BEPP strategy. In order to facilitate the calculation, we will consider the BEPP as a special case of the MEPP. We first show why this is possible without changing the results:

Considering the restricted noise model presented in this Section, the state can always be written as a contribution of [formula] and [formula] only. It can hence be purified using only subprotocol P2. In addition, the only difference between the BEPP protocol as described in Sec. [\ref=sec:bipartite_purification_protocol] and subprotocol P2 is the exchange of the states |G2;1,0〉 and |G2;1,1〉 in the former, and not in the latter. As these states have no contribution in the present model, the two protocols give identical results.

The results obtained in the last section can be used to calculate the fidelity f(q,ql,m) and the yield [formula] before connection. After purification, Alice connects qubits [formula] of (N - 1) pairs described by the states [formula] respectively. The joint state of the pairs is given by

[formula]

The connection is performed using the procedure described in Sec. [\ref=sec:General_connection_procedure]. As the noise contains only σz operators, it commutes with the projectors and correction operators that are used in this procedure. The state after projection is given by

[formula]

It follows that after the connection, the fidelity is given by

[formula]

and the quantum communication cost by

[formula]

Discussion

The results obtained the way just explained are presented in Figs. [\ref=fig:yield_in_function_of_fidelity_for_toy_model], [\ref=fig:cross-over_for_toy_model], and [\ref=fig:Maximal_reachable_fidelity_for_toy_model], always for MEPP and BEPP.

The cross-over points, i. e. the fidelity values (and corresponding costs) above which MEPP performs better than BEPP, are plotted as blue squarees in Fig. [\ref=fig:yield_in_function_of_fidelity_for_toy_model] for up to 70 parties. We have also plotted the fidelity-cost function for selected numbers N of parties, which cross in their respective blue squares. The other cross points were determined in the same way by observing where the MEPP and the BEPP curve intersect. Compare this figure with Fig. [\ref=Fig:Numerics_for_GHZ_states] [\ref=2_strategies]: Our analytical toy model could reproduce the appearence of cross points which we had already discussed in Section [\ref=sec:numerics_for_GHZ_states], an essential feature observed for the more general noise model. It does not, however, reproduce the fact that a cross-over ceases to appear above a certain number (here: 9) of parties. This fact is due to the particular kind of noise of our toy model under which GHZ states appear less fragile than under depolarizing noise so that the break-down of MEPP for large states does not happen.

We can use our analytic model to explore the parameter space more thoroughly. For instance, one might be interested how the positions of the cross points change if the local noise is increased. This is shown in Fig. [\ref=fig:cross-over_for_toy_model] where the right-most curve is the same as the disks in Fig. [\ref=fig:yield_in_function_of_fidelity_for_toy_model] and the others are for higher local noise levels. Observe how the effect of local noise depends more and more on the state size as its level approaches the order of magnitude of the channel noise.

The vertical tails of the curves in Fig. [\ref=fig:yield_in_function_of_fidelity_for_toy_model] already allow to easily read off the maximum reachable fidelity, which is plotted in Fig. [\ref=fig:Maximal_reachable_fidelity_for_toy_model]. There, the advantage of MEPP over BEPP increases with the number of parties. This effect can also be seen in the numerical calculations for depolarizing noise (Fig. [\ref=Fig:gap_for_GHZ_and_cluster]a). In the latter case, it is, however, soon overcome by the competing effect of the break-down of MEPP under realistic (depolarizing) noise.

Testing the numerics

The analytical formulas are also very useful for verifying the code of our numerical calculations. Switching the programs from depolarizing noise to the simplified noise considered here is a trivial alteration. We find that the numerical results agree well with the analytics, see Fig. [\ref=fig:toy_model_vs_numerics] to [\ref=fig:analytics_vs_numerics_for_Oxford_protocol]. This fact makes us confident in the correctness of our codes.

Summary and conclusions

In this article, we have investigated the quantum communication cost of preparing a class of multipartite entangled states with high fidelity. The presence of noisy quantum channels and imperfect local control operations requires the usage of error correction or -in our case- entanglement purification schemes to achieve this aim. We have considered various strategies to generate these high-fidelity states and have established in this way upper bounds on the quantum communication cost. The optimal strategy strongly depends on the error parameters for channels and local control operations, and on the desired target fidelity. For a simple error model and the generation of GHZ states based on various strategies, we have obtained analytic results that allow us to compare these strategies. Numerical simulations for generic error models, based on Monte Carlo simulation, show essentially the same features as observed in the simplified model. The simulation makes use of a recently developed method that allows one to efficiently simulate the evolution of stabilizer states (or graph states) under Clifford operations on a classical computer [\cite=AnBr05] [\cite=AaGo04]. We have also applied this method to investigate not only the generation of GHZ states but also of other types of multipartite entangled states, e.g. cluster states.

We find that for high target fidelities, strategies based on multipartite entanglement purification generally perform better than strategies based on bipartite purification. For low target fidelities, strategies based on bipartite purification have a higher efficiency, leading to smaller communication cost.

We believe that the generation of high-fidelity multipartite entangled states is of significant importance in the context of (distributed) quantum information processing. Such multipartite entangled states represent resources, e. g. for measurement-based quantum computation, conference key agreement and secret sharing schemes, and may be used for other security tasks. Our investigation takes both channel noise and noisy apparatus into account. We could show that the choice of a proper strategy not only allows one to significantly reduce the quantum communication cost, but to reach fidelity of target state that are not accessible otherwise.

Acknowledgments

This work was supported in part by the Austrian Science Foundation (FWF), the Deutsche Forschungsgemeinschaft (DFG), the European Union (IST-2001-38877, -39227, OLAQUI, SCALA). W. D. is supported by project APART of the ÖAW. The numerical calculations have been carried out on the Linux compute cluster of the University of Innsbruck's Konsortium Hochleistungsrechnen.