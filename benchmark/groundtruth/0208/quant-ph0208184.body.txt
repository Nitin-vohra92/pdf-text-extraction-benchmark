=10000

Quantum testers for hidden group properties

Frédéric Magniez

Miklos Santha[formula] Pranab Sen

Introduction

In the paradigm of property testing one would like to decide whether an object has a global property by performing random local checks. The goal is to distinguish with sufficient confidence the objects which satisfy the property from those objects that are far from having the property. In this sense, property testing is a notion of approximation for the corresponding decision problem. Property testers, with a slightly different objective, were first considered for programs under the name of self-testers. Following the pioneering approach of Blum, Kannan, Luby and Rubinfeld [\cite=bk95] [\cite=blr93], self-testers were constructed for programs purportedly computing functions with some algebraic properties such as linear functions, polynomial functions, and functions satisfying some functional equations [\cite=blr93] [\cite=rs96] [\cite=rub99]. The notion in its full generality was defined by Goldreich, Goldwasser and Ron and successfully applied among others to graph properties [\cite=ggr98] [\cite=gr97]. For surveys on property testing see [\cite=gol98] [\cite=ron00] [\cite=kms00] [\cite=fis01].

Quantum computing is an extremely active research area (for surveys see e.g. [\cite=rp00] [\cite=aha98] [\cite=pre98] [\cite=nc00]), where a growing trend is to cast quantum algorithms in a group theoretical setting. In this setting, we are given a finite group G and, besides the group operations, we also have at our disposal a function f mapping G into a finite set. The function f can be queried via an oracle. The complexity of an algorithm is measured by the number of queries (i.e. evaluations of the function f), and also by the overall running time counting one query as one computational step. We say that an algorithm is query efficient (resp. efficient) if its query complexity (resp. overall time complexity) is polynomial in the logarithm of the order of G. The most important unifying problem of group theory for the purpose of quantum algorithms has turned out to be the Hidden Subgroup Problem (HSP), which can be cast in the following broad terms: Let H be a subgroup of G such that f is constant on each left coset of H and distinct on different left cosets. We say that f hides the subgroup H. The task is to determine the hidden subgroup H.

While no classical algorithm can solve this problem with polynomial query complexity, the biggest success of quantum computing until now is that it can be solved by a quantum algorithm efficiently whenever G is Abelian. We will refer to this algorithm as the standard algorithm for the HSP. The main tool for this solution is Fourier sampling based on the (approximate) quantum Fourier transform for Abelian groups which can be efficiently implemented quantumly [\cite=kit95]. Simon's xor-mask finding [\cite=sim97], Shor's factorization and discrete logarithm finding algorithms [\cite=sho97], and Kitaev's algorithm [\cite=kit95] for the Abelian stabilizer problem are all special cases of this general solution. Fourier sampling was also successfully used to solve the closely related Hidden Translation Problem (HTP). Here we are given two injective functions f0 and f1 from an Abelian group G to some finite set such that, for some group element u, the equality f0(x + u) = f1(x) holds for every x. The task is to find the translation u. Indeed, the HTP is an instance of the HSP in the semi-direct product [formula] where the hiding function is f(x,b) = fb(x). In that group f hides the subgroup H  =  {(0,0),(u,1)}. Ettinger and Høyer [\cite=eh00] have shown that the HTP can be solved in cyclic groups [formula] by a two-step procedure: an efficient quantum algorithm followed by an exponential classical stage without further queries. They achieved this by applying Fourier sampling in the Abelian direct product group [formula]. In a recent work, we have shown [\cite=fmss02b] that HTP can be solved by an efficient quantum algorithm in some groups of fixed exponent, for instance when [formula] for any fixed prime number p. This gives a quantum polynomial time algorithm for the HSP in [formula] using the quantum reduction of HSP to HTP [\cite=eh00]. In strong opposition to these positive results, a natural generalization of the HSP has exponential quantum query complexity even in Abelian groups. In this generalization, the function f may not be distinct on different cosets. Indeed, the unordered database search problem can be reduced to the decision problem whether a function on a cyclic group has a non-trivial period or not.

Two different extensions of property testing were studied recently in the quantum context. The first approach consists in testing quantum devices by classical procedures. Mayers and Yao [\cite=MY98] have designed tests for deciding if a photon source is perfect. These tests guarantee that if a source passes them, it is adequate for the security of the Bennett-Brassard [\cite=BB84] quantum key distribution protocol. Dam, Magniez, Mosca and Santha [\cite=dmms00] considered the design of testers for quantum gates. They showed the possibility of classically testing quantum processes and they provided the first family of classical tests allowing one to estimate the reliability of quantum gates.

The second approach considers testing deterministic functions by a quantum procedure. Quantum testing of function families was introduced by Buhrman, Fortnow, Newman, and Röhrig [\cite=bfnr02], and they have constructed efficient quantum testers for several properties. One of their nicest contributions is that they have considered the possibility that quantum testing of periodicity might be easier than the corresponding decision problem. Indeed, they succeeded in giving a polynomial time quantum tester for periodic functions over [formula]. They have also proved that any classical tester requires exponential time for this task. Independently and earlier, while working on the extension of the HSP to periodic functions over [formula] which may be many-to-one in each period, Hales and Hallgren [\cite=hh00] [\cite=halesphd] have given the essential ingredients for constructing a polynomial time quantum tester for periodic functions over the cyclic group [formula]. But contrarily to [\cite=bfnr02], their result is not stated in the testing context.

In this work, we construct efficient or query efficient quantum testers for two hidden group properties, that is, existential properties over groups whose decision problems have exponential quantum query complexity. We also introduce a new technique in the analysis of quantum testers.

Our main contribution is a generalization of the periodicity property studied in [\cite=hh00] [\cite=bfnr02]. For any finite group G and any normal subgroup K, a function f satisfies the property [formula] if there exists a normal subgroup H > K for which f is H-periodic ( i.e. f(xh)  =  f(x) for all x∈G and h∈H). For this property, we give an efficient tester whenever G is Abelian (Theorem [\ref=theorem:ab-period]). This result generalizes the previous periodicity testers in three aspects. First, we work in any finite Abelian group G, while previously only [formula] [\cite=hh00] and [formula] [\cite=bfnr02] were considered. Second, the property we test is parametrized by some known normal subgroup K, while previously only the case K = {0} was considered. Third, our query complexity is only linear in the inverse of the distance parameter, whereas the previous works have a quadratic dependence. These improvements are possible due to our more transparent analysis. We refine the standard method of classical testing, which consists in showing that a function f that passes the test can be corrected into another function g that has the desired property, and which is close to f. The novelty of our approach is that here the correction is not done directly; it involves an intermediate correction via a probabilistic function.

The main technical ingredient of the periodicity test in Abelian groups is efficient Fourier sampling. This procedure remains a powerful tool also in non-Abelian groups. Unfortunately, currently no efficient implementation is known for it in general groups. Therefore, when dealing with non-Abelian groups, our aim is to construct query efficient testers. We construct query efficient testers for two properties. First, we show that the tester used for [formula] in Abelian groups yields a query efficient tester when G is any finite group and K any normal subgroup (Theorem [\ref=theorem:period]). Second, we study in any finite group G the property (k,t) (for short (k,t)) related to the HTP. Let f,g be two functions from G to a finite set S. By definition, (f,g) satisfies (k,t) if f and g have identical ranges within each coset for a normal subgroup [formula] of size at most k, and which is the normal closure of a subgroup generated by at most t elements. The heart of the tester for (k,t) is again Fourier sampling applied in the direct product group [formula]. Our tester is query efficient in any group if k is polylogarithmic in the size of the group (Theorem [\ref=theorem:cosetrange]).

Different lower bounds can be proven on the query complexity of (k,t). One observes easily that unordered database search can be reduced to (k,1) in Abelian groups of exponent k, and therefore (k,1) is quantumly exponentially hard to decide. Moreover, we show that classical testers also require an exponential number of queries for this problem even if k is constant (Theorem [\ref=thm:lowerbound]). We show this by adapting the techniques of [\cite=bfnr02], who proved the analogous result for classical testers for periodicity.

Preliminaries

Fourier sampling over Abelian groups

For a finite set D, let the uniform superposition over D be [formula], and for a function f from D to a finite set S, let the uniform superposition of f be [formula]. For two functions f,g from D to S, their distance is [formula]. The following proposition describes the relation between the distance of two functions and the distance between their uniform superpositions. In this paper, [formula] denotes the L2-norm of a vector.

For functions f,g defined on the same finite set, [formula].

Let G be a finite Abelian group and H  ≤  G a subgroup. The coset of x∈G with respect to H is denoted by x + H. We use the notation <  X  >   for the subgroup generated by a subset X of G. We identify with G the set Ĝ of characters of G, via some fixed isomorphism y  ↦  χy. The orthogonal of H  ≤  G is defined as [formula], and we set [formula] The quantum Fourier transform over G, [formula], is the unitary transformation defined as follows: For every x∈G, [formula]. The main property about [formula] that we use is that it maps the uniform superposition on the coset x + H to the uniform superposition on [formula], with appropriate phases.

Let G be a finite Abelian group, x∈G and H  ≤  G. Then [formula].

The following well known quantum Fourier sampling algorithm will be used as a building block in our quantum testers. In the algorithm, f:G  →  S is given by a quantum oracle.

The above algorithm is actually the main ingredient for solving the HSP on Abelian groups with hiding function f.

Property testing

Let D and S be two finite sets and let C be a family of functions from D to S. Let F  ⊆  C be the subfamily of functions of interest, that is, the set of functions possessing the desired property. In the testing problem, one is interested in distinguishing functions f:D  →  S, given by an oracle, which belong to F, from functions which are far from every function in F.

Let F  ⊆  C and 0  ≤  δ < 1. A quantum (resp. probabilistic) δ-tester for F on C is a quantum (resp. probabilistic) oracle Turing machine T such that, for every f∈C, 1. if f∈F then [formula], 2. if [formula] then [formula], where the probabilities are taken over the observation results (resp. the coin tosses) of T.

By our definition, a tester always accepts functions having the property F. We may also consider testers with two-sided error, where this condition is relaxed, and one requires only that the tester accept functions from F with probability at least 2/3. Of course, the choice of the success probability 2 / 3 is arbitrary, and can be replaced by γ, for any constant 1 / 2  <  γ  <  1.

Periodicity

In this section, we design quantum testers for testing periodicity of functions from a finite group G to a finite set S. For a normal subgroup [formula], a function f:G  →  S is H-periodic if for all x∈G and h∈H, f(xh) = f(x). Notice that our definition describes formally right H-periodicity, but this coincides with left H-periodicity since H is normal. The set of H-periodic functions is denoted by [formula]. For a known normal subgroup H, testing if [formula] can be easily done classically by sampling random elements x∈G and h∈H, and verifying that f(xh) = f(x). On the other hand, testing if a function has a non-trivial period is classically hard even in [formula] [\cite=bfnr02]. The main result of this section is that we can test query efficiently by a quantum algorithm an even more general property: Does a function have a strictly larger period than a known normal subgroup [formula]? Indeed, we test the family

[formula]

Moreover when G is Abelian, our tester is efficient.

For the sake of clarity we first present the result for Abelian groups. This enables us to highlight the new technique that we use. The standard way to ensure that the functions the tester accepts with high probability are close to functions having the desired property, is based on a direct correction process. This process has to produce a corrected function which has the desired property, and is close to the original function. This is the approach taken by [\cite=hh00] [\cite=bfnr02]. The novelty of our approach is that the correction is not done directly; it involves an intermediate corrected probabilistic function. This two-step process makes a more refined and cleaner analysis possible, and allows us to prove that our tester works in any finite group, whereas previous works only considered the groups [formula] [\cite=hh00] and [formula] [\cite=bfnr02]. Moreover, the query complexity of our algorithm turns out to be linear in the inverse of the distance parameter, unlike the quadratic dependence of the previous works.

Abelian case

In this subsection, we give our algorithm for testing periodicity in abelian groups. Theorem [\ref=theorem:ab-period] below states that this algorithm is efficient. The algorithm assumes that G has an efficient exact quantum Fourier transform. When G only has an efficient approximate quantum Fourier transform, the algorithm has two-sided error. Efficient implementations of approximate quantum Fourier transforms exist in every finite Abelian group [\cite=kit95].

For a finite set S, finite Abelian group G, subgroup K  ≤  G, and 0 < δ < 1, Test Larger period(G,K,δ) is a δ-tester for [formula] on the family of all functions from G to S, with [formula] query complexity and [formula] time complexity.

Let S be a finite set and G a finite Abelian group. We describe now the ingredients of our two-step correction process. First, we generalize the notion of uniform superposition of a function to uniform superposition of a probabilistic function. By definition, a probabilistic function is a mapping μ:x  ↦  μx from the domain G to probability distributions on S. For every x∈G, define the unit L1-norm vector [formula]. Then the uniform superposition of μ is defined as [formula]. Notice that |μ〉 has unit L2-norm when μ is a (deterministic) function, otherwise its L2-norm is smaller.

A function f:G  →  S and a subgroup H  ≤  G naturally define an H-periodic probabilistic function μf,H, where [formula]. The value μf,Hx(s) is the proportion of elements in the coset x + H where f takes the value s. Observe that when f is H-periodic |μf,H〉  =  |f〉, and so [formula], otherwise [formula].

First, we give the connection between the probability that [formula] outputs an element outside [formula], and the distance between |f〉 and |μf,H〉.

[formula]

The probability term is [formula], since [formula] iff [formula]. We apply the inverse quantum Fourier transform [formula], which is L2-norm preserving, to the first register in the above expression. The probability becomes [formula], using Proposition [\ref=prop:abelian-fourier]. Changing the variables, the second term inside the norm is

[formula]

where the equality holds because H is a subgroup of G. We conclude by observing that, by definition of μf,H, [formula].

Second, we give the connection between [formula] and the distance between |f〉 and |μf,H〉.

[formula]

It will be useful to rewrite |f〉 as a probabilistic function [formula], where δfx(s) = 1 if f(x) = s and 0 otherwise. Let us define the H-periodic function g:G  →  S by [formula], where ties are decided arbitrarily. In fact, g is the correction of f with respect to H-periodicity. Proposition [\ref=prop:distance] and the H-periodicity of g imply [formula]. We will show that [formula]. This will allow us to prove the desired statement using the triangle inequality. Observe that for any function h:G  →  S, we have

[formula]

Moreover for every x∈G, one can establish

[formula]

where the inequality follows from μf,Hx(f(x))  ≤  μf,Hx(g(x)), which in turn follows immediately from the definition of g.

From ([\ref=eq:deltamu]) and ([\ref=eq:majorisation]) we get that [formula], which completes the proof.

Lemmas [\ref=lemma:period1] and [\ref=lemma:period2] together can be interpreted as the robustness [\cite=rs96] [\cite=rub99] in the quantum context [\cite=dmms00] of the property that Fourier sampling[formula] outputs only [formula]: if f does not satisfy exactly the property but with error probability less than δ, then f is 2δ-close to a function that satisfies exactly the property. Using that fact, we can now prove Theorem [\ref=theorem:ab-period].

If f∈, that is f is H-periodic for some H > K, then the quantum state before the observation of f(G) is

[formula]

Above, I denotes the [formula] identity matrix. Therefore, f(G) only outputs elements in [formula]. Since [formula], the test always accepts.

Let f be now δ-far from [formula]. Then for every H > K [formula], and by Lemmas [\ref=lemma:period1] and [\ref=lemma:period2], [formula]. Using these inequalities, we can upper bound the acceptance probability of the test as follows.

[formula]

General case

We start with a few definitions. For any d  ×  d matrix M, define [formula]. Let G be any finite group and let Ĝ be a complete set of finite dimensional inequivalent irreducible unitary representations of G. Thus, for any ρ∈Ĝ of dimension dρ and x∈G, [formula]. The quantum Fourier transform over G is the unitary transformation defined as follows: For every x∈G, [formula]. For any [formula] set [formula], where Idρ is the dρ  ×  dρ identity matrix. Let [formula].

Let G be a finite group, x∈G and [formula]. Then [formula].

We first prove that when H is normal, the matrix [formula] is [formula] if [formula], and 0 otherwise. By definition of [formula], the condition [formula] implies ρ(h) = Idρ for every h∈H, which gives the first part of the above. Now suppose that [formula]. Observe that since H is normal, L commutes with ρ(x) for every x∈G. Therefore according to Schur's lemma (see for instance [\cite=ser77]), L = λ  ·  Idρ for some [formula]. Since [formula], we can pick some h∈H such that ρ(h)  ≠  Idρ; then applying ρ(h)  ·  L = L gives a contradiction if λ  ≠  0. This proves the second part of the above.

We now complete the proof of the proposition as follows.

[formula]

where the penultimate equality follows from the above property of the matrix L.

We now give our algorithm for testing periodicity in a general finite group G. In the algorithm, f(G) is as before, except that we only observe the representation ρ, and not the indices i,j. Thus, the output of f(G) is an element of Ĝ. K is assumed to be a normal subgroup of G. For any ρ∈Ĝ, ker ρ denotes its kernel.

We now prove the robustness of the property that f(G) outputs only [formula], for any finite group G, normal subgroup H and H-periodic function f. This robustness corresponds to Lemmas [\ref=lemma:period1] and [\ref=lemma:period2] of the Abelian case.

Let f:G  →  S and [formula]. Then

[formula]

The proof has the structure of the Abelian case (see Lemmas [\ref=lemma:period1] and [\ref=lemma:period2]). Define |μf,H〉 in the same way. Observe that Lemma [\ref=lemma:period2] is true in a general finite group. The proof of Lemma [\ref=lemma:period1] follows the one for the Abelian case. The only difference is that we have to use Proposition [\ref=prop:normal-fourier] instead of Proposition [\ref=prop:abelian-fourier].

Our second theorem states that Test Larger period is a query efficient tester for LARGER-PERIOD(K) for any finite group G.

For a finite set S, finite group G, normal subgroup [formula], and 0 < δ < 1, Test Larger period(G,K,δ) is a δ-tester for [formula] on the family of all functions from G to S, with [formula] query complexity.

The proof is similar to that of the Abelian case. Note that, while upper bounding the acceptance probability of the test when f is δ-far from [formula], one has to consider only those normal subgroups H of the form H  =  (  <  K,x  >  ), where x ranges over G - K.

Common Coset Range

In this section, G denotes a finite group and S a finite set. Let f0,f1 be functions from G to S. For a normal subgroup [formula], we say that f0 and f1 are H-similar if on all cosets of H the ranges of f0 and f1 are the same, that is, the multiset equality f0(xH) = f1(xH) holds for every x∈G. The couple of functions (f0,f1) can equivalently be considered as a single function [formula], where by definition f(x,b)  =  fb(x). We will use f for (f0,f1) when it is convenient in the coming discussion. We denote by [formula] the set of functions f such that f0 and f1 are H-similar. We say that H is t-generated, for some positive integer t, if it is the normal closure of a subgroup generated by at most t elements. The aim of this section is to establish that for any positive integers k and t, the family (k,t) (for short (k,t)), defined as

[formula]

can be tested by the following quantum test. Note that a subgroup of size k is always generated by at most log k elements, therefore we always assume that t  ≤   log k.

We first prove the robustness of the property that when [formula] outputs (ρ,1), where G is any finite group, [formula] and [formula], then ρ is not in [formula].

Let S be a finite set and G a finite group. Let [formula] and [formula]. Then [formula].

We use the notations of Section [\ref=sec:abelian] for f0 and f1. We define [formula], and the multiplicity functions [formula].

First, we prove that [formula]. For this, we define a function g1:G  →  S, the correction of f1. The definition is done according to the cosets of H in G. For every x∈G and s∈S, the function g1 remains identical to f1 in [formula] elements of xH, and the value of g1 at those elements is s; at the remaining elements of xH, the values of g1 are defined so as to make the multisets f0(xH) and g1(xH) equal. If we define g0  =  f0 then clearly g  =  (g0,g1) is in [formula], and [formula]. Since in every coset xH, f1 and g1 have different values in [formula] elements, we have [formula]. The right hand side becomes [formula] if we replace the terms [formula] by their respective squared values. This can only increase it since the values mfb,Hx(s) are integers. Thus, [formula].

We now prove that [formula]. The probability term is [formula]. We apply the inverse quantum Fourier transform [formula], which is L2-norm preserving, to the first register in the above expression. Using Proposition [\ref=prop:normal-fourier] and the fact that H is a subgroup of G, the probability becomes [formula]. Now one can conclude the above statement and hence the lemma, since by definition of mfb,H, the equality [formula] holds.

Our next theorem implies that (k,t) is query efficiently testable when k is polynomial in [formula].

For any finite set S, finite group G, integers k  ≥  1, 1  ≤  t  ≤   log k, and 0 < δ < 1, Test Common coset range(G,k,t,δ) is a δ-tester for (k,t) on the family of all functions from [formula] to S, with [formula] query complexity.

First consider the case f∈(k,t), that is f is in [formula] for some [formula], |H|  ≤  k and H is t-generated. From the proof of Lemma [\ref=lemma:equalcoset], we see that whenever [formula] outputs an element (ρ,1), then [formula]. Thus the test always accepts.

Now, let f:G  →  S be δ-far from (k,t) and let H be a t-generated normal subgroup of size at most k. Then [formula] and by Lemma [\ref=lemma:equalcoset], [formula]. Using these inequalities we can upper bound the acceptance probability of the test, which is

[formula]

A classical lower bound

Let G be any Abelian group with exponent k. In this section, we study the property (k,1) for [formula]. We already know from Theorem [\ref=theorem:cosetrange] that this problem has a query efficient quantum tester. We now prove an exponential lower bound on the classical testing query complexity of this problem. Recall that the exponent of a group G is the smallest integer m such that xm  =  1 for every element x∈G. We prove our lower bound by adapting the proof of Theorem 4.2 of Buhrman et al. [\cite=bfnr02]. We use Yao's minimax principle. We construct two probability distributions D'1 and D'2 on the set of pairs of functions (f0,f1), f0,f1:G  →  S, where S is a finite set of size |S|  =  |G|3. Let D'1 be the uniform distribution on pairs of injective functions (f0,f1) such that f0(x)  =  f1(x  +  u) for some element u∈G and all x∈G. Thus, f0 and f1 are <  u  >  -similar, and |  <  u  >  |  ≤  k. Let D'2 be the uniform distribution on pairs of injective functions (f0,f1) such that the ranges f0(G) and f1(G) are disjoint. Thus, D'1 is supported on positive instances of (k,1), and D'2 is supported on negative instances of (k,1) which are 1 / 2-distant from positive instances.

As in [\cite=bfnr02], instead of working with D'1,D'2, we shall work with distributions D1 and D2 on pairs of functions (f0,f1), approximating distributions D'1 and D'2 respectively. D1 is got by choosing f1:G  →  S and u∈G independently and uniformly at random, and setting f0:G  →  S to be f0(x)  =  f1(x + u) for all x∈G. Since the probability that f1 is not injective is at most [formula], we get that [formula], where [formula] denotes the L1-norm or the total variation distance. D2 is got by choosing f0:G  →  S and f1:G  →  S independently and uniformly at random. The probability that at least one of f0,f1 is not injective is O(1 / |G|). The probability that their ranges f0(G) and f1(G) are not disjoint is also O(1 / |G|). Thus, [formula].

By applying the proof technique of Theorem 4.2 of [\cite=bfnr02] for distributions D1,D2, we get the following theorem.

Let G be a finite Abelian group and let k be the exponent of G. For testing (k,1) on G, any classical randomized bounded error query algorithm on G requires [formula] queries.

Acknowledgments

We would like to thank Mark Ettinger, Peter Høyer and Gábor Ivanyos for sharing their knowledge and ideas about the subject with us.