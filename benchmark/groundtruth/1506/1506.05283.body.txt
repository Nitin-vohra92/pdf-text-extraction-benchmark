A simple solution to the word problem for virtual braid groups

AMS Subject Classification. Primary: 20F36. Secondary: 20F10, 57M25.

Introduction

Virtual braid groups were introduced by L. Kauffman in his seminal paper on virtual knots and links [\cite=Kauff2]. They can be defined in several ways, such as in terms of Gauss diagrams [\cite=BarDan1] [\cite=Cisne1], in terms of braids in thickened surfaces [\cite=Cisne1], and in terms of virtual braid diagrams. The latter will be our starting point of view.

A virtual braid diagram on n strands is a n-tuple [formula] of smooth paths in the plane [formula] satisfying the following conditions.

bi(0)  =  (i,0) for all [formula].

There exists a permutation [formula] such that bi(1)  =  (g(i),1) for all [formula].

[formula] for all [formula] and all t∈[0,1], where [formula] denotes the projection on the second coordinate.

The bi's intersect transversely in a finite number of double points, called the crossings of the diagram.

Each crossing is endowed with one of the following attributes: positive, negative, virtual. In the figures they are generally indicated as in Figure 1.1. Let VBDn be the set of virtual braid diagrams on n strands, and let ~   be the equivalence relation on VBDn generated by ambient isotopy and the virtual Reidemeister moves depicted in Figure 1.2. The concatenation of diagrams induces a group structure on VBDn  /    ~  . The latter is called virtual braid group on n strands, and is denoted by VBn.

It was observed in [\cite=Kamad1] [\cite=Versh1] that VBn has a presentation with generators [formula], and relations

[formula]

A solution to the word problem for virtual braid groups was shown in [\cite=GodPar1]. However, this solution is quite theoretical and its understanding requires some heavy technical knowledge on Artin groups. Therefore, it is incomprehensible and useless for most of the potential users, including low dimensional topologists. Moreover, its implementation would be difficult. Our aim here is to show a new solution, which is simpler and easily implementable, and whose understanding does not require any special technical knowledge. This new solution is in the spirit of the one shown in [\cite=GodPar1], in the sense that one of the main ingredients in its proof is the study of parabolic subgroups in Artin groups.

We have not calculated the complexity of this algorithm, as this is probably at least exponential because of the inductive step 3 (see next section). Nevertheless, it is quite efficient for a limited number of strands (see the example at the end of Section 2), and, above all, it should be useful to study theoretical questions on VBn such as the faithfulness of representations of this group in automorphism groups of free groups and/or in linear groups. Note that the faithfulness of such a representation will immediately provide another, probably faster, solution to the word problem for VBn.

The Burau representation easily extends to VBn [\cite=Versh1], but the question whether VBn is linear or not is still open. A representation of VBn in Aut(Fn + 1) was independently constructed in [\cite=Barda1] and [\cite=Mantu1], but such a representation has recently been proven to be not faithful for n  ≥  4 [\cite=Chter1] (see the example at the end of Step 1). So, we do not know yet any representation on which we can test our algorithm.

In [\cite=Chter1], Chterental shows a faithful action of VBn on a set of objects that he calls "virtual curve diagrams". We have some hope to use this action to describe another explicit solution to the word problem for VBn. But, for now, we do not know any formal definition of this action, and how it could be encoded in an algorithm.

Acknowledgments. The research of the first author was partially supported by French grant ANR-11-JS01-002-01.

The algorithm

Our solution to the word problem for VBn is divided into four steps. In Step 1 we define a subgroup KBn of VBn and a generating set S for KBn, and we show an algorithm (called Algorithm A) which decides whether an element of VBn belongs to KBn and, if yes, determines a word over S±  1 which represents this element. For X  ⊂  S, we denote by KBn(X) the subgroup of KBn generated by X. The other three steps provide a solution to the word problem for KBn(X) which depends recursively on the cardinality of X. Step 2 is the beginning of the induction. More precisely, the algorithm proposed in Step 2 (called Algorithm B) is a solution to the word problem for KBn(X) when X is a full subset of S (the notion of "full subset" will be also defined in Step 2; for now, the reader just need to know that singletons are full subsets). In Step 3 we suppose given a solution to the word problem for KBn(X), and, for a given subset Y  ⊂  X, we show an algorithm which solves the membership problem for KBn(Y) in KBn(X) (Algorithm C). In Step 4 we show an algorithm which solves the word problem for KBn(X) when X is not a full subset, under the assumption that the group KBn(Y) has a solvable word problem for any proper subset Y of X (Algorithm D).

Step 1

Recall that [formula] denotes the group of permutations of [formula]. We denote by [formula] the epimorphism which sends σi to 1 and τi to (i,i + 1) for all 1  ≤  i  ≤  n - 1, and by KBn the kernel of θ. Note that θ has a section [formula] which sends (i,i + 1) to τi for all 1  ≤  i  ≤  n - 1, and therefore VBn is a semi-direct product [formula]. The following proposition is proved in Rabenda's master thesis [\cite=Raben1] which, unfortunately, is not available anywhere. However, its proof can also be found in [\cite=BarBel1].

Proposition 2.1 (Rabenda [\cite=Raben1]). For 1  ≤  i  <  j  ≤  n we set

[formula]

Then KBn has a presentation with generating set

[formula]

and relations

[formula]

The virtual braids δi,j and δj,i are depicted in Figure 2.1.

The following is an important tool in the forthcoming Algorithm A.

Lemma 2.2 (Bardakov, Bellingeri [\cite=BarBel1]). Let u be a word over [formula], let ū be the element of VBn represented by u, and let [formula], i  ≠  j. Then ūδi,jū- 1  =  δi',j', where i'  =  θ(ū)(i) and j' = θ(ū)(j).

Note that τ- 1i  =  τi, since τ2i = 1, for all [formula]. Hence, the letters [formula] are not needed in the above lemma and below.

Now, we give an algorithm which, given a word u over [formula], decides whether the element ū of VBn represented by u belongs to KBn. If yes, it also determines a word u' over S±  1  =  {δ±i,j|1  ≤  i  ≠  j  ≤  n} which represents ū. The fact that this algorithm is correct follows from Lemma 2.2.

Algorithm A. Let u be a word over [formula]. We write u in the form

[formula]

where [formula] are words over [formula], and [formula]. On the other hand, for a word [formula] over [formula], we set [formula]. Note that [formula]. If θ(ū)  ≠  1, then [formula]. If θ(ū)  =  1, then ū∈KBn, and ū is represented by

[formula]

where

[formula]

for all [formula].

Example. In [\cite=Chter1] it was proven that the Bardakov-Manturov representation of VBn in Aut(Fn + 1) (see for instance [\cite=Barda1] for the definition) is not faithful, showing that the element ω  =  (τ3σ2τ1σ- 12)3 is non-trivial in VB4 while the corresponding automorphism of F5 is trivial. In [\cite=Chter1] the non-triviality of ω is shown by means of an action on some curve diagrams, but this fact can be easily checked with Algorithm A. Indeed, [formula], hence [formula].

Step 2

Let S be a finite set. A Coxeter matrix over S is a square matrix M = (ms,t)s,t∈S, indexed by the elements of S, such that ms,s = 1 for all s∈S, and [formula] for all s,t∈S, s  ≠  t. We represent this Coxeter matrix with a labelled graph Γ  =  ΓM, called Coxeter diagram. The set of vertices of Γ is S. Two vertices s,t∈S are connected by an edge labelled by ms,t if ms,t  ≠    ∞  .

If a,b are two letters and m is an integer ≥  2, we set [formula] if m is even, and [formula] if m id odd. In other words, 〈a,b〉m denotes the word [formula] of length m. The Artin group of Γ is the group A = A(Γ) defined by the following presentation.

[formula]

The Coxeter group of Γ, denoted by W = W(Γ), is the quotient of A by the relations s2 = 1, s∈S.

Example. Let VΓn be the Coxeter diagram defined as follows. The set of vertices of VΓn is S. If [formula] are distinct, then δi,j and [formula] are connected by an edge labelled by 2. If [formula] are distinct, then δi,j and δj,k are connected by an edge labelled by 3. There is no other edge in VΓn. Then, by Proposition 2.1, KBn is isomorphic to A(VΓn).

Let Γ be a Coxeter diagram. For X  ⊂  S, we denote by ΓX the subdiagram of Γ spanned by X, by AX the subgroup of A = A(Γ) generated by X, and by WX the subgroup of W = W(Γ) generated by X. By [\cite=Lek1], AX is the Artin group of ΓX, and, by [\cite=Bourb1], WX is the Coxeter group of ΓX.

For X  ⊂  S, we denote by KBn(X) the subgroup of KBn generated by X. By the above, KBn(X) has a presentation with generating set X and relations

st = ts if s and t are connected in VΓn by an edge labelled by 2,

sts = tst if s and t are connected in VΓn by an edge labelled by 3.

Definition. We say that a subset X of S is full if any two distinct elements s,t of X are connected by an edge of VΓn. Recall that the aim of Step 2 is to give a solution to the word problem for KBn(X) when X is full.

We denote by [formula] the free group of rank n freely generated by [formula]. For [formula], i  ≠  j, we define φi,j∈Aut(Fn) by

[formula]

It is easily checked from the presentation in Proposition 2.1 that the map S  →  Aut(Fn), δi,j  ↦  φi,j, induces a representation φ:KBn  →  Aut(Fn). For X  ⊂  S, we denote by [formula] the restriction of φ to KBn(X). The following will be proved in Section 3.

Proposition 2.3. If X is a full subset of S, then [formula] is faithful.

Notation. From now on, if u is a word over S±  1, then ū will denote the element of KBn represented by u.

Algorithm B. Let X be a full subset of S, and let [formula] be a word over X±  1. We have [formula]. If φ(ū)  =  Id, then ū = 1. Otherwise, ū  ≠  1.

Step 3

Let G be a group, and let H be a subgroup of G. A solution to the membership problem for H in G is an algorithm which, given g∈G, decides whether g belongs to H or not. In the present step we will assume that KBn(X) has a solution to the word problem, and, from this solution, we will give a solution to the membership problem for KBn(Y) in KBn(X), for Y  ⊂  X. Furthermore, if the tested element belongs to KBn(Y), then this algorithm will determine a word over Y±  1 which represents this element.

Let u be a word over S. (Remark: here the alphabet is S, and not S±  1.)

Suppose that u is written in the form u1ssu2, where u1,u2 are words over S and s is an element of S. Then we say that u'  =  u1u2 is obtained from u by an M-operation of type I.

Suppose that u is written in the form u1stu2, where u1,u2 are words over S and s,t are two elements of S connected by an edge labelled by 2. Then we say that u'  =  u1tsu2 is obtained from u by an M-operation of type II(2).

Suppose that u is written in the form u1stsu2, where u1,u2 are words over S and s,t are two elements of S connected by an edge labelled by 3. Then we say that u'  =  u1tstu2 is obtained from u by an M-operation of type II(3).

Let Y be a subset of S.

Suppose that u is written in the form tu', where u' is a word over S and t is an element of Y. Then we say that u' is obtained from u by an M-operation of type [formula].

We say that u is M-reduced (resp. [formula]-reduced) if its length cannot be shortened by M-operations of type I,II(2),II(3) (resp. of type [formula]). An M-reduction (resp. [formula]-reduction) of u is an M-reduced word (resp. [formula]-reduced word) obtained from u by M-operations (resp. [formula]-operations). We can easily enumerate all the words obtained from u by M-operations (resp. [formula]-operations), hence we can effectively determine an M-reduction and/or an [formula]-reduction of u.

Let Y be a subset of S. From a word [formula] over S±  1, we construct a word [formula] over Y±  1 as follows.

For [formula] we set [formula] (as ever, u+0 is the identity).

For [formula] we calculate an [formula]-reduction v+i of u+i.

For a word [formula] over S, we denote by [formula] the anacycle of v. Let [formula]. If εi = 1, we set w+i  =  v+i - 1  ·  si  ·  op(v+i - 1). If εi =  - 1, we set w+i  =  v+i  ·  si  ·  op(v+i).

For all [formula] we calculate an M-reduction ri of w+i.

If ri is of length 1 and ri∈Y, we set Ti = rεii. Otherwise we set Ti = 1.

We set [formula].

The proof of the following is given in Section 4.

Proposition 2.4. Let Y be a subset of S. Let u,v be two words over S±  1. If ū  =  , then [formula]. Moreover, we have ū∈KBn(Y) if and only if [formula].

Algorithm C. Take two subsets X and Y of S such that Y  ⊂  X, and assume given a solution to the word problem for KBn(X). Let u be a word over X±  1. We calculate [formula]. If [formula], then [formula]. If [formula], then ū∈KBn(Y) and v is a word over Y±  1 which represents the same element as u.

We can use Algorithm C to show that the representation φ:KBn  →  Aut(Fn) of Step 2 is not faithful. Indeed, let α  =  δ1,3δ3,2δ3,1 and β  =  δ2,3δ1,3δ3,2. A direct calculation shows that φ(α)  =  φ(β). Now, set X  =  S and Y  =  {δ1,3,δ3,2,δ3,1}. We have [formula], hence α∈KBn(Y), and we have [formula] and β  ≠  1, hence [formula]. So, α  ≠  β.

Step 4

Now, we assume that X is a non-full subset of S, and that we have a solution to the word problem for KBn(Y) for any proper subset Y of X (induction hypothesis). We can and do choose two proper subsets X1,X2  ⊂  X satisfying the following properties.

[formula].

Let [formula]. There is no edge in VΓn connecting an element of [formula] to an element of [formula].

It is easily seen from the presentations of the KBn(Xi)'s given in Step 2 that we have the amalgamated product

[formula]

Our last algorithm is based on the following result. This is well-known and can be found for instance in [\cite=Serre1].

Proposition 2.5. Let A1  *  BA2 be an amalgamated product of groups. Let [formula] be a sequence of elements of [formula] different from 1 and satisfying the following condition:

if gi∈A1 (resp. gi∈A2), then [formula] (resp. [formula]), for all [formula].

Then [formula] is different from 1 in A1  *  BA2.

Algorithm D. Let u be a word over X±  1. We write u in the form [formula], where

ui is either a word over X±  11, or a word over X±  12,

if ui is a word over X±  11 (resp. over X±  12), then ui + 1 is a word over X±  12 (resp. over X±  11).

We decide whether ū is trivial by induction on [formula]. Suppose that [formula] and u = u1∈KBn(Xj) (j∈{1,2}). Then we apply the solution to the word problem for KBn(Xj) to decide whether ū is trivial or not. Suppose that [formula]. For all i we set vi  =  πX0(ui). If [formula] for all i, then ū  ≠  1. Suppose that there exists [formula] such that [formula]. Let ui'  =  v1u2 if i = 1, [formula] if [formula], and ui' = ui - 1viui + 1 if [formula]. Set [formula]. Then ū  =   and, by induction, we can decide whether v represents 1 or not.

Example

In order to illustrate our solution to the word problem for KBn, we turn now to give a more detailed and efficient version of the algorithm for the group KB4. We start with the following observation.

Remark. For X  ⊂  S, we denote by VΓn(X) the full subgraph of VΓn spanned by X. Let X,Y be two subsets of S. Note that an injective morphism of Coxeter graphs [formula] induces an injective homomorphism [formula]. So, if we have a solution to the word problem for KBn(X), then such a morphism would determine a solution to the word problem for KBn(Y).

The Coxeter graph VΓ4 is depicted in Figure 2.2. Our convention in this figure is that a full edge is labelled by 3 and a dotted edge is labelled by 2. Note that there are two edges that go through "infinity", one connecting δ2,1 to δ4,3, and one connecting δ1,4 to δ3,2.

Consider the following subsets of S.

X(1)  =  {δ1,2,δ2,3,δ3,4,δ4,1,δ3,1}, X1(1)  =  {δ1,2,δ2,3,δ3,4,δ4,1}, X2(1)  =  {δ1,2,δ2,3,δ3,1}.

[formula], X1(2)  =  X(1), X2(2)  =  {δ4,2,δ3,4,δ2,3,δ3,1}.

[formula], X1(3)  =  X(2), X2(3)  =  {δ1,3,δ4,1,δ3,4,δ4,2}.

[formula], X1(4)  =  X(3), X2(4)  =  {δ2,4,δ1,3,δ4,1,δ1,2,δ3,1}.

[formula], X1(5)  =  X(4), X2(5)  =  {δ1,4,δ4,2,δ2,3,δ3,1}.

[formula], X1(6)  =  X(5), X2(6)  =  {δ2,1,δ1,3,δ3,4,δ4,2,δ1,4}.

[formula], X1(7)  =  X(6), X2(7)  =  {δ3,2,δ2,4,δ4,1,δ1,3,δ2,1,δ1,4}.

[formula], X1(8)  =  X(7), X2(8)  =  {δ4,3,δ3,2,δ2,4,δ1,2,δ3,1,δ1,4,δ2,1}.

Let [formula]. Note that [formula]. The Coxeter graph VΓ4(X(k)) is depicted in Figure 2.3. In this figure the elements of X1(k) are represented by punctures, while the elements of X2(k) are represented by small circles.

We solve the word problem for KB4(X(k)) successively for [formula], thanks to the following observations. Since X(8)  =  S, this will provide a solution to the word problem for KB4.

Let [formula]. Set [formula]. Observe that there is no edge in VΓ4 connecting an element of [formula] to an element of [formula]. Hence, we can solve with Algorithm D the word problem for KB4(X(k)) from solutions to the word problem for KB4(X1(k)) and for KB4(X2(k)).

The subsets X1(1) and X2(1) are full, hence we can solve the word problem for KB4(X1(1)) and for KB4(X2(1)) with Algorithm B.

Let k  ≥  2. On the one hand, we have X1(k)  =  X(k - 1). On the other hand, it is easily seen that there is an injective morphism [formula]. Hence, by the remark given at the beginning of the subsection, we can solve the word problem for KB4(X1(k)) and for KB4(X2(k)) from a solution to the word problem for KB4(X(k - 1)).

Proof of Proposition 2.3

Recall that [formula] denotes the free group of rank n freely generated by [formula], and that we have a representation φ:KBn  →  Aut(Fn) which sends δi,j to φi,j, where

[formula]

For X  ⊂  S, we denote by [formula] the restriction of φ to KBn(X). In this section we prove that [formula] is faithful if X is a full subset of S.

Consider the following groups. The group Bn is the classical braid group, and n is the affine braid group.

We define representations ψn:Bn  →  Aut(Fn) and ψ̃n:n  →  Aut(Fn) in the same way as φ as follows. The key of the proof of Proposition 2.3 is the following.

Theorem 3.1 (Artin [\cite=Artin2], Bellingeri, Bodin [\cite=BelBod1]). The representations ψn:Bn  →  Aut(Fn) and ψ̃n:n  →  Aut(Fn) are faithful.

The support of a generator δi,j is defined to be supp(δi,j) = {i,j}. The support of a subset X of S is [formula]. We say that two subsets X1 and X2 of S are perpendicular if [formula]. Note that this condition implies that [formula]. More generally, we say that a family [formula] of subsets of S is perpendicular if [formula] for all i  ≠  j. In that case we write [formula]. We say that a subset X of S is indecomposable if it is not the union of two perpendicular nonempty subsets. The following observations will be of importance in what follows.

Remark. Let X1 and X2 be two perpendicular subsets of S, and let [formula].

X is a full subset if and only if X1 and X2 are both full subsets.

KBn(X)  =  KBn(X1)  ×  KBn(X2).

Indeed, if δi,j∈X1 and [formula], then [formula] are distinct, and therefore δi,j and [formula] are connected by an edge labelled by 2, and [formula].

Lemma 3.2. Let X1 and X2 be two perpendicular subsets of S, and let [formula]. Then [formula] is faithful if and only if φX1:KBn(X1)  →  Aut(Fn) and φX2:KBn(X2)  →  Aut(Fn) are both faithful.

Proof. For [formula], we denote by F(X) the subgroup of Fn generated by X. There is a natural embedding [formula] defined by

[formula]

Moreover, if X1 and X2 are disjoint subsets of [formula], then the homomorphism

[formula]

is well-defined and injective. From now on, we will assume Aut(F(X)) to be embedded in Aut(Fn) via ιX, for all [formula].

By abuse of notation, for X  ⊂  S, we will also denote by supp(X) the set {xi|i∈supp(X)}. Set X1  =  supp(X1) and X2  =  supp(X2). We have Im(φXi)  ⊂  Aut(F(Xi)) for i = 1,2, [formula], and KBn(X)  =  KBn(X1)  ×  KBn(X2). Hence, Lemma 3.2 follows from the following claim whose proof is left to the reader.

Claim. Let f1:G1  →  H1 and f2:G2  →  H2 be two group homomorphisms. Let (f1  ×  f2):(G1  ×  G2)  →  (H1  ×  H2) be the homomorphism defined by (f1  ×  f2)(u1,u2)  =  (f1(u1),f2(u2)). Then (f1  ×  f2) is injective if and only if f1 and f2 are both injective.

For 2  ≤  m  ≤  n we set

[formula]

Note that the map [formula], σi  ↦  δi,i + 1, induces an isomorphism fm:Bm  →  KBn(Zm). This follows from the presentation of KBn(Zm) given in Step 2 of Section 2. Similarly, for m  ≥  3, the map [formula], σi  ↦  δi,i + 1 for 1  ≤  i  ≤  m - 1, σm  ↦  δm,1, induces an isomorphism m:m  →  KBn(m).

Recall that the symmetric group [formula] acts on S by g  δi,j  =  δg(i),g(j), and that this action induces an action of [formula] on KBn. On the other hand, there is a natural embedding [formula], where [formula] sends xi to xg(i) for all [formula], and this embedding induces by conjugation an action of [formula] on Aut(Fn). It is easily seen that the homomorphism φ:KBn  →  Aut(Fn) is equivariant under these actions of [formula].

Lemma 3.3. If X is a full and indecomposable nonempty subset of S, then there exist [formula] and [formula] such that either X  =  g  Zm, or X = g  m and m  ≥  3.

Proof. An oriented graph Υ is the data of two sets, V(Υ), called set of vertices, and E(Υ), called set of arrows, together with two maps sou,tar:E(Υ)  →  V(Υ). We associate an oriented graph [formula] to any subset X of S as follows. The set of vertices is [formula], the set of arrows is [formula], and, for δi,j∈X, we set sou(δi,j) = i and tar(δi,j) = j. Assume that X is a full and indecomposable nonempty subset of S. Since X is indecomposable, [formula] must be connected. Since X is full, if s,t∈X are two different arrows of [formula] with a common vertex, then there exist [formula] distinct such that either s = δj,i and t = δi,k, or s = δi,j and t  =  δk,i. This implies that [formula] is either an oriented segment, or an oriented cycle with at least 3 vertices (see Figure 3.1). If [formula] is an oriented segment, then there exist [formula] and [formula] such that X = g  Zm. If [formula] is an oriented cycle, then there exist [formula] and [formula], such that X = g  m.

Proof of Proposition 2.3. Let X be a full nonempty subset of S. Write [formula], where Xj is an indecomposable nonempty subset. As observed above, each Xj is also a full subset. Moreover, by Lemma 3.2, in order to show that [formula] is faithful, it suffices to show that φXj is faithful for all [formula]. So, we can assume that X is a full and indecomposable nonempty subset of S. By Lemma 3.3, there exist [formula] and [formula] such that either X  =  g  Zm, or X  =  g  m and m  ≥  3. Since φ is equivariant under the actions of [formula], upon conjugating by g- 1, we can assume that either X  =  Zm, or X  =  m. Set [formula], and identify Fm with F(Zm). Then [formula] and [formula], hence φX is faithful by Theorem 3.1.

Proof of Proposition 2.4

The proof of Proposition 2.4 is based on some general results on Coxeter groups and Artin groups. Recall that the definitions of Coxeter diagram, Artin group and Coxeter group are given at the beginning of Step 2 in Section 2. Recall also that, if Y is a subset of the set S of vertices of Γ, then ΓY denotes the full subdiagram spanned by Y, AY denotes the subgroup of A = A(Γ) generated by Y, and WY denotes the subgroup of W = W(Γ) generated by Y.

Let Γ be a Coxeter diagram, let S be its set of vertices, let A be the Artin group of Γ, and let W be its Coxeter group. Since we have s2 = 1 in W for all s∈S, every element g in W can be represented by a word over S. Such a word is called an expression of g. The minimal length of an expression of g is called the length of g and is denoted by lg(g). An expression of g of length lg(g) is a reduced expression of g. Let Y be a subset of S, and let g∈W. We say that g is Y-minimal if it is of minimal length among the elements of the coset WYg. The first ingredient in our proof of Proposition 2.4 is the following.

Proposition 4.1. (Bourbaki [\cite=Bourb1]). Let Y  ⊂  S, and let g∈W. There exists a unique Y-minimal element lying in the coset WYg. Moreover, the following conditions are equivalent.

g is Y-minimal,

lg(sg)  >  lg(g) for all s∈Y,

lg(hg)  =  lg(h)  +  lg(g) for all h∈WY.

Remark. For g∈W and s∈S, we always have either lg(sg)  =  lg(g) + 1, or lg(sg)  =  lg(g) - 1. This is a standard fact on Coxeter groups that can be found for instance in [\cite=Bourb1]. So, the inequality lg(sg)  >  lg(g) means lg(sg)  =  lg(g) + 1 and the inequality lg(sg)  ≤  lg(g) means lg(sg)  =  lg(g) - 1.

Let u be a word over S.

Suppose that u is written in the form u1ssu2, where u1,u2 are words over S and s is an element of S. Then we say that u'  =  u1u2 is obtained from u by an M-operation of type I.

Suppose that u is written in the form u = u1〈s,t〉ms,tu2, where u1,u2 are words over S and s,t are two elements of S connected by an edge labelled by ms,t. Then we say that u' = u1〈t,s〉ms,tu2 is obtained from u by an M-operation of type II.

We say that a word u is M-reduced if its length cannot be shortened by M-operations of type I,II. The second ingredient in our proof is the following.

Theorem 4.2 (Tits [\cite=Tits1]). Let g∈W.

An expression w of g is a reduced expression if and only if w is M-reduced.

Any two reduced expressions w and w' of g are connected by a finite sequence of M-operations of type II.

Let Y be a subset of S. The third ingredient is a set-retraction ρY:A  →  AY to the inclusion map ιY:AY  →  A, constructed in [\cite=GodPar1] [\cite=ChaPar1]. This is defined as follows. Let α be an element of A.

Choose a word [formula] over S±  1 which represents α.

Let [formula]. Set [formula], and write gi in the form gi  =  hiki, where hi∈WY and ki is Y-minimal.

Let [formula]. If εi = 1, set zi  =  ki - 1sik- 1i - 1. If εi =  - 1, set zi  =  kisik- 1i.

Let [formula]. We set Ti  =  zεii if zi∈Y. Otherwise we set Ti = 1.

Set [formula].

Proposition 4.3 (Godelle, Paris [\cite=GodPar1], Charney, Paris [\cite=ChaPar1]). Let α∈A. The element ρY(α)∈AY represented by the word Y(α) defined above does not depend on the choice of the representative [formula] of α. Furthermore, the map ρY:A  →  AY is a set-retraction to the inclusion map [formula].

We turn now to apply these three ingredients to our group KBn and prove Proposition 2.4. Let KWn denote the quotient of KBn by the relations δ2i,j = 1, 1  ≤  i  ≠  j  ≤  n. Note that KWn is the Coxeter group of the Coxeter diagram VΓn. For Y  ⊂  X, we denote by KWn(Y) the subgroup of KWn generated by Y.

Lemma 4.4. Let g∈KWn.

An expression w of g is a reduced expression if and only if w is M-reduced.

Any two reduced expressions w and w' of g are connected by a finite sequence of M-operations of type II(2) and II(3).

Let Y be a subset of S, and let w be a reduced expression of g. Then g is Y-minimal (in the sense given above) if and only if w is [formula]-reduced.

Proof. Part (1) and Part (2) are Theorem 4.2 applied to KWn. So, we only need to prove Part (3).

Suppose that g is not Y-minimal. By Proposition 4.1, there exists s∈Y such that lg(sg)  ≤  lg(g), that is, lg(sg)  =  lg(g) - 1. Let w' be a reduced expression of sg. The word sw' is an expression of g and lg(sw')  =  lg(w)  =  lg(g), hence sw' is a reduced expression of g. By Theorem 4.2, w and sw' are connected by a finite sequence of M-operations of type II(2) and II(3). On the other hand, w' is obtained from sw' by an M-operation of type [formula]. So, w' is obtained from w by M-operations of type I, II(2), II(3) and [formula], and we have lg(w')  <  lg(w), hence w is not [formula]-reduced.

Suppose that w is not [formula]-reduced. Let w' be an [formula]-reduction of w, and let g' be the element of KWn represented by w'. Since w' is an [formula]-reduction of w, the element g' lies in the coset KWn(Y)  g. Moreover, lg(g')  =  lg(w')  <  lg(w)  =  lg(g), hence g is not Y-minimal.

Proof of Proposition 2.4. Let Y be a subset of S. Consider the retraction [formula] constructed in Proposition 4.3. We shall prove that, if u is a word over S±  1, then [formula]. This will prove Proposition 2.4. Indeed, if ū  =  , then [formula]. Moreover, since [formula] is a retraction to the inclusion map [formula], we have [formula] if and only if ū∈KBn(Y), hence [formula] if and only if ū∈KBn(Y).

Let [formula] be a word over S±  1. Let α be the element of KBn represented by u.

For [formula], we set [formula], and we denote by gi the element of KWn represented by u+i.

Let [formula]. We write gi  =  hiki, where hi∈KWn(Y), and ki is Y-minimal. Let v+i be an [formula]-reduction of u+i. Then, by Lemma 4.4, v+i is a reduced expression of ki.

Let [formula]. If εi = 1, we setzi  =  ki - 1sik- 1i - 1 and w+i = v+i - 1  ·  si  ·  op(v+i - 1). If εi =  - 1, we set zi  =  kisik- 1i and w+i = v+i  ·  si  ·  op(v+i). Note that w+i is an expression ofzi.

Let [formula]. Let ri be an M-reduction of w+i. By Lemma 4.4, ri is a reduced expression of zi. Note that we have zi∈Y if and only if ri is of length 1 and ri∈Y.

Let [formula]. If ri is of length 1 and ri∈Y, we set Ti  =  rεii. Otherwise we set Ti = 1.

By construction, we have [formula].

Paolo Bellingeri,

LMNO UMR6139, CNRS, Universit� de Caen, F-14000 Caen, France.

E-mail: paolo.bellingeri@unicaen.fr

Bruno A. Cisneros de la Cruz,

Instituto de Matem�ticas de la UNAM - Oaxaca, Oaxaca de Ju�rez, Oax. 68000, Mexico.

E-mail: brunoc@matem.unam.mx

Luis Paris,

IMB UMR5584, CNRS, Univ. Bourgogne Franche-Comt�, F-21000 Dijon, France.

E-mail: lparis@u-bourgogne.fr