Understanding deep features with computer-generated imagery

Introduction

The success of convolutional neural networks (CNNs) [\cite=Krizhevsky12] [\cite=LeCun89] raises fundamental questions on how their learned representations encode variations in visual data. For example, how are different layers in a deep network influenced by different scene factors, the task for which the network was trained for, or the choice in network architecture? These questions are important as CNNs with different architectures and trained/fine tuned for different tasks have shown to perform differently [\cite=Karayev14] [\cite=Zhou14] or have different feature response characteristics [\cite=Zhou15]. An analysis of the features may help with understanding the tradeoffs across different trained networks and may inform the design of new architectures. It may also help the choice of CNN features for tasks where training or fine tuning a network is not possible, e.g. due to lack of labeled data.

Prior work has focused on a part-based analysis of the learned convolutional filters. Examples include associating filters with input image patches having maximal response [\cite=Girshick14], deconvolution starting from a given filter response [\cite=Zeiler14], or by masking the input to recover the receptive field of a given filter [\cite=Zhou15] to generate "simplified images" [\cite=Biederman95] [\cite=Tanaka93]. Such visualizations typically reveal the parts of an object [\cite=Zeiler14] (e.g. "eye" of a cat) or scene [\cite=Zhou15] (e.g. "toilet" in bathroom). While these visualizations reveal the nature of learned filters, they largely ignore the question of the dependence of the CNN representation on continuous factors that may influence the depicted scene, such as 3D viewpoint, scene lighting configuration, and object style. In this paper, we study systematically how different scene factors that arise in natural images are represented in a trained CNN. Example factors may include those intrinsic to an object or scene, such as category, style, and color, and extrinsic ones, such as 3D viewpoint and scene lighting configuration. Studying the variations associated with such factors is a nontrivial task as it requires (i) input data where the factors can be independently controlled and (ii) a procedure for detecting, visualizing, and quantifying each factor in a trained CNN.

To overcome the challenges associated with obtaining input data, we leverage computer-generated (CG) imagery to study trained CNNs. CG images offer several benefits. First, there are stores of 3D content online (e.g. Trimble 3D Warehouse), with ongoing efforts to curate and organize the data for research purposes (e.g. ModelNet [\cite=Wu15]). Such data spans many different object categories and styles. Moreover, in generating CG images we have control over all rendering parameters, which allows us to systematically and densely sample images for any given factor. A database of natural images captured in controlled conditions and spanning different factors of variations, e.g. the NORB [\cite=Lecun04], ETH-80 [\cite=leibe2003] and RGB-D object [\cite=Lai11] datasets, where different objects are rotated on a turntable and lighting is varied during image capture, are difficult and costly to collect. Moreover they do not offer the same variety of object styles present in 3D model collections, nor the flexibility given by rendering.

Given a set of rendered images generated by varying one or more factors, we analyze the responses of a layer for a trained CNN (e.g. "pool5" of AlexNet [\cite=Krizhevsky12]). We perform a decomposition of the responses based on knowledge of the input scene factors, which allows us to quantify the relative importance of each factor in the representation. Moreover, we visualize the responses via principal component analysis (PCA).

Contributions.

Our technical contribution is an analysis of contemporary CNNs trained on large-scale image datasets via computer generated images, particularly rendered from 3D models. From our study we observe:

Features computed from image collections that vary along two different factors, such as style and viewpoint, can often be approximated by a linear combination of features corresponding to the factors, especially in the higher layers of a CNN.

Sensitivity to viewpoint decreases progressively in the last layers of the CNNs. Moreover, the VGG fc7 layer appears to be less sensitive to viewpoint than AlexNet and Places.

Relative to object style, color is more important for the Places CNN than for AlexNet and VGG. This difference is more pronounced for the background color than for foreground.

The analysis we perform on deep features extracted from rendered views of 3D models is related to understanding their representation in natural images.

Related work

In addition to the prior work to visualize learned CNN filters [\cite=Berkes06] [\cite=Erhan09] [\cite=Girshick14] [\cite=Simonyan13] [\cite=Zeiler14] [\cite=Zhou15], there has been work to visualize hand-designed [\cite=Vondrick2013hoggles] and deep [\cite=Mahendran15] features. Also related are recent work to understand the quantitative tradeoffs across different CNN layers for networks trained on large image databases [\cite=Agrawal14] [\cite=Yosinski14] and designing CNN layers manually [\cite=Bruna13].

Our use of a large CAD model dataset can be seen in the context of leveraging such data for computer vision tasks, e.g. object detection [\cite=Aubry14b]. Contemporary approaches have used synthetic data with CNNs to render images for particular scene factors, e.g. style, pose, lighting [\cite=Dosovitskiy15] [\cite=Kulkarni15].

Our PCA feature analysis is related to prior work on studying visual embeddings. The classic Eigenfaces paper [\cite=Turk01] performed PCA on faces. Later work studied nonlinear embeddings, such as LLE [\cite=Roweis00] and IsoMap [\cite=Tenenbaum00b]. Most related to us is the study of nonlinear CNN feature embeddings with the NORB dataset [\cite=Hadsell06]. In contrast we study large-scale, contemporary CNNs trained on large image datasets. Finally, our multiple factor study is related to intrinsic image decomposition [\cite=Barrow78]. We note a contemporary approach for separating style and content via autoencoders [\cite=Cheung15].

Overview

Our deep feature analysis begins by rendering a set of stimuli images by varying one or more scene factors. We present the stimuli images to a trained CNN as input and record the feature responses for a desired layer. Given the feature responses for the stimuli images we analyze the principal modes of variation in the feature space via PCA (section [\ref=sec:single_factor]). When more than one factor is present we linearly decompose the feature space with respect to the factors and perform PCA on the feature decomposition (section [\ref=sec:multiple_factors]). We give details of our experimental setup in section [\ref=sec:experimental_setup] and show qualitative and quantitative results over a variety of synthetic and natural images in section [\ref=sec:results].

Approach for deep feature analysis

In this section we describe our approach for analyzing the image representation learned by a CNN. We seek to study how the higher levels of the CNN encodes the diversity present in a set of images. The minimal input for our analysis is a set of related images. We first describe our approach for analyzing jointly their features. What we can learn with such an approach is however limited since it cannot identify the origin of the variations of the input images. The factors of variation can be, e.g., variations in the style of an object, changes in its position, scaling, 3D rotation, lighting, or color. For this reason, we then focus on the case when the images are computer generated and we have full control of the different factors. In this case, we seek to separate the influence of the different factors on the representation, analyze them separately, and compare their relative importance.

Image collection analysis

We seek to characterize how a CNN encodes a collection of related images, Ω, e.g. images depicting a "car" or a black rectangle on white background. We sample images rθ∈Ω indexed by θ∈Θ. In the case of natural images Θ is an integer index set over the collection Ω. In the case of computer-generated images Θ is a set of parameters corresponding to a scene factor we wish to study (e.g. azimuth and elevation angles for 3D viewpoint, 3D model instances for object style, or position of the object in the image for 2D translation). Given a trained CNN, let L(rθ) be a column vector of CNN responses for layer L (e.g. "pool5", "fc6", or "fc7" in AlexNet [\cite=Krizhevsky12]) to the input image rθ.

The CNN responses L are high-dimensional feature vectors that represent the image information. However, since Ω contains related images, we expect the features to be close to each other and their intrinsic dimension to be smaller than the actual feature dimension. For this reason, we use principal component analysis (PCA) [\cite=Pearson1901] to identify a set of orthonormal basis vectors that capture the principal modes of variation of the features.

Given centered features [formula], where |X| is the number of elements in set X, we compute the eigenvectors associated with the largest eigenvalues of the covariance matrix [formula]. The projection of the features onto the subspace defined by the D components with maximal eigenvalues corresponds to an optimal D-dimensional linear approximation of the features. We evaluate the intrinsic dimensionality of the features by computing the number of dimensions necessary to explain 95% of the variance. Moreover, we can visualize the embedding of the images by projecting onto the components with high variance.

Multiple factor analysis

In the case when we have control of the variation parameters, we can go further and attempt to decompose the features as a linear combination of uncorrelated components associated to the different factors of variation. Features decomposing linearly into different factors would be powerful and allow to perform image transformations directly in feature space and, e.g., to compare easily images taken under different viewpoints. Let [formula] be sets of parameters for N factors of variation we want to study. We consider an image of the scene with parameters [formula], where [formula]. We assume the θk are sampled independently. We define marginal features FLk(θk) for scene factor k by marginalizing over the parameters for all factors except k:

[formula]

Similar to section [\ref=sec:single_factor], we can study via PCA the principal modes of variation over the marginal features FLk for each factor k.

Finally, we define a residual feature ΔL(θ), which is the difference of the centered CNN features FL(θ) and the sum of all the marginal features FLk(θk). This results in the following decomposition:

[formula]

Using computer-generated images, we can easily compute this decomposition by rendering the images with all the rendering parameters corresponding to the sum in equation ([\ref=eq:marg]). Direct computation shows that all the terms in decomposition ([\ref=eqn:decomposition]) have zero mean and are uncorrelated. This implies:

[formula]

We can thus decompose the variance of the features FL as the sum of the variances associated to the different factors and a residual. When analyzing the decomposed features we report the relative variance [formula]. We also report the relative variance of the residual [formula]. A factor's relative variance provides an indication of how much the factor is represented in the CNN layer compared to the others. A high value indicates the factor is dominant in the layer and conversely a low value indicates the factor is largely negligible compared to the others. Moreover, a low value of the residual relative variance indicates the factors are largely separated in the layer. Note that [formula] and the values of RLk and RLΔ do not depend on the relative sampling of the different factors.

Experimental setup

In this section we describe details of our experimental setup. In particular we describe the details of the CNN features we extract, our rendering pipeline, and the set of factors we seek to study.

CNN features

We study three trained CNN models: AlexNet [\cite=Krizhevsky12], winner of the 2012 ImageNet Large-Scale Visual Recognition Challenge (ILSVRC) [\cite=ILSVRCarxiv14], Places [\cite=Zhou14], which has the same architecture as AlexNet but trained on a large image database depicting scenes, and Oxford VGG [\cite=Chatfield14] CNN-S network. In particular, we study the features of the higher layers "pool5", "fc6", and "fc7" of these networks. Note that the Oxford VGG architecture is different and the dimension of its "pool5" layer is two times larger than AlexNet and Places. We use the publicly-available CNN implementation of Caffe [\cite=jia2014caffe] to extract features for the different layers and pre-trained models for AlexNet, Places, and Oxford VGG from their model zoo.

Computer-generated imagery

We present two types of image stimuli as input: (i) 2D abstract stimuli consisting of constant color images or rectangular patches on constant background, which are described in detail in section [\ref=sec:2d], and (ii) rendered views from 3D models. For the latter we seek to render different object categories spanning many different styles from a variety of viewpoints and under different illumination conditions. We used as input CAD 3D models from the ModelNet database [\cite=Wu15], which contains many models having different styles for a variety of object classes. We downloaded the CAD models in Collada file format for the following object classes: chair (1261 models), car (485 models), sofa (701 models), toilet (191 models) and bed (258 models). We adapted the publicly-available OpenGL renderer from [\cite=Aubry14], which renders a textured CAD model with matte surfaces under fixed lighting configuration and allows the viewpoint to be specified by a 3×  4 camera matrix [\cite=Hartley04]. We render the models under different lighting conditions and with different uniform colors.

We show results on two categories that have received the most attention in 3D-based image analysis: cars [\cite=Glasner11] [\cite=Pepik2012], and chairs [\cite=Aubry14b] [\cite=Dosovitskiy15]. Detailed results for three other categories are presented in the supplementary material and our quantitative results are averages over the 5 categories.

3D scene factors

We study two types of factors affecting the appearance of a scene: (i) intrinsic factors - object category, style, and color, and (ii) extrinsic factors - 2D position, 2D scale, 3D viewpoint, and scene lighting configuration. The object category and style factors are specified by the CAD models from ModelNet. For object color we study grayscale matte surfaces (specified by Lambertian surface model), and constant-colored matte surfaces with the color uniformly sampled on a grid in RGB colorspace. For the 2D extrinsic factors, we uniformly sample 2D positions along a grid in the image plane and vary the 2D scale linearly. For 3D viewpoint we manually aligned all the 3D models to a canonical coordinate frame, i.e. all models are consistently oriented with respect to gravity and face the same direction, orbit the object at constant 3D distance and uniformly sample the azimuth and elevation angles with respect to the object's coordinate frame. Finally, we vary the scene lighting such that the source light varies from left to right and front to back on a uniform grid. For the quantitative experiments we sampled 36 azimuth angles (keeping the elevation fixed at 10 degrees) for rotation, 36 positions for translation, 40 scales, 36 light positions, and 125 colors. For the visualizations we sampled 120 azimuth angles, 121 light positions, and 400 positions to make the embeddings easier to interpret. We checked that the different sampling did not change our quantitative results, which was expected since our method is not sensitive to the relative number of samples for each factor.

Results

In this section we highlight a few results from our experiments on CNN feature analysis. The supplementary material reports our detailed quantitative results for all object categories and provides a visualization tool to interactively select and compare embeddings for the first ten PCA components.

We first report results for manually-designed 2D stimuli in section [\ref=sec:2d] and then for rendered views of 3D models from several object categories in section [\ref=sec:3d]. We finally show in section [\ref=sec:natural_images] that our results obtained with computer-generated images are related to natural images.

2D abstract stimuli

In this section we apply the deep feature analysis of section [\ref=sec:theorie] on manually-designed 2D abstract stimuli presented to a trained CNN. We first perform a PCA analysis on a single factor, color. Next, we perform two-factor quantitative analyses on the aspect ratio/2D position of a rectangle and on the foreground/background colors of a centered square.

Uniform color.

We perform PCA on a set of images with constant color, as described in section [\ref=sec:single_factor]. We sampled 1331 colors uniformly on a grid in RGB color space. The resulting embedding for the fc7 layers of the three CNNs are shown in figure [\ref=fig:color]. The resulting embeddings for the AlexNet and Places CNNs are surprisingly similar to a hue color wheel, with more variation visible for blues and greens and less for reds and violets. VGG has a different behavior, with the first dimension similar to saturation. The embedding corresponding to the second and third dimensions is similar to that of the other CNNs. The number of PCA dimensions necessary to explain 95% of the variance is approximately 20 for all three networks and all three layers, which is higher than the three dimensions of the input data.

Position and aspect ratio.

We used the methodology of section [\ref=sec:multiple_factors] to study the features representing a small black rectangle located at different positions with different aspect ratios on a white background. The rectangle area was kept constant at 0.262 of the image area. We consider the position and aspect ratio as two factors of variation and sample 36 positions on a grid and 12 aspect ratios on a log scale. The variance explained by each factor for the different layers of AlexNet is presented in table [\ref=tab:rectangle]. For all three networks the relative variance associated to the position decreases, which quantitatively supports the idea that the higher layers have more translation invariance. In contrast the relative variance associated to the aspect ratio increases for the higher CNN layers. For AlexNet, less than 10% of the relative variance for pool5 is explained by the aspect ratio alone, while it explains 37% of the relative variance for fc7. Also, the relative variance associated with the residual decreases for the higher CNN layers, which indicates the two factors are more easily linearly separated in the higher layers.

Center and surrounding color.

Similar to the experiments presented in the previous paragraph, we considered a square of one color on a background of a different color. We chose the size of the central square to be half the image size. Quantitative results for the fc7 features of the different networks are presented in table [\ref=tab:bicolor]. Results for the other layers are in the supplementary material. A first observation is that the features do not separate as well the foreground and background colors in the representation as the aspect ratio and position in the previous experiment. We also observe that for all the networks the variance associated to the background color is higher than the variance associated to the foreground. The difference is more striking for the Places fc7 layer (3.8x versus 2x for AlexNet fc7 and 1.8x for VGG fc7). Future work could determine if the background color of an image is especially important for scene classification, while the foreground color is less important.

Remarks.

As the CNNs were not trained on the 2D artificial stimuli presented in this section, we find it somewhat surprising that the embeddings resulting from the above feature analysis is meaningful. From our experiments we saw that the CNNs learn a rich representation of colors, identifying in particular variations similar to hue and saturation. Moreover, the last layers of the network better encode translation invariance, focusing on shape. These results will be confirmed and generalized on more realistic stimuli in the next sections.

Object categories

In this section we want to explore the embedding generated by the networks for image sets and factors related to the tasks for which they are trained, namely object category classification in the case of AlexNet and VGG. We also compare against the CNN trained on Places. We thus select an object category and, using rendered views of 3D models, we analyze how the CNN features are influenced by the style of the specific instances as well as different transformations and rendering parameters. The parameter sampling for each experiment is described in section [\ref=sec:3D_factors].

Model-orientation separation.

The first variation we study jointly with style is the rotation of the 3D model. The first column of figure [\ref=fig:all] visualizes the PCA embedding of the resulting pool5 features. This embedding is hard to interpret because it mixes information about viewpoint (important for cars) and instance style (important for chairs). To separate this information, we perform the decomposition presented in section [\ref=sec:theorie]. The decomposition provides us with embedding spaces for style and viewpoint and associates to each model and viewpoint its own descriptor. We visualize the embeddings in figure [\ref=fig:all]; the second column corresponds to style and the third to viewpoint. Note that the different geometries of the two categories lead to different embeddings of rotation in pool5. While a left-facing car typically looks similar to a right-facing car and is close in the feature space (figure [\ref=fig:car_rot]), a right-facing chair is usually different from left-facing chairs and is far in the embedding (figure [\ref=fig:chair_rot]). The last column shows the viewpoint embedding for fc6. The comparison of the last two columns indicates that much viewpoint information is lost between pool5 and fc6 and that fc6 is largely left-right flip invariant. A potential interesting future direction could be to interpret the viewpoint embeddings relative to classic work on mental rotation [\cite=Shepard71].

Translation, scale, lighting, color.

We repeated the same experiment for the following factors: 2D translation, scale, light direction, background color, and object color. For simplicity and computational efficiency, we considered in all experiments a frontal view of all the instances of the objects. The framework allows the same analysis using the object orientation as an additional factor. The embeddings associated with AlexNet features for translation of cars and chairs are shown in figure [\ref=fig:translation]. Note that similar to rotations, the embedding corresponding to cars and chairs are different, and that the first two components of the fc6 features indicate a left-right flip-invariant representation. The embeddings for the pool5 layer of the car category for the other factors are shown figure [\ref=fig:other].

Quantitative analysis: viewpoint.

We analyze the relative variance explained by the 3D rotation, translation, and scale experiments. While the variance was different for each factor and category, the variation across the layers and networks was consistent in all cases. For this reason we report in table [\ref=table:geometry] an average of the variance across all five categories and all three factors. We refer the reader to the supplementary material for detailed results. The analysis of table [\ref=table:geometry] reveals several observations. First, the proportion of the variance of deeper layers corresponding to viewpoint information is less important, while the proportion corresponding to style is more important. This corresponds to the intuition that higher layers are more invariant to viewpoint. We also note that the residual feature ΔL is less important in higher layers, indicating style and viewpoint are more easily separable in those layers. These observations are consistent with our results of section [\ref=sec:2d]. Second, the part of the variance associated with style is more important in the fc7 layer for VGG than in AlexNet and Places. Also, the part associated with the viewpoint and residual is smaller. Note that this does not hold in pool5, where the residual is important for the VGG network. This effect may be related to the difference in the real and intrinsic dimension of the features. The intrinsic dimension of the style component of VGG pool5 features is larger and decreases from pool5 to fc7. On the contrary, the intrinsic dimensionality of AlexNet has smaller variation across layers. Finally, we note that the intrinsic dimensionality of the fc7 style feature of Places is smaller than the other networks. This may indicate that it is less rich, and may be related to the fact that identifying the style of an object is less crucial for scene classification. We believe it would be an interesting direction for future work to study how the improved performance of VGG for object classification is related to the observed reduced sensitivity to viewpoint.

Quantitative analysis: color.

We report in table [\ref=table:color] the average across categories of our quantitative study for object and background color. The results are different from those of viewpoint. First, we observe that a larger part of the variance of the features of the Places network is explained by the color in all layers. This may be related to the fact that color is a stronger indicator of the scene type than it is of an object category. Second, while the part of the variance explained by foreground and background color is similar in the fc7 feature of the Places network, it is much larger for the foreground object than for the background object in AlexNet and VGG. Once again, one can hypothesize that it is related to the fact that the color of an object is more informative than the color of its background for object classification. Finally, we note that similarly to our previous experiments, the difference between networks is present in pool5 and increases in the higher layers, indicating that the features become more tuned to the target task in the higher layers of the networks.

Natural images

Embedding.

We used ImageNet [\cite=ILSVRCarxiv14] images to study the embeddings of natural images. Since we have no control over the image content, we cannot perform a detailed analysis of the different factors similar to the previous sections. Our only choice is to consider the images altogether. The direct embedding of natural images is possible but hard to interpret. We can however project the images in the spaces discovered in section [\ref=sec:3d]. The resulting embeddings for style and viewpoint are shown in figure [\ref=fig:real_embedding] and are similar to the embeddings obtained with the CAD models.

2D-3D instance recognition.

The observed similarity of the embeddings for natural and rendered images motivates an application to retrieve a 3D model of an object present in an image without explicitly performing alignment or detection. The approach is different from approaches in the 2D-3D matching community that find explicit correspondences between the models and the image. We tested this idea using the chair category and computing similarity as dot product between AlexNet features. We rendered 36 azimuth and 4 elevation angles to span typical viewpoints depicted in the natural images. To improve efficiency, we reduced the dimension of our features to 1000 via PCA. This allows us to perform nearest-neighbor retrieval between 1000 natural images and the 144 rendered views of 1261 3D models in approximately 22 seconds total using a Python implementation with pre-computed features. We visualize results in figure [\ref=fig:nn] and in the supplementary material. We evaluated the viewpoint accuracy using the annotations of [\cite=Xiang14] and found that the orientation error was below 20 degrees for 60% of the images using pool5 features, 39% using fc6, and 26% using fc7. This is consistent with our earlier finding that orientation is not as well represented in the higher layers. We conducted a user study on Mechanical Turk to evaluate the quality of the style matching for the images where the orientation was correctly estimated with the pool5 features. The workers were presented with a pair of images and asked to judge if the style of the chairs and their orientation were similar or different, similar to [\cite=Aubry14b]. Each pair was evaluated 5 times. There was agreement in 75% of the cases that the match was fair and in 18% that it was exact. While the above results could probably be beaten by state-of-the-art 2D-3D matching techniques or simply by adding position and scale to our database, they show that our analysis of rendered 3D models is pertinent for understanding the CNN representation of natural images.

Real images with pose variation.

We applied the methodology of section [\ref=sec:3d] to natural images in the ETH-80 dataset [\cite=leibe2003]. The dataset spans 8 object categories with 10 instances each captured under 41 viewpoints. As the dataset is significantly smaller than the ModelNet database, this limits considerably the number of variations we can explore. Results using AlexNet features are shown in table [\ref=tab:eth]. The high-level conclusions are the same as those of section [\ref=sec:3d], but the differences are less obvious. The variance is explained more by the style and less by the viewpoint and residual as one progresses toward the higher layers in the network. Please see detailed results for each category in the supplementary material.

Conclusion

We have introduced a method to qualitatively and quantitatively analyze deep features by varying the network stimuli according to factors of interest. Utilizing large collections of 3D models, we applied this method to compare the relative importance of different factors and have highlighted the difference in sensitivity between the networks and layers to object style, viewpoint and color. We believe our analysis gives new intuitions and opens new perspectives for the design and use of convolutional neural networks.

Acknowledgments.

Mathieu Aubry was partly supported by ANR project Semapolis ANR-13-CORD-0003, Intel, a gift from Adobe, and hardware donation from Nvidia.