Solving One-Variable Equations in Free Groups

Introduction

A one variable equation E(x)  =  1 of degree d in a finitely generated free group F is an expression of the form

[formula]

composed of elements ui∈F, integers εi  =    ±  1 and a symbol x not in F. A solution to ([\ref=equation]) is an element g∈F such that substitution of g for x yields 1 in F.

Lyndon [\cite=RCL1] was the first to study equations of this sort. He characterized solution sets in terms of parametric words. The parametric words involved were simplified by Lorents [\cite=Lo1] [\cite=Lo2] and Appel [\cite=Ap]. However, Lorents announced his results without proof, and Appel's published proof has a gap (see [\cite=CR]). A complete proof has been provided recently by Chiswell and Remeslennikov [\cite=CR].

Chiswell and Remeslennikov's novel analysis involves algebraic geometry ([\cite=BMR], [\cite=MR1].) First they describe the isomorphism types of the coordinate groups of irreducible one-variable equations over F, and then they deduce the structure of the solution sets. The latter part is easy, but the former requires sophisticated techniques involving ultrapowers and Lyndon length functions. The key point is that coordinate groups of irreducible equations over F are subgroups of the ultrapower FI / D of F over a countable set I with a non-principal ultrafilter D.

One can view the group F as a subgroup of FI / D under the canonical diagonal embedding. From this point of view the coordinate groups are precisely the finitely generated subgroups of FI / D containing F i.e., the so-called F-subgroups. In particular up to isomorphism the coordinate groups of irreducible one-variable equations over F are the subgroups of FI / D of the form 〈F,g〉, g∈FI / D.

Investigation of such F-subgroups of FI / D is not easy and involves a careful analysis of Lyndon functions. (It might be interesting to see whether it is easier to use free actions on Λ-trees.) The computations can be simplified by employing a result from [\cite=KM] which states that the coordinate groups of irreducible varieties are precisely the finitely generated F-subgroups of the free exponential Lyndon group [formula]. As this group is the union of an infinite ascending chain of extensions of centralizers of F [\cite=MR2], one can use Bass-Serre theory to study F-subgroups of [formula].

Chisewell and Remeslennikov's method is very powerful and potentially useful for more than just free groups. However, it does have the disadvantage of not giving an algorithm for explicitly describing the set of solutions.

This paper is a refinement and extension of [\cite=GiMy] where results from formal language theory are used to describe solution sets of one-variable equations in free groups. As it turns out, formal language techniques are not required; straightforward cancellation arguments suffice. It seems likely that these arguments can be extended to other groups admitting suitable (not necessarily Lyndon) length functions. The main advantage of this method is that it is short and yields a polynomial time algorithm for producing a description of all solutions. This algorithm has been implemented by the first author [\cite=Bo].

The solution set for a one variable equation of positive degree in a free group F is a finite union of sets uviw where u,v,w∈F and i ranges over all integers. There is a polynomial time algorithm for finding these sets.

Let Σ be a set of free generators for F together with their inverses, and let [formula] be the free monoid over Σ. We consider Equation ([\ref=equation]) in terms of words in [formula]. Each coefficient ui is represented by a freely reduced word (also denoted ui) in [formula]. From this point of view [formula] is a word in the free monoid over [formula], and a solution to E(x)  =  1 is a word [formula] such that E(s) is freely equal to the empty word. The first assertion of Theorem [\ref=th:main] is equivalent to saying that for some finite union of sets of words uviw the solutions set consists of all words freely equal to elements of the finite union. A set uviw is called a parametric word.

We assume without loss of generality that E(x) is freely reduced, and call d the degree of E(x). If d  =  0, then E(x)  =  u0. In this case the solution set is empty if E(x)  ≠  1 and all of [formula] if E(x)  =  1. If the equation has degree one, it is easy to find its unique solution. From now on we consider only equations of degree at least two.

We begin with some lemmas on cancellation, after which we find a finite number of parametric words uviw and uviwrjs which contain all solutions to E(x)  =  1 up to free equivalence. Next we show that two parameters are not required and that uviw is either a solution for all integers i or for an effectively determined finite subset. At the end we present the algorithm and estimate its time complexity.

To explain our argument in more detail we require a few definitions. For any (word) g∈F we say that the ith occurrence of g cancels out in E(g) if there exists a way to freely reduce E(g) such that all letters from gεi cancel out during this reduction process.

We say that g is a pseudo-solution of E(x)  =  1 if some occurrence of g cancels out in E(g). Obviously every solution of E(x)  =  1 is also a pseudo-solution of E(x)  =  1. However, unlike solutions, pseudo-solutions admit a nice reduction theory.

Our key idea is to study pseudo-solutions of equations instead of solutions. The first result in this direction (stated in [\cite=GiMy] in a slightly different form) reduces the situation to cubic equations. Namely, Lemma [\ref=reduction] shows that if g is a pseudo-solution of E(x)  =  1 in F then g is a pseudo-solution of a cubic equation of the type

[formula]

where 0 < j  <  d and indices are read modulo d (so ud = u0.) Next in Lemma [\ref=parametric_words] we show that pseudo-solutions of cubic equations are in fact pseudo-solutions of some particular quadratic equations which one can find effectively. Finally, Lemmas [\ref=sus] and [\ref=susinv] give a precise description of pseudo-solutions of quadratic one-variable equations over F in terms of parametric words. Combining all these results we obtain description of all pseudo-solutions of E(x)  =  1 in terms of parametric words in two parameters.

The rest of our proof explains precisely how to use only one parameter to describe solutions of E(x)  =  1. The method of big powers (see [\cite=BMR2]) is the key tool in the second part. This means that the argument is rather general - it works in many other groups that satisfy the big powers condition (see [\cite=KvM]), for example torsion-free hyperbolic groups.

One-variable equations are the only general class of equations in free groups for which a good description of solution sets as well as a practical (polynomial time) algorithm are known. In his seminal paper [\cite=Mak82] Makanin proved decidability of the Diophantine problem in free groups F (whether or not a given equation has a solution in F); however, his original algorithm is very inefficient - not even primitive recursive (see [\cite=KoKoPa]). In the fundamental paper [\cite=Razborov] Razborov gave a description of solution sets of arbitrary equations in F. Though this description is extremely complicated, it was useful in the solution of several deep problems in group theory [\cite=KM2] [\cite=KM3] [\cite=BKM] including the Tarski's problems [\cite=KM4]. In another paper [\cite=Razborov2] Razborov showed that, in general, there is no easy description of solutions sets of equations in F. Later, Plandowski gave a much improved P-space version of the decision algorithm for equations in free monoids [\cite=Plandowski], and Gutierrez devised a P-space algorithm for the decision problem for equations in free groups [\cite=Gu]. Recent results [\cite=DGH] due to Diekert, Gutierrez, and Hagenah, indicate that the decision problem for equations in free groups might be P-space-complete, though nothing definite has been proven so far. These results on the complexity of the decision problem for equations in free groups and for their solution sets make the existence of subclasses of equations admitting polynomial decision algorithms and descriptions of solutions sets in closed form, all the more remarkable.

Cancellation Lemmas

As above Σ is a set of free generators and their inverses for a free group F, and [formula] is the free monoid over Σ. Let p,q,r,s,t,u,v,w be words in [formula]. We write u  ~  v if u is freely equal to v, and u  →  v if u can be reduced to v by cancellation of subwords aa- 1, a∈Σ. In particular u  →  u. The empty word is denoted 1, and the length of u is |u|. Recall that for any word u there is a unique irreducible word v such that u  →  v, and further u  ~  w if and only if w  →  v.

We introduce some additional notation.

Let w be any word.

w' stands for an arbitrary prefix of w and w'' for an arbitrary suffix.

||wc is the length of a cyclicly reduced word conjugate to w.

If v  →  u and [formula], then [formula] with vi  →  ui.

Use induction on n, the number of cancellations necessary to reduce v to u. If n  =  0, then u  =  v and there is nothing to prove. Otherwise let the first reduction be v  →  w. By induction [formula] with wi  ~  ui. As v is obtained from w by inserting a subword aa- 1 into some wi or appending it to the beginning or end of some wi, v has the desired factorization.

Consider a fixed sequence of cancellations which reduces u to v. If two particular letters of u cancel at some point in the sequence, then either they are adjacent in u or the subword between them has been reduced to 1 by previous cancellations.

Use induction on the length of the cancellation sequence.

Now we slightly generalize the definition of a pseudo-solution of equation to the following situation.

A subword s of w is a pseudosolution if there is a sequence of cancellations in w which consumes all letters in s.

We are dealing with words over Σ, not group elements. For example s  =  ab- 1 is a pseudosolution of asba- 1a but not of asb. The next two lemmas can be proved by straightforward induction on the length of an appropriate cancellation sequence.

Suppose s is a pseudosolution of w  =  usv, then s  =  s1s2 with s1 a pseudosolution of us1 and s2 a pseudosolution of s2v.

Let s be a pseudosolution of w, and fix a cancellation sequence. The smallest subword of w which contains s and all letters in w canceling with letters of s is freely equal to 1.

A subword s of w is a pseudosolution if and only if there is a word t such that s is a subword of t, t is a subword of w, and t  ~  1.

If t exists, then t  ~  1 implies t  →  1 whence t and all its subwords are pseudosolutions of w. For the converse apply Lemma [\ref=subword].

If us and sw are irreducible and if either occurrence of s is a pseudosolution of usvsw, then s  ~  v- 13v- 11 for some factorization v  =  v1v2v3.

We argue by induction on n, the length of a cancellation sequence. If n  =  0, then s  =  1 in which case we take u1  =  u3  =  1 and u2  =  u. If v  =  1, then usvsw  =  ussw. As us and sw are irreducible, the only reduction possible involves cancellation at the boundary between us and sw. It follows that ss  ~  1, whence s  ~  1.

Assume n  >  0 and v  ≠  1. If the first reduction is within v, then v  →  p and by induction s  ~  p- 13p- 11 for some factorization p  =  p1p2p3. Lemma [\ref=factorization] implies v  =  v1v2v3 with vi  ~  pi and s  ~  v- 13v- 11.

The remaining possibilities are cancellation at the boundary between s and v or the boundary between v and s. Consider the first case; the second is similar. We have s  =  ta- 1 and v  =  ap for some letter a and words t and p. The induction hypothesis applied to utpt(a- 1w) yields p  =  p1p2p3 and t  ~  p- 13p- 11. But then v  =  ap  =  (ap1)p2p3 and s  =  ta- 1  ~  p- 13(ap1)- 1 as desired.

Suppose [formula]. If us and s- 1w are irreducible and s or s- 1 is a pseudosolution of usvs- 1w, then s  ~  v''vk for some integer k. (See Definition [\ref=notation].) Likewise if us- 1 and sw are irreducible and s or s- 1 is a pseudosolution of us- 1vsw, then s  ~  vkv'.

Consider the first part; as before use induction on n, the number of cancellations. If n  =  0, then s  =  1. Take v1  =  v,v2  =  1 and k  =  0. Otherwise the first reduction is either within v or at one end or the other of v. In the first case v  →  v', and the induction hypothesis applied to usv's- 1w yields the desired result.

Suppose then that there is a reduction at the left end of v; the other case is similar. We have s  =  ta- 1, v  =  ap, and application of the induction hypothesis to ut(pa)t- 1w yields pa  =  p1p2 and t  ~  p2(pa)k. It follows that s  ~  p2(pa)ka- 1  ~  p2a- 1a(pa)ka- 1  ~  p2a- 1vk. If p2  ≠  1, then p2  =  v2a for some suffix v2 of v whence s  ~  v2vk. If p2  =  1, then s  ~  a- 1vk  ~  a- 1vvk  -  1  ~  pvk  -  1. As p is a suffix of v, the first assertion holds. The second assertion follows from the first upon replacement of s by s- 1.

If s is a pseudosolution of tus, t is a pseudosolution of tvs, and st is irreducible, then s  ~  (v- 1u)i(v- 1u)' and t  ~  (vu- 1)''(vu- 1)j for some integers i,j.

Application of Lemma [\ref=subword] to tus implies either u  =  u1u2 with u2s  ~  1 or t  =  t1t2 with t2us  ~  1. Consider the first case. We have s  ~  u- 12  ~  (v- 1u)- 1(v- 1u1) as required. Further u- 12  →  s implies that t is a pseudosolution of tvu- 12 and hence of tvu- 1. Thus either v  =  v1v2 with t  ~  v- 11 or u  =  u3u4 with t  ~  (vu- 14)- 1. But then t  ~  (v2u- 1)(vu- 1)- 1 or t  ~  (u- 13)(vu- 1)- 1, and we see that t has the right form. A similar analysis starting with starting with tvs also works.

It remains to consider the case t  =  t1t2 with t2us  ~  1 and s  =  s1s2 with tvs1  ~  1. Suppose u  ~  v. We have t  =  t1t2 with t2us  ~  1 and s  =  s1s2 with tus1  ~  1. If t1  =  1, then tus  ~  1 implies st  ~  u- 1. As st is irreducible, Lemma [\ref=factorization] yields s  ~  (u- 1)'  =  (v- 1)' and t  ~  (u- 1)'' which is included in i  =  j  =  0. If t1  ≠  1, it follows from t2us1s2  ~  1  ~  t1t2us1 that t1  ~  s2. As st is irreducible, t1 and s2 are too. Thus t1  =  s2  ≠  1. Hence s1s2t2  =  s1t1t2 is irreducible. But then s1s2t2  ~  u- 1  ~  s1t1t2 implies s  ~  (v- 1)',t  ~  (u- 1)'' as before.

Finally suppose t  =  t1t2 with t2us  ~  1, s  =  s1s2 with tvs1  ~  1, and [formula]. From t2us  ~  1 we deduce u- 1t- 12  →  s. Hence t is a pseudosolution of tvu- 1t- 12 and all the more of tvu- 1t- 12t- 11  =  tvu- 1t- 1. Likewise s is a pseudosolution of s- 1v- 1us. We are done by Lemma [\ref=susinv].

Let st be irreducible. If the right-hand occurrence of s is a pseudosolution in stus but not in tus, then st  ~  u- 13u- 11 for some factorization u  =  u1u2u3. Likewise if the left-hand occurrence of t is a pseudosolution in tvst but not in tvs, then st  ~  v- 13v- 11 for some factorization v  =  v1v2v3.

Consider the first part; the second is treated similarly. We have s  =  pq with q  ≠  1 and qtus  ~  1. Since st is irreducible, so is qt. It follows that t is a pseudosolution of tus. If t is not a pseudosolution of tu, then s  =  ef with tue  ~  1. But then qf  ~  1 forces f to be a pseudosolution of pqf  =  sf  =  eff, and Lemma [\ref=sus] implies f  ~  1. Consequently tuef  =  tus  ~  1 contrary to our hypothesis that s is not a pseudosolution of tus.

It remains to deal with the possibility that t is a pseudosolution of tu. In this case u  =  u1u2 with t  ~  u- 11. It follows that qu2s  ~  1 whence the right-hand occurrence of s is a pseudosolution in su2s. An application of Lemma [\ref=sus] completes the proof.

Suppose piuqj  ~  v, i,j  ≥  0, and i||pc  +  j||qc  ≥  2||p  +  2||q  +  ||u  +  ||v. (Recall Definition [\ref=notation].) Further assume that p and q are not freely equal to proper powers. Under these conditions uqu- 1  ~  p- 1.

Assume the Lemma holds when both p and q are cyclicly reduced, and consider the case that they are not. Free reduction of p and q yields reduced words p1p2p- 11  ~  p, q1q2q- 11  ~  q with p2,q2 cyclicly reduced. Hence pi2(p- 11uq1)qj2  ~  p- 11vr1. Rewriting p- 11uq1 as u2 and p- 11vq1 as v2 we obtain pi2u2qj2  ~  v2. As i|p2|c  +  j|q2|c = i||pc  +  j||qc  ≥  2||p  +  2||q  +  ||u  +  ||v  ≥  2|p2|  +  2|u2|  +  |q2|  +  |v2|, we have u2q2u- 12  ~  p±  12. Hence uqu- 1  ~  (p1u2q- 11)(q1q2q- 11)(q1u- 12p- 11)  ~  p1u2q2u- 12p- 11  ~  p1p±  12p- 11  ~  p- 1.

It remains to deal with the case that p and q are cyclicly reduced. Without loss of generality assume that u and v are freely reduced and i,j  ≥  0. Thus there is a sequence of (1 / 2)(|piuqj| - ||v)  =  (1 / 2)(i||p  +  j||q  +  ||u  -  ||v)  ≥  ||p  +  ||q  +  ||u cancellations which reduces piuqj to v.

Since cancellation can occur only at either end of u, the first ||u cancellations must consume u. In other words u cancels with a suffix of pi and a prefix of qj. For some factorizations p = p1p2 and q = q1q2 we have u = (p2pi2)- 1(qj1q1)- 1 with i = i1 + 1  +  i2 and j = j1 + 1 + j2. Consequently pi1p1q2qj2 admits at least ||p  +  ||q cancellations. Thus the infinite sequences [formula] and [formula] have the same prefix of length |p|  +  |q|. As these sequences have periods |p| and |q| respectively, they are identical by [\cite=FW]. But then the fact that (p- 11p- 12)||q and (q2q1)||p have the same length implies that they are equal. Since p and q are not proper powers, neither are (p- 11p- 12) and q2q1. It follows that p- 11p- 12  =  q2q1, and this equation implies in a straightforward way that uqu- 1  ~  p- 1.

Suppose that qj is a pseudosolution of piuqjvrk, ||j||qc  ≥  7(||p  +  ||u  +  ||q  +  ||v  +  ||r); and p,q,r are not proper powers. Then either q  ~  1 or ||i  ≥  1 and u- 1pu  ~  q±  1 or ||k  ≥  1 and vrv- 1  ~  q±  1.

Without loss of generality assume i,j,k  ≥  0. By Lemma [\ref=split] q factors as q1q2 and qj factors as (qj1q1)(q2qj2) in such a way that qj1q1 is a pseudosolution of piuqj1q1, and q2qj2 is a pseudosolution of q2qj2vrk. Clearly one of j1,j2 is no smaller than (j - 1) / 2. Assume it is j1; the argument is similar in the other case.

By Lemma [\ref=subword] qj1q1 extends to a suffix of piuqj1q1 which is freely equal to 1. If that suffix is contained in uqj1q1, then u = u1u2 with qj1  ~  u- 12q- 11. Hence qj1 freely reduces to a word w with ||w  ≤  ||u  +  ||q. On the other hand ||w  ≥  j1||qc  ≥  .5(j - 1)||qc  ≥  3.5(||p  +  ||u  +  ||q) - .5||q  ≥  3(||p  +  ||q  +  ||u). But then ||p  =  ||q = ||u = 0, which implies q  ~  1.

It remains to consider the case that the suffix is not contained in usj1s1. In particular i  ≥  1. For some factorization p = p1p2 and m  ≤  i we have p2pmuqj1q1  ~  1. Thus pmuqj1  ~  p- 12q- 11. As above j1||qc  ≥  3(||p  +  ||q  +  ||u)  ≥  2||p  +  2||q  +  ||u  +  |p- 12q1|. Lemma [\ref=powers1] applies and yields uqu- 1  ~  p±  1.

Parametric Words

In this section we show how to find a finite set of words and parametric words uviwrjs which together contain all solutions to Equation ([\ref=equation]).

Let s be any freely reduced word which is a solution to Equation ([\ref=equation]). Substitution of s for x yields a word

[formula]

such that E(s)  →  1.

Fix a sequence of cancellations which reduces E(s) to 1, and let sεj be the first of the subwords s±  1 to be consumed. If there is a tie, pick either subword. Observe that the letters in sεj must cancel with nearby letters in E(s). If a letter in sεj canceled to the right of sεj  +  1, then by Lemma [\ref=cancellation] sεj  +  1 would disappear before sεj. Likewise no letter of sεj  +  1 cancels to the left of sεj  -  1. We have the following result.

One of the following holds.

sε0 is a pseudosolution of u0sε0u1sε1;

For some j strictly between 0 and d - 1, sεj is a pseudosolution of sεj  -  1ujsεjuj + 1sεj  +  1;

sεd - 1 is a pseudosolution of sεd  -  2ud - 1sεd - 1.

It is convenient to use the following immediate consequence of Lemma [\ref=reduction].

For some j between 0 and d - 1, sεj is a pseudosolution of sεj  -  1ujsεjuj + 1sεj  +  1. Here indices are read modulo d; e.g., ud = u0.

It follows from Lemma [\ref=cyclic-reduction] that application of the following lemma to all successive pairs of coefficients u  =  ui, v  =  ui  +  1 (with indices read modulo d) yields a set of words and parametric words containing s or s- 1 for every solution s to Equation [\ref=equation].

If α,β  =    ±  1 and s is an irreducible pseudosolution to sαusvsβ, then one of the following holds. (Recall Definition [\ref=notation].)

s  ~  (v- 1u)i(v- 1u)'(vu- 1)''(vu- 1)j;

s  ~  (u- 1)'(u- 1)'' or (v- 1)'(v- 1)'';

s  ~  (u- 1)'viv'v''vj or uiu'u''uj(v- 1)'';

s  ~  uiu'v''vj.

By Lemma [\ref=split] s  =  s1s2 with s1 a pseudosolution of sαus1 and s2 a pseudosolution of s2vsβ. There are four cases. First if α  =    -  1,β  =    -  1, Lemma [\ref=susinv] applied to s- 12s- 11u and vs- 12s- 11 yields ([\ref=iv]).

If α  =  β  =  1, we have s1s2u and vs1s2 where the pseudosolutions are underlined. It may happen that s1 is pseudosolution of s2us1 and s2 is a pseudosolution of s2vs1. In this case Lemma [\ref=ts] applies and ([\ref=i]) holds. Otherwise either s1 is not a pseudosolution of s2us1 or s2 is not a pseudosolution of s2vs1. In both cases Lemma [\ref=stus] implies ([\ref=ii]).

Suppose α  =  1,β  =    -  1. In this case s1s2u and vs- 12s- 11. By Lemma [\ref=stus] either s in included in ([\ref=ii]) or s2u whence s1 is freely equal to the inverse of a suffix of s2u. Equivalently s1 is freely equal to a prefix of (s2u)- 1. But Lemma [\ref=susinv] implies s2  ~  v2vj for some integer j and factorization v  =  v1v2. It follows from Lemma [\ref=factorization] that s1 is freely equal to a prefix of (v2vju)- 1. Consideration of the possible cases yields ([\ref=iii]).

A similar argument works when α  =    -  1,β  =  1 and shows that ([\ref=ii]) or ([\ref=iii]) holds.

Solutions

In order to find all solutions to Equation ([\ref=equation]) we need to test the possibilities given by Lemma [\ref=parametric_words]. It is straightforward to test the single words; the parametric words require more work. They have the form rpisqjt. Without loss of generality we assume that p and q are not proper powers. By introducing words of the form rpis we may assume [formula].

Consider rpis. Substitute rys for x in Equation [\ref=equation] to obtain an equation [formula] in the indeterminate y with coefficients vj of the form sujr, sujs- 1 etc. Note that rpis is a solution of E(x) if and only if pi is a solution of E'(y). Also the sum of the lengths of the coefficients of E'(y) is [formula]. Denote this number by K1.

If a coefficient vj commutes with p, i.e. vjp  ~  pvj, then the subword yεj - 1vjyεj of E'(y) may be replaced by vjyεj - 1  +  εj without affecting the set of i's for which pi is a solution. This is true even if indices are read modulo d. The coefficients in E'(y) will change, but [formula] remains constant. In particular the sum of the length of the coefficients is still K1.

Continue replacements of this sort until reaching an equation of the form [formula] with m minimal. It may be that m = 0 and E''(y)  =  w0. In this case pi is a solution for all i if [formula] and for no i otherwise. Similarly if E''(y)  =  w0yk0, then pi is a solution if and only if w0  ~  p- ik0. In this case the free reduction of pik0 is a word of length at least ||ik0||pc and at most ||w0 = K1. Consequently ||i||pc  ≤  ||ik0||pc  ≤  K1.

The remaining possibility is that [formula] with m  ≥  2, all kj  ≠  0 and no wj commuting with p. No wj conjugates p to p- 1 either, as p and p- 1 are not conjugate in the free group F. If pi is a solution, then by Lemma [\ref=cyclic-reduction] (with E''(y) in place of E(x)) some pikj must be a pseudosolution of pikj - 1wjpikjwj + 1pikj + 1. Lemma [\ref=powers2] now implies that ||i||pc  <  7(||p  +  ||wj  +  ||p  +  ||wj  +  1  +  ||p)  ≤  21||p  +  7K1. We have proved the following lemma.

If rpis is a solution to E(x) = 1 for some i with [formula], then rpis is a solution for all i.

Consider a solution rpisqjt to E(x) = 1. Define [formula]. We will show that either ||i||pc or ||j||qc is no larger than K2d. Thus each parametric word rpisqjt from Lemma [\ref=reduction] with two parameters may be replaced by a collection of parametric words with just one parameter, namely rpi0sqjt, rpisqj0t with with |i0|||pc  ≤  K2d and |j0|||qc  ≤  C2d.

Without loss of generality suppose that i,j  ≥  0, and p and q are not proper powers. In particular the centralizers in the free group F of p and q are the cyclic subgroups generated by p and q respectively.

Suppose p is not conjugate to q or q- 1 and rpisqjt is a solution to E(x) = 1. Then either ||i||pc or ||j||qc is no larger than [formula].

First suppose that s  ~  1 and take the solution to be rpiqjt. Write [formula]. The vk's are coefficients; call the (pi)εk's and (qj)εk's powers. Consider how a coefficient vk might conjugate the power on one side of itself to the power on the other side. As p is not conjugate to q or q- 1, vk would either lie in a subword vk - 1piqjvkq- jp- ivk + 1 and centralize q or in a subword vk - 1q- jp- ivkpiqjvk + 1 and centralize p. Consequently vk is freely equal to a nontrivial power (because E(x) is freely reduced) of q in the first case and a nontrivial power of p in the second. W is freely equal to the word obtained by deleting the powers on either side of vk.

Let W' be the word obtained from W by performing all the deletions discussed in the previous paragraph. Notice that the first and last powers of W survive and that the new coefficients are either old coefficients which do not conjugate their adjacent powers into each other or products [formula] of successive coefficients whose adjacent powers in W have been deleted. In the latter case the coefficient is an alternating product of nontrivial powers of p and q.

Since W'  ~  1, some power is a pseudosolution in a subword of W' consisting to up to three powers and the coefficients between them. The sum of the length of the coefficients of W' is the same as that of W, namely [formula]. If ||i||pc and ||j||qc exceed the bound given above, then Lemma [\ref=powers2] applies and (as p is not conjugate to q or q- 1) implies that some coefficient conjugates one adjacent power to the other. But this is impossible either because the coefficient is inherited from W or because the coefficient is an alternating product of nontrivial powers of p and q, and the conjugation would be a nontrivial relation satisfied by p and q, which generate a free group of rank two.

It remains to reduce to the case s  ~  1. Assume [formula], and rewrite the solution as rpi(sqs- 1)j(st). One of ||i||pc or ||j||sqs -  1c = ||j||qc is at most [formula].

Finally, consider a solution rpisqjt to E(x) = 1 with p conjugate to q or q- 1. With appropriate changes to r,s,t and j, rpisqjt may be rewritten as rpispjt where p is cyclicly reduced and s does not commute with p.

Define [formula], and argue as before. The coefficients now include the subwords s±  1 as well as the vk's. Consider how a vk might conjugate the power on one side of itself to the power on the other side. Since all powers are powers of p, vk would commute with p and hence would itself be freely equal to a power of p. If εkεk + 1 =  - 1, then [formula] and the powers on either side cancel. However, if εkεk + 1 = 1, then the powers do not necessarily cancel but combine to form a power p±  (i + j).

Let W' be the word obtained from W by performing all the deletions and combinations of powers discussed in the previous paragraph. Notice that the first and last powers of W survive and that the new subwords between powers surviving from W are either coefficients from W which do not conjugate their adjacent powers into each other or alternating products [formula] where the vj's which occur are freely equal to powers of p. Further if pkj occurs between s and s- 1, then kj = 0 and vj is freely equal to a nontrivial power of p, while if pkj occurs between two s's or two s- 1's, then kj  =    ±  (i + j).

There are two possibilities. First if |(i + j)|||pc  ≥  K2, then we may consider the subwords p±  (i + j) to be powers like the p±  i's and p±  j's surviving from W and the subwords between the powers as coefficients. Lemma [\ref=powers2] applies and implies that some coefficient conjugates one adjacent power to the other and hence is a power of p. But this is impossible either because the coefficient is inherited from W or because the coefficient is an alternating product of nontrivial powers of p and s, and the conjugation would be a nontrivial relation satisfied by the subgroup generated by p and s, which is free of rank two.

Second if ||(i + j)||pc  <  K2, we take just the the p±  i's and p±  j's from W to be powers. The coefficients are either inherited from W or alternating products [formula] as above. In this case |(i + j)|||p = ||(i + j)||pc  ≤  K2, and the total length of the coefficients increases to at most K2  +  (d - 1)|(i + j)|||p  ≤  dK2. Lemma [\ref=powers2] applies and yields the following lemma.

Suppose p is conjugate to q or q- 1 and rpisqjt is a solution to E(x) = 1. Then ||i||pc or ||j||qc is no larger than dK2.

The Algorithm

The algorithm implicit in the preceding analysis may be described as follows.

The input is an equation [formula] of degree d  ≥  2 and with freely reduced coefficients from a free monoid Σ* over a set Σ of generators and their inverses for a free group F.

Let L be the list of words and parametric words and their inverses from Lemma [\ref=parametric_words]. Rewrite the parametric words so that they are either ordinary words or have the one of the forms rpis or rpisqjt with [formula], p,q not proper powers, and in the latter case [formula].

For each ordinary word w∈L test E(w)  ~  1 and E(w- 1)  ~  1. Remove w from L.

Replace each parametric word rpisqjt with words rpisqj0t and rpi0sqjt for all i0,j0 with |i0|||pc  ≤  dK2 and |j0|||qc  ≤  dK2 where K2 is as in Lemma [\ref=nonconjugate].

For each word of the form w = rpiq in L, if E(rpi0s)  ~  1 where i0 is the least integer greater than [formula], then x = rpis is a solution for all i, otherwise test E(rpi1s)  ~  1 for all |i1| < i0.

We leave it to the reader to check that our preceding analysis implies the correctness of the above algorithm. To bound the time complexity let ||L be the length the list from Step 2 and M the maximum of |rpsqt| for each entry rpisqjt. Note that M is also an upper bound for the length of the coefficients of E(x) and that the constant K2 from Lemma [\ref=nonconjugate] is O(dM).

Steps 2 and 3 are accomplished in time O(M||L), and Step 4 in time O(dK2M||L). Let L' be the augmented list from Step 4. |L'|  =  O(dK2||L) = O(d2M||L), and each entry in L' has the form rpis with |rps| = O(dMK2) = O(d2M2).

For each entry there are O(M  +  dM  +  d2MK2) = O(d3M2) tests performed in Step 5. The time to test the entry rpis is linear in the length of E(rpis), which is [formula]. Thus the total time for Step 5 is O(|L'|  ·  (d3M2)  ·  (d5M3)) = O((d2M||L)  ·  (d3M2)  ·  (d5M3)) = O(d10M6||L) . Clearly this estimate bounds the time of the complete algorithm.

Finally let m be the maximum size of a coefficient in E(x). If follows from Lemma [\ref=parametric_words] that M = O(m) and that ||L  =  O(dm3). Thus the time complexity of our algorithm is O(d11m9).