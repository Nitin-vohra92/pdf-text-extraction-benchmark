.def 226F

Theorem Proposition Lemma Definition Example Corollary Conjecture

The Number of Spanning Trees in Apollonian Networks

Apollonian networks

In the process known as Apollonian packing [\cite=KaSu43], which dates back to Apollonius of Perga (c262-c190 BC), we start with three mutually tangent circles, and draw their inner Soddy circle (tangent to the three circles). Next we draw the inner Soddy circles of this circle with each pair of the original three, and the process is iterated, see Fig. [\ref=Fig.1].

An Apollonian packing can be used to design a graph, when each circle is associated to a vertex of the graph and vertices are connected if their corresponding circles are tangent. This graph, known as Apollonian graph or two-dimensional Apollonian network, was introduced by Andrade et al. [\cite=AnHeAnSi05] and independently proposed by Doye and Massen in [\cite=DoMa05].

We provide here the formal definition and main topological properties of two dimensional Apollonian networks. We use standard graph terminology and the words "network" and "graph" indistinctly.

An Apollonian network A(n), n  ≥  0, is a graph constructed as follows:

For n = 0, A(0) is the complete graph K3 (also called a 3-clique or triangle).

For n  ≥  1, A(n) is obtained from A(n - 1): For each of the existing subgraphs of A(n - 1) that is isomorphic to a 3-clique and created at step n - 1, a new vertex is introduced and connected to all the vertices of this subgraph. Figure [\ref=Fig.2] shows this construction process.

The order and size of an Apollonian graph A(n) = (V(n),E(n)) are [formula] and [formula]. The graph is scale-free with a power law degree distribution with exponent -   ln 3 /  ln 2. Many real networks share this property with exponent values in the same range as A(n) [\cite=Ne03]. From the Pearson correlation coefficient for the degrees of the endvertices of the edges of A(n) the exact value of the correlation coefficient can be obtained and it is always negative and goes to zero as the order of the graph increases. Thus the network is disassortative. Most technological and biological networks are disassortative as it is also the case of some information networks, see [\cite=Ne03] [\cite=SoVa04]. It is also possible to obtain the exact analytical value of the average distance of A(n) [\cite=ZhChZhFaGuZo08] which, for n large, follows (n)  ~   ln |Vn| and shows a logarithmic scaling with the order of the graph. As the diameter has a similar behavior [\cite=ZhCoFe05], the graph is small-world. Moreover, Apollonian graphs are maximally planar, modular, Euclidean and space filling [\cite=AnHeAnSi05] [\cite=ZhYaWa05]. Dynamical processes taking place on these networks, such as percolation, epidemic spreading, synchronization and random walks, have been also investigated, see [\cite=HuXuWuWa06] [\cite=ZhRoCo05] [\cite=ZhRoZh06] [\cite=ZhYaWa05] [\cite=ZhZh07]. Some authors even suggest that the topological and dynamical properties of Apollonian networks are characteristic of neuronal networks as in the brain cortex [\cite=PeArHePe07].

In this paper we study the number of spanning trees of two-dimensional Apollonian networks. This study is relevant given the importance of the graphs, and because the number of spanning trees of a finite graph is a graph invariant which characterizes the reliability of a network [\cite=Co87] and is related to its optimal synchronization and the study of random walks [\cite=Ma00]. The number of spanning trees of a graph can be obtained from the product of all nonzero eigenvalues of the Laplacian matrix of the graph [\cite=GoRo01] (Kirchhoff's matrix-tree theorem). However, although this result can be applied to any graph, this calculation is analytically and computationally demanding. In [\cite=LiWuZhCh11], the number of spanning trees of two-dimensional Apollonian networks is found without an explicit proof, by using Kirchhoff's theorem and a recursive evaluation of determinants. Here, we follow a different approach. Our method provides the number of spanning trees in Apollonian networks through a process based on the self-similarity of graphs. The main advantage of this method is that it uses a recursive enumeration of subgraphs. Thus, the final tree count does not rely on results published elsewhere and the proof is self-contained.

The number of spanning trees in Apollonian networks

In this section we find the number of spanning trees of the Apollonian network A(n). For this calculation we apply a method [\cite=KnVa86] which has been used to find the number of spanning trees in other recursive graph families like the Sierpiski gasket [\cite=ChChYa07] [\cite=TeWa06], the pseudofractal web [\cite=ZhLiWuZo10], and some fractal lattices [\cite=Dh77] [\cite=TeWa11] [\cite=ZhLiWuZo11]. The main result can be stated as follows.

The number of spanning trees of the Apollonian network A(n) is

The definitions and lemmas that follow provide the proof of this theorem.

From Fig. [\ref=Fig.2], we see that Apollonian networks are self-similar, suggesting an alternative way to construct them. As shown in Fig. [\ref=Fig.3], A(n + 1) can be obtained by joining three replicas of A(n), labeled by A(n)1, A(n)2 and A(n)3, and merging three pairs of edges. This particular structure of Apollonian networks allow us to write recursive equations for the number of spanning trees, which are solved by induction.

In the following, we denote by Vn and En the number of vertices and edges of A(n). A spanning subgraph of A(n) is a subgraph with the same vertex set as A(n) and a number of edges [formula] such that [formula]. A spanning tree of A(n) is a spanning subgraph which is a tree and thus [formula].

We call "hub vertices" the three outmost vertices in the construction as shown in Fig. [\ref=Fig.2] and "hub edges" the three exterior edges which connect the hub vertices.

To simplify our calculations, we introduce the following five classes of spanning subgraphs of A(n), see Fig. [\ref=Fig.4]: Class An has all spanning subgraphs of A(n) which consist of three trees and such that each hub vertex of A(n) belongs to a different tree. Next three classes contain those spanning subgraphs of A(n) which consist of two trees such that no hub edges belong to the spanning subgraph and one of the hub vertices of the subgraph belongs to one tree and the other two hub vertices are in the second tree. By taking into account the tree to which a given hub vertex belongs we have classes Bn, [formula] and [formula], Note that all subgraphs in each of these classes can be obtained, by a given symmetry, from those in any of the other two classes (see  Fig. [\ref=Fig.4]). Finally, class Cn contains all spanning trees of A(n) which have no hub edges.

These classes have cardinality an, bn, [formula], [formula] and cn, respectively. Note that [formula]. We denote as sn the total number of spanning trees of A(n). In Fig. [\ref=Fig.5] we show the elements of these classes for n = 0,1.

This classification is introduced to facilitate the iterative calculation of the number of spanning trees as all spanning trees of A(n + 1) can be constructed from subgraphs of A(n) through the merging process introduced above (Fig. [\ref=Fig.3]).

In the previous definitions, we have not considered the cases where the spanning subgraph contains hub edges. We deal with these cases in the following lemma.

The number of spanning subgraphs of A(n) which consist of two trees such that one hub edge with its two hub vertices belongs to one tree while the third hub vertex of A(n) is in the other tree equals an.

The number of spanning subgraphs of A(n) such that they contain just one hub edge and one hub vertex which is connected to one of the hub vertices of this edge through edges of the tree is bn.

The number of spanning subgraphs of A(n) that include two hub edges is an.

Let Dn be the set of subgraphs considered in (a). We verify the correctness of the result by showing that there exists an one-to-one correspondence between the set Dn and class An. For every spanning subgraph in Dn, if we remove the hub edge, then the three hub vertices will belong to three different trees, so it belongs to An, see Fig. [\ref=Fig.6]. Conversely, for every spanning subgraph in An, if we add a hub edge, then its two hub vertices belong to one tree and the subgraph is in Dn. Thus, there exists a one-to-one correspondence between Dn and An, and the cardinality of Dn is an.

Let En be the set of subgraphs considered in (b). As above, we can verify an one-to-one correspondence between sets En and Bn by deleting the hub edge. Thus, the cardinality of En is bn.

Consider the bijection between Fn, the set of subgraphs which contain two hub edges, and An (Fig. [\ref=Fig.6]).

The following four lemmas establish recursive relationships among the parameters an, bn, cn and sn.

For n  ≥  0, an + 1 = 3a3n + 6a2nbn.

We prove this result by considering a graphical version of the equation (Fig. [\ref=Fig.8]) which represents the recursive construction method of A(n + 1) from A(n) and enumerates all possible contributions to an + 1.

In this representation we only draw four vertices in each case, since each non drawn (interior) vertex connects at least to one of these four vertices (although they do not have necessarily to be adjacent). This is sufficient to determine whether each case belongs to An + 1, Bn + 1 or Cn + 1 .

Next we should prove that each configuration is correct, but we only analyze in detail the first additive term as the other term can be verified in a similar way. For this case (see Fig. [\ref=Fig.100]), hub vertices h1 and h4, according to the merging process described at the beginning of this Section, belong to subgraphs in both copies A(n)1 and A(n)2 where they are adjacent while h2 and h3 are in different copies. Thus, after merging these two edges, there are a3n subgraphs which belong to An + 1. Because of the symmetry, h4 could also be adjacent to h2 or h3 (instead of being adjacent h1) and we count three times this case.

For n  ≥  0, bn + 1 = a3n + 7a2nbn + 7anb2n + a2ncn.

We prove the lemma by enumeration. Figure [\ref=Fig.9] shows all the distinct possibilities. Again, we only analyze the first case. We label the four hub vertices in the same way as in Fig. [\ref=Fig.100]. In the first case, h1, h2, h4 are all connected while h3 is not. There are two spanning trees, and one has no hub edges, so this configuration belongs to set Bn + 1. Symmetries generate equivalent configurations and the factor is one.

For n  ≥  0, cn + 1 = a3n + 12a2nbn + 36anb2n + 14b3n + 3a2ncn + 12anbncn.

As in former lemmas, the proof is by enumeration of all possible contributions to cn + 1, see in Fig. [\ref=Fig.10] the details. In the first case, h1, h2, h3 and h4 are all connected and the merging process produces a spanning tree. As no hub edges are included in it, we can see that this case belongs to set Cn + 1. Besides, because of the symmetry, only this configuration is relevant. All other cases are analyzed similarly and we omit the details.

For n  ≥  0, sn + 1 = 16a3n + 72a2nbn + 78anb2n + 14b3n + 9a2ncn + 12anbncn.

Figure [\ref=Fig.11] shows all the configurations contributing sn + 1. We do not give the calculation details as they are like in previous lemmas.

The next three lemmas give the values of an, bn and cn.

For n  ≥  0, [formula].

To obtain this closed-form expression, Lemma [\ref=lmm:23] will provide a recursive equation for an. Thus, we use Lemma [\ref=lmm:24] to write bn in terms of an and, as a preliminary result, we need to prove that ancn = 3b2n:

We use induction. For n = 0, the initial conditions a0 = 1 and b0 = c0 = 0 make the equation true. Let us assume that for n = k, the equality holds. For n = k + 1, and from Lemmas [\ref=lmm:23]-[\ref=lmm:25], we have that

[formula]

and as akck - 3b2k = 0 (induction hypothesis), we reach the result.

With this result, we can replace in Lemma [\ref=lmm:24] a2ncn by 3anb2n and as [formula] (Lemma [\ref=lmm:23]), we obtain which we can write as Fom Lemma [\ref=lmm:23], we have and, if we define [formula], we obtain the recursion [formula] which together with the initial condition [formula] leads to [formula] and allows us to write This equation, with the condition a0 = 1, gives

For n  ≥  0, [formula].

From Lemma [\ref=lmm:23] we have [formula] and the result follows from the expression of an found in Lemma [\ref=lmm:27].

For n  ≥  0, [formula].

From the proof of Lemma [\ref=lmm:27] we have [formula], and using an and bn as found in former lemmas, we obtain cn.

The main result of this section, the number of spanning trees of the Apollonian network A(n) (Theorem [\ref=th:21]), follows from Lemma [\ref=lmm:26] and the expressions for an, bn and cn obtained in Lemmas [\ref=lmm:27], [\ref=lmm:28] and [\ref=lmm:29]:

Spanning tree entropy of Apollonian networks

After having an explicit expression for the number of spanning trees of A(n), we can calculate its spanning tree entropy, which is defined as in [\cite=Ly05] [\cite=Wu77]:

Define [formula]. From Theorem [\ref=th:21], we have and thus

We can compare this asymptotic value of the entropy of the spanning trees for Apollonian networks, [formula], with that of other relevant graphs with the same average degree. For example, the value for the 3-dimensional Sierpinski graph is 1.5694 [\cite=ChChYa07] and for the 3-dimensional hypercubic lattice L3 is 1.6734 [\cite=FeLy03] [\cite=ShWu00]. Thus, the asymptotic value for Apollonian networks reflects the fact that the number of spanning trees in A(n), although growing exponentially, do it at a lower rate than these graphs which have the same average degree.

This result would suggest that Apollonian networks, as they have fewer spanning trees, are less reliable to a random removal of edges than the graphs cited above. However, Apollonian networks are scale-free and it is known that graphs with this degree distribution are more resilient than homogeneous graphs, see for example [\cite=Tu00]. Thus, the particular degree distribution of graphs A(n) might increase their robustness in relation to regular graphs with the same order and size. These considerations indicate that it would be of interest to study the connections among the spanning tree entropy of a graph and other relevant graph parameters like, for example, degree distribution and degree correlation.

Conclusion

In this paper we find the number of spanning trees in Apollonian networks by using a method, based on its self-similar structure, which allows us to obtain an exact analytical expression for any number of discs. The method could be used to further study in this graph, and other self-similar graphs, their spanning forests, connected spanning subgraphs, random walks and vertex or edges coverings. Knowing the number of spanning trees for Apollonian networks allows us to show that their spanning tree entropy is lower than in other graphs with the same average degree.

Acknowledgements

Z. Zhang is supported by the National Natural Science Foundation of China under Grants No. 61074119. F. Comellas is supported by the Ministerio de Economia y Competitividad, Spain, and the European Regional Development Fund under project MTM2011-28800-C02-01 and partially supported by the Catalan Research Council under grant 2009SGR1387.