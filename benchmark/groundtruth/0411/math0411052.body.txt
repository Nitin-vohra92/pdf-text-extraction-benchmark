Variations of a Coin-Removal Problem

Introduction

The coin-removal problem is given in [\cite=dangelowest]:

Suppose that n coins are arranged in a row. We remove heads-up coins, one by one. Each time we remove a coin we must flip the coins still present in the (at most) two positions surrounding it. For which arrangements of heads and tails can we remove all the coins?

We will call an arrangement removable if we can remove all the coins; the coin-removal problem is to characterize the removable arrangements of coins. We will also use the word "sequence" to refer to a linear arrangement of coins.

For example, if we use 1 to denote a heads-up coin and 0 to denote a tails-up coin, then the sequence 01110 is removable, as shown by the following sequence of moves (the coin to be removed at a particular stage is marked by a dot, an empty position by a circle):

The solution of the coin-removal problem is simple to state [\cite=dangelowest]: a sequence is removable if and only if the number of heads-up coins is odd. Proving this statement was a homework assignment in a recent "Introduction to Proofs" class taught at Rhodes College--the proof found by the second author is presented in the next section.

It is natural to ask how the coin-removal problem might be modified or generalized. The variation we consider in this paper is to use linear arrangements with no gaps--any gap created by removing a coin is eliminated by pushing the remaining coins together. We give a method for determining the removability of a sequence in this variation. Using a deterministic finite automaton, we also show that the set of removable sequence in this variation forms a regular language and find a recursive formula for the number of removable sequences of different lengths. Finally, we discuss circular arrangements of coins and suggest possible directions for further investigations.

We will use the notation 1n to denote a sequence of n 1's (heads-up coins). If n  =  0 then the sequence is empty and any adjacent sequences can be concatenated. For example, 101001 is the same sequence as 1001. Similar notation will be used for sequences of tails-up coins.

The Original Problem--Linear Arrangement With Gaps

In the original formulation of the coin-removal problem, the coins are arranged in a line and removing coins may create gaps. As we saw above, the sequence 01110 is removable. Other removable sequences include 1, 111 and 11000111. Clearly the sequence 11 is not removable, nor are the sequences 101, 11011, and 011011. Note that by allowing gaps, any remaining non-adjacent sequences of coins are isolated and removing coins from one will not affect the others.

In the original coin-removal problem (linear arrangement with gaps), an arrangement of coins is removable if and only if the number of heads-up coins is odd.

We will use strong mathematical induction on the length k of the sequence of coins. Clearly the result holds for k  =  1.

Assume k  ≥  1 and that our claim holds for all sequences of lengths 1 to k. Let [formula] be a coin sequence of length k  +  1 (each an is 0 or 1). Suppose first that A has an even number of heads-up coins (i.e., an  =  1 for an even number of terms). If there are zero heads-up coins then A is clearly not removable. Suppose A has at least two heads-up coins. Select any heads-up coin in A, say at position n + 1, 0  ≤  n  ≤  k, so that [formula]. Then either subsequence [formula] or [formula] contains an odd number of heads-up coins. Removing the selected coin flips any adjacent coins so this subsequence will now contain an even number of heads-up coins. Its length is less than k + 1 so by the inductive hypothesis, it is not removable. Our choice of heads-up coin to remove was arbitrary and so our original sequence is not removable.

Now suppose A has an odd number of heads. Then A  =  0n1D where n  ≥  0 and D is a possibly empty sequence containing an even number of heads. Removing the first heads-up coin on the left leaves us with one sequence or two isolated sequences, each of length less than k + 1 and containing an odd number of heads-up coins. By the inductive hypothesis, these two sequences are removable, and so the original sequence is removable.

The Variation--Linear Arrangement With No Gaps

Now suppose that the coins are again arranged a line but when a coin is removed, any gap is eliminated by pushing the remaining coins together. We will say that a sequence A is reducible to another sequence A' if, starting with the configuration A, we can remove heads-up coins and eliminate gaps to obtain A'.

For example, consider the sequence of coins 11101. With gaps this sequence is not removable, but without gaps it is reducible to 1 and thus removable: Also, the sequence 11111 is removable with gaps but not in this variation. Other examples of removable sequences include 1, 01, 111, 1101 and 010111. Examples of non-removable sequences include 11, 010, 0111 and 110110.

Our approach will be to find an invariant, a property of removable sequences that is unchanged under the removal of heads-up coins. We will then show that this property can distinguish between removable and non-removable sequences. It may not be immediately obvious why the invariant we use is indeed a useful one, so we start with some motivation for its definition.

We first notice that sequences 1, 111, 1111, 111111 and 1111111 are removable while the sequences 11, 11111 and 11111111 are not. Based on this (admittedly meager) evidence, we form the following conjecture:

The sequence 1n is removable if and only if n is congruent to 0 or 1 modulo 3.

Our conjecture suggests that we may be able to decide removability of a given sequence A by removing heads-up coins to reduce it to a sequence 1n of only heads. If n is congruent to 0 or 1 modulo 3, and our conjecture is true, then the sequence is removable. Of course, to conclude that a sequence is not removable would still require that we check every possible way to reduce A to a sequence 1n and verify that in each case that n is congruent to 2 modulo 3.

With our conjecture in mind we next make the following observations:

A sequence of the form 1m001n, m  ≥  2, n  ≥  0, can be reduced to the sequence 1m + n: The same result holds when m  =  0 or m  =  1.

A sequence of the form 1m01nC, m  ≥  n  ≥  1, C any sequence, can be reduced to the sequence 1m - n0C:

[formula]

A sequence of the form 1m0, m  ≥  2, can be reduced to the sequence 1m - 1: The same result holds for m  =  1 if we interpret 10 as the empty sequence: all coins have been removed.

In general, two groups of 1's separated by an even group of 0's may be reduced to a single group of 1's whose length is the sum of the lengths of the original groups. A sequence consisting of two groups of 1's separated by an odd group of 0's may be reduced to a single group of 1's whose length is the difference of the lengths of the original groups, followed by a 0.

For example, by applying the observations to the sequence 11110011111011001, we have that Since [formula], we conjecture that 11110011111011001 is not removable.

The above observations together with the conjecture suggest that we may be able to determine removability by simply adding or subtracting the numbers of 1's in each group of 1's in the sequence (starting from the left) and examining the result modulo 3. We will make this approach more precise and then show that it does indeed provide a means of classifying sequences.

Given a coin sequence A containing at least one 1, we assume that A starts and ends with (possibly empty) blocks of 1's (heads-up coins). Then for some choice of non-negative integer sequences [formula] and [formula], n  ≥  1. Note that the choice of H(A) and T(A) is not unique. For example, the sequence A  =  11011 may be expressed as H(A) = (2,2) and T(A)  =  (1) or H(A)  =  (2,1,1) and T(A)  =  (1,0).

Suppose that H(A) and T(A) have been chosen and let [formula] where [formula]. The sequence P(A) keeps track of the modified parities of the groups of 0's: by observation 2, if we have a group of 0's of odd parity then the parity of the next group of 0's will change.

Finally, we define the quantity S(A) by the following formula: We will call S(A) the parity sum for A. The parity sum adds or subtracts the numbers of 1's in each group followed by a final subtraction of 1 if A reduces to a sequence of 1's followed by a single 0 (observation 3).

For example, for A  =  110001101110, we can set H(A)  =  (2,2,3,0) and T(A)  =  (3,1,1). Then P(A)  =  (1,0,1) and S(A)  =  2  -  2  +  3  -  0  -  1  =  2. Thus we conjecture that A is reducible to 11 and so is not removable.

While we will omit its proof, it is not hard to show that the parity sum S(A) is independent of the choice of sequences H(A) and T(A). This is not true for sequences of all 0's, hence the restriction of S to only those with at least one 1.

The parity sum will provide us with the invariant we need. In particular, a sequence A containing at least one heads-up coin has the property that S(A) is congruent to 2 modulo 3 if and only if the parity sum of any sequence reducible from A is also congruent to 2 modulo 3. This property of the parity sum will allow us to distinguish between removable and non-removable sequences.

If A is a coin sequence containing at least one heads-up coin and AR is the reversal of A then [formula] if and only if [formula].

Let [formula] and [formula] be fixed and set [formula] and [formula]. Then [formula] where [formula]. Thus pn  =  qn  =  (pi  +  qn - i) mod 2 and so

[formula]

If pn  =  0 then S(AR)  =  S(A). If pn  =  1 then [formula]. Thus [formula]. In either case, [formula] if and only if [formula].

Suppose A is a coin sequence containing at least one heads-up coin and A' a sequence obtained from A by removing a heads-up coin. Suppose further that A' also contains at least one heads-up coin. Then [formula] if and only if [formula].

Without loss of generality, we may consider only the five cases listed below for the original sequence A and reduced sequence A'. In each case the coin to be removed is marked by a dot; C and D are (possibly empty) sequences of 0's and 1.

[formula]

[formula]; D contains a 1

[formula]

[formula]

[formula]; at least one of C or D contains a 1.

All other ways that we can remove a heads-up coin can be reduced to these cases using the reversal of A and Lemma [\ref=lem:revSA]. For each case, we will find a relationship between S(A) and S(A').

Case 1: Assume that [formula] with h0  =  1. After removing the indicated coin we can set H(A')  =  H(A) and [formula]. Then [formula] where [formula]. So

[formula]

Thus S(A')  +  S(A)  =  1 in Case 1.

Case 2: Assume that [formula] with h0  ≥  2 and [formula]. After removing the coin we can use the sequences [formula] and [formula]. So [formula] and

[formula]

So S(A')  +  S(A)  =  1 in Case 2 as well.

Case 3: Suppose the coin to be removed is in the [formula] group of heads in H(A), 1  ≤  j  <  n, so hj  =  1. Then [formula] and [formula]. Thus [formula] and so

[formula]

Therefore [formula].

Case 4: Suppose the coin to be removed is in the [formula] group of heads in H(A), 0  ≤  j  <  n, so hj  ≥  2. Then we may take [formula] and [formula]. From this we have that [formula] (if j  =  0 then [formula]. Then

[formula]

and again we have that [formula].

Case 5: Suppose the coin to be removed is in the [formula] group of heads in H(A), 0  ≤  j  <  n, so hj  ≥  3. Then take [formula] and [formula], so [formula]. Thus

[formula]

and so [formula].

Therefore, in each case we have that [formula] if and only if [formula] and this property of S(A) is invariant under the removal of a heads-up coin.

The following corollary is an immediate consequence of our previous observations and Lemma [\ref=lem:SAequiv].

Suppose A is a coin sequence containing at least one 1. Let A' be the coin sequence formed by removing every group of consecutive 0's of even length and concatenating groups of 1's when possible. Suppose [formula] is the number of consecutive 1's in each group of 1's in A'. Then [formula].

A coin sequence A containing at least one heads-up coin is removable if and only if S(A) is congruent to either 0 or 1 modulo 3.

We will use induction on the number of coins k in the sequence A. It is easy to see that the claim holds for k = 1. For k  =  2, we can easily check the values of S(A) for the possible coin sequences, and we see that the claim holds for k  =  2.

Assume that the claim holds for some k  ≥  2. Let A be a coin sequence with length k  +  1 such that A contains at least one 1. If A is removable then removing some coin in A yields another coin sequence A' with length k that is also removable (and so contains at least one 1). By the induction hypothesis, S(A') is congruent to 0 or 1 modulo 3 and so by Lemma [\ref=lem:SAequiv], S(A) is congruent to 0 or 1 modulo 3 as well.

Now suppose A is not removable. Then for any choice of coin to remove, the resulting coin sequence A' is again not removable. For some coin in A, removing it will leave at least one heads-up coin remaining in A' and so, by the induction hypothesis, [formula]. Applying Lemma [\ref=lem:SAequiv] again we have that [formula]. Thus the claim holds for coin sequences of length k + 1 and so by induction the proposition is true.

Table [\ref=tab:examples] shows some example applications of Corollary [\ref=cor:simpS] and Proposition [\ref=prop:remcomp].

The parity sum provides an effective (polynomial time) means of determining the removability of sequences. The proof of Proposition [\ref=prop:remcomp] shows that there is also an effective algorithm for removing the coins of a removable sequence: remove any heads-up coin that either removes all of the coins or leaves at least one coin heads-up. Since at least one of the first two heads-up coins from the left end of the sequence can be removed in this way, we can remove the coins in polynomial time.

The No Gaps Variation and a Finite Automaton

Let R denote the set of all sequences that are removable in the linear arrangement without gaps variation of the coin-removal problem. We saw in Proposition [\ref=prop:remcomp] that we can test a sequence A for membership in R by calculating the parity sum S(A). We can also test A for membership in R by using a deterministic finite automaton (DFA), which we present in this section. Using the DFA, we can then determine a recursive formula for the number of sequences in R of length n.

Figure [\ref=fig:dfa_rem] depicts a DFA. Given a sequence A of 0's and 1's, we test A for acceptance by the DFA in the following manner:

Start at the node labelled s, the start node.

Read the symbols of A, one at a time, from left to right. As a symbol is read, follow the corresponding arrow to the next node (possibly the same node).

Continue reading symbols and following arrows. After finishing the sequence, if we are at a node marked with a double circle (an accept node) then the DFA accepts the sequence, otherwise it rejects the sequence.

For example, the sequence 1010011 would take us along the following path of nodes: Node h is an accept node so our DFA will accept the sequence 1010011.

In fact, the DFA in Figure [\ref=fig:dfa_rem] will recognize R--sequences will be accepted by the DFA if and only if they are elements of R. To see this, recall that S(A) is computed by adding or subtracting 1's depending on the (modified) parity of the groups of 0's separating the groups of 1's. We then compute S(A) mod 3 to determine if A is in R or not. Our DFA performs these computations for us. The nodes a, b and c are used when we are adding 1's; they correspond to values of S(A) congruent to 1, 2 and 0 modulo 3, respectively. We accept when [formula] or 1 modulo 3 (nodes a and c). Nodes h, i and j are used when we need to subtract 1's and also keep track of the value of S(A) modulo 3. Since in this case we need to subtract an extra 1 to complete the computation of S(A), we only accept at nodes h and i. Nodes d, e, f and g are used to change from addition to subtraction.

A set of sequences that is recognized by a DFA is called a regular language. Regular languages form the simplest kind of languages studied in formal language theory. Other languages, such as palindromes (sequences that read the same forward and backward) and those containing sequences of the form 1p for prime p are too complex to be recognized by a DFA. For these we need more powerful machines such as pushdown automata and Turing machines. More information on languages and automata theory can be found in [\cite=hopcroftullman] and [\cite=linz].

The results above are analogous to results obtained for Peg Solitaire. It is known that the set of configurations that are solvable, i.e., can be reduced to a single peg, also forms a regular language [\cite=mooreeppstein] [\cite=ravikumar].

We can use a state-minimization algorithm [\cite=linz] to eliminate redundant states in our DFA. The equivalent minimized DFA is shown in Figure [\ref=fig:dfamin_rem] (the start node is node 1). We will use this presentation to obtain a formula for the number of sequences in R of length n, which corresponds to the number of paths of length n from node 1 to either node 2 or node 4 (the accept nodes).

Let M be the matrix [formula] where entry Mij is the number of edges from node i to node j in Figure [\ref=fig:dfamin_rem]:

The matrix M is called the adjacency matrix of the DFA. The adjacency matrix has a very nice property: for any n  ≥  1, the (i,j) entry in Mn is the number of paths of length n from node i to node j. Thus the number of sequences in R of length n is simply the sum of entries (1,2) and (1,4) in Mn.

Let rn denote the number of sequences of length n in R. Using a computer to calculate Mn from n = 1 to n = 7, we find that the first several terms of rn are 1,2,5,10,21,42 and 85. These terms appear in sequence A000975 of the On-line Encyclopedia of Integer Sequences [\cite=integerseq]. The Encyclopedia entry for A000975 gives a recursive formula for the sequence that we now show describes rn.

The sequence {rn} satisfies the recurrence relation rn + 1  =  rn  +  2rn - 1  +  1.

Let the first row of Mn be denoted by (an,bn,cn,dn,en). Then rn  =  bn  +  dn. From matrix multiplication we see that an, bn, cn, dn and en satisfy the recurrence relations with a1  =  c1  =  d1  =  0 and b1  =  e1  =  1. We will show that bn + 1  =  bn  +  2bn - 1 and dn + 1  =  dn  +  2dn - 1  +  1. Notice that an  =  en - 1  =  an - 2 and an  +  an - 1  =  1. Then

[formula]

and so bn  +  2bn - 1  =  an  +  bn  +  dn  =  bn + 1. Further, the above shows that dn  =  2bn - 1  -  an. Thus

[formula]

Finally, from the fact that rn  =  bn  +  dn, we have immediately that rn + 1  =  rn  +  2rn  +  1 and our conjectured formula is proved correct.

The sequence {dn} represents the number of sequences that end at accept state 4 and satisfies dn + 1  =  rn for n  ≥  1. The sequence {bn} represents the number of sequences that end at accept node 2; it is the Jacobsthal sequence (A001045 of [\cite=integerseq]).

Circular Arrangements

Suppose now that we arrange the coins in a circle. Again we will only remove heads-up coins and flip any adjacent coins. As with the linear arrangements, we can consider two ways of handling the empty space created by removing a coin: leave the gap or push the coins together to remove any gaps.

First consider the circular arrangement with gaps variation. (This is actually a Monthly problem number 10459, "Solitaire on a Circle", [\cite=monthlyprob]). An example of a removable arrangement in this variation is 10010:

We can easily see that the only removable arrangements of lengths 1 or 2 are 1, 10 and 01. For 3 or more coins, the first coin we remove will create a linear arrangement (with gaps). Also, since the coins are arranged in a circle, the coin we remove must be the middle coin of some group of three: 010, 011, 110 or 111. In any case, removing the middle coin changes the number of heads-up coins from even to odd or odd to even. By applying Proposition [\ref=prop:linegaps], we immediately have the following result.

For n  ≥  3, a circular arrangement of n coins with gaps is removable if and only if the number of heads-up coins is positive and even.

Now suppose that when a coin is removed, the remaining coins are pushed together to eliminate any gaps. For example, the arrangement 10010 is removable, as the following sequence of moves shows:

The only interesting arrangements in this case contain at least two coins. For this variation, the parity of the tails-up coins provides us with an appropriate invariant.

For n  ≥  2, a circular arrangement of n coins without gaps is removable if and only if it contains at least one heads-up coin and the number of tails-up coins is odd.

We use induction on the number k of coins. Clearly for k = 2 the proposition is true--the only removable arrangements are 01 and 10 (which are actually the same arrangement).

Assume that the proposition is true for k coins with k  ≥  2. Let A be an arrangement of k + 1 coins containing at least one heads-up coin. Any coin that is removed to obtain A' must be the middle coin of a group of three, either 010, 011 110 of 111. In each case, removing the middle coin to obtain an arrangement of k coins will not change the parity of the number of tails-up coins.

Thus if A has an even number of tails-up coins then A' does as well and by the inductive hypothesis, A' is not removable. This holds for any choice of coin to remove from A, so A is not removable (otherwise at least one A' would itself be removable). If the number of tails-up coins in A is odd then A' also has an odd number of tails-up coins and is removable. Therefore A is also removable and our proposition is proved.

Future Investigations--Other Arrangements and a Game

Other ways to arrange the coins naturally suggest themselves. For example, we might place the coins in a rectangular arrangement and flip the horizontal and vertical neighbors of a removed coin. An example of a removable rectangular configuration (for a 2 by 4 rectangle) is

while

is an example of a non-removable configuration. Even more generally, we might place the coins at the vertices of a (connected) graph and on removing a coin, flip any coins at adjacent vertices. These situations are similar to those considered in "Lights Out" games. In a "Lights Out" game, lights are arranged in a rectangular lattice--turning off or on one light will toggle the state of the adjacent lights. However, the light is not removed from the lattice, unlike the coin removal games considered here. For more information, see [\cite=andersonfeil].

Siler [\cite=siler] has examined the case of rectangular grids and showed that for any m  ×  n grid, if n is odd then G is removable if and only if G contains an odd number of heads-up coins. Further, he is able to completely characterize the case of rectangular grids of size 2  ×  n:

Let G be a 2  ×  n grid of coins. If n  =  2k is even then G is removable if and only if the number of heads-up coins in G is even and nonzero and G is not of the form

[formula]

where ai∈{00,11}. If n is odd then G is removable if and only if G contains an odd number of heads-up coins.

It would also be interesting to investigate a two-player game based on the original coin-removal problem (linear arrangement with gaps). For the two-player game, players take turns removing coins according to the usual rules; the loser is the player who cannot pick up a coin. For example, with the initial arrangement of 111, the first player can win by selecting the middle coin, which leaves [formula] so the second player has no allowed move. But with the initial arrangement of 101, the second player can win no matter what the first player does: after the first player's move, the arrangement will be [formula] which the second player can reduce to [formula]. Of particular interest are the formal language properties of the set of winning sequences for one player or the other. A similar game based on Peg Solitaire was suggested in [\cite=ravikumar] and examined in [\cite=mooreeppstein].