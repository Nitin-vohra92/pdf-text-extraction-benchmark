The DTFE public software -The Delaunay Tessellation Field Estimator code -

, Rien van de Weygaert Kapteyn Astronomical Institute, University of Groningen, Netherlands

Introduction: the DTFE method

The Delaunay Tessellation Field Estimator (from now on DTFE) [\citep=2000A&A...363L..29S] [\citep=2009LNP...665..291V] [\citep=Cautun2011] represents the natural method of reconstructing from a discrete set of samples/measurements a volume-covering and continuous density and intensity fields using the maximum of information contained in the point distribution. This interpolation method works for any scalar or vector fields (e.g. velocity, temperature, pressure) that are defined at the positions of a discrete point set. Moreover, if the point distribution traces the underlying density field, DTFE offers a local method in determining the density at each point and accordingly also in the whole volume.

The DTFE method was first developed by Willem Schaap and Rien van de Weygaert [\citep=2000A&A...363L..29S] to be used on various astrophysical applications, but can also be used in other fields where one must interpolate using quantities given at a discrete point set. The DTFE method is especially suitable for astrophysical data due to the following reasons:

Preserves the multi-scale character of the point distribution. This is the case in numerical simulations of large scale structure (from now on LSS) where the density varies over more than 6 orders of magnitude and for a lesser extent for galaxy redshift surveys.

Preserves the local geometry of the point distribution. This is important in recovering sharp and anisotropic features like the different components of the LSS (i.e. clusters, filaments, walls and voids).

DTFE does not depend on user defined parameters or choices.

The interpolated fields are volume weighted (versus mass weighted quantities in most other interpolation schemes). This can have a significant effect especially when comparing with analytical predictions which are volume weighted [\citep=1996MNRAS.279..693B].

The first two points can be easily seen in Fig. [\ref=fig=DTFE_example], where starting from the point distribution (upper left insert), one constructs the Delaunay tessellation (upper right insert) and than zooms on a high density region (lower right and left inserts).

The DTFE public software

The code accompanying this document is a C++ implementation of the DTFE method of interpolating from a discrete point set (in 2 or 3 dimensions) to a grid. The software was designed using a modular philosophy and with a wide set of features that can easily be selected using the different program options. These features were constructed to analyze the data using multiple methods and to manipulate and split the data such that it can be useful in dealing with a wide variety of problems. The DTFE code is also written using OpenMP directives which allow it to run in parallel on shared-memory architectures. The software can be used as a standalone program or as an external library.

The code comes with complete documentation and with a multitude of examples that detail the program features. Moreover, a help desk is available for information and assistance for troubleshooting problems. The DTFE software can be downloaded from . The same address contains the user guide as well as help and contact forms.

DTFE software features

The DTFE software has a wide range of features designed to facilitate the work with cosmological data, both from numerical simulations and from observations:

Works in both 2 and 3 spatial dimensions.

Interpolates the fields to three different types of grids:

Regular rectangular and cuboid grid -- useful for numerical simulation.

Redshift cone (spherical coordinates) grid -- useful for galaxy redshift survey or for simulating observations.

User given sampling points -- can describe any complex or non-regular sampling geometry

Uses the point distribution itself to compute the density and interpolates the result to grid.

Each sample point has a weight associated to it to represent multiple resolution N-body simulations and observational biases for galaxy redshift surveys.

Interpolates the velocity, velocity gradient, velocity divergence, velocity shear and velocity vorticity (see Fig. [\ref=fig=DTFE_velocity] for an example of the DTFE velocity and velocity divergence fields).

Interpolates any additional number of fields and their gradients to grid.

Periodic boundary conditions.

Zoom in option for regions of interest.

Splitting the full data in smaller computational chunks when dealing with limited CPU resources.

The computation can be distributed in parallel on shared-memory architectures.

For comparison purposes, the software comes also with the TSC[\citep=1981csup.book.....H] and the SPH[\citep=1992ARA&A..30..543M] interpolation methods (see Fig. [\ref=fig=DTFE_density] for a comparison of DTFE and SPH density fields).

Can return the Delaunay tessellation of the given point set.

Easy change of input/output data format.

Easy to use as an external library.

Extensive documentation of each feature.

DTFE software license

DTFE is free software, distributed under the . This implies that you may freely distribute and copy the software. You may also modify it as you wish, and distribute these modified versions as long as you indicate prominently any changes you made in the original code, and as long as you leave the copyright notices, and the no-warranty notice intact. Please read the General Public License for more details. Note that the authors retain their copyright on the code.

If you use the DTFE software for scientific work, we kindly ask you to reference the DTFE method and code papers: [\citet=2000A&A...363L..29S], [\citet=2009LNP...665..291V] and [\citet=Cautun2011].

Acknowledgments. The authors acknowledges the work of Erwin Platen who wrote a basic version of the DTFE density interpolation code which was used as the starting point of this work. We are also grateful for discussions with Patrick Bos, Pratyush Pranav, Miguel Aragon-Calvo and Johan Hidding whose suggestions shaped the form and features of the software. We are also grateful to Monique Teilland, Manuel Caroli and Gert Vegter for their work in developing the CGAL library as well as their help and support with the CGAL library. We thank Willem Schaap for his work in developing the DTFE method as a mature analysis tool for studying cosmological data. A special acknowledgment goes to Bernard Jones, whose continuing involvement and encouragement during the various stages of DTFE development have been instrumental.