Detailed description of the problems

We now describe the symmetric Virtual Private Network design (VPND) problem and its generalization with concave costs, the concave symmetric Virtual Private Network Design (cVPND) problem.

The problems have as input a simple, undirected, connected graph G = (V,E) which represents a communication network; a vector [formula] describing the edge costs; and a vector [formula] of maximum cumulative demands. A vertex v with bv  >  0 is referred to as a terminal. We denote the set of terminals by W.

The vertices of G want to communicate with each other. The exact amount of traffic between pairs of vertices is not known. However, for each vertex v the cumulative amount of traffic that v can send or receive is at most its maximum cumulative demand bv. The aim is to install, at minimum cost, a so-called virtual private network, as a "sub-network" of G. A virtual private network consists of a set of paths P containing exactly one u-v path Puv in G for each unordered pair {u,v} of terminals, and a vector [formula] describing the capacity to be installed on each edge. The virtual private network should allow to route any feasible matrix of traffic demands, i.e., whenever duv is given for each unordered pair {u,v} of terminals, such that the upper bounds [formula] for the cumulative demands are satisfied, then for each edge e, the amount of traffic which is routed over edge e is at most the installed capacity:

[formula]

In the VPND problem, the cost of installing capacity γe on edge e is ceγe, while in the cVPND problem, it is cef(γe). In both cases, the cost of a virtual private network is the sum of the installation of capacity on the edges.

We also use what we call the Concave Routing (CR) problem, which is a straightforward generalization of the so-called Pyramidal Routing (PR) problem defined in [\cite=GKOS08]. It, too, is concerned with finding a set of paths satisfying an optimality condition. We do not define it here.

Tree routings

A feasible solution to one of the problems described above is a tree solution if the support of the capacity vector γ or, equivalently, the union of the paths in P induces a tree in G. We say that a problem has the tree routing property if, for any instance, there is always a tree solution among the optimal solutions.

In the case of the VPND, the tree routing property, the fact that one can restrict the search for a minimum cost virtual private network to those networks with tree support (tree solutions), established in [\cite=GOS08] relying on work in [\cite=GKOS08], is the key to the polynomial time algorithm. In the non-linear case, the tree routing property is important in our design of approximation algorithms. While acknowledging that the tree routing property for cVPND can be proven directly from the tree routing property for VPND, we offer an elegant geometric proof for the tree routing property of the Concave Routing problem, which then implies the tree routing property of cVPND in much the same way as the tree routing property for PR implies that for VPND.

Approximation

Our approximation algorithms for cVPND rely on the tree routing property. We reduce the cVPND to an intermediate problem which might be thought of as an undirected uncapacitated minimum concave-cost single-source flow problem.

In the special case, when the function f has the form f(x)  =   min (μx,M), this flow problem is known as the Single Source Rent or Buy problem, for which a randomized 2.92-approximation algorithm exists, as was shown by Eisenbrand, Grandoni, Rothvoß, and Schäfer [\cite=EGRS], improving on results by Gupta, Kumar, Pàl, and Roughgarden [\cite=GKPR], which can be derandomized with the factor deteriorating to 3.28.

For general functions f, the situation is a bit more subtle. Here we use a theorem of Grandoni & Italiano [\cite=GI] an the analysis of their (randomized) approximation algorithm for the so-called Single Source Buy at Bulk problem. This problem is concerned with minimum-cost installations of cables on edges. The cables can be selected from a list of cable types, which have characteristic capacities and installation costs. After breaking the function f up into a polynomial sized list of cable types satisfying certain scaling properties, we are able to use said theorem in [\cite=GI], to show that a polynomial time, randomized 24.92-approximation algorithm exists for the afore-mentioned flow problem, and hence also for the cVPND.