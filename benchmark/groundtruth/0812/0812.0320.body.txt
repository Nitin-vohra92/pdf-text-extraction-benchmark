Stackelberg Network Pricing is Hard to Approximate

Keywords: Combinatorial optimization; APX-hardness; Network pricing; Stackelberg games

Introduction

We consider a network pricing problem involving two non-cooperative players, a leader and a follower. The leader owns a subset of the arcs of a given transportation network. She has to set tariffs on these arcs, knowing that the follower will compute a shortest st-path once the tariffs are fixed. The goal is to maximize the revenue of the leader, which depends on the path chosen by the follower.

This problem is known as Stackelberg network pricing; it is formally described as follows:

Before going further, let us make two remarks on the above formulation: First, it is usually assumed that there exists an st-path in D that uses only arcs of A  -  T, since otherwise the optimum is unbounded. Second, once the tariffs are fixed, we can easily choose among all st-paths of minimum (total) cost one path P that maximizes the revenue. In other words, we assume that the follower always makes the best choice for the leader. This is a standard assumption, justified by the fact that decreasing the prices of every arc in [formula] by an arbitrarily small amount ensures that P is the unique st-path of minimum cost.

The Stackelberg network pricing problem has recently been studied by Roch, Savard, and Marcotte [\cite=RSM05], motivated by applications in transportation and telecommunications. They proved that the problem is [formula]-hard and described a polynomial-time algorithm approximating the optimum within a ratio of [formula].

The purpose of this note is to show that the Stackelberg network pricing problem is also [formula]-hard:

For some ε  >  0, it is [formula]-hard to approximate Stackelberg network pricing within a ratio of 1  -  ε.

We conclude this introduction by mentioning other related works. A generalization of Stackelberg network pricing, the toll setting problem, has been considered by Labbé, Marcotte, and Savard [\cite=LMS98]. It involves multiple, weighted followers: the ith follower computes a shortest siti-path in the network once the tariffs are fixed, and has a demand of di. The objective is then to maximize the sum of the revenues obtained from each individual follower, weighted by their respective demands. As observed by Roch et al. [\cite=RSM05], the approximation algorithm mentioned above for Stackelberg network pricing directly gives a O(k log m)-approximation algorithm in the case of unit demands, where k denotes the number of followers.

A special case of the toll setting problem occurs when every siti-path in D uses at most one arc in T, and is known under the name river tariff pricing. It has been considered by Bouhtou, Grigoriev, van Hoesel, van der Kraaij, Spieksma, and Uetz [\cite=BGvHvdKSU07], and is closely related to the profit-maximizing envy-free pricing problem studied by Guruswami, Hartline, Karlin, Kempe, Kenyon, and McSherry [\cite=GHKKKS05]. Among others, both sets of authors proved (independently) that the river tariff pricing problem is [formula]-hard, even in the case of unit demands. Briest, Hoefer, and Krysta [\cite=BHK08] later derived stronger inapproximability results, relying on a recent inapproximability result of Demaine, Feige, Hajiaghayi, and Salavatipour [\cite=DFHStoappear] for profit-maximizing envy-free pricing. We note that each of these inapproximability results uses in a crucial way the fact that there are multiple followers.

Finally, we mention that some other combinatorial optimization problems similar to Stackelberg network pricing have been considered recently. This includes pricing edges of an undirected graph knowing that the follower will compute a minimum spanning tree [\cite=CDFJLNW07], and pricing vertices of a bipartite undirected graph when the follower buys a minimum cost vertex cover [\cite=BHK08]. Other kinds of Stackelberg games in networks have been studied by Cole, Dodis, and Roughgarden [\cite=CDR03], Roughgarden [\cite=R04], and Swamy [\cite=S07].

The Proof

In order to prove Theorem [\ref=th-APX], we need the following lemma on bounded-degree graphs. Here and throughout the text, a linear ordering of the vertices of a graph G = (V,E) is a bijective mapping [formula].

Let G = (V,E) be an undirected graph with maximum degree Δ  ≥  1 and n  ≥  cΔ vertices, where cΔ: = 4Δ(Δ + 1). Then a linear ordering [formula] of V with

[formula]

for every edge uv∈E can be found in polynomial time.

A (proper, vertex) coloring of a graph G is equitable if every two color classes differ in size by at most 1. The proof of Lemma [\ref=lem-lo] relies on the following result on equitable colorings.

Every graph G with maximum degree Δ can be equitably colored with Δ  +  1 colors.

Kierstead and Kostochka [\cite=KK08] recently obtained a short proof of Theorem [\ref=th-delta-plus-1]. Their proof yields also a polynomial-time algorithm finding such a coloring.

The lemma is easily seen to hold if Δ = 1, hence we assume Δ  ≥  2. Using the algorithmic version of Theorem [\ref=th-delta-plus-1] given by Kierstead and Kostochka [\cite=KK08], we first find in polynomial time an equitable coloring [formula] of the vertices of G. Let

[formula]

We have

[formula]

We show that a linear ordering [formula] of the vertices of G with [formula] for every edge uv∈E can be found in polynomial time, which implies the claim.

Observe that

[formula]

Indeed, using Δ  ≥  2 and n  ≥  4Δ(Δ  +  1), Inequality [\eqref=eq-size-Si] can be derived as follows:

[formula]

We partition each set Si into three subsets S1i,S2i,S3i as follows: First, the partition of S1 is chosen arbitrarily, ensuring only |S11| = |S31| = s. Then, for [formula], define S1i as a subset of s vertices of Si having no neighbor in S3i - 1. Such a subset always exists because, by [\eqref=eq-size-Si], there are most |S3i - 1|  ·  Δ  =  sΔ  <  |Si|  -  s vertices in Si with a neighbor in S3i - 1. Let then S3i be any subset of Si  -  S1i with cardinality s, and set finally [formula].

Consider the partial order [formula] on V where, for u,v∈V, we have [formula] if u∈Spi, v∈Sqj with i < j, or with i = j and p  <  q. Define then [formula] as any linear ordering of V compatible with [formula].

By construction, the set [formula] is a stable set for every [formula]. It follows [formula] for every edge uv∈E. Since the linear ordering [formula] can clearly be computed in polynomial time, this completes the proof of the lemma.

We turn now to the proof of Theorem [\ref=th-APX]. We note that the gadgets used in the reduction are essentially the same as the one used by Roch et al. [\cite=RSM05] in their [formula]-hardness proof.

A 3SAT-5 formula is a CNF formula in which every clause contains exactly three literals, every variable appears in exactly five clauses, and a variable does not appear in a clause more than once. Such a formula is said to be δ-satisfiable if at most a δ-fraction of its clauses are satisfiable simultaneously. Our reduction is from the problem of distinguishing between satisfiable 3SAT-5 formulae and those which are δ-satisfiable. It is known that this problem is [formula]-hard for some constant δ with 0  <  δ  <  1; see Feige [\cite=F98].

Suppose thus that we are given a 3SAT-5 formula φ with n clauses which is either satisfiable or δ-satisfiable. Two literals of φ are opposite if one is positive, the other negative, and they both correspond to the same variable. Let Gφ be the (simple, undirected) graph having one vertex per clause of φ, and where two distinct vertices are adjacent if there exists two opposite literals in the union of the corresponding two clauses. Notice that Gφ has maximum degree Δ  ≤  12.

Using Lemma [\ref=lem-lo], we obtain in polynomial time a linear ordering [formula] of the vertices of Gφ such that

[formula]

for every edge uv∈E. Denote by [formula] the clauses of φ, in the order given by [formula]. Denote also by C1i,C2i,C3i the three literals of Ci, for every [formula].

We define an instance of the Stackelberg network pricing problem as follows. Each clause Ci has a corresponding clause-gadget, described in Figure [\ref=fig-gadget]. Take first the union of all these clause-gadgets (notice that node si appears in the gadgets of both Ci and Ci + 1, for [formula]). Then, for every [formula] with i < j and every p,q∈{1,2,3}, add the arc (wi,p,vj,q) with cost j  -  i  -  1 if literals Cpi and Cqj are opposite. The latter arcs are said to be jump arcs. This defines the directed graph D = (V,A) and the cost function c(  ·  ). The set of tariff arcs is

[formula]

and the origin-destination pair of the follower is (s,t), with s: = s0 and t: = sn.

If n  <  1248, we simply use brute force to decide whether φ is satisfiable or only δ-satisfiable. Hence, we may assume n  ≥  1248, and thus

[formula]

for every jump arc (wi,p,vj,q). Let

[formula]

and denote by [formula] the maximum revenue achievable on this instance of Stackelberg network pricing.

The following holds:

if φ is satisfiable then  = 2n;

if φ is δ-satisfiable then   ≤  λ  ·  2n.

Suppose first that φ is satisfiable and consider a truth assignment of the variables satisfying all clauses of φ. For every [formula] and p∈{1,2,3}, set the tariff of arc (vi,p,wi,p) to 2 if the literal Cpi is true in the truth assignment, to 2n + 1 otherwise. Observe that, with these tariffs, any st-path that includes a jump arc has (total) cost at least 2n  +  1. Also, the cost of every st-path is at least 2n, and there exists one such path with cost exactly 2n that uses one tariff arc per clause-gadget. Hence,   ≥  2n in this case. On the other hand,   ≤  2n always holds since there exists an st-path with cost 2n in (V,A  -  T), that is, which avoids all tariff arcs. This proves part [\eqref=enum-gap-sat] of the claim.

Assume now that φ is δ-satisfiable and let d(  ·  ) be an optimal assignment of tariffs to arcs in T. Let P be any st-path of minimum (total) cost giving a revenue of [formula], and denote by z its cost. (Thus [formula].) If the path P includes a jump arc (wi,p,vj,q), then using [\eqref=eq-jump-arc] we obtain

[formula]

Hence, without loss of generality P includes no jump arc. It follows d(a)  ≤  2 for every tariff arc [formula], because of the arcs (si - 1,si) with fixed cost 2.

Suppose P includes two tariff arcs corresponding to opposite literals, say arcs (vi,p,wi,p) and (vj,q,wj,q) with i  <  j. Then the revenue

[formula]

given by the subpath P' of P going from wi,p to vj,q is at most j  -  i  -  1. This is because there exists a jump arc (wi,p,vj,q) in D, with fixed cost j  -  i  -  1. Hence, we deduce

[formula]

using again [\eqref=eq-jump-arc]. We may thus assume that P does not contain two tariff arcs corresponding to opposite literals.

Now, the set [formula] of tariff arcs included in P directly defines a truth assignment that satisfies at least [formula] clauses of φ (variables not appearing in [formula] are set arbitrarily). Since φ is only δ-satisfiable, we have [formula], and thus

[formula]

Part [\eqref=enum-gap-delta-sat] of the claim follows.

By Claim [\ref=claim-gap], any polynomial-time algorithm approximating Stackelberg network pricing within a ratio strictly better than λ could be used to decide, in polynomial time, whether φ is satisfiable or δ-satisfiable. This completes the proof of Theorem [\ref=th-APX].

Acknowledgments.

The author wishes to thank Adrian Vetta for useful discussions, and Jean Cardinal and Samuel Fiorini for their comments on an earlier version of this note. This work was supported by the Actions de Recherche Concertées (ARC)  fund of the Communauté franaise de Belgique.