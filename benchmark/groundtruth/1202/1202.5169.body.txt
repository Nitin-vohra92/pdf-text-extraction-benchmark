Notation Remark Theorem Proof Lemma Algorithm Assumption Definition Example Corrolar

Multiscale methods for Levitron Problems: Theory and Applications.

Introduction

We are motivated to simulate a Levitron, which is a magnetic spinning top and can levitate in a magnetic field. The main problem of such a nonlinear problem is to achieve a stability for the calculation of the critical splint rate. While the stability of Levitrons are discussed in the work of [\cite=dull98] and their dynamics in [\cite=gans97], we concentrate on improving the standard time-integrator schemes for the Hamiltonian systems. It is important to derive stable numerical schemes with high accuracy to compute the non-dissipative equation of motions, which are at least higher order symplectic integrators. Here, we apply geometric integrators based on the Strömer-Verlet method with extrapolation methods, see [\cite=chin_2011]. While we have symplectic schemes, we preserve the underlying physics of our Levitron, i.e. reversibility, symplecticity, volume preservation and conservation of the first integrals, see [\cite=hair2003].

For the numerical studies, we propose novel splitting schemes and analyze their behavior. We deal with a standard Verlet integrator and improve its accuracy with iterative and extrapolation ideas. Such a Hamiltonian splitting method, can be seen as geometric integrator and saves computational time while decoupling the full equation system.

The paper is organized as follows. A mathematical model based on a multiscale problem of the Levitron is introduced in Section [\ref=model]. The splitting method is used as a solver method to decouple the multiscale equations to more simpler equations given in the kinetics and the potential of the models is described in Section [\ref=splitting]. The improvement of the splitting strategies based on extrapolation schemes are discussed in Section [\ref=extrapolation]. The numerical experiments and their description of our used methods are described in Section [\ref=numerical]. Finally the conclusions and on overview for our next works are discussed in Section [\ref=conclusion].

Mathematical model

The Levitron is described on the base of rigid body theory. With the convention of Goldstein [\cite=goldstein81] for the Euler angles the angular velocity ωφ is along the z-axis of the system, ωθ along the line of nodes and ωψ along the z'-axis. Finally the kinetic energy can be written as

[formula]

The potential energy U is given by the sum of the gravitational energy and the interaction potential of the Levitron in the magnetic field of the base plate:

[formula]

with μ as the magnetic moment of the top and Φ the magneto-static potential. Following Gans [\cite=gans97] we uses the potential of a ring dipole as approximation for a magnetized plane with a centered unmagnetized hole. Furthermore we introduced a nondimensionalization for the variables and the magneto-static potential:

[formula]

Lengths were scaled by the radius R of the base plane, mass were measured in units of m and energy in units of mgh. Therefore the one time unit is [formula].

Knowing the kinetic and the potential energy, we can formulate the the Lagrangian as:

[formula]

Furthermore, the Hamiltonian H can be calculated as

[formula]

where

[formula]

and [formula] is given as:

[formula]

The Hamiltonian H is calculated as

[formula]

In the next section, we discuss the time-integrator methods to solve our differential equations.

Splitting Methods

The evolution of the dynamical variable [formula] (including [formula] and [formula] themselves) is given by the Poisson bracket,

[formula]

A and B are Lie operators, or vector fields

[formula]

The transfer to the operators are given in the following description.

The exponential operators [formula] and [formula] are then just shift operators, with T2(Δt) is a symmetric second order splitting method:

[formula]

and corresponds to the velocity form of the Verlet algorithm (VV).

Further the splitting scheme:

[formula]

and corresponds to the position-form of the Verlet algorithm (PV). In the literature, see [\cite=hair2003], they are also known as symplectic splitting methods, see Figure [\ref=verlet].

The symplectic Störmer-Verlet or leap-frog algorithm in the notation [formula] is given in the following algorithm [\ref=algo_2].

For studying the delicate higher accurate stability of the Levitron, it is necessary to improve the standard Störmer-Verlet schemes, which are only second order scheme, but can be improve to a more accurate higher order scheme. In the following, we discuss the extrapolation idea with respect to the basic Störmer-Verlet algorithms.

Improvement of the Splitting schemes with Extrapolation methods

In the following, we discuss the different splitting schemes, that are based on the Strang-splitting scheme, see [\cite=strang68] and extrapolated with the so called MPE method, see [\cite=chin_2011] for time-dependent problems. In the first part we present the linear version, while in the second part we embed an iterative scheme to derive a nonlinear version.

The solution to the differential equation ([\ref=splitt_1]) can be formally written as

[formula]

where we assume general time-dependent operators A(t)  =  A(t)  +  B(t).

Following by Suzuki [\cite=suzu93], we have a forward time derivative operator, also called super-operator:

[formula]

such that for any two time-dependent functions F(t) and G(t),

[formula]

If F(t)  =  1, we have

[formula]

By comparing with Trotters formula we can apply the Suzuki's decomposition of the time-ordered exponential and obtain:

[formula]

Thus time-ordering can be achieve by splitting an additional operator D.

With such a scheme, we can transforms in any existing splitting algorithms into integrators of non-autonomous equations.

For the second order algorithm, we apply the Strang-splitting scheme for the three operators A(t),B(t),D and we have assumed:   =  0,   =  0.

[formula]

where we have applied the commutativity with the D operator and the shift with the forward time derivative operators.

Every occurrence of the operator [formula], from right to left, updates the current time t to t + diΔt. If t is the time at the start of the algorithm, then after the first occurrence of [formula], time is [formula]. After the second [formula], time is t + Δt. Thus the leftmost [formula] is not without effect, it correctly updates the time for the next iteration, see also [\cite=suzu93].

Thus the iterations of T2(Δt) implicitly imply

[formula]

by inserting equation ([\ref=second]), we obtained:

[formula]

For higher orders we have explicitly:

[formula]

[formula]

[formula]

[formula]

In the work of Blanes, Casas and Ros[\cite=bcr99] and Chan and Murua[\cite=cm00] the idea of extrapolating symplectic algorithms are also discussed. They presented the case of extrapolating an 2n-order symplectic integrators and noted that extrapolating a 2n-order symplectic integrator will preserve the symplectic character of the algorithm to order 4n + 1.

Numerical Results

In the following we deal with the computation of the Hamiltonian, which is dervied in Section [\ref=model], see also [\cite=dull98] [\cite=gans97].

Our Hamiltonian of the Levitron is given as:

[formula]

For our splitting scheme, we apply the Hamiltonian of ([\ref=equ1_ham]), we have:

[formula]

given as operator A and

[formula]

given as operator B, which we insert into the Algorithm [\ref=algo_2].

We compare our novel schemes (extrapolated Stömer-Verlet method) with standard and Runge-Kutta algorithms. Due to the long computation time needed, we simulated only 1000 timesteps and compare the trajectory with the reference solution from the Runge-Kutta algorithm. In figure [\ref=fig:trajectory_verlet] is shown how the trajectory of the same initial conditions looks like with the Verlet algorithm.

We improve the solution with an extrapolation scheme with fourth order. We have a view at the errors this algorithm produces in comparison with the Runge-Kutta Solution with small time-steps (10- 5 time units per step). In Figure [\ref=fig:extra_1] and [\ref=fig:extra_2], we presented the results of the 4th, 6th and 8th order Multiproduct expansion method with different time-steps and compared it with a fine resolved 4th order Runge-Kutta Benchmark solution (h  =  10- 8).

The time scales and computational amount for the extrapolation schemes are given in Table [\ref=table3] and [\ref=table4].

We have also tested the 10th order extrapolation with 10- 2 time units per step and also obtained stable trajectory.

In the examples, we have verified, that we can improve a basic second order symplectic splitting scheme with extrapolation schemes. At least achieved higher accurate solutions and save computational time. Moreover we save computer resources and obtained stable trajectories with larger time-steps. The best result we achieve with the order 10 and h = 10- 2 for such a case we could improve the results and are 10-times faster than with standard 4th order explicit Runge-Kutta schemes.

Conclusion

In the paper, we have presented a model to simulate a Levitron. Based on the given Hamiltonian system, which can be written as large system of time-dependent ordinary differential equation, we present novel and faster solvers based on splitting and extrapolation ideas. We could achieve more accurate and stable results with higher order schemes and save computational time with respect of stable computations. In future, we concentrate on the numerical analysis and embedding higher order splitting kernels to nonlinear differential equations based on Hamiltonian systems.