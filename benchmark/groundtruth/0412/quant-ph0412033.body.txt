Proposition Definition Corollary Lemma

Efficient Quantum Algorithms for the Hidden Subgroup Problem over Semi-direct Product Groups

Yoshifumi Inui and Fran cois Le Gall

Department of Computer Science, The University of Tokyo

7-3-1 Hongo, Bunkyo-ku, Tokyo 113-0033, Japan

and

ERATO-SORST Quantum Computation and Information Project, JST

Hongo White Building, 5-28-3 Hongo, Bunkyo-ku, Tokyo 113-0033, Japan

Introduction and Main Results

Almost all the quantum algorithms discovered so far that realize an exponential speed-up with respect to the best known classical algorithms can be seen as instances of the Hidden Subgroup Problem (HSP), a problem that asks to find a subgroup H hidden inside a group G. In particular the integer factoring problem and the discrete logarithm problem, for which Shor has presented polynomial-time quantum algorithms [\cite=shor], and the periodicity finding problem, for which Simon has shown an efficient quantum algorithm [\cite=simon], are instances of the special case of the HSP where the group G is Abelian. More generally, a polynomial-time quantum algorithm solving the HSP over any Abelian group G is known [\cite=kitaev], using as its main tool the Fourier transform over Abelian groups. However, no solution is known for the general case of G non-Abelian. The case of non-Abelian groups is indeed of paramount importance because a polynomial-time solution for the HSP when G is the symmetric group (the group of all the permutations over a given set) would give an efficient quantum algorithm solving the graph isomorphism problem, a well known problem for which no polynomial-time classical algorithm is known. However, the symmetric HSP seems difficult, even for quantum computers, as shown by several negative results [\cite=hallgren] [\cite=grigni] [\cite=moorea] [\cite=mooreb] [\cite=hallgren+STOC06]. Another fundamental instance of the non-Abelian HSP is the case where G is the dihedral group. Regev [\cite=regev] has shown that an efficient algorithm solving the HSP over the dihedral group by the coset sampling technique would enable a quantum computer to find, in polynomial time, the shortest vector in a lattice, at least for a class of lattices for which no efficient classical algorithm is known. Besides the theoretical importance such a quantum algorithm may have, this algorithm would also give strong indications that recent cryptosystems proposed by Ajtai and Dwork [\cite=ajtai] and Regev [\cite=regev2], which are among the best candidates to replace RSA-like cryptosystems and assume the hardness of computational problems in lattices, are not secure against adversaries using quantum computers. That is why an important part of the research on the HSP focused on the case where G is the dihedral group. Notice that although no polynomial-time quantum algorithm is known solving this case, a quantum algorithm running in sub-exponential time has been discovered by Kuperberg [\cite=kuperberg], and then improved by Regev [\cite=regev3].

The dihedral group can actually be defined as the semi-direct product [formula]. Ettinger and Høyer [\cite=ettinger] showed that considering the group Dn as the Abelian group [formula], and applying the Abelian Fourier transform over it is sufficient to obtain relevant information about the hidden subgroup. However, the post-processing proposed in [\cite=ettinger] requires exponential-time to extract a set of generators of this subgroup from this information and thus the global algorithm is not efficient. If, for other values of n and q, the groups [formula] is sufficiently Abelian, this method or other methods that failed to solve completely the dihedral case may work and it is one of the motivation for considering this class of semi-direct product groups. Indeed, Moore, Rockmore, Russell and Schulman [\cite=moore] proposed a polynomial-time quantum algorithm based on the non-Abelian Fourier sampling method solving the HSP over the q-hedral groups [formula] where p and q are two primes such that q divides p - 1 and p / q = poly( log p).

Other quantum algorithms are known solving the HSP over some classes of semi-direct product groups that are not semi-direct product of cyclic groups. Using the Fourier transform over [formula], Friedl, Ivanyos, Magniez, Santha and Sen [\cite=friedl] solved in polynomial time the HSP over the groups [formula] when pk is a fixed prime power. Radhakrishnan, Rötteler and Sen [\cite=radhakrishnan] have shown that it is possible to solve in polynomial time, information-theoretically, the HSP over the Heisenberg groups [formula]. Another class of semi-direct product groups for which efficient quantum algorithms are known corresponds to some wreath product groups [\cite=puschel].

A new promising method has been recently proposed by Bacon, Childs and van Dam [\cite=bacon], leading to efficient quantum algorithms solving the HSP over some groups of the form [formula], where A is an Abelian group. This method is fundamentally different from previous quantum algorithms for the HSP: it uses entangled measurements, corresponding to the so-called pretty good measurement, to identify the hidden subgroup. In particular, Bacon, Childs and van Dam's algorithm solves in polynomial time the HSP over the groups of the form [formula], for any integer n and prime q such that n / q = poly( log n), thus improving the result [\cite=moore]. They also present an efficient quantum algorithm solving the HSP over the [formula], with fixed r, improving the result [\cite=radhakrishnan] (and solving completely the problem, not only information-theoretically).

In this paper, we consider the HSP over the class of semi-direct product groups [formula], where p and q are prime. The definition of the semi-direct product depending on the choice of a homomorphism, we first analyze, in Section [\ref=sec:clas], the different possibilities for this homomorphism in function of p,r and q.

Then, in Section [\ref=sec:p], we present a polynomial-time quantum algorithm solving the HSP over the groups of the form [formula], where p is an odd prime, even when the group is input as a black-box group with not necessarily unique encoding. Notice that, prior to our work, the only quantum algorithms for the non-Abelian HSP dealing explicitly with the case of black-box groups were the algorithms developed by Ivanyos, Magniez and Santha [\cite=Ivanyos+03]. In particular, for an arbitrary black-box group it seems usually very difficult to use methods like pretty good measurement or Fourier sampling because the explicit form of the generators is unknown.

Although not the usual setting in HSP research, studying quantum computation over black-box groups is fundamental for the following reasons. First, it may be useful in proving separations, in the oracle model (where the oracle is the black box), of classical and quantum computation. Second, one of the most studied case in computational group theory is the setting of permutation groups. However, even in this setting, it can happen that factor groups appearing in the computation cannot be modeled as permutations groups and can be described only as black-box groups with not necessarily unique encoding. Thus, studying the HSP in the black-box context (especially with not necessarily unique encoding) may be very useful in order to design quantum algorithms for group computational problems over permutation groups as well.

In Section [\ref=sec:gen], we finally consider the class of groups of the form [formula]. Unfortunately, the algorithm dealing with the case m = 1 cannot be generalized easily and we need other ideas. We present a quantum algorithm solving the HSP in polynomial time over these groups for any m, when the group is input in a special form, with more restrictions than in the general definition of black-box groups.

We mention that Chi, Kim and Lee [\cite=Chi+06] have recently presented a quantum algorithm, based on our results, solving efficiently the HSP over a slightly larger class of semi-direct product groups.

Definitions

The hidden subgroup problem

We first recall basic definitions and notations we will use in this paper. For any positive integer n, we denote by [formula] the additive group of integers modulo n and by [formula] the multiplicative group consisting of the integers in the set [formula] that are coprime with n. Given elements [formula], we denote by [formula] the group generated by the generators [formula]. Given a group G, an element g∈G, and a subgroup H we denote by gH the left coset of H, i.e., the set of elements {gh  |  h∈H}. Now, let us define the notion of an H-periodic function.

Let G be a group, H a subgroup of G and X a finite set. A function f:G  →  X is said to be H-periodic if

f has the same value on all the elements of G in the same (left) coset of H, and

f has a different value on each (left) coset of H.

We now define the hidden subgroup problem.

The Hidden Subgroup Problem (HSP) is the following problem. Given as inputs

a group G given as a set of generators, and

a function f given as an oracle, which is H-periodic for an unknown subgroup H of G,

output a set of generators for H.

Notice that any group G can be represented by a set of at most O( log |G|) generators, where |G| is the number of elements of G. We thus say that an algorithm solves the HSP over G in polynomial time if it runs in time polynomial in log |G|.

Semi-direct product groups

We now define the class of semi-direct product groups of cyclic groups.

For any positive integers n and q, and any group homomorphism φ from the group [formula] into the group of automorphisms of [formula], the semi-direct product group [formula] is the set [formula] with the group product

Because φ has to be a homomorphism and φ(a) must be an automorphism for every [formula], φ is completely defined by setting φ(1)(1). The group [formula] is generated by the two elements x = (1,0) and y = (0,1). Using the fact that φ(b)(a) = aφ(1)(1)b, we obtain the relation which will be used in almost all the group computations in this paper.

Black-box groups

We will mainly consider the case where the group G is input as a black-box group. A black-box group is a representation of a group where elements are represented by strings (of the same length). An oracle that performs the group product is available: given two strings representing two elements a and b, the oracle outputs the string representing a  ·  b. Moreover, we have another oracle that, given a string representing an element a, computes a string representing the inverse a- 1. We will in Section [\ref=sec:p] consider the most general case where the elements are not uniquely encoded. In this case an oracle is provided to check whether two strings represent the same element. We refer the reader to Babai and Szemerédi [\cite=babai] for the complete definition of black-box groups.

In the quantum computation setting, the oracles have to be able to deal with quantum superpositions. These quantum black-box groups have been studied by Ivanyos, Magniez and Santha [\cite=Ivanyos+03] and Watrous [\cite=WatrousFOCS00] [\cite=WatrousSTOC01]. The concept is the same as above but the oracles realizing group operations are quantum. More precisely, we suppose that two oracles VG and V'G are available, such that

[formula]

[formula]

for any g and h in G. In the case of a quantum back-box group with not necessarily unique encoding, we suppose that the oracle checking whether two strings represent the same element is a quantum oracle too, although a classical oracle (i.e. an oracle not dealing with quantum superpositions) is actually sufficient for the algorithms in this paper.

Notice that any efficient black-box algorithm gives rise to an efficient algorithm whenever the oracle operation can be replaced by efficient procedures. Especially, when a mathematical expression of the generators input to the algorithm is known, performing group operations can be done directly on the elements in polynomial time (in log |G|) for almost all natural groups, including permutation groups and matrix groups. However, we stress that the converse is not generally true: efficient algorithms for a group problem can use information about the structure of the group that are not available in the black-box context.

It is known that the HSP over an Abelian group input as a (quantum) black-box group with unique encoding can be solved in polynomial time by a quantum computer [\cite=mosca2]. Notice that the same problem is open when the black-box group has not unique encoding.

A Classification of Semi-direct Product Groups

Number of possibilities for φ

For given n and q, how many possibilities are there for φ defining a semi-direct product group [formula]? The condition that φ should be a homomorphism implies that [formula]. Defining φ(1)(1) satisfying this condition is actually necessary and sufficient to define completely φ. Notice that the case φ(1)(1) = 1 is a trivial possibility that leads to the direct product [formula]. By considering the usual decomposition

[formula]

we can determine the number of possibilities for [formula] by determining the number of possible φ in the definition of the groups [formula]. Therefore, it is sufficient to study only the case of n being a power of a prime number. Finding the number of acceptable definitions for φ thus reduces to finding elements of order q in [formula] with n a prime power. In this paper, we will consider only the case q prime, which gives a clear classification into five classes of semi-direct product groups.

Let p and q be two prime numbers, and r an integer such that r  ≥  1. The only cases where there exist non-trivial elements α of order q in [formula] are the following three cases.

q|p - 1. There are exactly q - 1 distinct possibilities for α.

r > 1,  q = p  ≠  2. There are exactly p - 1 distinct possibilities: α = tpr - 1 + 1 for 0 < t < p.

r > 1,  q = p = 2. If r  >  2 then there are exactly three distinct possibilities: 2r - 1 + 1, 2r - 1 - 1 and 2r - 1. If r = 2 then there is only only possibility: α = 3.

First, we consider the case p  ≠  2. Recall that the group [formula] is a cyclic group. Let u be a primitive element of [formula]. Then α can be written as uk for some k less than the order of u. Since the order of u is pr - 1(p - 1), pr - 1(p - 1) divides kq. As 1  ≤  k < pr - 1(p - 1) and we assume q is prime, q must be p or any prime that divides p - 1. If q = p, k must be of the form lpr - 2(p - 1) where [formula], so the number of non-trivial possibilities for α is p - 1. In fact, it can be checked that the order of α  =  tpr  -  1  +  1 is p, for every 1  ≤  t  ≤  p - 1: these p - 1 values of α are thus the exact solutions. Else if q is a prime that divides p - 1, k must be [formula] where [formula].

Next, we consider the case p = 2. Assume r > 2 (the case r = 2 is trivial: one unique solution, α = 3). As the order of group [formula] is 2r - 1, the prime q must be 2. Since [formula] is odd, we denote α as 2kl + 1 for [formula] and odd l. From the condition [formula], we get k = 1 or 2r|2k + 1. We thus obtain three cases: the case k = 1 and l = 2r - 2 - 1 (corresponding to α = 2r - 1 - 1), and the case k = 1 and l = 2r - 1 - 1 (corresponding to α = 2r - 1) and the case k = r - 1 and l = 1 (corresponding to α = 2r - 1 + 1).

Classification of the semi-direct product groups [formula]

We have determined the number of possibilities for [formula] as a function of p and q. However, many of these solutions φ lead to isomorphic semi-direct product groups as stated in the next proposition.

The q - 1 semi-direct product groups that can be defined using the q - 1 solutions in the case (i) of Proposition [\ref=propphi] are isomorphic. Similarly, in the case (ii), the p - 1 semi-direct product groups corresponding to φ(1)(1) = tpr - 1 + 1 with 0 < t < p are isomorphic.

For the case (i) of Proposition [\ref=propphi], denote by φ1 one of the homomorphisms. The other q - 2 homomorphisms are actually defined by φi(1)(1) = φ1(1)(1)i for [formula] coprime with q. We define the one-to-one map Ψi from [formula] to [formula] by Ψi(xayb): = xaybi', where i' is the inverse of i in [formula]. It can be easily checked that Ψi(xaybxa'yb') = Ψi(xayb)Ψi(xa'yb'). Ψi is thus a group isomorphism.

For the case (ii), let φt be the homomorphism corresponding to φt(1)(1) = tpr - 1 + 1. We define the one-one map Ψt from [formula] to [formula] by Ψt(xayb): = xaybt' where t' is the inverse of t in [formula]. It can be easily checked that Ψt(xaybxa'yb') = Ψt(xayb)Ψt(xa'yb').

This implies that there are exactly five classes of non-isomorphic groups [formula], as stated in the next theorem.

The groups of the form [formula], for p and q prime, and r  ≥  1 can be classified in five non-isomorphic classes:

Class 1. The q-hedral groups [formula] for p and q primes satisfying q|p - 1, and r  ≥  1;

Class 2. The dihedral groups D2r  =  〈x,y  |  x2r = y2 = e,yx = x2r - 1y〉 for [formula];

Class 3. The quasi-dihedral groups QD2r  =  〈x,y  |  x2r = y2 = e,yx = x2r - 1 - 1y〉 for r > 2;

Class 4. The groups Pp,r  =  〈x,y  |  xpr = yp = e,yx = xpr - 1 + 1y〉 for p prime and [formula], except the case p = r = 2;

Class 5. The direct product groups [formula] for p and q prime, and r  ≥  1. Moreover, the five above classes are disjoint.

Direct consequence of Proposition [\ref=propphi] and Proposition [\ref=propiso]. Class 1 corresponds to the case (i) in Proposition [\ref=propphi]. Class 4 corresponds to the case (ii) and to the solution φ(1)(1) = 2r - 1 + 1 of the case (iii). Class 2 corresponds to φ(1)(1) = 2r - 1 and class 3 to φ(1)(1) = 2r - 1 - 1 in the case (iii). Class 5 corresponds to the trivial solution φ(1)(1) = 1.

HSP over semi-direct product groups

As mentioned above, the number of possibilities for the group [formula], for q prime, can be obtained directly using the decomposition of [formula] of Equation ([\ref=eq:decomposition]). Notice that the decomposition itself can be found in quantum polynomial time [\cite=mosca]. However, a subgroup of [formula] is not necessarily of the form [formula], with Hi subgroup of Gi and, thus, solving the HSP over groups of classes 1 to 5 is not sufficient to solve the HSP over any semi-direct product group [formula]. But, groups of classes 1 to 5 being basic blocks in the construction of semi-direct product groups, we believe it is fundamental to study the complexity of solving the HSP over groups of each class.

The semi-direct product groups first studied by Moore, Rockmore, Russell and Schulman [\cite=moore] correspond to class 1 with r = 1. These groups are groups of affine functions, where the semi-direct product of two elements corresponds to the composition of the associated functions. In [\cite=moore] a polynomial-time quantum algorithm using the so-called strong Fourier sampling method was proposed that gives an information-theoretic characterization of any hidden subgroup of this class of group. Moreover, when q is sufficiently large, in the sense that p / q = poly( log p), their algorithm returns in polynomial time a set of generators of the hidden subgroup and thus completely solves the problem.

Bacon, Childs and van Dam [\cite=bacon] then removed the restriction on r and obtained a polynomial time quantum algorithm for the HSP over the groups [formula] (of classes 1 to 5) when pr / q = poly( log (pr)).

The HSP over dihedral groups and quasi-dihedral groups (classes 2 and 3) is one of the most important open problem of HSP research. In the next section of this paper, we study the semi-direct product groups of class 4 and present a polynomial-time quantum algorithm solving the HSP over them.

Quantum Algorithm solving the HSP over Pp,r

In this section, we present our quantum algorithm solving, in polynomial time, the HSP over all the groups of class 4. We recall that, as in Theorem [\ref=theorem:classification], by Pp,r we mean the group 〈x,y  |  xpr = yp = e,yx = xpr - 1 + 1y〉 for p prime and [formula], and that the case p = r = 2 is excluded.

Structure of Pp,r

First, using the relation ybxa = xa(bpr - 1 + 1)yb, it can be easily checked that

[formula]

for any integers a,b and c. We are now ready to enumerate the different subgroups of Pp,r.

The subgroups of Pp,r are the following:

〈xpi〉 for 0  ≤  i  ≤  r,

〈xpi,y〉 for 0  ≤  i  ≤  r,

〈xtpjy〉 with 0  ≤  j < r and 1  ≤  t < p.

For any subgroup H of Pp,r, [formula] is of the form 〈xpi〉. We consider the different possibilities when H  ≠  〈xpi〉. If y∈H then, necessarily, H = 〈xpi,y〉. Suppose otherwise that [formula]. Then there exists [formula] such that xky∈H. Then and we see that because we do not consider the case p = r = 2. This implies that pi|kp and thus xtpi - 1y∈H with 1  ≤  t < p. It can be checked that the p - 1 subgroups 〈xtpi - 1y〉, for 1  ≤  t < p, are distinct.

All the subgroups of Pp,r are Abelian, except the trivial subgroup 〈xp0,y〉 = Pp,r. The only subgroups of Pp,r that are not normal are the p subgroups 〈xtpr - 1y〉 for 0  ≤  t < p.

For the first part, notice that all the subgroups, except the trivial subgroup Pp,r, contain no element of the form xky with 1 < k < p and thus every two elements commute. We leave to the reader the proof of the second part, tedious but straightforward.

The algorithm

As shown in Proposition [\ref=subgroup], the group Pp,r has 2(r + 1) + r(p - 1) = O(pr) subgroups. In the case where p is polynomial in log (pr  +  1), the HSP can be solved classically by checking all the subgroups. However, this method does not work for general p.

Our algorithm is based on the structure of Pp,r, resulting from Proposition [\ref=prop_abelian]. Using this structure, methods similar to Ettinger-Høyer reduction [\cite=ettinger], can also be used to solve the HSP over Pp,r, as described by Bacon, Childs and van Dam [\cite=bacon]. However, our algorithm solves the HSP even when the group is input as a black-box group with not necessarily unique encoding. More precisely, the problems in this setting are the following. With black-box groups, it is difficult, and sometimes impossible, to find generators of an arbitrary subgroup and thus Ettinger-Høyer reductions cannot be directly used. For example, the group Pp,r can be input both by x and y or by x and xy. It is thus difficult to find generators for a specific subgroup (e.g., the subgroup 〈y〉) for an arbitrary black-box representation (where the form of the generators is unknown). Moreover, when the encoding of the black-box group is not unique, another difficulty appears: even the quantum Fourier sampling approach to find the order of elements in a group cannot be directly used because it is possible that, for example, the encodings for the elements of the second period can be different from the encodings of elements in the first period, although the elements are the same.

We now present our main result.

Assume that Pp,r is input as a black-box group with not necessarily unique encoding. Then there exists a quantum algorithm finding, in polynomial time, the hidden subgroup.

Let H be the subgroup hidden, through the function f, in Pp,r. Any element in Pp,r of order pr is of the form xiyj with [formula], 0  ≤  j  ≤  p - 1, and any generating set of Pp,r contains at least one element of order pr and an element that does not commute with that element. Such two elements can be found by testing all the elements of the generating set. Let the former be xayb and the latter be xa'yb'. For these elements not to commute with each other, it is necessary and sufficient that [formula].

There are two possibilities, as implied by Proposition [\ref=prop_abelian]: Case 1: H is normal in Pp,r Case 2: H = 〈xtpr - 1y〉 for 0  ≤  t < p

We now present two polynomial-time quantum algorithms dealing with each of the two cases. Of course, we do not know which of the two cases holds but this does not matter. We run the two algorithms obtaining two sets of potential generators for H and output all those that are indeed in H (this can be tested by checking whether the value of f on them is f(e)).

Case 1: H is normal in Pp,r. We run the algorithm for the normal HSP given by Ivanyos, Magniez and Santha [\cite=Ivanyos+03] and output a set of generators of H.

Case 2: H = 〈xtpr - 1y〉 for 0  ≤  t < p and [formula]. In this case, H is a subgroup of the Abelian group 〈xpr - 1,y〉. The problem can be solved easily if explicit generators are known. However, in the case of Pp,r being a black-box group, this is not immediate. We show how to find good generators of this subgroup that enable to use the Abelian Fourier sampling method. Denote X = xayb and Y = xa'yb'. We first find an integer l such that (Xp)l = Yp. Expanding this using Equation ([\ref=equation:computation]) gives and guarantees the existence and unicity modulo pr - 1 of such an l. Now, defining [formula], H' = 〈(l, - 1)〉 and f'(u,v) = f((Xp)u(Yp)v), we see that f' is H'-periodic over G'. Running the Abelian HSP algorithm enables to find H' and thus l in polynomial time.

Now, let us first consider the case p  ≠  2. By using l, we can obtain an element Y' of the form xαpr - 1yβ where [formula]:

[formula]

where Notice that b' - bl cannot be a multiple of p because, since [formula], this would contradict the hypothesis [formula]. Thus,

[formula]

is an Abelian group (see Proposition [\ref=prop_abelian]) and 〈xtpr - 1y〉 is a subgroup of it. We thus use Abelian Fourier sampling over 〈Xpr - 1,Y'〉 and output a set of generators for H.

If p = 2, then, by a similar argument, Y' = X- lY is of the form xαpr - 2yβ where [formula]. Then

[formula]

is an Abelian group (here, we use our convention that the case p = r = 2 is excluded) and 〈xtpr - 1y〉 is a subgroup of it. We thus use Abelian Fourier sampling over 〈Xpr - 2,Y'〉 and output a set of generators of H.

Algorithm Solving the HSP over [formula]

We finally present a quantum algorithm solving the HSP algorithm over the groups of the form [formula], for p prime, where [formula] acts separately on each coordinate of [formula] as in Pp,r. Formally, [formula] is the group generated by m + 1 elements [formula] and y, where [formula] and yxi = xpr - 1 + 1iy for each [formula].

We will now show that, although [formula] is not an Abelian group, applying the Abelian Fourier transform to it (i.e., the Fourier transform over to the group [formula]) is sufficient to get enough information to find the hidden subgroup.

We first state a general useful proposition.

Let G be a black-box group, H a hidden subgroup of G and f an H-periodic function. If there exists a group G' over which a quantum polynomial-time solution for the HSP is known and a bijection π:G  →  G' verifying the following conditions

π(H) is a subgroup of G';

[formula] is π(H)-periodic;

there is a polynomial-size quantum circuit that, for any g'∈G', maps |g'〉 to |wg'〉, where wg' is a string representing π- 1(g') (in the black-box representation of G);

then H can be found by a quantum computer in polynomial-time.

The algorithm for the HSP over G' is used with, as input, the π(H)-periodic function [formula]. This gives, in polynomial time, a set of generators for H'. This set is used to create random elements of H' using standard methods [\cite=babai2] [\cite=babai3], which are then mapped using π- 1 to obtain almost uniformly random elements of H. A polynomial number of such elements is, with high probability, a generating set for H.

The above proposition is stated in the most general context of G being a black-box group but, in this case, the condition (iii) is problematic. Indeed, even if such a bijection π- 1 exists, it seems very difficult to implement it when the explicit form of the generators for G are unknown. For [formula], we do not know how to do this in the black-box framework and we need to have some knowledge of the form of the generators. We will solve the HSP over these groups when the input is given as a set of generators for [formula] and one generator for [formula]. This means that we can isolate the left part and the right part of the semi-direct product. More precisely, our result is as follows.

Consider [formula] being input as a black-box group with unique encoding under the form of a set of generators of [formula] and a generator of [formula]. Then there is a polynomial-time quantum algorithm finding the hidden subgroup H.

Denote [formula], y the generator of [formula] and [formula]. From the set of generator of A, we compute a minimal set of generators [formula] of A, i.e., m generators that generate A. Notice that this is possible, using the algorithm for Abelian membership testing by Ivanyos, Magniez and Santha [\cite=Ivanyos+03], because the encoding is unique. Let π be the following one-one map between [formula] and G'.

[formula]

This map satisfies condition (iii) of Proposition [\ref=proposition:general] because [formula] are known.

We now prove that (i) holds too. First, notice that, for any subgroup H of [formula], there are two possibilities: H is a subgroup of A or [formula] for some g∈A. Indeed, suppose that H cannot be written under the form [formula]. This implies that [formula] for [formula], with k > 1. Then, the elements (giy)- 1 = yp - 1g- 1i are in H too. Thus [formula] for all [formula], and [formula], which leads to a contradiction.

If H is a subgroup of A, then (i) holds trivially. Consider the case [formula]. From Equation ([\ref=equation:computation]), for any integer c,

[formula]

From the fact [formula], we obtain that [formula]. Thus H is the subgroup constituted by all the elements of the form g'gcyc where [formula] and [formula], and

[formula]

which is a subgroup of G'. This proves condition (i).

A similar argument proves that any coset of H in [formula] is mapped into a coset of π(H) in G', and more precisely any two identical cosets are mapped into identical cosets. Thus, [formula] is π(H)-periodic and (ii) holds as well.

The HSP over the Abelian group G' can be solved in polynomial time by a quantum computer. Using Proposition [\ref=proposition:general], we obtain a polynomial-time quantum algorithm solving the hidden subgroup problem over [formula].