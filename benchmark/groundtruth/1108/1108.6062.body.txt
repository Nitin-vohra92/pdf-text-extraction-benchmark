Prediction of lethal and synthetically lethal knock-outs in regulatory networks

Introduction

The survival, functioning and growth of a living cell is based on a large set of interdependent biochemical interactions. Interaction networks [\cite=Bower:2001] have proven to be useful summary pictures of such a biochemical system or part of it, especially when interactions are known qualitatively while precise quantitative information is scarce. For many systems, the interaction network suffices to capture essential features of dynamical behaviour [\cite=Albert:2003] such as the presence of a stable stationary state, multistability, oscillations etc. Often such predictions do not even depend on the whole network structure. Qualitative statements on system behaviour may be based on the centrality of nodes [\cite=Jeong:2001] [\cite=Wuchty:2003] or the presence of certain small subnetworks, called motifs [\cite=Alon:2007].

Here we ask to what extent a limited knowledge of biochemical interactions is usable for predicting the reaction of a system to failure of one or several of its components [\cite=Albert:2000] [\cite=Inger:2009] [\cite=Boldhaus:2010]. This kind of theory serves to complement experiments with knock-outs in vivo or in vitro [\cite=deVisser:2003]. A knock-out (or knock-down) is performed by blocking (or reducing) production of a single protein. Depending on the viability of the cell after suffering the modification, knock-outs are subject to a binary classification into lethal and viable.

When knocking out several nodes (proteins) of a system simultaneously, a richer classification arises from considering the lethality of this combined knock-out together with the effect of each single knock-out. Synthetic lethality [\cite=Hartman:2001] is the class of lethal simultaneous knock-out of two nodes i and j, where independent knock-out of node i alone is viable and independent knock-out of node j alone is viable. Synthetic lethality has direct implications for target identification in anticancer drug discovery [\cite=Chan:2011]. Since the experimental effort of a complete scan of double knock-outs is quadratic in the number of proteins, an accurate computational prediction of candidate pairs can greatly reduce the cost of experiments.

Here we study prediction of lethality and synthetic lethality in stochastically generated interaction networks. Knowledge is taken to be incomplete in the sense that only the absence or presence of interactions but not the type (enhancer / suppressor) is available. As predictors, we test efficiently computable network centrality measures based on degree and betweenness. Quality of predictors in terms of ROC curves (see Section [\ref=sec:Methods]) is held against the optimal prediction possible with the available knowledge. Additionally, we use evolutionary distance between nodes as a predictor. Thereby we find out how much the knowledge of paralogs supports the identification of synthetically lethal pairs.

Our notion of viability and lethality is based on a functional phenotype that we define here as a stationary state of the unperturbed dynamical system. Regulatory interactions are mimicked by Boolean threshold dynamics that serves as a suitable testbed for the studies of robustness of networked biological systems [\cite=Bornholdt2005] and for evolutionary studies [\cite=Luo:2011].

Network construction

Throughout this contribution, a network on n nodes is given by an n  ×  n matrix W. Each matrix entry wij takes a value in { - 1,0, + 1} where

[formula]

Reduced information about interactions is represent by assigning the network W a directed graph that we identify with its adjacency matrix A. The entries of A are given by aji  =  |wij|. Thus A contains the information about the absence or presence but not the type of a directed interaction. The density ρ(W) of a network

[formula]

measures the fraction of interactions established out of the n2 possible ones. We generate networks with the following two stochastic procedures.

Random networks

A random network W is generated by independently assigning each entry wij a value + 1 with probability p / 2, a value - 1 with probability p / 2 and a value 0 with probability 1 - p. The model parameter p is to be chosen from

[formula]

Networks from duplication and divergence

An alternative statistical ensemble of networks is generated by duplication and divergence. This is motivated by the observation that an evolutionary extension of the repertoire of regulatory sequences is obtained by duplication [\cite=Wagner1994] [\cite=Sole2002] [\cite=PastorSatorras:2003] [\cite=Ispolatov2005a] [\cite=Aldana:2007].

For generating a network by duplication and divergence (DaD) we start with a 2  ×  2 matrix representing two mutually but unequally coupled nodes, i.e. w12  =   + 1, w21  =   - 1 and w11  =  w22  =  0. Then the following process of duplication (i) and divergence (ii) is iterated.

A node i of the network with n - 1 nodes is randomly drawn from a flat probability distribution. Node i is duplicated, generating an additional row and column with index n in the matrix W. The new entries are wj,n: = wj,i and wn,j: = wi,j for all 1  ≤  j  <  n, and wn,n = wi,i.

For each index pair (k,l) with k = n or l = n: if |wkl| = 1, we set wkl: = 0 with probability r and leave wkl unchanged with probability 1 - r. Otherwise (wkl = 0), we set wkl: =  + 1 with probability a / 2, wkl: =  - 1 with probability a / 2 and leave wkl unchanged with probability 1 - a.

Step (i) implements gene duplication, in which both the original and the replicated proteins retain the same structural properties and the same set of interactions. The divergence steps (ii) implements the possible mutations of the replicated gene, which translate into the addition and removal of interactions with probabilities a and r. An example of this process is shown in Figure [\ref=fig:GenerateNet]. Special attention is given to the handling of loops. If the randomly chosen original node has a loop, the loop is copied as well as two additional links with the same edge weight between the original and the replica node.

The average density of networks generated with duplication and divergence is shown in Figure [\ref=fig:averageDegree] as a function of parameters a and r.

Knock-outs, dynamics, and functionality

Knock-outs

In a real biochemical interaction network, knocking out a node means that the concentration of the reactant represented by the node is set zero. For our purposes, it is equivalent to remove all outgoing interactions (arcs) of the node from the network. The knock-out of node k in network W leaves the network as [formula] with matrix entries [formula] if j  ≠  k and 0 otherwise. As a generalization, several nodes forming a set [formula] may be knocked out. The resulting network [formula] has entries

[formula]

Dynamics

In the present work we model gene regulatory networks by threshold dynamics [\cite=Derrida1987]. This is a special case of Boolean dynamics [\cite=Kauffman1969] [\cite=Aldana2003b]. A multitude of formulations for Boolean threshold networks exist, depending how the thresholds are distributed, how the behaviour at the threshold is defined and which weights for the edges are allowed. We choose the version as applied in the simplified yeast cell cycle network [\cite=Li2004] and many succeeding studies [\cite=Boldhaus2010a] [\cite=Boldhaus2010b] [\cite=Szejka2004] [\cite=Davidich2008a], compare Equation [\ref=eq:dyn].

A node is activated, si  =  1, if the sum of its weighted inputs exceeds a threshold value (here: threshold is zero). It is inactivated if the input sum falls below the threshold. In the case when the sum gives exactly the threshold value, the node value remains unchanged. Thus the Boolean state si of node i at time step t evaluates to

[formula]

Functionality and lethality

A state [formula] is a fixed point if it remains unaltered by the dynamics, i.e. the successor state of [formula] is [formula] itself. We define the function (in the sense of a phenotype) of a network W to be a fixed point state [formula]. After generation of a network, a fixed point [formula] is found as described in Section [\ref=sec:Methods].

Given a network W and its functional fixed point [formula], we say that a knock-out [formula] is viable (for [formula]) if [formula] is a fixed point of [formula]. Otherwise K is lethal. We say that K is synthetically lethal, if

K is lethal and

[formula] is viable for all proper subsets [formula].

Analogously one may define synthetic viability. A knock-out K is synthetically viable, if

K is viable and

[formula] is lethal for all proper subsets [formula], [formula].

Thus synthetic lethality and synthetic viability are defined for arbitrary cardinality |K|  ≥  2 of knock-outs. In this contribution, however, only single and double knock-outs are considered.

Results

Statistics of lethal knock-outs

We start by presenting the effect of single knock-outs in the two models of networks (random and DaD). Figure [\ref=fig:frac_single] shows, as a function of the density of the network, the probability that a single knock-out is lethal. For random networks, this probability increases with the arc density ρ. For all choices of parameters investigated here, DaD networks have fewer lethal knock-outs than random networks at the same density. Under constant probability a of adding interactions, the DaD networks even exhibit a decreasing number of lethal knock-outs with increasing density.

Note that the probability of knock-outs being lethal cannot exceed 1 / 2 because on average half of the nodes are in the off-state on the functional fixed point. Knock-out of a node in the off-state in the network does not affect the states of the other nodes. This theoretical maximum, however, is not reached. Random networks at the largest possible density 1 have a probability of ≈  0.41 for a knock-out to be lethal. Now we turn to the statistics for double knock-outs {v,w} in combination with the single knock-outs {v} and {w}. In each of the panels of Figure [\ref=fig:scenarios], the open circles connected by solid curves give the fraction of synthetically lethal pairs of nodes in networks of a given density ρ. Synthetic lethality becomes more abundant with increasing density in random networks (top panel) and in DaD networks with fixed arc removal probability (two lower panels).

Synthetic lethality is just one possible outcome of knock-out tests performed on a pair {v,w}. Of the single-node knock-outs {v} and {w}, none, exactly one or both may be lethal. Combination of this ternary result with the binary outcome (lethal/ viable) of the two-node knock-out {v,w} yields six possible scenarios. The statistics of these scenarios is plotted in Figure [\ref=fig:scenarios]. Interestingly, synthetic viability (dotted line with triangles) becomes more abundant than synthetic lethality in dense random networks.

Prediction

Now we investigate the predictability of the lethality, first of single, then of double knock-outs. Predictability is strongly dependent on the available knowledge. If the network W and the functional fixed point [formula] are fully known, perfect prediction of lethality is possible simply by computing the effect of the knock-out. In a more realistic scenario, only partial knowledge is available which we model here as follows. The presence or absence of each interaction is available with absolute accuracy while the type (enhancer/ suppressor) of each present interaction is totally unknown; information on the functional fixed point is not available. With the formalism described in section [\ref=sec:Networks], for a network W only the adjacency matrix A of the directed graph is known. Then the best predictor of lethality of a knock-out {i} is the relative frequency li of {i} being lethal in networks [formula] that have adjacency matrix A and interaction types randomly assigned. In other words, {i} is predicted as lethal in W, if {i} is typically lethal in networks with the same adjacency matrix as W. We call li structural lethality.

Computation of li may be impossible or impractical in real scenarios. Therefore the value of a centrality measure at node i is extracted from A and used for prediction instead of i. This incurs another step of knowledge reduction. Here it is salient to choose the "right" centrality measure for prediction. We consider the betweenness centrality bi, the out-degree [formula] the in-degree [formula], furthermore the degree sum [formula] and the degree difference [formula]. These are defined in Section [\ref=sec:Methods] as well as other quantities used here. The predictive power of the different measures is summarized in Table [\ref=tab:singleKO] for random and DaD models with varied parameter values. The deviation of a value from 0.5 indicates that the quantity contains information about the lethality of nodes in the given scenario. This is the case for all the centrality measures under consideration except for the in-degree. In DaD networks the chance to predict the effect of a knock-out is larger than in random networks of the same density, e.g. a = 0.1, r = 0.25 leads to networks with density p  ≈  0.35 which show a larger predictability than random networks with the same density. Best predictions are based on the out-degree whose predictive power almost reaches the best possible obtained by the structural lethality. Predictive power is measured as the area under the ROC curve of sensitivity versus specificity of the prediction which are shown in Figure [\ref=fig:roc_single].

Now we study the prediction of synthetically lethal pairs. The framework is mostly analogous to that of single knock-outs. Again we assume that the adjacency matrix but not the full network (with interaction types) are known. Eligible predictors are now measures of joint centrality, i.e. mapping a given unordered node pair {i,j} in a given graph A to a number. Here we investigate the out-overlap [formula], the in-overlap [formula] and the replacement centrality rij as defined in section [\ref=sec:Methods]. Furthermore, the evolutionary distance eij is used as a predictor in networks evolved by duplication and divergence (DaD). Table [\ref=tab:doubleKO] summarizes the predictive power of these centrality measures, again in comparison with that of the optimal predictor sij here called structural synthetic lethality. As the main result, the out-overlap [formula] is the best predictor of synthetic lethality in all cases considered, its predictive power is close to optimal in all cases considered. Prediction of synthetic lethality is facilitated in DaD networks as compared to random networks.

An interesting alternative scenario arises under the assumption that we already know all viable single node knock-outs, [formula] in each network W considered. For the prediction of synthetically lethal pairs, candidates are subsets {i,j}  ⊆  V(W), i  ≠  j. The predictive power for this scenario with restricted candidate set is given in brackets in Table [\ref=tab:doubleKO]. Prior knowledge of viable single-node knock-outs does not induce a significant increase of predictive power for any of the combinations of predictor, network generation model and density.

For a more detailed view of sensitivity and specificity, Figure [\ref=fig:roc_double] shows the ROC curves of selected predictors in the case without prior knowledge of viable single knock-outs.

Concluding remarks

The present contribution has established a theoretical framework for assessing predictability of knock-out effects in networked regulatory systems. We covered a broad range of scenarios in terms of network structures and predictors. Nevertheless it must be emphasized that outcomes depend on the choice of specific definitions made.

First of all, the definition of lethality is made in the context of the regulatory network, assuming that the only task of a node is regulation within the system considered. If the disabled protein is involved otherwise, e.g. as a structural protein, its potentially lethal knock-out cannot be predicted in the present framework.

Secondly, the definition of functionality of the network as the presence of a fixed point is not the only reasonable choice. For instance, we may demand that the fixed point [formula] be stable in the sense that the system returns to [formula] after a perturbation at one node's state. Rather than a fixed point, a particular temporal sequence of states may be defined as the functionality of the system [\cite=Li:2004] [\cite=Davidich:2008] [\cite=Boldhaus:2010] [\cite=Luo:2011].

Methods

Finding functional fixed point

After generating a network W, the functional fixed point [formula] is assigned as follows. An initial state vector s(0)∈{0,1}n is drawn uniformly. The dynamics is run from s(0) by iterating Equation ([\ref=eq:dyn]) until a state is seen the second time and an attractor is reached, i.e. at times t1 > t2  ≥  0 such that s(t1)  =  s(t2). If the attractor is a non-trivial fixed point, [formula], we take it as the functional fixed point [formula]. Otherwise the network W is discarded and replaced by another random instance.

Evolutionary distance

Along with the generation of a network W with the DaD model (Section [\ref=sec:DaD]), the evolutionary tree T is constructed, cf. the example in Figure [\ref=fig:GenerateNet]. The nodes [formula] of the network W are the leaves of the tree T. The evolutionary distance eij is defined as the length of the path between between leaves i and j on T. Each edge on T is counted with unit length.

Measures of centrality

Degree centralities

They measure importance in a linear fashion, assuming that a node with twice the number of links also is twice as important. Several different degree centralities can be defined by using a function of the in-degree dini and the out-degree douti of a node i for a given adjacency matrix A:

[formula]

Overlaps

We distinguish the in-overlap [formula] between nodes i and j as

[formula]

and the out-overlap [formula]

[formula]

If the denominator is zero, the whole expression is defined to be zero.

Betweenness centrality

It quantifies the fraction of shortest paths that pass through this node [\cite=Freeman1977].

[formula]

where the sum runs over all ordered node pairs (j,k); σjk denotes the total number of shortest paths from node j to node k; σjk(i) is the number of such paths running through node i. A modified Floyd-Warshall algorithm [\cite=Brandes2001] allows to simultaneously compute the lengths and numbers of shortest paths.

Replacement centrality

Let us define the replacement centrality of a pair of nodes (i,j) as

[formula]

if the denominator in Equation ([\ref=eq:repcent]) is non-zero and rij(A) = 0 otherwise.

Structural synthetic lethality

When only knowing the graph A, the best predictor of synthetic lethality for nodes i and j is given by the fraction of networks exhibiting synthetic lethality at i and j out of all networks compatible with A. This fraction is called structural synthetic lethality and is formally defined as

[formula]

where N(A) is the set of all networks that map to the graph A.

Receiver Operating Characteristic (ROC)

The sensitivity of a prediction is the fraction of cases for which the outcome is positive and correctly identified. Similarly, the specificity is the fraction of cases correctly identified as negative. A Receiver Operating Characteristic (ROC) [\cite=Fawcett2006] is the collection of all tuples of (specificity, sensitivity) obtained by varying a threshold ϑ on the quantity used as a predictor.

Formally, we consider a set of objects S with a binary partition, i.e. subsets S+ and S- with [formula] and [formula]. As a predictor of this partition, we consider a function [formula] and a threshold value [formula]. An object x∈S is predicted as positive (+  ) if v(x)  ≥  ϑ. The sensitivity measures the fraction of objects from S+ predicted to be positive (+  ), i.e.

[formula]

and analogously, the specificity is the fraction of objects from S- predicted to be negative (-  ),

[formula]

For the prediction of lethality, S is the set of all single knock-outs in all network realizations considered, S+ are the lethal knock-outs, S- the viable ones. Analogously in the context of double knock-outs, S+ are the synthetically lethal cases. The function v is the predictor used, such as out-degree, in-degree etc. ROC plots show sensitivity as a function of specificity subtracted from 1.

Acknowledgments

This work has been funded by VolkswagenStiftung through the initiative on Complex Networks as Phenomena across Disciplines.