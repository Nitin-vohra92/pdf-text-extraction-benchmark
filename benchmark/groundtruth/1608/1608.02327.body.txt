|petr.jancar@vsb.cz|

Deciding structural liveness of Petri nets

Introduction

Petri nets are a standard tool for modeling and analysing a class of distributed systems; we can name [\cite=reisig2013] as a recent introductory monograph for this area. A natural part of the analysis of such systems is checking the safety and/or liveness properties, where the question of deadlock-freeness is just one example.

The classical version of place/transition Petri nets (exemplified by Fig. [\ref=fig:expnet]) is used to model systems with potentially infinite state spaces; here the decidability and/or complexity questions for respective analysis problems are often intricate. E.g., despite several decades of research the complexity status of the basic problem of reachability (can the system get from one given configuration to another?) remains unclear; we know that the problem is [formula]-hard due to a classical construction by Lipton (see, e.g., [\cite=DBLP:conf/ac/Esparza96]) but the known upper complexity bounds are not primitive recursive (we can refer to [\cite=DBLP:conf/lics/LerouxS15] and the references therein for further information).

The liveness of a transition (modelling a system action) is a related problem; its complementary problem asks if for a given initial marking (modelling an initial system configuration) the net enables to reach a marking in which the transition is dead, in the sense that it can be never performed in the future. A marked net (N,M0), i.e. a net N with an initial marking M0, is live if all its transitions are live.

The close relationship of the problems of reachability and liveness has been clear since the early works by Hack [\cite=DBLP:conf/focs/Hack74] [\cite=DBLP:books/garland/Hack75]. Nevertheless, the situation is different for the problem of structural liveness that asks, given a net N, if there is a marking M0 such that (N,M0) is live. Though semidecidability of structural liveness is clear from the above facts, the decidability question has been open so far: see, e.g., the overview [\cite=wimmel2008] and in particular the recent paper [\cite=DBLP:journals/ipl/BestE16] where this problem (STLP) is discussed in the Concluding Remarks section.

Here we show the decidability of structural liveness, by showing the semidecidability of the complementary problem. The idea is to construct, for a given net N, a marked net (N',M'0) (partly sketched in Fig. [\ref=fig:decidpslp]) that works in two phases (controlled by additional places): in the first phase, an arbitrary marking M from the set [formula] of markings with at least one dead transition is generated, and then N is simulated in the reverse mode from M. If N is not structurally live, then the projection of the reachability set of (N',M'0) to the set P of places of N is the whole set [formula]; if N is structurally live, then there is [formula] such that the projection of any marking reachable from M'0 differs from M.

In the first case (with the whole set [formula]) the reachability set of (N',M'0) is surely semilinear, i.e. Presburger definable. Due to a result by Leroux [\cite=DBLP:conf/lics/Leroux13], there is an algorithm that finishes with a Presburger description of the reachability set of (N',M'0) when it is semilinear (while it can go forever when not). This yields the announced semidecidability.

The construction of the above mentioned (downward closed) set [formula] is standard; the crucial ingredient of our proof is the mentioned result by Leroux. Another ingredient is the decidability of reachability; nevertheless it is not clear that the reachability reduces to the structural liveness, and the complexity of the structural liveness problem is left open for future research.

Section [\ref=sec:basicdef] provides the necessary formal background, and Section [\ref=sec:SLPdecid] shows the decidability result. In Section [\ref=sec:AddRem] a few comments are added, and in particular an example of a net is given where the set of live markings is not semilinear.

Basic definitions

By [formula] we denote the set [formula]. For a set A, by A* we denote the set of finite sequences of elements of A, and ε denotes the empty sequence.

Fig. [\ref=fig:expnet] presents a net N = ({p1,p2,p3},{t1,t2,t3},W) where W(p1,t1) = 2, W(p1,t2) = 1, W(p1,t3) = 0, etc.; we do not draw an arc from x to y when W(x,y) = 0, and we assume W(x,y) = 1 for the arcs (x,y) with no depicted numbers. Fig. [\ref=fig:expnet] also depicts a marking M by using black tokens, namely M = (3,1,0), assuming the ordering (p1,p2,p3) of places.

[formula] [formula] [formula].

By [formula] we denote that t is enabled in M, i.e. that there is M' such that [formula]. The relations [formula] are inductively extended to [formula] for all u∈T*: [formula]; if [formula] and [formula], then [formula]. The reachability set for a marking M is the set

[formula] for some u∈T*}.

For the net of Fig. [\ref=fig:expnet] we have, e.g., [formula]; we can check that the reachability set for (3,1,0) is

[formula]

A transition t is live in M0 if there is no [formula] such that t is dead in M. (Hence for each [formula] there is [formula] such that [formula].) A set T' of transitions is live in M0 if each t∈T' is live in M0. (Another natural definition of liveness of a set T' is discussed in Section [\ref=sec:AddRem].)

A marked net is a pair (N,M0) where N = (P,T,W) is a net and M0 is a marking, called the initial marking. A marked net (N,M0) is live if each transition (in other words, the set T) is live in M0 (in the net N). A net N is structurally live if there is M0 such that (N,M0) is live.

E.g., the net in Fig. [\ref=fig:expnet] is structurally live since it is live for the marking (3,1,0), as can be easily checked by inspecting the transitions enabled in the elements of the reachability set ([\ref=eq:rsetoddeven]). We can also note that the net is not live for (4,1,0), we even have that no transition is live in (4,1,0), since [formula] where all transitions are dead.

The partial liveness problem, denoted [formula], asks, given a marked net (N,M0) and a set T' of its transitions, if T' is live in M0.

The liveness problem, denoted [formula], is a special case of [formula]: it asks, given a marked net (N,M0), if (N,M0) is live (i.e., if all its transitions are live in M0).

The partial structural liveness problem, denoted [formula], asks, given a net N and a set T' of its transitions, if there is M in which T' is live.

The structural liveness problem, denoted [formula], is a special case of [formula]: it asks, given a net N, if there is M such that (N,M) is live.

Structural liveness of nets is decidable

We aim to show the decidability of [formula], and thus also of [formula]:

The partial structural liveness problem ([formula]) is decidable.

We prove the theorem in the rest of this section. We first recall the famous decidability result for reachability. The reachability problem, denoted [formula], asks if [formula] when given N,M0,M.

[\cite=DBLP:journals/siamcomp/Mayr84] The reachability problem ([formula]) is decidable.

In Petri net theory this is a fundamental theorem; we call it a "lemma" here, since it is one ingredient used in proving the theorem of this paper (i.e. Theorem [\ref=th:decidSLP]). The first proof of Lemma [\ref=lem:reachdecid] was given by E. W. Mayr (see [\cite=DBLP:journals/siamcomp/Mayr84] for a journal publication), and there is a row of further papers dealing with this problem; we can refer to a recent paper [\cite=DBLP:conf/lics/LerouxS15] and the references therein for further information. The complexity status remains far from clear; we have [formula]-hardness due to a classical construction by Lipton (see, e.g., [\cite=DBLP:conf/ac/Esparza96]) but the known upper bounds are not primitive recursive.

There are long known, and straightforward, effective reductions among the reachability problem [formula] and the (partial) liveness problems ([formula] and [formula]); we can find them already in Hack's works from 1970s [\cite=DBLP:conf/focs/Hack74] [\cite=DBLP:books/garland/Hack75]. This induces semidecidability of the partial structural liveness problem ([formula]). Hence the main issue is to establish the semidecidability of the complementary problem of [formula]; roughly speaking, we need to find a finite witness when (N,M) is non-live for all M.

We further assume a fixed net N = (P,T,W) if not said otherwise.

[formula] some t∈T' is dead in M}

for T'  ⊆  T. We note that the definition entails [formula]. E.g., in the net of Fig. [\ref=fig:expnet] we have [formula], [formula], and

[formula]

Due to the monotonicity of Petri nets (by which we mean that [formula] implies [formula] for all [formula]), each [formula] is obviously downward closed. We say that [formula] is downward closed if [formula] implies [formula] for all M'  ≤  M, where we refer to the component-wise order:

[formula].

It is standard to characterize any downward closed subset [formula] of [formula] by the set of its maximal elements, using the extension [formula] where ω stands for an "arbitrarily large number" satisfying ω  >  n for all [formula]. Formally we extend a downward closed set [formula] to the set

[formula].

We thus have

[formula] for some [formula]

where [formula] is the set of maximal elements of [formula]. By (the standard extension of) Dickson's Lemma, the set [formula] is finite. (We can refer, e.g., to [\cite=DBLP:journals/corr/abs-1208-4549] where such completions by "adding the limits" are handled in a general framework.)

E.g., for the set [formula] in ([\ref=eq:exampleDT]) we have [formula].

Given N = (P,T,W) and T'  ⊆  T, the set [formula] is downward closed and the finite set [formula] is effectively constructible.

The fact that [formula] is downward closed has been discussed above. A construction of the finite set [formula] can be easily derived once we show that the set [formula], i.e. the set of minimal elements of the (upward closed) complement of [formula], is effectively constructible.

For each t∈T', we first compute [formula], i.e. the set of minimal markings in which t is not dead. One standard possibility for computing [formula] is to use a backward algorithm:

Start with the set [formula] (hence [formula] is a singleton).

For [formula] compute

[formula]

until [formula].

Termination is clear by Dickson's Lemma, and [formula] obviously implies that [formula]. (Studies in a more general framework can be found, e.g., in [\cite=DBLP:journals/iandc/AbdullaCJT00] [\cite=DBLP:journals/tcs/FinkelS01].)

Having computed the sets [formula] for all t∈T', we can easily compute the set [formula] since

[formula].

Remark. Generally we must count with at least exponential-space algorithms for constructing [formula] (or [formula]), due to Lipton's [formula]-hardness construction that also applies to the coverability (besides the reachability). On the other hand, by Rackoff's results [\cite=DBLP:journals/tcs/Rackoff78], the numbers in [formula] (and thus also the finite numbers in [formula]) are at most doubly-exponential w.r.t. the input size, and thus fit in exponential space. Nevertheless, the precise complexity of computing [formula] is not important in our context.

[formula] is live in M}.

The set [formula] is not the complement of [formula], but it is obvious that T' is live in M iff there is no M' reachable from M in which some t∈T' is dead:

[formula] iff [formula].

We note that [formula] is not upward closed in general. We have already observed this on the net in Fig. [\ref=fig:expnet], where [formula] (i.e., [formula]). It is not difficult to verify that in this net we have

[formula]

Prop. [\ref=prop:charlive] has the following simple corollary:

The answer to an instance N = (P,T,W),T' of [formula] (the partial structural liveness problem) is

YES if [formula], i.e., if [formula].

NO if [formula], i.e., if [formula].

It turns out important for us that in the case 2 (NO) the set [formula] is semilinear. We now recall the relevant facts, and then give a proof of Theorem [\ref=th:decidSLP].

For a fixed (dimension) [formula], a set [formula] is linear if there is a (basic) vector [formula] and (period) vectors [formula] (for some [formula]) such that

[formula].

Such vectors [formula] constitute a description of the set [formula].

A set [formula] is semilinear if it is the union of finitely many linear sets; a description of [formula] is a collection of descriptions of [formula], [formula] (for some [formula]), where [formula] and [formula] are linear.

It is well known that an equivalent formalism for describing semilinear sets are Presburger formulas [\cite=GinsburgSpanier1966], the arithmetic formulas that can use addition but no multiplication (of variables); we also recall that the truth of (closed) Presburger formulas is decidable. E.g., all downward (or upward) closed sets [formula] are semilinear, and also the above sets ([\ref=eq:rsetoddeven]) and ([\ref=eq:LT]) are examples of semilinear sets.

It is also well known that the reachability sets [formula] are not semilinear in general; similarly the sets [formula] (of live markings) are not semilinear in general. (We give an example in Section [\ref=sec:AddRem].) But we have the following result by Leroux [\cite=DBLP:conf/lics/Leroux13]; it is again an important theorem in Petri net theory that we call a "lemma" in our context (since it is an ingredient for proving Theorem [\ref=th:decidSLP]).

[\cite=DBLP:conf/lics/Leroux13] There is an algorithm that, given a marked net (N,M0), is guaranteed to halt if the reachability set [formula] is semilinear, in which case it produces a (finite) description of this set.

Roughly speaking, the algorithm (of Lemma [\ref=lem:semilinconstruct]) generates the reachability graph for M0 while performing "accelerations" whenever possible (which captures repeatings of some transition sequences by simple formulas); this process creates a sequence of descriptions of increasing subsets of the reachability set [formula] until the subset is closed under all steps [formula] (which can be easily checked); in this case the subset (called an inductive invariant in [\cite=DBLP:conf/lics/Leroux13]) is obviously equal to [formula], and the process is guaranteed to reach such a case when [formula] is semilinear. (A consequence highlighted in [\cite=DBLP:conf/lics/Leroux13] is that in such a case all reachable markings can be reached by sequences of transitions from a bounded language.)

Given N = (P,T,W) and T'  ⊆  T, we will construct a marked net (N',M'0) where [formula] so that we will have:

if [formula] in N (i.e., T' is non-live in each marking of N) then [formula] is semilinear and the restriction of [formula] to P is [formula];

if [formula], then there is [formula] such that the restriction of any [formula] to P is not equal to M.

By this construction the proof will be finished, since in the case a) the algorithm of Lemma [\ref=lem:semilinconstruct] applied to (N',M'0) is guaranteed to finish with a description of [formula] from which it will be clear if the restriction of [formula] to P is [formula]; in the case b) another algorithm will find some [formula] for which the respective condition can be verified due to a standard extension of the decidability of reachability (Lemma [\ref=lem:reachdecid]), as our construction will also make quite transparent.

The constructed (N',M'0) captures the set [formula] that is highlighted in Prop. [\ref=prop:fullnonlive]. The idea is illustrated in Fig. [\ref=fig:decidpslp]; we create a marked net that first generates an element of [formula] and then simulates N in the reverse mode.

More concretely, we assume the ordering [formula] of the set P of places in N, and compute a description of the set [formula] (recall Prop. [\ref=prop:maxconstruct]); let

[formula],

given by descriptions [formula] of the linear sets [formula], for [formula]. (We choose this description of [formula] to make clear that the construction can be applied to any semilinear set, not only to a downward closed one.)

The construction of (N',M'0), where [formula], can be now described as follows:

Given N = (P,T,W), create the "reversed" net Nrev = (P,T,Wrev), where Wrev(p,t) = W(t,p) and Wrev(t,p) = W(p,t) for all p∈P and t∈T. (By induction on the length of u it is easy to verify that [formula] in N iff [formula] in Nrev, where urev is the reversal of u.)

To get N', extend Nrev as described below; hence W'(p,t) = Wrev(p,t) and W'(t,p) = Wrev(t,p) for all p∈P and t∈T.

Create the set Pnew consisting of the new places [formula], 1, 2, [formula], m, and N, and the set Tnew consisting of the new transitions tρi, fi, and tπi1, tπi2, [formula], tπiki for all [formula]. (This is partly depicted in Fig. [\ref=fig:decidpslp].)

Put M'0() = 1 and M'0(p) = 0 for all other places [formula].

For each [formula], put W'(,tρi) = W'(tρi,i) = 1, and W'(tρi,pj) = (ρi)j for all [formula], where (ρi)j is the j-th component of the vector [formula]. (We tacitly assume that the value of W' is 0 for the pairs (p,t) and (t,p) that are not mentioned.)

For each [formula] ([formula], [formula]) put [formula], and [formula] for all [formula].

For each fi put W'(i,fi) = W'(fi,N) = 1.

For each transition t∈T in Nrev put W'(N,t) = W'(t,N) = 1.

For the resulting (N',M'0), we obviously have that there is always precisely one token on Pnew; i.e., the set [formula] can be expressed as the union

[formula]

of the disjoint sets [formula] and M(p) = 1} (for [formula]). The sets [formula], [formula], [formula], [formula] are obviously semilinear, and it is also clear that the restriction of [formula] to [formula] is the set [formula] where [formula] refers to the net N.

Hence the constructed (N',M'0) indeed satisfies the above conditions a) and b) (since [formula] iff [formula]). To verify b), it suffices to find a marking M of N' that satisfies M(N) = 1, [formula] and that is not reachable from M'0.

Remark. For establishing the non-reachability of M from M'0 we can use an algorithm guaranteed by the decidability of reachability (Lemma [\ref=lem:reachdecid]). Another option, due to another result of Leroux (see, e.g., [\cite=DBLP:conf/birthday/Leroux12]), is to find a description of a semilinear set that contains M'0, does not contain M, and is closed w.r.t. all steps [formula] (being thus an inductive invariant in the terminology of [\cite=DBLP:conf/birthday/Leroux12]).

Additional remarks

the set of live markings of a given net is not semilinear in general.

We give an example. If the set [formula] of live markings for the net N = (P,T,W) in Fig. [\ref=fig:nonsemilin] was semilinear, then also its intersection with the set [formula] would be semilinear (i.e., definable by a Presburger formula). But is is straightforward to verify that the markings in this set are live if, and only if, x6  >  2x1: any marking M where p4 is marked (forever), i.e. M(p4)  ≥  1, is clearly live, and we can get at most 2x1 tokens in p5 as long as p4 is unmarked; if x6  ≤  2x1, then there is a reachable marking where all transitions are dead, but otherwise p4 gets necessarily marked.

Acknowledgement.

I would like to thank to Eike Best for drawing my attention to the problem of structural liveness studied in this paper.