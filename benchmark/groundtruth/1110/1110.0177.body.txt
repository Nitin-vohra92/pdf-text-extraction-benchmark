A Nuclear Magnetic Resonance Implementation of a Classical Deutsch-Jozsa Algorithm

Introduction

Nuclear magnetic resonance (NMR) experiments are generally conducted using bulk samples and hence the manipulating radiofrequency (rf) pulses and the detection signal have to be regarded in the context of an ensemble average of the underlying nuclear magnetic spin dynamics. Theoretically, this situation is successfully dealt with by a density matrix approach. Since, however, the idea of quantum computation is based on the concept of being able to manipulate the spin dynamics on the basis of pure quantum spin states, there have been various attempts at implementing quantum computation algorithms using the experimental conditions and restrictions of NMR by adopting pseudo-pure spin state based approaches.

The most commonly implemented quantum algorithm, both in NMR and in general, is the one due to Deutsch and Josza [\cite=Collins1998] [\cite=Linden1998] [\cite=Collins2000] [\cite=Cory2000] [\cite=Dorai2000] [\cite=Kim2000] [\cite=Marx2000] [\cite=Arvind2001a] [\cite=Mahesh2001] [\cite=Kessel2002] [\cite=Kumar2002] [\cite=Das2003] [\cite=Wei2003] [\cite=Mangold2004] [\cite=Fitzsimons2007] [\cite=Fahmy2008] [\cite=Gopinath2008]. The various NMR implementations differ by: the underlying spin quantum numbers S (S = 1 / 2 or S > 1 / 2); the initial spin states (thermal equilibrium state or pseudo pure state); the algorithmic implementation of the problem (Collins [\cite=Collins1998] or Cleve [\cite=Cleve:1997aa] defining the number of qubits necessary to operate a given DJ problem size).

In the context of computation, NMR has in the past been exclusively used for implementing quantum computations. However, it also has potential as a classical computing medium, where the rich state space can be fully utilised to perform classical operations [\cite=Rosello-Merino:2010aa]. The Deutsch-Jozsa problem, long touted as a simple and key example of the ability of quantum computing to outperform classical computing, has more recently been shown to be de-quantisable in some cases--i.e., efficient classical solutions can be formulated [\cite=Abbott:2011aa] [\cite=Calude:2007aa].

In this paper, we describe the implementation of the n = 1 and n = 2 de-quantised solutions for the DJ problem in a classical NMR computation. The process of implementing this solution highlights key aspects of quantum algorithms and computation, and we discuss these in detail. In particular, we emphasise the separation between three nested 'layers' of any quantum algorithm: the problem formulation, the algorithm formulation, and the physical implementation. In general these levels are independent, but certain conditions on the relationship between levels must be satisfied. Specifically, a particular algorithm applies only to a specific problem formulation, and for each algorithm a choice of embedding into the physical medium must be made in order to implement it. Further, for 'oracle' or 'black-box' problems such as the Deutsch-Jozsa problem the comparison of different formulations of the problem requires discussion of the ability to embed the black-box from one formulation into the other. All these issues are subtle and require further discussion.

Problem Formulation

The standard formulation of the Deutsch-Jozsa problem [\cite=Deutsch:1992aa] is as follows. Let f:{0,1}n  →  {0,1}, and suppose we are given a black-box computing f with the guarantee that f is either constant (i.e. for all x1,x2∈{0,1}n we have f(x1) = f(x2)) or balanced (i.e. f(x)  =  0 for exactly half of all possible inputs x∈{0,1}n). The problem is to determine, in as few black-box calls as possible, whether f is constant or balanced. The obvious classical algorithm must examine one more than half the input bit-strings and thus requires 2n - 1 + 1 black-box calls, while the quantum solution requires only one.

There is, however, an important subtle issue: the classical and quantum problems are slightly different. In one case we are given a classical black-box Cf computing f, and in the other we are given a unitary black-box Uf, operating in a 2n + 1 dimensional Hilbert space H2n + 1, computing [formula] where '[formula]' denotes addition modulo 2. As such, it is bending the truth a little to say that 'the problem' can be solved more efficiently quantum mechanically than classically.

The possibility in the n = 1,2 cases to de-quantise the quantum solution to give an equally good classical algorithm [\cite=Abbott:2011aa] [\cite=Calude:2007aa] results from working with a formulation of the problem in which we are given a higher dimensional classical black-box. In this case, complex numbers are used as 'complex bits'--a classical analogue of a qubit--and the black-box Cf operates (in the n = 2 case) as follows:

[formula]

In general, a particular algorithm, be it classical or quantum, solves a particular formulation of the problem; i.e., it determines if a black-box of a specific type which computes in some reasonable form f is balanced or constant. Hence, it seems at least some of the apparent difference in powers of the classical and quantum solutions comes from the slightly different formulation of the problems, i.e., the different 'powers' of the black-boxes.

A comment should be made about what it means to compute f in some reasonable form. Since quantum computing requires unitarity, the simplest and perhaps most natural way to compute f is with an f-controlled-NOT gate; indeed this was the original method proposed by Deutsch [\cite=Deutsch:1985aa]. One thus needs to be careful of claims that the separate output qubit for Uf is not needed [\cite=Collins1998] and that the alternative quantum black-box [formula] can equally well be used. Rather, it seems that Uf' does not reasonably compute f as absolute phase factors have no physical significance and it is hence impossible to characterise which boolean function f the black-box 'computes' by trying various inputs. The same issue is not present, however, in the classical de-quantised solution because phase factors are measurable in this case, and thus Cf can be seen to compute f, albeit in a slightly non-standard way.

Black-box embeddings

The quantum black-box (represented by Uf) is often considered an embedding of the classical black-box computing f [\cite=Williams:2011uq]; if this were true it would be more reasonable to view the quantum solution as solving the original problem. This, however, is a misunderstanding which helps hide the differences between the classical and quantum formulations of the problem. For this to be an embedding we would require a map [formula] (where '[formula]' denotes an embedding) which preserves the structure of the computed function. That is, for x∈{0,1}n, e(f(x))  =  Uf(e(x)). In other words, the computational states we assign to represent the binary bits 0 and 1 must behave as expected under Uf given that Uf should compute the function f.

However, the requirement of the unitarity of Uf makes such an embedding impossible. This can be verified by considering any constant boolean f: such a function is not bijective, so no bijective Uf preserving the required structure can exist. Because no unitary embedding is possible, it seems more suitable to consider the quantum solution as a method to solve an analogue of the classical problem, rather than a more efficient solution to the classical problem. One is forced to conclude that the typical claims comparing the quantum and classical solution are, in fact, not valid. Any comparison of the problems should take into account the differences in complexity of the black-boxes [\cite=Abbott:2010ab].

Interestingly, there is an embedding between the quantum black-box Uf and the de-quantised black-box Cf, so it is not as unreasonable to compare the solutions using these black-boxes as it is to compare the quantum and one-dimensional classical solutions. By realising that the original classical solution and the de-quantised classical solution are not solving the same problem, we see there is no explicit contradiction with claims that 2n - 1 + 1 black-box calls is the best that can be done in the original classical problem [\cite=Mermin:2007aa].

Algorithm Formulation

Given a particular formulation of the problem, the algorithm formulation involves determining the input for the black-box, and what operations are required to determine the nature of f from the output of the black-box.

In the standard quantum solution [\cite=Cleve:1997aa] [\cite=Deutsch:1992aa], we initially prepare our system in the state [formula], and then operate on it with a three-qubit Hadamard gate, [formula], to get:

[formula]

After applying the f-controlled-NOT gate Uf we have

[formula]

By applying a final 3-qubit Hadamard gate to project this state onto the computational basis we obtain the state

[formula]

If we measure both the first and second qubits we can determine the nature of f: if both qubits are measured as 0, then f is constant, otherwise f is balanced. This result is correct with probability one.

The de-quantised solution works in a similar way, but uses complex numbers as two-dimensional complex bits. Using the black-box Cf defined previously, the algorithm proceeds as follows. We set z  =  z1  =  z2  =  1 + i, apply Cf and multiply by z to project onto the computational basis to obtain the result:

[formula]

By checking both of the resulting complex numbers, we can determine whether f is balanced or constant with certainty. If both complex numbers are imaginary then f is constant, otherwise it is balanced. In fact, the ability to determine if the output numbers are negative or positive allows us to determine the value of f(00) and thus which Boolean function f is; the quantum algorithm is incapable of doing this [\cite=Mermin:2007aa].

The ability to de-quantise the n = 1 and n = 2 solutions suggests that, at least in these cases, the power of the quantum algorithm comes from exploiting the two-dimensionality of the black-box, rather than from quantum mechanical effects [\cite=Abbott:2011aa].

Implementation of classical NMR computing

For the implementation of the de-quantised algorithm we use real, two-dimensional vectors to represent our complex bits (only the direction of the vector is of particular importance); this is equivalent to using complex numbers, but more convenient for use in this implementation. In this representation our basis bits corresponding to the classical 0 and 1 become (1,0) and (0,1) respectively. For the implementation we must embed our bits into the physical medium; to do so, we use the nuclear magnetisation spin vectors for this embedding. Specifically, we embed the complex bits into the xy-plane of the rotating frame of reference in a NMR experiment as is illustrated in Fig. [\ref=fig:magnetisation]. We only consider uncoupled spin species with spin quantum number S = 1 / 2, and we have the advantage that every direction of the magnetisation vector in the xy-plane is distinguishable. Working solely with uncoupled spin species, their dynamics are fully described by a classical model of magnetisation vectors subjected to a range of differnt rotations (pulses) [\cite=Levitt:2008fk] [\cite=Merino-maths]. Hence, at no point do we make explicit use of the quantum-mechanical properties of nuclear spin systems. In particular, we take (row-vectors represent complex bits, column vectors are the nuclear spin vectors; we omit normalisation factors for convenience):

[formula]

Combinations of the complex bits are naturally taken by the vector addition (i.e. the embedding is linear) of the corresponding spin vectors (e.g.  [formula]). This mapping is shown in Fig. [\ref=fig:mapping]. We emphasise that while the same nuclear spin state vectors are used as in conventional quantum computing experiments, we choose a different embedding of our algorithm into this spin-state vector space which is more flexible for use with complex bits.

Our sample consists of 99.8% deuterated chloroform with a small amount of H2O added. The 1H spins in the residual CHCl3 and H2O in this mixture are used for the implementations. The top row in Fig. [\ref=fig:spectra] depicts a conventional 1H NMR spectrum of the sample. The implementation for n = 1 only requires one spin species to be present. This is most easily achieved by using selective excitation pulses, centred at the resonance frequency of the CHCl3 1H NMR resonance. The 1H NMR spectrum obtained by selective excitation, together with the corresponding excitation profile of the selective pulses used are shown in the middle and bottom traces of Fig. [\ref=fig:spectra].

The n = 1 implementation

The n = 1 implementation relies on the form of the black-box Cf operating as

[formula]

The NMR pulse sequence for implementing this for our sample is shown in Fig. [\ref=fig:n1seq]. The sequence starts with a (selective) π / 2 pulse, flipping the (CHCl3) 1H magnetisation vector from the initial equilibrium z-direction into the xy-plane, followed by a sequence of two π pulses applied to the xy-magnetisation vector as required to implement the black-box before the resulting signal is detected in the form of a FID.

The four possible boolean functions for n = 1 may be written fAB where A = f(0) and B = f(1). The four corresponding black-boxes can be uniformly implemented as the following set of π pulses, applied to our basis bits (see Fig. [\ref=fig:mapping]):

[formula]

We see that the physical embedding of the black-box fulfils the requirement that the function f is reasonably computed due to the ability to distinguish all directions of magnetisation vectors in the xy-plane, and thus all valid complex bits. In particular, applying the black-boxes for inputs (1,0) or (0,1) yields (( - 1)f(0),0) and (0,( - 1)f(1)) respectively as desired. The effect of the four black-boxes on the 'basis bits' is shown in Table [\ref=tbl:n1BasisResult], both in terms of complex bits and spin vectors.

For the actual algorithm, the de-quantised solution can be simplified by dropping the use of any equivalent of the final Hadamard operation; there is no need to project the result onto the basis states since non-basis states are equivalently detectable. In fact, the choice of [formula] states as our 'basis bits' (rather than Ix and Iy) is convenient because this leaves the system in Ix or Iy states after the black-box, and these states are particularly easy to distinguish (see Fig. [\ref=fig:mapping]).

The effect of the algorithm with each black-box is shown in Table [\ref=tbl:n1AlgResult]. The corresponding spectra relating to the computation are shown in Fig. [\ref=fig:n1comp], along with the action of the black-box on the basis-state inputs. In particular for a constant f we have I±  x spectra, and for balanced we have I±  y spectra. Further, because we can distinguish I+ x spectra from I- x spectra (and I+ y spectra from I- y spectra) we can easily determine which function f the black-box represents.

The n = 2 implementation

The idea is that the n = 2 case should be implemented as a natural extension of the n = 1 case by expanding it to include two different spin species. The function to be implemented is:

[formula]

With the same mapping of bits as for the n = 1 case, the natural extension of the embedding is to have the black-box, now defined by the three parameters A = f(00), B = f(10) and [formula], implemented as:

[formula]

With this we can see that the first spin is treated as for the n = 1 case, and the second spin requires only a single pulse (or none, depending on f). This form of the black-box, however, is only valid if one assumes ideal pulses. In reality, we now deal with two different spin species with different resonance frequencies, hence the receiver can only be on resonance with one species at a time. In addition, all rf pulses have non-vanishing durations (in particular the rather 'soft' selective pulses with durations of the order of ms) during which evolution of magnetisation occurs. Hence, the pulse sequence of the physical implementation as shown in Fig. [\ref=fig:n2seq] has to account for non-ideal behaviour in order to produce an equivalent result to the one obtained from the idealised mathematical description.

The NMR experiment starts with selective pulses centred on spin species 1 (exactly as for the n = 1 case before), followed by a selective π / 2 pulse centred on spin species 2, and a delay of duration τ(C). If the receiver is kept on resonance with species 1 throughout, it is off resonance for species 2. Accordingly, after the selective [formula] pulse the magnetisation of this species will precess in the xy-plane, and by this acquire a phase difference relative to the on-resonance signal of species 1. This precession frequency depends on the difference in resonance frequency between the two spin species and hence one can easily calculate the correct duration of the delay τ(C) that corresponds to a dephasing by 3π / 2 from the starting Ix,2 condition to I- y,2. At this point in time, the situation is exactly equivalent to the ideal-pulse scenario and the data acquisition is started.

The pulse sequence depicted in Fig. [\ref=fig:n2seq] is the simplest form in which the required idealised black-box can be carried out in a real NMR experiment. For example, one might have started the pulse sequence with a non-selective ('hard') π / 2 pulse covering both spin species simultaneously. That would be a common preparation step for a spin system, creating a common initial state from which to work. However, this would only complicate matters as now one would have to take into account dephasing of species 2 magnetisation during all selective pulses applied to species 1, and one would have to apply the corresponding phase corrections to any pulses applied to species 2 later in the sequence. We do not have to start from one common initial state; instead our physical implementation avoids all unnecessary such corrections and calculations by simply using selective pulses only and preparing species 2 'just in time' such that only the duration of the pre-acquisition delay needs to be calculated.

As for the n = 1 case, it is easily verified that once again the requirements for the black-box to reasonably compute f are satisfied: on a given 'basis' input an even number of sign changes indicates a function value of 0 on this input, and odd number a value of 1. The results of the black-box on basis inputs is shown in Table [\ref=tbl:n2BasisResult], and the result of the algorithm is shown in Table [\ref=tbl:n2AlgResult]. The corresponding input/output spectra are shown, as for the n = 1 case, in Fig. [\ref=fig:n2comp].

Comparison with quantum implementations

There are a range of quantum implementations with varying properties, so it is not straight forward to decide how best to compare classical and quantum algorithms.

The main reason for the advantages of the classical implementation comes from the extra freedom we take in embedding the complex bits in the quantum system. In the quantum case, there is only freedom of embedding up to the choice of an orthonormal basis; any choice leads to the exact same disadvantage regardless, and is only for ease rather than anything else. Since our vectors representing complex bits contain only real components, we can embed them in the xy-plane of magnetisation. In this embedding global phases of the complex bit do not correspond to global phases of the quantum spin, so are detectable. In the classical computation we are still exploiting quantum spins via NMR, but doing so in such a way that the quantities we are interested in measuring behave classically.

In practice, the quantum NMR algorithm should operate on a pseudo-pure mixed state, i.e. [formula], which in general (for more than 1 qubit) takes some effort to prepare. However, for the Deutsch-Jozsa algorithm many implementations do not use such pseudo-pure states, and use the same initial state we use for the classical algorithm, i.e. a thermal state with an applied Bz field. This means they are using a slightly different algorithm than the standard Deutsch-Jozsa algorithm; this is fine as long as the black-box embedding is the same that would be applied even if they had used a pseudo-pure state.

It seems desirable to be able to compare classical and quantum implementations, but what should we compare? Some possible things to consider are:

What is the cost in preparing the initial state, how does this differ between the two?

What is the cost of having to deal with coupling? (this might not be so clear with respect to this algorithm, but our experiences can be used to talk about cost difference in general between quantum and classical NMR algorithms).

Is the quantum black-box more difficult to create than the classical one? We can use this to possibly compare the extra power in the black-box in different embeddings?

Is there a difference in difficulty in switching between functions computed between quantum/classical implementations? Is one more uniform?

Are there significant differences in times required?

Are there differences in accuracy or limitations between the methods?

Do the answers to any of these questions change between the n = 1 and n = 2 cases? Is there more difficulty in moving from n = 1 to n = 2 or above between classical and quantum cases?

Classical and quantum NMR Computation

- Emphasise the point that this is ensemble quantum computation which is not the same as normal QC, and has some important differences - Review the fact the NMR is also suitable for classical comp

Observations on quantum nature of NMR computation

In general the pseudo-pure states used are not entangled for small enough ε, so what classifies it as quantum computation, especially in comparison to our classical computation where we are using quantum systems to perform classical computation?

In order to do controlled operations even with the classical implementation, coupling would be needed. This then starts to sound and behave very much like the quantum implementation. So, a) what makes our implementation classical rather than quantum (and vice-versa)? b) is there an argument for doing pseudo-quantum computation using our embedding? The underlying quantum basis we use is not orthonormal, but the basis is orthonormal w.r.t. the complex bits. What is the fundamental importance of an orthonormal quantum basis? Only the orthonormal states are the eigenvalues of the observables, i.e. they are the measurable ones. But in expectation value quantum computation (e.g. NMR based QC), this is not the case and we can detect anywhere in the xy-plane. Why? This needs to be clarified I think.

Summary

The experiments described in this paper not only show the successful implementation of the de-quantised Deutsch-Jozsa algorithm for n = 1,2, but also bring attention to some important points regarding quantum computations. The experiments confirm that the Deutsch-Jozsa problem can indeed be solved classically in some cases using as many black-box calls as the standard quantum algorithm. During the process of developing our implementation some issues about the comparisons of algorithms for different formulations of the problem were raised and discussed in detail. We note that, while we explicitly demonstrate the ability to solve the n = 1,2 cases for what is essentially an alternative (but equivalent to the quantum) problem formulation, the ability to do so for higher values of n reduces to the ability to de-quantise the quantum solution for these cases, which is believed not to be possible [\cite=Abbott:2011aa].

These experiments reiterate the utility of NMR as a classical computing substrate [\cite=Rosello-Merino:2010aa]. Specifically, the use of an alternative embedding from the problem space onto the uncoupled nuclear spin vectors allowed us to perform the classical algorithm and even determine the specific function f computed. This is a more general result regarding the ensemble computational nature of NMR computing, which allows any spin-direction in the xy-plane to be (in theory) resolvable. It is further possible that this alternative embedding could be utilised for quantum computations involving only real-valued coefficients. Since such computations are universal [\cite=Bernstein:1997fk], it is plausible that this could be used to perform ensemble quantum computations in which the state amplitudes themselves can be measured directly.

Experimental

99.8% deuterated [formula] was obtained from Aldrich Chemicals. [formula] NMR spectra of a [formula] / [formula] mixture were recorded on Bruker Avance II 600 NMR spectrometer (see Fig. [\ref=fig:spectra]), corresponding to a [formula] Larmor frequency of - 600.13 MHz. On-resonant 90 pulse durations were 2.5 ms and Gaussian selective pulses at a resolution of 1000 points utilised cut-offs of 1%. All spectra were recorded in single scans, allowing recycle delays of at least 11 s between experiments.

Acknowledgments

We gratefully acknowledge the support of this work by the Deutsche Forschungsgemeinschaft (MB and AS) and EPSRC (AA, MB and AS). We thank Susan Stepney for comments which helped improve the paper.