Quantum walks with memory - goldfish, elephants and wise old men

Introduction

Quantum computation [\cite=bib:NielsenChuang00] is believed to allow certain computational problems to be solved much more quickly than on classical computers. The standard approach to quantum computation is using the circuit model, whereby an algorithm is decomposed into a set of quantum gates. Another contender is the measurement based model [\cite=bib:Raussendorf01] [\cite=bib:Raussendorf03], whereby a highly entangled state is prepared and computation proceeds via only single qubit measurements. More recently, the quantum walk formalism, the quantum analogy of a classical random walk, has emerged as an interesting approach to implementing quantum computational tasks [\cite=bib:ADZ] [\cite=bib:AAKV] [\cite=bib:Kempe08] [\cite=bib:Salvador12]. Here a walker, i.e. a particle, is located at vertices in a graph and is allowed to coherently 'hop' along the edges of the graph to other vertices. This approach has proved fruitful for algorithm design [\cite=bib:ChildsCleve03] [\cite=bib:ShenviKempe03] [\cite=bib:Ambainis04] [\cite=bib:ChildsGoldstone04] [\cite=bib:Magniez07] [\cite=bib:Santha08] [\cite=bib:Tulsi08] [\cite=bib:Berry11a] [\cite=bib:Berry11] and is known to be universal for quantum computation [\cite=bib:Childs09] [\cite=bib:Lovett10]. Numerous experiments have begun to demonstrate elementary quantum walks, particularly photonic implementations where the walker is a single photon [\cite=bib:Hagai08] [\cite=bib:Schreiber10] [\cite=bib:Broome10] [\cite=bib:Peruzzo10] [\cite=bib:Schreiber11b] [\cite=bib:Matthews11] [\cite=bib:Schreiber12] [\cite=Sansoni12]. The standard models consider single walkers. However steps have been made towards implementing multi-walker quantum walks [\cite=bib:RohdeSchreiber11] [\cite=bib:RohdeSchreiber12] [\cite=bib:Peruzzo10].

In the usual discrete-time quantum walk model a walker has a coin value associated with it, which specifies the direction the walker will take when propagating through the graph. In this paper we consider the case where multiple coins are employed, which can be interpreted as memory of previous coin values. We show that this memory drastically affects the evolution of the quantum walk, and indeed can result in a transition from quantum statistics to classical statistics. We study the effects of history-dependent coins and find that this can lead to various diffusive phenomena. We consider the effect that measuring memory elements has on the evolution of the walk, and discuss the rate of spread of the probability distribution as a function of the memory length. We explicitly show how to experimentally construct an optical quantum walk with memory and discuss the challenges of classical simulation of such systems.

Numerous authors have considered memory effects in the context of classical random walks [\cite=bib:Dickman03] [\cite=bib:Hod04] [\cite=bib:Schutz04] [\cite=bib:Keshet05] [\cite=bib:Paraan06] [\cite=bib:daSilva06] [\cite=bib:Cressoni07] [\cite=bib:Kenkre07] [\cite=bib:Harris09], and some steps have also been made in the quantum context [\cite=bib:Brun03] [\cite=bib:Flitney04] [\cite=bib:McGettrick10], which we build upon.

Quantum walk formalism for linear graphs

We begin by defining a walker as a bipartite system, |x,c〉, where x is the position of the walker in a graph and c is the coin value which dictates the direction of the walker. In the standard discrete-time quantum walk formalism for a single walker on a linear graph, the evolution is decomposed into two steps, coin (C) and step (S), defined as,

[formula]

where A(x) is a unitary coin matrix defining the transition amplitudes at position x. The coin value takes values ±  1 (right or left respectively). The coin operator coherently manipulates the coin value, putting it into a superposition of left and right, while the step operator updates the position value according to the newly chosen coin value. After the coin operator, the coin value can be interpreted as the direction the walker will propagate at the the next step, whereas after the step operator it can be regarded as memory of the previous coin direction. After evolving t time steps the output state is [formula]. This formalism could be logically extended to operate on graphs of higher order by extending the coin space beyond ±  1, but we will initially focus on the case of linear graphs for ease of exposition.

The rate of spread of a quantum walk is quantified by the variance:

[formula]

where [formula], and pi(t) is the probability to measure the walker at position i after a number of time steps t. A classical random walk on a line has variance σ2(t) = t whereas the quantum walk on a line [formula] where the proportionality constant depends on the initial state and the choice of coin rotation [\cite=bib:Kempe08]. In the presence of decoherence, either acting on the coin or spatial degrees of freedom, the quantum walk eventually behaves like a classical random walk with linear dispersion [\cite=bib:Kendon].

Formalism with memory

In the case of an arbitrary number of memory elements we introduce additional memory Hilbert spaces. We focus on discrete-time quantum walks since no coins are present in the continuous-time quantum walk, and therefore memory does not naturally arise. With N memory elements the walker is defined as [formula], and we decompose the evolution into three stages by adding an additional memory update (M) operator. Then the evolution can be decomposed into,

[formula]

where ci is the coin value at memory element i, i.e. memory of the coin value i steps ago. All the operations can be done quasi-locally in space (see Fig. [\ref=WalkerFig]). The coin operator coherently manipulates the last memory element into a superposition of left and right, the step operator updates the current position according to the last memory element, and the memory update operator cyclically permutes the memory elements such that ci  →  ci + 1 (i.e. what was the ith memory element next becomes the (i + 1)th memory element). When N = 1 we refer to this as a goldfish walk (goldfish have poor short-term memory), and when N = t we refer to this as an elephant walk (elephants have exceptional long-term memory).

Our definition of a walk with memory is similar to that by Brun et al. [\cite=bib:Brun03] who introduced the use of cyclic permutations to update the memory registers but without a memory dependent coin flip. Flitney et al. [\cite=bib:Flitney04], considered the case of some form of memory dependent coin flip in the context of Parrondo games. See also McGettrick et al. [\cite=bib:McGettrick10] for a treatment of quantum walks with a length-two memory. One of the key results of that work is that quantum walks with recycled coins do not decohere provided that the coins are not recycled faster than every other time step. If, however, the number of coins does equal the number of time steps then the walks converges to the classical random walk behaviour. Here we give the first systematic numerical study of the effect of memory dependent coin flips on the behaviour of quantum walks.

One might ask why we have chosen the coin operator to manipulate the last memory element. This is chosen to enforce the interpretation that ci represents memory of the coin i steps ago. If, say, the first memory element were updated, this interpretation would no longer apply.

After evolving t time steps the output state is [formula]. To enforce elegant symmetry into the output state henceforth we symmetrize the input state to be of the form,

[formula]

and additionally employ a balanced coin,

[formula]

which applies equal transition amplitudes in the left and right directions at each position. This particular form of highly entangled input for the coin state is convenient for visualisation purposes but is not necessary. In fact a product state input of the form [formula] produces qualitatively similar behaviour with respect to the variance.

The full time evolution over 12 steps of the limiting goldfish and elephant walks are shown in Fig. [\ref=fig:plots_3d]. The final output position probability distributions (summed over all coin values) for different memory sizes are illustrated in Fig. [\ref=fig:outputs_memory]. In the case of a goldfish walk we observe the usual double-peaked distribution of a standard quantum walk with a single coin, and in the elephant walk we observe the classical statistics of a binomial distribution.

The reason we observe classical statistics for the elephant walk is that the walker always has full memory of its entire evolution. Thus, no two trajectories interfere and therefore evolve independently of one another, giving rise to a classical distribution. An alternate way of thinking about this is that for t < N we are effectively using a fresh coin at each step. Thus, we observe classical behaviour for t < N, after which quantum behaviour emerges. In general there is a high level of entanglement between the position and memory subsystems. Note the elephant walk yields the same distribution one would obtain for a goldfish walk where the coin value is measured at each time step, or equivalently the coin value undergoes decoherence at each time step, as was demonstrated experimentally by Broome et al. [\cite=bib:Broome10]. Importantly, even though we observe classical statistics in the elephant walk, our state is nonetheless a highly entangled pure state and no decoherence has taken place. The evolution is unitary and by reversing time we can always evolve back to the input state, which is not possible in the truly classical case.

Coin measurement & decoherenece

We now consider the evolution of the quantum walk when we measure some of the coins. In Fig. [\ref=fig:outputs_postselect] we plot the output distribution for a an elephant walk with and without measurement of the last four coins in the memory. After measurement we are left with a usual quantum walk distribution, which has been shifted according to the measurement outcomes of the memory registers and allowed to run for a shorter period of time. Specifically, measuring the last k memory registers, with outcomes oi 'resets' the quantum walk and shifts its evolution to have an origin at [formula] and allowed to run for t - k steps. This behaviour would ordinarily be observed in a standard quantum walk if measurements were performed intermittently during the evolution. But here the measurement can be performed after the evolution, which projects the distribution into a region constrained by the measurement outcomes. In the case of an elephant walk, if we measure all the coins we can effectively reconstruct the entire path the walker followed to reach its destination.

If decoherence is present in the memory registers, this is equivalent to the environment measuring the respective registers without giving us information about the measurement outcome. Thus, decoherence in the memory will yield a mixed state over the distributions obtained by different memory measurement outcomes. This can lead to coherence over different length scales. Suppose the environment measures the last coins and is able to distinguish between [formula] and [formula], which we acknowledge is a little artificial. This will yield a mixture of two coherent distributions located at different origins on the line, as per Fig. [\ref=fig:outputs_postselect]. Each sub-distribution exhibits full coherence, whereas the total distribution is a highly mixed state. If the two sub-distributions are non-overlapping, tracing out the positions associated with one distribution will yield a pure state over the remaining positions.

See Refs. [\cite=bib:BrunCarteret03] [\cite=bib:BrunHillary03] for a discussion on quantum walks with decoherent coins, and Broome et al. [\cite=bib:Broome10] for an experimental photonic implementation of a quantum walk with decoherent coins showing the transition from quantum to classical as the decoherence is increased.

Two spatial dimensions

Next we turn our attention to a quantum walk on a two dimensional lattice. This is easily constructed by taking the formalism introduced earlier and expanding the coin degree of freedom to have four basis states (up, down, left and right). Now the basis states are of the form [formula], where x and y denote the two spatial dimensions. We begin with the walker localised at the centre of the graph and consider the cases where the coin is separable

[formula]

where [formula] is the coin from Eq. [\ref=eq:P_coin] (i.e. the coin acts on the two spatial dimensions independently) or maximally entangling,

[formula]

both with and without memory. The final probability distributions are illustrated in Fig. [\ref=fig:two_dimensions]. It can be visually seen that all the distributions are separable across the two spatial degrees of freedom, except in the case where entangling coins are employed and there is no memory.

Interestingly, even when entangling coins are employed, we do not observe spatial entanglement when memory is introduced. Thus, not only does memory reduce the walk to a classical binomial distribution, but it also destroys entanglement between the two spatial degrees of freedom. When the probability distribution is separable this implies the walker's x value is independent of its y value and we will always observe the same marginal x distribution. Thus, measurement along one direction has no impact on the measured distribution in the other. On the other hand, with spatial entanglement (i.e. inseparability), measurement in the x direction projects the y distribution onto a function of the measured x outcome.

To quantify the spatial entanglement, in Fig. [\ref=fig:ent_dyn] we plot the spatial entanglement dynamics against time, confirming that spatial entanglement only persists with entangling coins and no memory. The entanglement metric used is that described in Ref. [\cite=bib:RohdeSchreiber11]. We diagonalise the spatial probability distribution matrix and then calculate the Shannon entropy of the diagonal elements, [formula]. When the spatial distribution is separable (i.e. there is no spatial entanglement), there is only one diagonal element and S = 0. For non-separable distributions we have S > 0, a signature of entanglement.

History-dependent coins

Until now we have considered coins that are independent of the full memory history and only depend on the last memory element. We now consider the scenario where the coin operator is a function of the full previous history. We refer to this as a wise old man walk (wise old men have varying degrees of memory - some good, some horrendous - but they always base their actions on their past).

Specifically, we will assume biased coins of the form,

[formula]

where the angle θ is computed from the memory history by

[formula]

and 0  ≤  φ  ≤  1 is a parameter which specifies to what extent the memory is taken into account when choosing the coin operator. We refer to θ as the memory function, and it determines the diffusive properties of the walk. Of course this definition only works when N  ≥  2. When φ = 0 the coin operator reduces to a balanced Hadamard coin, independent of the history, and we reduce to walks similar to those previously discussed.

In Fig. [\ref=fig:wise_phi] we plot the time evolution of a wise old man walk with N = 5 for different history parameters φ and memory function from Eq. [\ref=eq:theta]. This time we use the input state [formula], i.e. we do not symmetrize the input state . When φ = 0 we reduce to a normal Hadamard walk. As φ increases we observe reduced dispersion, biased in one direction, yielding an asymmetric position distribution. To quantify this, in Fig. [\ref=fig:wise_spread] we plot the variance of the distribution against time for different values of φ, confirming that higher φ results in reduced dispersion. All distributions in Fig. [\ref=fig:wise_spread] closely fit to quadratic curves.

Fig. [\ref=fig:wise_phi] can be understood as follows. Assume φ = 1. If the walker has a long history of moving to the right, θ  →  π / 2, and the coin operator reduces to the bit-flip matrix, [formula]. Then the walker favours switching direction and heading back towards the origin. On the other hand, if the walker has a long history of moving to the left, θ  →  0, the coin operator reduces to the identity matrix, [formula], and the walker will favour continuing its present course. Thus in one direction the walker resists further diffusion, whilst in the other it does not, giving rise to the asymmetric distribution seen in Fig. [\ref=fig:wise_phi]. The latter property is better understood by considering the input state [formula]. In this case the coin is the identity matrix, and remains so, and the walker linearly shoots to the left without entering a superposition (graphic not shown). For this reason in the Fig. [\ref=fig:wise_phi] we have only considered the [formula] term, which nicely illustrates the resistive diffusive behaviour in the rightward direction.

Of course there is nothing unique about our choice of memory function in Eq. [\ref=eq:theta]. Any function could be chosen, giving rise to a plethora of different diffusive phenomena. Another simple example is to choose the memory function to be,

[formula]

In this instance the coin reduces to a bit-flip only when the walker's history is consistently in the same direction and to a Hadamard when the history is balanced. Thus, this memory function will resist excessive diffusion in both directions, yielding the much more localised distribution shown in Fig. [\ref=fig:second_diff] (once again with a symmetrized input state).

The two memory functions discussed previously had the effect of reducing dispersion. One can also choose memory functions which enhance diffusion. If we choose our memory function to be,

[formula]

diffusion will be enhanced for larger φ. When the history is consistently in the same direction the coin reduces to the identity, and to a Hadamard when the history is balanced. This is shown in Fig. [\ref=fig:enhanced_diff] (with a symmetrized input state). In Fig. [\ref=fig:wise_spread_enh] we plot the variance against time for various φ with memory function from Eq. [\ref=eq:enhanced_diff]. Once again all curves fit closely to quadratic distributions.

The memory function from Eq. [\ref=eq:enhanced_diff] is just Eq. [\ref=eq:second_diff] with a negative value of φ. Thus, for the memory function in Eq. [\ref=eq:second_diff] there are three regimes. When φ = 0 we observe usual Hadamard ballistic spreading. When 0 < φ  ≤  1 we observe reduced diffusion. And when - 1  ≤  φ < 0 we observe enhanced diffusion. Note that [formula].

A physical model for history dependent coined walks

Let us consider how to physically realise a history dependent coin rotation operation. For the memory function defined in Eq. [\ref=eq:theta] we need to perform a conditional rotation on the Nth coin based on the states of the N - 1 coins that specify the remembered past of length N - 1 . We do this by an appropriate modification of the quantum walk step: MSC  →  MSU(φ)C with the action defined:

[formula]

where

[formula]

Here we allow for the rotation angle φ(x) to also be a function of position. Note that up to conjugation by a local rotation on the Nth coin, this unitary is generated by an Ising-like coupling between coins [formula] and the Nth coin. Effectively, the unitary U(φ) performs a conditional rotation on the Nth coin with an angle that is proportional to the polarisation [formula] of all the other coins in memory.

Quantum walks with memory on general graphs

In our studies so far we have restricted ourselves to regular graphs. As discussed, we can generalise to regular graphs of constant order by increasing the dimensionality of the memory states. Next we consider the question whether the formalism can be generalised to arbitrary graph structures. To address this question we turn to the formalism presented in Ref. [\cite=bib:RohdeSchreiber11], which introduced an approach for modelling multi-walker quantum walks on arbitrary graphs. We will restrict ourselves to the case of a single walker, in which case the formalism is,

[formula]

Here c no longer specifies a direction, but rather a vertex. Thus, after the coin operator c can be interpreted as the vertex the walker will hop to at the next step, and after the step operator as memory of the previous vertex. nx is the neighbourhood of vertex x, i.e. the vertices connected to x by an edge.

Next one might assume we can logically generalise this to have memory by letting our state vectors be of the form [formula], as before. The problem with doing this is that the number of possible values of cN is in general larger than the size of the neighbourhood of x, |nx|. Thus, no unitary matrix A(x) can be defined which maps the cN vertex memory value to a vertex in the neighbourhood of x. Therefore, in this intuitive choice of formalism, it is not possible to unitarily define a quantum walk with memory. If it is possible at all, a more novel approach will have to be employed, or alternately non-unitary operators could be employed, which would result in mixed states.

A different approach to considering arbitrary graphs is to instead focus on regular graphs, such as a regular 2D lattice, but allow the coin matrices A(x) to be different at each vertex. By this approach irregularity can be modelled, even though the underlying graph is regular. For example, to model a vertex which does nothing in a 2D lattice, the corresponding coin matrix could be defined as the identity matrix [formula]. This would have the effect of propagating the walker straight through the vertex without entering a superposition.

Multiple walkers

Next we generalise our formalism to multiple walkers. To do this we adopt the walker operator formalism presented in Ref. [\cite=bib:RohdeSchreiber11]. Here we replace position/coin state vectors with creation operators (in an optical context these are photon creation operators), of the form [formula]. Using this approach a system with multiple walkers can be easily modelled by adding additional walker operators. The transformations on the walker operators are defined analogously to Eq. [\ref=eq:ket_rules],

[formula]

Using this formalism a single walker state would be defined as [formula], where |0〉 represents an empty graph (the vacuum state in an optical context). With n walkers this generalises to [formula] (up to normalisation), where c(j)i is the coin associated with memory element i of walker j.

We will not present any numerical results for multiple walkers here, since the complexity of the system grows exponentially with the number of walkers, making it computationally intractable for even a modest amount of memory. This will be discussed further in Sec. [\ref=sec:classical_sim].

Bosons only interfere with one another when they are indistinguishable. Thus, in a continuous-time quantum walk, where no coins are present, multiple walkers will only interfere when they share the same position. In an ordinary single-coined discrete-time quantum walk, multiple walkers will only interfere when they share the same position and coin values. Similarly, multiple walkers with memory will only interfere when they share the same position and their entire memory history is the same. For this reason it is to be expected that there will be much less quantum interference taking place between walkers with memory, since the probability of different trajectories sharing the same memory history drops exponentially with the size of the memory.

Memory as a decoherence model

We have seen that full memory reduces our quantum walk to a walk with classical statistics. We now develop some further intuition as to why this is the case.

The most general form of discrete-time evolution is the quantum process formalism - this formalism captures unitary evolution, measurement, as a well as decoherence processes. It is well known that any quantum process can be expressed as a primary system P interacting with an environment system E, where the environment is traced out and only the primary system is observed [\cite=bib:NielsenChuang00]. Thus, any quantum process can be expressed as,

[formula]

where UP,E is a unitary acting jointly on the primary and environment systems, which in general entangles the two systems. When UP,E is an entangling operation, the quantum process will in general yield a mixed state.

In the case of our quantum walk with memory this unitary takes the form UP,E  =  MSC. Here C and M act only on the coin subsystem, whereas S is an entangling operation that couples the two subsystems. Thus, UP,E is entangling. Following evolution we only measure P, tracing out E, a model analogous to Eq. [\ref=eq:quant_proc]. This is illustrated in Fig. [\ref=fig:decoherence_model].

To understand how full memory reduces a quantum walk to have classical statistics, let us consider the first step in the evolution of a quantum walk. Since we are just considering the first step, it suffices to introduce just one coin, in which case the evolution over one step is given by,

[formula]

After SC we have a maximally entangled state across two positions. Tracing out the coin system we obtain the maximally mixed state across two positions,

[formula]

what one would obtain for a single step of a classical random walk. Obviously if we repeat this many times, each time employing a fresh coin, our evolution will proceed classically, since introducing a fresh coin, maximally entangling it with the position and then tracing out the coin is simply a balanced classical coin-flip.

Thus, full memory, which is equivalent to introducing a new coin at each step, yields a classical walk, provided the coins are all traced out prior to measurement of the position. On the other hand, with partial memory we expect to see purely classical statistics for t  ≤  N, after which quantum behaviour emerges since there are quantum correlations between past and present coin values. With no memory (i.e. a single coin) we are re-coupling to the same environmental degree of freedom at each step, and thus we do not reduce to a classical walk since each coin-flip is not independently random.

From a non-rigorous, intuitive point of view, this result is perhaps not surprising. As we increase the size of the environment we are effectively making the joint system more macroscopic, and increased decoherence is intuitively not surprising.

Based on the arguments presented, we expect that decoherence is a generic feature of quantum systems with memory where the memory is not measured.

Walks with Spatial Randomness

It is known that spatial randomness in various forms can give rise to localization of quantum walkers. In particular, using a spatially dependent coin with rotation angles that are chosen randomly and quenched, leads to a localized distribution. Localization is a phenomenon that arises due to coherence, specifically destructive interference between amplitudes for propagation away from the origin. Joye and Merkli [\cite=bib:JoyeMerkli] and Ahlbrecht et al. [\cite=bib:Ahlbrecht1] show that dynamical localisation occurs for a spatially inhomogeneous coin, when the coin parameters are chosen randomly from continuous or discrete sets. If temporal randomness is also present, e.g. when the coin parameters change in time, then localisation does not occur and instead the quantum walk looks classically diffusive [\cite=bib:Ahlbrecht2]. In contrast, the walker spreads ballistically or diffusively, but no localisation has been observed.

We examine how the presence of a memory affects such behaviour. To do so we use the memory function in Eq. [\ref=eq:theta] but with an angle that varies randomly in space:

[formula]

where φ(x) is chosen randomly in the range - 1  ≤  φ(x)  ≤  1, independently at each position.

Results for various types of walks are shown in Fig. [\ref=Randomfig]. The three walk scenarios without spatial randomness all behave quantum mechanically, i.e. they have quadratic dispersion. The walker with 5 coins and a memory function spreads notably faster than that without, and indeed after a crossover time of t = 15 spreads faster than the standard quantum walk with one coin. We cannot confirm that this is universal behaviour, however for various initial conditions the walk with memory function does spread quadratically, and it was already proven that the walk with finite number of spins (less than t) and trivial memory function also spread quadratically [\cite=bib:Brun03]. The results with spatial randomness are more striking. The one coin walk with randomness shows localisation as predicted. However the 5 coin walk with trivial memory function does not localise and indeed has a variance scaling linearly with t. We interpret this as due to the fact that the multiple coins provide a sufficiently large environment such that the coherence necessary to localise is lost. This is in contrast to the case without randomness where enough coherence is preserved to maintain quadratic dispersion as discussed above. In effect this is indicating that the coherence necessary to observe localisation is more sensitive to decoherence than is the coherence to obtain quantum mechanical speedup. Even more surprising is that the quantum walk with memory function spreads much faster in the presence of randomness than either of the other two cases. For this size simulation we are unable to confirm the asymptotic behaviour of this case though the linear coefficient of the variance does dominate for t < 80. We conjecture the sub-ballistic behaviour of the multi-coined walks in the presence of randomness as a consequence of the coins introducing an effective temporal randomness to the dynamics by reintroducing past spatial randomness at each new step of the walk. The memory function we have used tends to average out the effect of spatial randomness from earlier steps which could explain why it is spreading faster than the case of the walk with trivial memory function.

Experimental construction

Linear optics quantum computing (LOQC) [\cite=bib:KLM01] [\cite=bib:Kok05] [\cite=bib:KokLoevett10] has become one of the more promising candidates for implementing large-scale quantum information processing devices. We now briefly discuss the prospects for linear optics implementation of quantum walks with memory.

When using single photons to represent walkers, this formalism can always be experimentally constructed using just passive linear optics networks (i.e. beamsplitters and phase-shifters) in a manner similar to that described in Ref. [\cite=bib:RohdeFedrizzi12]. As a simple example, the explicit linear optics construction of an N = 2 quantum walk with two positions is depicted in Fig. [\ref=fig:lo_const]. Each 'wire' represents an optical mode, and wires are bundled together to represent the different position/coin combinations. In Fig. [\ref=fig:lo_const] the coin operator acts only on the c2 space, while S and M are permutation operators as per Eq. [\ref=eq:operator_formalism].

In general, with an N-element memory, d position states and |c|-dimensional coins, there will be d  ·  |c|N wires. Thus the number of modes required for experimental implementation grows exponentially with the length of the memory, making large-memory demonstrations unviable.

Experimental construction of wise of man walks would be particularly challenging, as it would require implementing conditional coin operations, coherently controlled by some arbitrary function of the memory history. This is largely beyond the scope of present-day linear optics implementations.

Nonetheless, linear optics demonstrations of walks with small memories and without history-dependence are viable in the near future. An experiment like that shown in Fig. [\ref=fig:lo_const] could be readily constructed with present-day technology.

Classical simulation & computational complexity

As discussed earlier, the number of optical modes required to implement a quantum walk with memory grows as d  ·  |c|N. This makes experimental construction challenging, since the number of optical modes grows exponentially with the size of the memory. With n walkers, the number of unique basis states grows as O((d  ·  |c|N)n). Thus, the complexity of brute-force classical simulation of this quantum system grows exponentially against both the number of walkers and the length of the memory. Therefore classical simulation of such systems will be limited to walks with a modest number of walkers and small memories, and for this reason we do not present numerical results for multi-walker scenarios. Results for multiple walkers without memory were previously presented in Ref. [\cite=bib:RohdeSchreiber11].

From an algorithmic perspective, we are interested in systems with exponential complexity, since otherwise the system will be classically simulatable and exponential quantum speedup will obviously not be possible. It was noted in Ref. [\cite=bib:RohdeSav10] that if the size of the graph is 'efficient' (i.e. [formula], where p is the size of the problem), then the only way to achieve exponential complexity is with the addition of multiple walkers, as noted above.

Because quantum walks with memory can be implemented with just linear optics, then, with multiple walkers, such systems are a subset of the Boson-sampling problem described by Aaronson & Arkhipov [\cite=bib:AaronsonArkhipov10], who presented strong evidence that such systems are classically hard to simulate. It was shown in Ref. [\cite=bib:RohdeFedrizzi12] that an ordinary single-coined quantum walk with multiple walkers is already universal for Boson-sampling (complexity class denoted BosonSampP). Thus, at best, adding memory to the walk will also be universal for Boson-sampling - adding memory cannot extend the complexity class of the system beyond BosonSampP. It is known that [formula] (the sampling version of BQP), and it is strongly believed that [formula] [\cite=bib:AaronsonArkhipov10]. Therefore we expect multi-walker quantum walks with memory will present no algorithmic advantage over multi-walker single-coined quantum walks, although they are nonetheless likely to be classically hard to simulate, and quantum walks with memory (on efficiently sized graphs) are likely not universal for quantum computation. However, on exponentially large graphs it is known that both discrete- and continuous-time quantum walks without memory are BQP [\cite=bib:Childs09] [\cite=bib:Lovett10], and we don't rule out that the same applies to quantum walks with memory.

Conclusion

We have presented a formalism for quantum walks where the walker has arbitrary amounts of memory of its previous history. We examined the effects of history-dependent coins and introduced the memory function, which manipulates the diffusive properties of the walk as a function of the walker's history. With appropriate choice of memory function, diffusion can be reduced, enhanced, or be made symmetric or asymmetric. We also studied the effects of measurement of the memory registers on the evolution of the walk. Measurement of the oldest memory elements has the effect of 'resetting' the quantum walk to begin at a new position that is a function of the measurement outcomes. In the case of a two-dimensional walk on a regular rectangular lattice, memory eliminates spatial entanglement between the two spatial degrees of freedom, yielding a separable spatial distribution, even if entangling coins are employed.

A key observation from our numerics arises in the context of spatial randomness. We found that in settings where single coined walks localize, multi-coin walks do not. Moreover, walks with non-trivial memory function appear to spread faster than those which only recycle coins. We conjecture that this occurs due to the the memory function averaging out the mechanism which induces an effective temporal randomness to the walk due to recycling coins. It has been shown that for one dimensional walks with both spatial and temporal randomness, the former dominates to lead to classical diffusion [\cite=bib:Ahlbrecht3]. Whether walks with memory can counteract this effect is unknown.

Finally, we explicitly demonstrated how to physically construct an optical quantum walk with memory. However the required physical resources grow exponentially with the length of the memory. Thus, experimental construction of a quantum walk with large memories is limited. We presented a formalism for multi-walker quantum walks with memory and discussed the prospects for classical simulation. Unfortunately the required classical resources grow exponentially against both the number of walkers and the size of the memory. Therefore classical simulation is challenging beyond a few walkers with even modest memory. We argued that a multi-walker quantum walk with memory has no algorithmic advantage over its single-coined counterpart. Algorithmic complexity aside, quantum walks with memory may be interesting to pursue nonetheless owing to their unique physical properties, such as their rich diffusive characteristics, which may be interesting for quantum simulation applications.