Lemma Definition

A Short Story of a Subtle Error in LTL Formulas Reduction and Divine Incorrectness

Authors have been supported by the Czech Science Foundation grant No. 201/09/1389 (Tomá Babiak and Mojmír Ketínský), grant No. 201/08/P459 (Vojtch ehák), and grant No. 201/08/P375 (Jan Strejek).

A translation of Linear Temporal Logic (LTL) formulas into language equivalent Büchi automata is an important part of all LTL model checkers. The translation is exponential in the length of the translated formula. As the size and shape of the produced automaton can greatly affect running time of other parts of the model checking algorithms, many improvements of standard translations emerged. Some of the improvements modify an input LTL formula in order to reduce its size and number of modal operators. Unfortunately, the modification suggested in [\cite=EH00] contains an error: it can produce a smaller but non-equivalent formula.

The error is in the definition of pure eventuality formulas.

The paper [\cite=EH00] claims that all pure eventuality formulas define left-append closed languages, where a language L is left-append closed if for all w∈Σω and v∈Σ*: if w∈L, then vw∈L. One can easily disprove this claim. For example, [formula] is a pure eventuality formula and L(φ) is not left-append closed as cω∈L(φ) and [formula].

Invalidity of the claim causes invalidity of the Basic Operator Reduction Lemma, which directly describes the reduction steps. We recall only the part of the lemma related to pure eventuality formulas.

Using the reduction lemma, one can reduce the formula [formula] into [formula]. However, the formulas are not equivalent as [formula] while [formula]. Similarly, [formula] can be reduced into a non-equivalent formula [formula]. In general, only the implications [formula] and [formula] hold. Hence, if an LTL to Büchi automata translation employs this reduction, then there can be a word satisfying an input formula but not accepted by the resulting automaton. In the context of model checking, input formulas represent incorrect behaviours. Thus, the resulting automaton can represent a smaller set of incorrect behaviours than the input formula specifies. As a result, a model checker with such a translation can state that a system is correct even if it is not.

We have detected exactly this kind of error in all versions of the model checker DiVinE [\cite=BBC+06] developed during the last five years, i.e. DiVinE version 2.2 and DiVinE Cluster version 0.8.2 and all older versions. The bug has been fixed with our assistance. The fix will appear in the upcoming versions of DiVinE family tools.

Incorrectness of the claim is caused by the part of the definition saying that, for a pure eventuality formula ψ1 and an arbitrary formula γ, [formula] is also a pure eventuality formula. To fix it, it is sufficient to replace [formula] by [formula]. The proof is straightforward.

A careful researcher can found that on Etessami's web page, there is a reference to [\cite=EH00] leading to a PostScript file [\cite=EH00-second], which is a slightly different version of [\cite=EH00]. In [\cite=EH00-second], the definition of pure eventuality formulas is repaired in the following way:

Here, the set of pure eventuality formulas is strictly smaller than the one defined in [\cite=EH00] and, in context of this new definition, the mentioned claim holds (in fact, [\cite=EH00-second] contains a proof). Consecutively, also Basic Operator Reduction Lemma is correct in this setting.

We note that the set of pure eventuality formulas according to Definition 2 of [\cite=EH00-second] is significantly smaller than the one obtained by the mentioned replacement of [formula] by [formula]. In spite of this, the reduction of LTL formulas presented in [\cite=EH00-second] is not weaker. The reason is that the Basic Operator Reduction Lemma allows to reduce all the formulas of the form [formula] to ψ1. Hence, the final effect of the reduction is the same in both cases.