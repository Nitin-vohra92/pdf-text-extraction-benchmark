Lemma Proposition Definition Conjecture

Remark

Congruence and Noncongruence Subgroups of Γ(2) via Graphs on Surfaces

Introduction

Graphs on surfaces have a wide range of applications in mathematics. In particular, the notion of a bipartite graph in which we have a cyclic ordering at each vertex proves surprisingly powerful. There is a well-known correspondence between these graphs and finite-index subgroups Γ of Γ(2), which can be realized by considering how such groups act on the upper half-plane; this correspondence will be reviewed in Section [\ref=background]. The graphs are easy to describe and work with, even when the properties of the groups are not. One such property is that of congruence. Noncongruence subgroups of the modular group are of interest in number theory through the theory of modular forms and their connections with Galois representations. (See for example the papers of Atkin and Swinnerton-Dyer [\cite=atkin], Li, Long, and Yang [\cite=li] [\cite=li2] and Scholl [\cite=scholl].) While much is known about congruence subgroups, since one can describe them in terms of congruences on the entries of the matrices, noncongruence subgroups are more mysterious. However, the correspondence between groups and graphs does not discriminate between congruence and noncongruence, so the graphs give a hands-on way to work with both.

There are several existing tests and criteria for a subgroup of Γ(1) to be congruence, such as those due to Hsu [\cite=Hsu] and Larcher [\cite=larcher]. In Section [\ref=gamma1_drawings] we discuss converting these graphs, which are specific to subgroups of Γ(2), into the type of graph that can be used to apply Hsu's algorithm. In Section [\ref=larchers_results] we interpret and generalize some of Larcher's criteria in terms of graphs, and in doing so develop some powerful and almost immediate ways to identify many noncongruence subgroups.

In Section [\ref=relabel_graph] we introduce the notion of a Γ(2)-tiling. This tool will allow us to produce generators for Γ corresponding to a specific graph in terms of the standard generators for Γ(2). It will also allow us to give a method by which to determine if one group contains another, given the graph for the large group and generators for the smaller one in terms of the generators for Γ(2), by determining if the corresponding graphs cover one another. Thus, given generators for Γ(2n), we can determine whether or not a graph of level 2n corresponds to a congruence subgroup by determining if the graph for Γ(2n) covers the graph for Γ.

The tools developed in this paper are especially useful in producing examples of noncongruence subgroups. In a separate paper we will call on these ideas to produce infinite families of noncongruence subgroups of every even level on surfaces of genus 1, and (finite) families of noncongruence subgroups of every allowable even level on surfaces of genus 2.

Background

Subgroups of [formula]

We work within the group [formula]. When we use a matrix, it is always understood as an equivalence class in [formula].

We use the following standard notation and terminology:

[formula]

[formula]

Γ(n) is called the principal congruence subgroup of level n. A subgroup [formula] is called congruence if it contains Γ(n) for some n. For a congruence subgroup Γ, we define the level of Γ as the smallest n such that Γ(n)  ⊂  Γ. In particular, we are most concerned with finite-index subgroups of Γ(2), which is freely generated by the elements [formula] and [formula] (see [\cite=birch]). Throughout this paper A and B will always stand for exactly those matrices.

We are working within [formula] instead of [formula] because we are interested in these groups acting on the upper half-plane as linear-fractional transformations. Our preferred fundamental domain for Γ(2), D, is given in Figure [\ref=fig:domain_gamma2]. The dashed lines indicate that the arc from 0 to 1 and the arc from - 1 to ∞   are not included, though in the future this won't be made explicit.

Given a group Γ  ⊂  Γ(2) such that = n <   ∞  , we can find a fundamental domain for Γ consisting of n copies of the domain for Γ(2). When we give such a domain we will usually show it as tiled by copies of D. We label each tile by an element γ∈Γ(2) written in terms of the generators A and B. The tile labeled as γ is the region of the upper half-plane consisting of the image of D under the matrix γ. The matrix A acts on D by translating to the right, which is equivalent to rotating counterclockwise about the cusp ∞  . If we rotate counterclockwise about an image of ∞  , we find the adjacent tile by multiplying on the right by A. The matrix B acts on D by rotating clockwise about the cusp 0. If we rotate clockwise about an image of 0, we find the adjacent tile by multiplying on the right by B. Some sample tiles are labeled in Figure [\ref=fig:tiles]. Because we are labeling the tiles with coset representatives, we will use I instead of D for the original domain of Γ(2).

One of the challenges in viewing fundamental domains for groups of higher index is that the cusps become increasingly close together. To overcome this difficulty we will use the following approach: the x - values for the cusps will be shown equally spaced on the axis. This results in significant distortion of the regions, but the smallest regions are easier to see. Figure [\ref=fig:tiling_rescaled] shows the above tiles displayed in this manner.

Graphs

We will be dealing with a special type of graph which have been described and named in several equivalent ways. One of the most notable is Grothendieck's term dessins d'enfants, which he introduced in his Sketch of a Program, [\cite=sketch]. Birch, in [\cite=birch], referred to them as drawings. In Lando and Zvonkin's text [\cite=lando] they are called maps (or hypermaps depending on the exact object used). Because these will be the only type of graphs we are interested in, here they will be referred to simply (albeit imprecisely) as graphs. In this section we will examine these graphs and define other related terms.

A graph G will mean a connected bipartite graph G together with a cyclic ordering of the edges at each vertex.

Two basic examples are pictured in Figure [\ref=fig:first_graph_examples]. We will have a standard convention when labeling the edges: from the viewpoint of a black vertex, the edge label will always lie on the left of the edge.

Here is another way we can view the same objects. That these definitions are equivalent is a consequence of Theorem [\ref=correspondence_theorem] below.

By the term graph, we mean a pair G  =  {G,Σ}; where G is a connected bipartite graph embedded in a compact orientable surface Σ, and such that the complement of the graph is a disjoint collection of 2-cells, called faces. We call Σ the underlying surface of G. If we remove the vertices and one point from the center of each face, we call the resulting Σ' the underlying punctured surface of G.

Thinking in these terms, we consider graph (a) to be on a sphere. Graph (b) cannot be placed on a sphere without changing the ordering of the edges. Instead, it can viewed on a torus; see Figure [\ref=fig:first_example_torus]. While graph (b) can be embedded on a surface of higher genus, in doing so we would not satisfy the condition that the complement of the graph be a disjoint collection of 2-cells.

We refer to the degree of a vertex as the number of edges attached to it. For the faces, we say a face contains an edge if the label for that edge is inside the face, and the degree of a face is the number of edges it contains. We also have an ordering for each face: when standing at a face center, we rotate counterclockwise and record the edges.

We can use these degrees to define another useful term. The level of a graph is twice the least common multiple of the degrees of all vertices and faces in the graph. Graph (a) has level 2  ·  lcm(1,2,3,5)  =  60, while graph (b) has level 2  ·  lcm(1,2,5)  =  20. (This is related to the term level we defined in Section [\ref=subgroups], as we will see in Section [\ref=cusp_widths].)

For large graphs it isn't always practical to draw the pictures. Instead, it is enough to keep track of the vertices and the orderings of the edges at each. We can write these orderings as cycles in Sn where n the number of edges in the graph. This leads to another version of our definition, also equivalent because of Theorem [\ref=correspondence_theorem].

By the term graph, we mean a pair of permutations in Sn: σ, in which each cycle corresponds to the cyclic ordering of the edges at a black vertex, and α, in which each cycle corresponds to the ordering of the edges at a white vertex. (Note that the trivial cycles of length 1 also correspond to vertices.) In order for the graph to be connected, we require that the group generated by σ and α be transitive on the n edges.

In graph (a), at the black vertex we see the permutation (1,2,3,4,5), while the white vertices are represented by (1,2)(3,4)(5). In graph (b) we have the same permutation for the black vertex, but the white vertices yield the permutation (1,3)(2,4)(5). Note that a cycle in the product σ  ·  α gives the inverse of the edges we see when rotating counterclockwise within a face. This is shown in Proposition 1.3.16 in [\cite=lando]. Thus, we could specify a graph by giving any two of the permutations for the black vertices, white vertices and faces.

The Correspondence

Having introduced both finite-index subgroups of Γ(2) and the graphs, we are now ready to understand the correspondence between them. This is found in many places in the literature; here we restate Theorem 1 from Birch [\cite=birch].

For each positive integer n, the following families of objects are in 1 - 1 correspondence:

Triples (R,φ,O) where R is an n - sheeted Riemann surface, [formula] is a covering map branched at most above {  ∞  ,0,1}, and O is a point of R above ∞  .

Quadruples [formula] where β, σ and α are permutations of Sn such that βσα  =  id and such that the group generated by σ, α is transitive on the symbols permuted by Sn, and [formula] is a marked cycle of β; all modulo equivalence corresponding to simultaneous conjugation by an element of Sn.

Subgroups Γ  ⊂  Γ(2) of index n, modulo conjugacy by translation.

Drawings with n edges.

Item 2 corresponds with our Definition [\ref=permutation_definition]: given σ and α, we use the relation βσα  =  id to compute the permutation β- 1 of the faces. Then we mark one cycle (i.e., one face); marking a different face amounts to"simultaneous conjugation by an element of Sn." By "drawings" in item 4, he is referring to our Definition [\ref=graph_with_ordering_definition]; thus this theorem verifies that these definitions are equivalent.

From a group to a graph

To understand the relationship between the finite-index subgroups of Γ(2) and graphs we look first at the domain D for Γ(2) given in Figure [\ref=fig:domain_gamma2]. The sides of the domain are identified by the elements A and B of Γ(2) to form a sphere with three points removed: the cusps at 1 =  - 1, 0, and ∞  . Next we will "fill the holes": at the cusp 0, we add a black vertex; we fill the cusp at 1 with a white vertex, and replace the cusp at infinity with a *   to represent a face center, so that we now have a sphere with three marked points. The arc from 0 to 1 will represent an edge; we use dashed lines between white vertices and corresponding face centers. In this way we can identify the group Γ(2) with the graph on a sphere consisting of one black vertex, one white vertex, one edge, and one face. See Figure [\ref=fig:domain_gamma2_graph].

Now consider [formula]. In Figure [\ref=fig:domain_gamma06_pairs], we see a fundamental domain for Γ. We label 0 and its images under B, B2, and BA- 1 as black vertices; 1 and - 1 and their images as white vertices, and ∞   and its images as face centers with a *  . The images of the arc from 0 to 1 will be the edges of our graph. We glue the domain to form a surface by finding side-pairing transformations. For example, the sides marked x1 are identified by the element B2A2B- 1 of Γ.

The side-pairing transformations allow us to read off the permutations associated to our graph. We rotate counterclockwise around the black vertices to find σ  =  (3,2,1)(4), the white vertices to find α  =  (1)(2,3,4), and the faces to find β  =  (1,2,4)(3). The Euler characteristic tells us the graph belongs on a sphere; it is pictured in Figure [\ref=fig:gamma06_graph]. Recall from Theorem [\ref=correspondence_theorem] that we require a marked face [formula] for our graph; by convention, we always mark the face which has its face center at the cusp ∞  .

From a graph to a group

Next we will consider the other direction: given a graph, how do we find the corresponding subgroup of Γ(2)? We can first find a fundamental domain which corresponds to the graph. Then we find the side-pairing transformations, which generate the group. (See Ford [\cite=ford], Theorem 19 in Section 28 or Theorem 10 in Section 32).

For examples we look at the graphs in Figure [\ref=fig:first_graph_examples]. First consider graph (b), which has a domain shown in Figure [\ref=fig:domain_graph_b]. The graph has five edges, so a domain uses five copies of D. We can choose ∞   to be the center of the only face and the tiles I, A, A2, A3 and A4 as our domain. We label the edges inside the region according to the cycle for the face, (1,2,3,5,4). The cycle for the black vertex, (1,2,3,4,5) determines our edge pairings. We can verify that with these pairings the cusps at 0, 2, 4 and 8 are all identified to form the black vertex in graph (b), and that rotating around the white vertices we see the cycles (1,3)(2,4)(5).

The side-pairing transformations give us generators of the corresponding group Γb. We have six generators: one for each edge, and also A5, which identifies the vertical arcs. For example, for edge 3, we rotate counterclockwise about the black vertex in A to arrive at A2, so the generator g3 satisfies g3AB- 1 = A2; thus g3  =  A2BA- 1. Similarly we compute the others to get the group

[formula]

The process for graph (a) is similar. We can choose the degree 3 face (2,5,4) to have its face center at ∞  , and label the tiles I, A and A2 with edges 2, 5, and 4 respectively. We identify the vertical arcs from - 1 to ∞   and 5 to ∞  , so the element A3 is in the group Γa.

Now rotate counterclockwise about the black vertex at 0, which has the cycle (1,2,3,4,5). Rotating counterclockwise through edge 2 we expect edge 3, which does not yet appear in our domain, so we add the tile B- 1. After edge 3 we expect edge 4, so we identify the arc from 0 to [formula] with the arc from 4 to 5, which adjoins the tile A2. We continue to pair edges and solve for the corresponding generators to get the group

[formula]

The correspondence inspires the following terminology:

By a (fundamental) domain of a graph, we mean a connected fundamental domain of the corresponding group Γ  ⊂  Γ(2), tiled by copies of D, and with the images of the arc from 0 to 1 labeled according to the edges of the graph. We label the images of 0 as black vertices, the images of 1 and - 1 as white vertices, and images of ∞   as *   to represent a face center; when identified these form the black vertices, white vertices and face centers of the given graph.

Wohlfahrt's Theorem

We have defined the level of a graph as twice the least common multiple of the degrees of all vertices and faces, and we defined the level of a congruence subgroup Γ  ⊂  Γ(2) as the smallest n such that Γ(n)  ⊂  Γ. In fact, due to a result of Wohlfahrt, for a congruence subgroup these definitions agree.

In [\cite=W], Wohlfahrt defines the level of a finite-index subgroup Γ  ⊂  Γ(1) as the least common multiple of the cusp widths (or amplitudes) for Γ. For the group Γ(2) the cusp width of ∞   is 2, which is the width of its fundamental domain at ∞  ; the degree of the face in the graph for Γ(2) is 1. In the graph for a group Γ  ⊂  Γ(2), a vertex or face of degree d will touch d copies of the domain for Γ(2), and thus have cusp width 2d. The least common multiple of the cusp widths is the least common multiple of twice each degree, and thus twice the least common multiple of the degrees.

Wohlfahrt then proves that for a group Γ of level n in his sense, Γ is congruence if and only if Γ contains Γ(n), and so for congruence subgroups the two definitions agree. Thus, in order to check if a group of level n is congruence, we need check only whether it contains Γ(n) for this particular value of n.

Drawings for subgroups of [formula]

The idea of looking at subgroups of [formula] in terms of drawings is not new. However, for the most part these versions of drawings differ from the graphs we have used. This arises from the fact that others are looking at subgroups of [formula] which are not necessarily in Γ(2). In this section we explain the relationship between the two types of drawings and the advantages of working with each.

In Figure [\ref=fig:domain_gamma2_graph] we showed how D, the fundamental domain of Γ(2), can be interpreted as a graph: the arc from 0 to 1 represents an edge, and the cusps at 0, 1 and ∞   represent a black vertex, white vertex, and face center, respectively. For subgroups of Γ(2), the domains consisting of n copies of D correspond to graphs with n edges.

In contrast, a standard fundamental domain and corresponding graph for Γ(1) is pictured in Figure [\ref=fig:gamma1_graph]. We see only one cusp (at ∞  ). It also has two marked points, that at i, which has an order 2 stabilizer in [formula], and ρ, whose stabilizer in [formula] has order 3. The natural way to associate a graph to this group is to mark the point ρ with a black vertex, i with a white vertex, and continue to mark the cusp ∞   with a *   to represent a face center.

Because = 6, we find a new way to draw a graph for Γ(2): we lift the graph for Γ(1) to the tiling of a fundamental domain for Γ(2) by six copies of our domain for Γ(1) as in Figure [\ref=fig:gamma2_by_gamma1_graph]. We can extend this for general graphs. For this section we will distinguish these by referring to the Γ(1)-graph and the Γ(2)-graph, respectively, associated to group Γ. Notice that in the Γ(1)-graph the black vertices all have degree either 1 or 3, and the white vertices have degree 1 or 2.

By computing a few examples one can begin to find the pattern in converting from a Γ(2)-graph to a Γ(1)-graph. In the domains for the graphs for Γ(2) the vertices and face centers are all labeled at cusps, so when converting, every black vertex, white vertex and face center will appear as the center of a face on the new graph. As a way to get started, we can notice in Figure [\ref=fig:gamma2_by_gamma1_graph] that the original Γ(2) edge, i.e., the arc from 0 to 1, now has a white vertex in its center which is connected to two black vertices; so for each edge in our Γ(2)-graph we can add a white vertex on top of it and two black vertices to the sides. We see some examples of this conversion in Figures [\ref=fig:3_star_graphs] and [\ref=fig:fish_becomes_spaceship].

The advantage to converting our Γ(2)-graphs to their Γ(1) versions is that there are many results available for subgroups of Γ(1). One example of such a result is an algorithm developed by Hsu ([\cite=Hsu]) to determine whether a group [formula] is congruence. He specifies such a Γ by giving permutations associated to its Γ(1)-graph, and his algorithm amounts to checking a list of relations. Thus, if we consider one of our Γ(2)-graphs, we can determine if the corresponding subgroup of Γ(2) is congruence by first converting it to a Γ(1)-graph and then applying Hsu's algorithm. For example, in applying this algorithm it turns out that the group Γ which corresponds to the 3-star is noncongruence. One of the relations that fails amounts to checking that the cycle [formula], where α1, β1 and σ1 are the permutations in S18 corresponding to the white vertices, black vertices, and faces of the right-most graph in Figure [\ref=fig:3_star_graphs].

In summary, it is true that every finite-index subgroup of [formula] can be viewed as a graph. In doing so, we only get restricted types of graphs due to the degree restrictions for the black and white vertices in these Γ(1)-graphs, but we can then apply known results for subgroups of Γ(1) to these graphs. However, there are advantages to working with our versions of the graphs even though they apply only to subgroups of Γ(2). Firstly, the Γ(2)-graphs have six times fewer edges than their Γ(1) counterparts, which simplifies computing and allows us to draw graphs for higher-index subgroups. Secondly, we are less restricted on which graphs can occur; in fact by parts 3 and 4 of Birch's Theorem [\ref=correspondence_theorem] we can interpret any graph as a Γ(2)-graph, with no restrictions on the degrees of the black and white vertices. This flexibility can be useful. For example, in a forthcoming paper we will use these graphs to display infinite families of noncongruence subgroups of every possible even level on surfaces of genus 1 and 2.

Criteria for congruence via Larcher

In [\cite=larcher], Larcher proves some results about the cusp widths of congruence subgroups [formula]. In this section we will interpret and generalize two of these results. When interpreted in terms of our graphs, they prove very powerful: for many graphs, they will allow us to determine almost immediately that the corresponding group is not a congruence subgroup.

If Γ is a congruence subgroup of level m and d and e are the respective widths of ∞   and 0 in Γ then [formula].

Recall that in Section [\ref=cusp_widths] we saw that a vertex or face of degree d has cusp width 2d. Thus, we can restate the theorem as follows:

Let Γ  ⊂  Γ(2) be a congruence subgroup of level 2n. In the corresponding graph, let d and e be the respective degrees of the face corresponding to ∞   and the black vertex corresponding to 0. Then [formula], and thus [formula].

We can generalize this result as follows:

Let Γ  ⊂  Γ(2) be a congruence subgroup of level 2n. In the corresponding graph, for any face, let d be the degree of that face and e be the degree of any of its vertices. Then [formula].

Because we assumed Γ is congruence of level 2n we know Γ(2n)  ⊂  Γ, and thus the graph associated to Γ(2n) is a cover for the graph associated to Γ.

Let F be a face of degree d of the graph associated to Γ, and v be one of its vertices of degree e. Find a fundamental domain for the graph associated to Γ as described in Definition [\ref=define_graph_domain]. We will see how we can conjugate by an element of [formula] to move the cusp associated to F to ∞  , and then the cusp associated to v to zero. The resulting group, Γ', is congruence of level 2n if and only if Γ is congruence, since [formula].

Recall from Theorem [\ref=correspondence_theorem] that the correspondence between Γ and its graph requires a marked face, which we have chosen to be the face at ∞  . The cusp that corresponds to the face center of F is the image of ∞   under an element g∈Γ(2), and so conjugation by g moves the center of F to ∞  . This will not change the graph itself, and will not change the degree of the face F; the only change is that F is now the marked face. Marking a different face will not change the fact that the graph for Γ(2n) is a cover, so this face of degree d and the vertex at 0 must satisfy Larcher's congruence property above.

Now consider the vertex v, and let v' be its image under the conjugation in the previous step. Conjugation does not change the degree of a vertex, so the degree of v' is e. Notice that because the face F is now centered at ∞   it is tiled by translates of D under A, and so the cusps corresponding to black vertices are found at even integers, while the cusps corresponding to the white vertices are found at odd integers. First suppose that the vertex v is a black vertex. Translation by the appropriate power of A will fix ∞   and move v' to 0. Recall from part 3 of Theorem [\ref=correspondence_theorem] the correspondence between groups and graphs is modulo conjugacy by translation: applying powers of A will not change the graph or the face which is marked, and so the graph is still covered by Γ(2n). Hence, Larcher's congruence property is still satisfied.

Suppose instead that v is a white vertex; in this case we can move v' to 0 by conjugating by an odd power of [formula]. On the level of the graph this has the effect of switching the colors of the black and white vertices. The resulting group Γ' is congruence if and only if Γ is congruence, because [formula], and so Larcher's congruence property holds.

Another result of Larcher can also provide a powerful criteria for congruence:

If Γ is a congruence subgroup of level m then Γ contains a cusp of width m.

When interpreted for graphs the statement reads as follows:

If Γ  ⊂  Γ(2) is a congruence subgroup of level 2n, then the graph corresponding to Γ has either a vertex or a face of degree n.

These criteria provide necessary conditions for congruence. Consider the example in Figure [\ref=fig:fish_becomes_spaceship]: the fish has vertices of degrees 1, 2, and 4 and faces of degree 1 and 3, and thus the level of this graph is 2  ·  lcm(1,2,3,4)  =  24. Because the graph does not contain a vertex or face of degree 12, we immediately conclude that the corresponding group is noncongruence. By contrast, if we were to apply Hsu's algorithm as in the above section, we would need to work with the Γ(1) version of the graph (the spaceship). This graph has permutations in S24 and the computations are lengthy by comparison.

However, the conditions are not sufficient: notice that while Hsu's algorithm showed us that the 3-star corresponds to a noncongruence subgroup, the graph does not violate Larcher's criteria above. We have an algorithm to determine congruence that depends only on graphs in Section [\ref=congruence_from_graphs].

Tilings and Loops on Graphs

In what follows we describe a way to label a graph, which we will call the Γ(2)-tiling of G. In Section [\ref=graph_to_group], when we discussed a way to go from a graph to a group, we saw that the fundamental domain for a graph G with n edges consists of n copies of D, our fundamental domain for Γ(2). We start by reexamining our graph and fundamental domain D for Γ(2) as pictured in Figure [\ref=fig:domain_gamma2_graph]. We label the face center at ∞   as *  , and use dotted lines to indicate the arc from 1 to ∞   and the arc from - 1 to ∞  . Notice that crossing the arc from 1 to ∞   corresponds to applying the generator A to D, while crossing the arc from 0 to 1 corresponds to applying B to D. When it will prove helpful, we will indicate these operations in the quadrilateral. See Figure [\ref=fig:subdivide_domain].

Recall from Section [\ref=group_to_graph] that if we are given a group Γ  ⊂  Γ(2) we can construct the corresponding graph G by first forming a fundamental domain for G. We then identify its sides and fill in its cusps to form a Riemann surface, and draw the graph using 0 and its images as black vertices, - 1 and 1 and their images as white vertices, and images of the arc from 0 to 1 as edges. One way we can form a Γ(2)-tiling for G is by taking the above and adding more labels: we explicitly label ∞   and its images as *  , and the images of the lines from - 1 to ∞   and from 1 to ∞   as dotted lines. In doing so, we have tiled the surface Σ' with quadrilaterals, each of which corresponds to the tile in Figure [\ref=fig:subdivide_domain]. Recall from Part 2 of Theorem [\ref=correspondence_theorem] that specifying a graph involves marking one face with a [formula]; this marking will appear in one of the tiles which comprises the corresponding face. (Choosing a different tile within the face corresponds to conjugation by translation, as in Part 3 of the theorem.) Each tile is understood to carry the same labels of A±  1 and B±  1 as in Figure [\ref=fig:subdivide_domain], though as the graphs become more complicated these will not always be indicated. When we are specifically referring to the Γ(2)-tiling which found in this way we will call it the standard Γ(2)-tiling.

Suppose instead we are given a graph G. To form a Γ(2)-tiling we could first form a fundamental domain as we did in Section [\ref=graph_to_group] and then proceed as above. Instead we now describe a procedure to go directly from the graph to a Γ(2)-tiling without using the fundamental domain as an intermediate step.

First we label each face with a *   at its center. Next, we add dotted lines from the white vertices to face centers in such a way that, as we rotate around a white vertex, the solid lines (the graph edges) and the dotted lines (to the face centers) alternate. This results in a surface tiled with quadrilaterals which is isotopic to the tiling we would have found by first constructing the fundamental domain as above. This isotopy is not unique, but we will fix one for each Γ(2)-tiling. We will say that two Γ(2)-tilings are equivalent if they are isotopic.

We have several examples. In Figure [\ref=fig:subdivide_graph_gamma2] we see this process applied to the graph corresponding to Γ(2) itself. Note that there is only one tile in this situation.

Figure [\ref=fig:subdivide_3-star] shows the Γ(2)-tiling of the 3-star, which uses three tiles. In Figure [\ref=fig:subdivide_graph] we see an example of a tiling for a graph with five edges and two faces. Figure [\ref=fig:subdivide_graph_torus] shows an example of a tiling for a graph with four edges which lies on a torus.

Now that we have Γ(2)-tilings, we introduce some useful tools. First, notice the concept of a Γ(2)-tiling allows us to extend the notion of applying a word γ in A±  1 and B±  1 to the graph itself in the following way: let G be a graph with a Γ(2)-tiling, let p be a point in the interior of one of the tiles. To apply γ to p, we isotope the tiling to the standard Γ(2)-tiling, lift the standard tiling to the upper half-plane, and apply γ to the lift of p. We then push down to the standard tiling and isotope back to our original Γ(2)-tiling, labeling the image of this point as γ(p). We consider γ(p) to be a point on G associated to p. In fact, p has a unique point associated to it in every tile: two points p1 and p2 are considered associated if there exists γ∈Γ(2) so that γ(p1)  =  p2.

Let G be a graph with a Γ(2)-tiling. A path on a graph G is a path on the underlying punctured surface Σ' which is transverse to the tiling, begins at the marking [formula] of the marked face and ends at a point associated to [formula].

Suppose we have a path on G, a graph with a Γ(2)-tiling. We can associate this path to a word γ in A±  1 and B±  1 by following the path starting at the base point [formula] and recording the labels as we cross each solid or dotted line, always multiplying the labels on the left. (If the path is a loop we must choose a direction. Reversing the direction will form the inverse element γ- 1.) Conversely, suppose we are given a word γ in A±  1 and B±  1 and want to construct a path. We begin at [formula] and draw the path by crossing the appropriate solid or dotted line as we read each symbol of γ from right to left. The path will end at [formula].

These processes are essentially inverses: if we begin with a path and find its associated word, and then use this word to draw a path, the resulting path is isotopic to (and thus considered equivalent to) the original path. If we are given a word γ and find its associated path, then finding the word associated to this path will recover γ (or perhaps γ- 1 if the path were a loop.)

This association between group elements and paths is useful because of the following:

Let Γ  ⊂  Γ(2) be a finite-index subgroup and G be its corresponding graph with a Γ(2)-tiling. Suppose we have γ∈Γ(2) expressed as a word in A±  1 and B±  1 and its associated path on G. Then γ∈Γ if and only if its associated path forms a loop.

Let p be a lift of [formula] in the upper half-plane. By construction, the path associated to γ begins at [formula] and ends at [formula], where [formula] is found by applying γ to p. If γ is associated to a loop, then [formula] on G. This means that in the upper half-plane, p and γ(p) are equivalent under Γ, so there is a γ'∈Γ with γ(p)  =  γ'(p), and thus (γ')- 1γ(p) = p. Because Γ(2) acts freely on the upper half-plane, the stabilizer of p is trivial, so (γ')- 1γ = 1. Thus γ' = γ, so γ∈Γ. Conversely, if the path associated to γ is not a loop, then γ(p) is not equivalent to p under Γ, and thus γ∉Γ.

Generators from a graph

Theorem [\ref=loops_are_elements] has many useful applications. In this section we will discuss how to use the Γ(2)-tiling of a graph G to read generators for its corresponding group Γ  ⊂  Γ(2) in terms of A and B.

After forming the Γ(2)-tiling of G we form a collection of loops, each using the [formula] of the marked face as a base point. The collection will be chosen to generate the fundamental group of the underlying punctured surface Σ'. For a graph on a sphere, we need v + f - 1 loops, where v is the total number of vertices and f is the number of faces: we use a loop around all but one of the vertices and face centers. For a graph on a surface of genus g we also add 2g loops corresponding to generators of the fundamental group of the underlying compact surface. For each of these loops we then find the associated word γ in [formula] and [formula]; we notate the collection of words as L. By Theorem [\ref=loops_are_elements] these words are all elements of Γ. The direction we choose to follow each loop is irrelevant, because if γ is in a generating set for Γ, we can replace γ with γ- 1 without changing Γ. In Theorem [\ref=loops_are_generators] we will see that L is sufficient to generate Γ. First we will see some examples.

Figure [\ref=fig:gamma2_with_loops] shows this process applied to the graph for Γ(2) itself. Notice that as we follow the top loop in the counterclockwise direction we find the generator A, and following the bottom loop in the clockwise direction produces the generator B. This agrees with the fact that Γ(2) is generated by the elements A and B.

Now consider the 3-star; we found the Γ(2)-tiling in Figure [\ref=fig:subdivide_3-star]. In Figure [\ref=fig:3-star_with_loops] we see this graph with loops added. We can find the generators by following each loop counterclockwise to determine that the group associated to the 3-star is [formula].

Using the same process for the graph in Figure [\ref=fig:subdivide_graph], we find the group associated to this graph:

[formula]

Notice that we have a choice of which vertex or face center to omit when forming loops; in Figure [\ref=fig:subdivide_graph] it is natural to avoid the white vertex in the upper-right because it has the highest degree.

We next look at the graph on a torus from Figure [\ref=fig:subdivide_graph_torus]. In Figure [\ref=fig:torus_with_loops] we see three loops around cusps, and two loops (vertical and horizontal) which generate the fundamental group of a torus. The group associated to this graph is [formula]

For another example, we use the graph on a surface of genus 2 pictured in Figure [\ref=fig:level12example]. Its Γ(2)-tiling is shown in Figure [\ref=fig:level12example_with_generators], along with loops for generators. The labels on the tiles are not shown explicitely, though the conventions are the same. The group associated to this graph is [formula]

Having seen several examples, we now justify our prodcedure:

A finite-index subgroup Γ  ⊂  Γ(2) can be generated by the words in L found from the loops drawn as above for its associated graph.

We see this by understanding the how the group Γ is associated to a graph G. First, refer to Section [\ref=graph_to_group]: given a group Γ, we find the associated graph by first finding a fundamental domain for Γ, and then finding side-pairing transformations to form a punctured surface Σ'. Notice that the punctures are at the vertices and face centers of the graph. The side-pairing transformations generate Γ, which is the fundamental group of this punctured surface because [formula], with Γ acting freely on the upper-half plane [formula].

We can also compute the fundamental group of Σ' using algebraic topology. Given a surface Σ' of genus g with r punctures, π1(Σ') is a free group on 2g + r - 1 generators. The generators are homotopy classes of loops; 2g for the genus of the surface, and loops around all but one of the punctures. These are the loops from which we formed our collection of words L, each of which is associated to an element of Γ as in Theorem [\ref=loops_are_elements]. The operation of concatenation on the loops is compatible with the operation of multiplying the group elements, so the group generated by L is isomorphic to the fundamental group of the surface.

Thus, though the generators we have found in L might not directly correspond to side-pairing transformations of a fundamental domain for Γ, they still generate the fundamental group Γ of the punctured surface.

Using graphs to determine congruence

Suppose we have a graph G1 corresponding to a finite-index subgroup Γ1 of Γ(2). Now suppose we have another finite-index subgroup Γ2  ⊂  Γ(2) for which we know generators in terms of A and B. In this section we will show how to determine whether Γ2  ⊂  Γ1. One useful application of this result is to determine whether a group is congruence: if Γ1 has level 2n and we know generators for Γ(2n), we can determine whether Γ(2n)  ⊂  Γ1.

The procedure is as follows: find a Γ(2)-tiling for G1 as we did in Section [\ref=relabel_graph]. Let γ be an element of Γ2 expressed as a word in A±  1 and B±  1, and find its associated path on G1. By applying Theorem [\ref=loops_are_elements] we can determine whether γ is in Γ1 by seeing if the path forms a loop. By testing the elements of a generating set for Γ2, we can determine whether or not Γ2  ⊂  Γ1.

We will look at some examples. Consider the graph in Figure [\ref=fig:gamma06_graph]. This graph corresponds to [formula], which we know contains Γ(6). If we were handed the graph out of context we could first compute that its level is 6 by finding the least common multiple of the degrees of its vertices and faces as we did in Section [\ref=section_graphs]. Next we check that the corresponding subgroup is congruence by testing a set of generators for Γ(6) to see if the associated paths form loops on our graph. The following generating set for Γ(6) was found by constructing a fundamental domain:

[formula]

In Figure [\ref=fig:gamma_06_tiled] we see the path corresponding to the generator ABA- 2B- 2, which forms a loop. By checking all thirteen of the above generators, we can confirm that the graph represents a congruence subgroup.

If a graph of level 2n represents a noncongruence subgroup it suffices to find any element of Γ(2n) which violates the criteria. As an example, consider the 3-star, which is also level 6, and thus if its associated Γ is to be congruence it must contain Γ(6). This graph does not violate the necessary conditions in Larcher's statements in Section [\ref=larchers_results], so we cannot immediately determine whether or not the subgroup is noncongruence. We see in Figure [\ref=fig:3-star_noncongruence] the path corresponding to ABA- 2B- 2. Unlike the above example, this path does not form a loop. We conclude that the group [formula] is a noncongruence subgroup of Γ(2).

For a final example, we use the graph on a surface of genus 2 pictured in Figure [\ref=fig:level12example] to produce a noncongruence subgroup of Level 12. Its Γ(2)-tiling is shown in Figure [\ref=fig:level12example_with_path], along with a path for the element [formula] in Γ(12).

Note that to prove a graph is congruence we need to work with a set of generators for Γ(2n) given in terms of A and B. While there are known ways to find generators for Γ(n), none of the current methods we are aware of do so in terms of these generators for Γ(2). In working toward this, we will see in a forthcoming paper an algorithm to produce the permutations for Γ(2p) for p prime. As we introduce more factors the generating sets become more complicated.