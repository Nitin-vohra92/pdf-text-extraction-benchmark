Lemma Corollary Definition Example Algorithm Exercise Remark

A class of cellular automata equivalent to deterministic particle systems

Introduction

Cellular automata (CA) are dynamical systems characterized by discreteness in space and time. In general, they can be viewed as cells in a regular lattice updated synchronously according to a local interaction rule, where the state of each cell is restricted to a finite set of allowed values. Among many applications of CA, models of road traffic flow, first proposed by Nagel and Schreckenberg in 1992 [\cite=Nagel92], attracted substantial attention in recent years. Many theoretical aspect of the Nagel-Schreckenberg model are still not fully understood, and therefore several simplified models have been proposed, including models based on deterministic cellular automata [\cite=Nagel93] [\cite=Fukui96c].

One of the interesting features of these models is the fact that they can be described using two equivalent paradigms: either as one-dimensional cellular automata or as systems of interacting particles on one-dimensional lattice. The simplest example is rule 184, one of the elementary CA rules investigated by Wolfram [\cite=Wolfram94], and later extensively studied in the context of surface growth models [\cite=Krug88], as well as in the context of density classification problem [\cite=paper4]. It is one of the only two (symmetric) non-trivial elementary rules conserving the number of active sites [\cite=paper8] [\cite=paper15], and, therefore, can be interpreted as a rule governing dynamics of particles (cars). Particles (cars) move to the right if their right neighbor site is empty, and do not move if the right neighbor site is occupied, all of them moving simultaneously at each discrete time step. Using terminology of lattice stochastic processes, rule 184 can be viewed as a discrete-time version of totally asymmetric simple exclusion process.

A general question which can be asked is when a given CA rule can be treated as a rule governing motion of particles, and how to determine all rules possessing this property. Since the number of particles has to be conserved, it is clear that all such rules must conserve the number of nonzero sites. In [\cite=paper8] [\cite=paper15], CA rules of this type and their phenomenology were investigated.

In this work, we will formalize concepts introduced in [\cite=paper8]. We will prove that each conservative CA can be associated with a local mapping of particle coordinates, and we will demonstrate how such a mapping can be constructed.

Bisequence spaces and their mappings

The set of definitions given below closely follows terminology used in [\cite=Hedlund68], with minor modifications.

Let G be a countable set with cardinality g, which will be called a symbol set. If g is finite, we will assume that [formula], otherwise we will often assume [formula].

A bisequence over G is a function on [formula] to G. Let X(G) denote the set of bisequences over G, i.e., [formula]. If x∈X(G) and [formula], then x(i) will be often denoted by xi.

Let [formula]. An n-block over G is an ordered set [formula], where xi∈G. The set of all n-blocks over G will be denoted by Bn(G).

Let f be a mapping of Bn(G) into G. The set of all such mappings, for a given [formula] will be denoted by F(G,n). Mapping f will be frequently called a local mapping, or equivalently a cellular automaton rule.

Let f∈F(G,n) and let [formula], m > 0. Corresponding to f and m, we define a mapping fm:Bm + n - 1(G)  →  Bm(G) as follows. Let [formula] and let [formula], where [formula]. Then we define fm(B) = a, where [formula].

Finally, let us define a global mapping f∞:X(G)  →  X(G) corresponding to a local mapping f∈F(G,n). Let x∈X(G), and let y∈X(G) be defined as [formula] for all [formula]. Then we define f∞(x) = y.

For [formula] we can define a mapping f∞  ,a:X(G)  →  X(G), similar to f∞. If x∈X(G), and if y∈X(G) such that [formula] then, by definition, f∞  ,a = y. Note that f∞ = f∞  ,0.

As an example, consider a set of mappings F({0,1},3), which were studied in [\cite=Wolfram94] and called elementary cellular automata rules. There is 223 = 256 such mappings, and it is customary, following [\cite=Wolfram94], to assign them code numbers C(f) defined as

[formula]

For instance, the local mapping with code number 184, often referred to as simply rule 184, is defined by

[formula]

It is straightforward to show that the above definition can be written in a more compact form as

[formula]

Having the local mapping, we can compute m-block mappings fm. For example, f3(10100) = 101 because f(1,0,1) = 1, f(0,1,0) = 0, and f(1,0,0) = 1.

It is a common practice to view CA as dynamical systems and to investigate trajectories of points in the bisequence space X(G), where by a trajectory of a point x∈G we mean the sequence {fk∞(x)}∞k = 0, superscript k denoting multiple composition

[formula]

Since CA are often used as model of real physical systems of a finite size, periodic boundary conditions are frequently employed. Using the formalism introduced in this section, periodic boundary conditions can be easily incorporated by assuming that the bisequence under consideration is periodic with some period L, i.e., there exist some [formula] such that [formula]. Obviously, all bisequences belonging to the trajectory of a periodic bisequence are periodic.

Conservative rules

As in any other dynamical system, symmetry and conservation laws play an important role in cellular automata. Additive invariants in one-dimensional CA have been studied by Hattori and Takesue [\cite=Hattori91] [\cite=Takesue91]. They obtained conditions which guarantee the existence of additive conserved quantities, and produced a table of additive invariants for Wolfram's elementary CA rules. In this work, we will consider simplest possible additive invariants, namely the number of active sites ("active" meaning non-zero).

Let us start from a simple example, rule 184 introduced in the previous section. Let us consider an L-periodic bisequence x∈X({0,1}) and its image under the local mapping with code number 184, as defined by eq. ([\ref=r184comp]), y = f∞(x). The number of active sites in a single period of x (to be referred to as simply the number of active sites in x) is equal to [formula]. The number of active sites in y is, using eq. ([\ref=r184comp]),

[formula]

Since for a periodic lattice the last two sums cancel, we obtain

[formula]

meaning that the number of active sites is conserved.

In general, a local mapping f∈F(G,n) will be called L-conservative if for any L-periodic bisequence x∈X(G) the following condition is satisfied:

[formula]

Using the fact that x is periodic, this condition can be rewritten as

[formula]

If for every L > 0 a mapping f∈F(G,n) is L-conservative, than it is said to be conservative. The following theorem [\cite=paper8] is helpful in determining if a given rule is conservative.

If a mapping f∈F(G,n) is L-conservative for L = 2n - 2, then it is conservative.

To prove the above result, we shall show that, if L > 2n - 2, any equation of ([\ref=L-cond]) type, i.e., equation expressing conservation condition for L-periodic configuration, is a linear combination of three equations which express, respectively, conservation conditions for (L - 1)-, (2n - 3)-, and (2n - 2)-periodic sequences. More precisely, for all L-periodic bisequences with period L, [formula], Equation ([\ref=L-cond]) can be written

[formula]

The above rearrangement of terms is valid if xL - 1 = xL, and for almost every periodic bisequence, we can choose a "coordinate system" (labeling of sites) in which it is true. The only exception is, for even L, the bisequence with period [formula]. Verifying ([\ref=eqn-decomp]) is in this case possible, but needs to be done with a different method (see below). By induction, relation ([\ref=eqn-decomp]) shows that the conservation condition for L-periodic bisequence is a linear combination of conservation conditions for (2n - 3)- and (2n - 2)-periodic bisequences. Using similar rearrangement of terms as in ([\ref=eqn-decomp]), it can be shown that conservation conditions for (2n - 2)-periodic bisequences imply conservation conditions for (2n - 2)-periodic bisequences, concluding the proof.

Consider now the exception mentioned in the preceding paragraph, the bisequence [formula]. Conservation condition for arbitrary L reads

[formula]

if n is even, and

[formula]

if n is odd. That is,

[formula]

if n is even, and

[formula]

if n is odd. In the above two equations L does not occur at all, so obviously, if eq. ([\ref=per1]) or ([\ref=per2]) is true for L = 2n - 2, it is true for any L.

Using this theorem, if one wants to find all mappings f∈F(G,n) for some n which are conservative, it is enough to check which of them are 2n - 2-conservative. In fact, for many mappings it is possible to show that they are not conservative (and thus eliminate them from a list of mappings "suspected" for being conservative) by employing some of their elementary properties.

Let [formula] and n > 0. If a mapping f∈F(G,n) is conservative, then

[formula],

[formula],

[formula], i.e., f is 1-balanced.

Part (a) becomes obvious if we consider periodic bisequence consisting of all zeros, i.e., containing no active sites. Image of this configuration must also contain no active sites, and it is only possible if [formula]. Proof of (b) is identical.

Part (c) says that among all possible configurations of arguments [formula] of f (there are 2n such configurations), exactly half results in [formula], as can be seen, for example, in definition of rule 184 (eq. [\ref=r184-01]).

To prove part (c), consider periodic bisequence t∈X({0,1}) of period m = 2n. Now, let us construct a set of m blocks A = {b(j)}mj = 1 such that [formula] (superscript (j) denotes here just a consecutive number of the block b(j) in the set A).

Assume that we can find t such that all blocks in A are different. This means that each possible block of length n occurs in A once and only once, and therefore

[formula]

where N1 is the number of 1's in a single period of t.

On the other hand, ∈X({0,1}), which is obtained from t by replacing all zeros by ones and vice versa, must also have the same property as t, i.e., in a set Ā  =  {b(j)}mj = 1 such that [formula], all elements are different, hence

[formula]

where N0 is the number of 0's in a single period of t. Comparing ([\ref=t1]) and ([\ref=t2]) we obtain N0 = N1 = 2n / 2 = 2n - 1, exactly as required.

The only problem left is to show that, indeed, for any n > 0, we can construct 2n-periodic configuration t such that all blocks occurring in a single period of t are different (and therefore, constitute a set of all possible blocks of length n). For example, for n = 2, consider t with a period 1100. One can easily check that all possible blocks of length 2 occur in a single period of t: 11, 10, 00 and 01. For n = 3, t with a period 11101000 has the same property. Again, one can see that blocks occurring in the period of t, 111, 110, 101, 010, 100, 000, 001, and 011, are all possible blocks of length 3.

For a general n, the required t is equivalent to a hamiltonian cycle in the de Bruijn graph [\cite=DeBruij46] of dimension n (or an eulerian cycle in the de Bruijn graph of dimension n - 1). It has been demonstrated that such a cycle always exists (more precisely, for a given n, there exist exactly 22n - 1 - n of such cycles - see, for example, review article [\cite=Ralston]).

Conservative cellular automata viewed as deterministic particle systems

Since conservative rules conserve the number of active sites, one can identify active sites with "particles" which change position after each application of the rule f∞, but their number does not change. Therefore, instead of describing this system of particles in terms of lattice sites being occupied or empty, we can describe it by specifying list of coordinates of all particles.

An increasing bisequence over [formula] is an increasing function on [formula] to [formula]. Set of all increasing sequences over [formula] will be denoted by [formula]. If [formula] and [formula], then s(i) will be often denoted by si. Now, let us define a mapping [formula] as follows: let [formula] be an increasing bisequence and let x∈X({0,1}) be defined by

[formula]

for every [formula]. Then, by definition, φ(s) = x.

Using the notion of particles, s in the above definition can be understood as a list of coordinates of particles on one-dimensional lattice. We require this list to be increasing, so no two particles occupy the same position. On the other hand, x∈X({0,1}) is just a list of occupancy numbers: for all sites, xi is either 1 (meaning site i is occupied) or 0 (empty site). Transformation φ takes a list of particle coordinates s and returns the corresponding list of occupancy numbers. For example, if in some [formula] we have s1 = 7, s2 = 9, s3 = 12, then in the corresponding x = φ(s), sites 7, 9, and 12 are occupied, meaning that x7 = 1, x9 = 1, and x12 = 1. Note that since s is an increasing bisequence, we can immediately conclude that the site between 7 and 9 as well as both sites between 9 and 12 must be empty, i.e., x8 = 0 and x10 = x11 = 0.

Since conservative mappings conserve the number of particles, we would now like to find a local mapping which transforms coordinate lists [formula] with the same effect as conservative local mappings f∈({0,1}),n) transform occupancy lists x∈X({0,1}).

Let n∈N, and let f∈F({0,1},n). There exist [formula], [formula], and [formula] such that

for every [formula], [formula],

φg∞  ,a = f∞φ.

Note that Theorem [\ref=theofg] can be represented as

[formula]

Before we present the proof, let us consider an example which will clarify the meaning of Theorem [\ref=theofg].

Equation [\ref=r184comp] defined a local function for cellular automaton rule 184 as

[formula]

Corresponding rule g of Theorem [\ref=theofg] (constructed by an algorithm to be presented later) is defined as:

[formula]

Consider now a bisequence [formula], in which s1 = 1, s2 = 2, and s3 = 4, while s0 < 1, s4 > 7. (this means that among lattice sites [formula] only i = 1,2 and 4 are occupied). Let p = g∞(s), which means that pi = g(si,si + 1), yielding s1 = 1, s2 = 3, and s3 = 5. List of particle coordinates [formula] is transformed by g∞ into [formula]

Now, consider x∈X({0,1}) such that x = φ(s), and let us find y = f∞(x), so that yi = f(xi - 1,xi,xi + 1). Both x and y can be represented as

where the first line corresponds to x, and the second line to y. One can readily see that in the first line particles are located at sites 1,2 and 4, while at second line at 1,3 and 5, confirming that φg∞ = f∞φ. Note that in this example application of g∞ results in a well defined motion of particles: if the site on the right of a given particle is empty, it moves to that site, otherwise it stays in the same place. Using notation introduced in [\cite=paper8], this can be written as

[formula]

(arrow shows where the particle will move, circular arrow indicates that the particle stays in the same place).

Labeling scheme for lattice sites

In order to construct function g of Theorem [\ref=theofg], we will first introduce transformation of coordinate space [formula] to intermediate ("mixed") space Ψ, which combines both coordinates of particles and information about occupancy of lattice sites. This can be done by labeling occupied lattice sites with consecutive integers, and empty lattice sites with extra symbol [formula], so that configurations of particles become bisequences over [formula] (the extra symbol "[formula]" had to be introduced since "0" can be a particle label, and therefore cannot be used to denote empty sites).

Let [formula]. Let [formula] be a bisequence constructed as follows: yi = j if there exists [formula] such that xj = i, otherwise [formula]. By definition, ψ(x) = y. Bisequences y as defined above will be called increasing labeling bisequences, and the set of all such bisequences will be denoted by [formula].

Note that ψ transforms a bisequence of particle coordinates, such as [formula] into a bisequence ψ(x):

which resembles φ(x), except that occupied sites are now labeled with unique integers, increasing from left to right (the label of an occupied site is always larger by 1 than the label of the closest occupied site on the left). If we define, for [formula],

[formula]

then, obviously, [formula] for every [formula].

We will now define a mapping which plays a similar role in Ψ as f plays in X({0,1}). Corresponding to f, mapping [formula] will be defined as follows.

Define

[formula]

and

[formula]

Now, function [formula] is defined as

[formula]

where [formula].

For rule 184, as defined in ([\ref=r184comp]), applying the above definition we obtain for every [formula],

[formula]

An immediate consequences of the definition of [formula] is [formula], and therefore:

Let [formula], n > 0, and let f∈F({0,1},n). Then for every x∈Ψ, [formula].

A crucial property of [formula] is that an image of an increasing labeling bisequence under ∞ is also an increasing labeling bisequence:

Let [formula], n > 0, and let f∈F({0,1},n). If x∈Ψ, then ∞(x)∈Ψ.

Let us consider an increasing labeling bisequence x and its image y = ∞(x). Consider two sites in y, yi and yj, i < j, such that all sites between them are empty, i.e. [formula] for all i < k < j. We want to show that yj = yi + 1, since this would demonstrate that y is indeed an increasing labeling bisequence. Obviously, [formula] and [formula]. There must be some p,q such that yi = xp and yj = xq, which, according to the definition of [formula], must satisfy

[formula]

As a first step of the proof, we will find relationship between [formula] and [formula].

Let us denote the number of nonzero sites in the block [formula] by N, i.e., [formula]. Consider now a bisequence t∈Ψ such that tl = xl for i  ≤  l  ≤  j + n - 1, and [formula] otherwise, and another one, u∈Ψ, such that ul = xl for j  ≤  l  ≤  j + n - 1, and [formula] otherwise. Due to the fact that f is conservative, we have

[formula]

Using definitions of t and u, and the fact that [formula], equation ([\ref=turel]) becomes

[formula]

However, we know that there are no particles between yi and yj, therefore

[formula]

for all l such that i < l < j. Taking this into account, and using definition of G (eq. [\ref=defg]) we obtain, after some cancellations,

[formula]

Since [formula], this finally becomes

[formula]

Having this relationship, note that, according to definition of H (eq. [\ref=defh]), xp is kp-th particle in the block [formula] starting from the left, where [formula]. Obviously, it is also is kp-th particle in the block [formula] starting from the left.

Similarly, xq is kq-th particle in the block [formula], where [formula]. Knowing that sites [formula] contain exactly N particles, we conclude that xq must also be (N + kq)-th particle in the block [formula] xj + n - 1. However, kq = kp - N + 1, therefore:

Particle xp is kp-th particle from the left in the block [formula], while xq is (kp + 1)-th particle in the same block.

This means that there is no other particle between xp and xq, hence xq = xp + 1 (we assumed that x is an increasing labeling bisequence), and, finally, yj = yi + 1, which is exactly what what we wanted to show.

Construction of local mapping in [formula]

We are now ready to see how g of Theorem [\ref=theofg] can be constructed.

First, let us extend definition of the mapping ψ (Definition [\ref=psidef]) to blocks of particle coordinates. Let [formula] be called an increasing block if [formula]. Set of all such blocks will be denoted by [formula]. For m > 1, [formula] let us define c = ψ(b) such that [formula] and that, for every [formula] satisfying 1  ≤  l  ≤  bm - b1 + 1, if there exist [formula] such that bk = l, then cl = k - b1 + 1, otherwise [formula]. Mapping ψ, as before, transforms finite and increasing list of particle coordinates into finite block in particles are located at sites bl - b1  +  1 and labeled with labels l. For example, if b = {9,10,14}, then [formula].

Similarly as we defined increasing labeling bisequences, we define blocks with increasing labels as elements of the set [formula]. This set will be denoted by [formula]

In Theorem [\ref=theomixed], we proved that ∞ maps increasing labeling bisequences to increasing labeling bisequences. The same is true for blocks with increasing labels (and can be proved using almost identical reasoning as in the proof of Theorem [\ref=theomixed], therefore we omit the proof):

For any m,n∈N, m  ≥  n, and for f∈F({0,1},n), if [formula], then [formula].

Let us now assume that we have a list of particle coordinates [formula], and we want to find new list of particles' positions t such that φ(t) = f∞(φ(s)), where f∈F({0,1},n) for some [formula], n > 1. Using [formula], this can be done as follows: Note that the size of the block b is chosen large enough to ensure that particle with label i remains in the block after step 2. For many rules, smaller neighborhood will suffice.

The above algorithm provides a way to compute ti given si and coordinates of particles in the neighborhood of si. This means that it defines a local mapping g requested by theorem Theorem [\ref=theofg]. In fact, it is possible to write explicit expression for g based on the Algorithm [\ref=algog]. Corresponding to f∈F({0,1},n), mapping [formula] is defined as follows:

[formula]

and parameter a of Theorem [\ref=theofg] equals to n.

As a final note, let us remark that the relationship of f, [formula], and g can be represented as

[formula]

We should also mention that g constructed here is not the only local mapping satisfying Theorem [\ref=theomixed]. Infinite number of local mappings with the same properties as g can be constructed as a superposition of g and the shift map on [formula] (by the shift map we mean [formula] such that (σ(x))i = xi - 1 for every [formula] and every [formula]). All mappings σkg as well as σ- kg for any [formula] could be used in place of g. As a convention, we will always use a local mapping such that if xi = i for every [formula], and y = g∞(x), then yi = i, i.e., if all lattice sites are occupied in x, then in y they are in the same position.

Example: four-input conservative rules

Among 224 local mappings f∈F({0,1},4) (four-input rules), only 22 rules are conservative [\cite=paper8]. For all of them, we computed [formula], as shown in Table 1.

The first column in this table represents code number C(f), defined similarly as ([\ref=code3]):

[formula]

The second column is a binary representation of C(f), meaning that it is a sequence of 16 binary digits [formula] such that for every x1,x2,x3,x4∈{0,1}

[formula]

Entries in the third column are constructed in a similar way. They are sequences [formula] such that if in the definition of [formula] we have (x1,x2,x3,x4) = xj, then we define

[formula]

and if

[formula]

then

[formula]

This will become clear when we consider, for example, rule 53184 from Table 1. For this rule, in the third column we have [formula]. This means that for [formula]

[formula]

which is a set of 16 equations fully defining [formula] for rule 53184. Column 3 of Table 1 represents sets of similar 16 equations in a condensed form for all conservative 4-input rules.

In order to reduce the number of rules for further considerations, we can exploit the fact that cellular automata rules obtained by spatial reflection or conjugation (interchanging zeros and ones in rule table), or both reflection and conjugation of a given rule have similar properties as the original rule. Let, for a given f∈F({0,1},n),

[formula]

All rules in the set {f,fR,fC,fRC} have similar dynamics, therefore it is enough to consider only one of them. For conservative 4-input rules, we have seven such sets, or equivalence classes: {49024, 59946, 65026, 43944}, {53184, 58082, 64524, 47288}, {56528, 57580, 62660, 51448}, {58336, 52930, 63544, 48268}, {60200, 48770, 60200, 48770}, {61680, 52428, 61680, 52428}, and {65280, 43690, 65280, 43690}. We will now present mappings g for the first rule in each set, defined in terms of the step function Θ (for [formula], Θ(m) = 1 if m > 0, otherwise Θ(m) = 0) and the delta function (for [formula], δm,n = 1 if m = 1, otherwise δm,n = 0):

[formula]

Note that for all the above rules, g is a function of only 4 arguments (with the exception of rule 60200, it is really a function of 3 arguments x1,x2,x3, but for the sake of uniformity we always used x0,x1,x2,x3). For all these rules, φg∞  ,1  =  φf∞. Note that we could redefine g's and introduce (x0,x1,x2,x3) = g(x0,x1,x2,x3) + c, where [formula], and then we would have φ∞  ,1  =  φf∞  ,c.

Concluding remarks

We have demonstrated that a local mapping f in a space of bisequences over {0,1} which conserve the number of nonzero sites can be viewed as a deterministic particle system evolving according to a local mapping g in a space of increasing bisequences over [formula]. We also presented an algorithm for determination of the local mapping in the space of particle coordinates corresponding to mapping f.

Viewing conservative CA as systems of interacting particles is often very useful in solving problems related to CA dynamics, in particular problems which can be broadly characterized as forward problems [\cite=Gutowitz91]: given a CA rule, determine (predict) its properties. For instance, it is often easier to characterize the trajectory {gi∞(s)}∞i = 0 of a point [formula], then the trajectory {fi∞(x)}∞i = 0 of a point x∈X({0,1}. An example of such approach can be found in [\cite=paper11], where we considered properties of trajectories of configurations in simplified deterministic models of road traffic flow.