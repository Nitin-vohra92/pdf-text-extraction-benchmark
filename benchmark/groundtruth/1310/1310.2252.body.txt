Kramers-Wannier Duality of Statistical Mechanics Applied to the Boolean Satisfiability Problem of Computer Science

Computationally intractable problems are ubiquitous and occur in many areas of the natural and computational sciences, with problems as diverse as spin glasses, optimization problems, and cryptography [\cite=AchlioptasHBSAT] [\cite=Altarelli2008] [\cite=Mezard2009] [\cite=SebastianiHBSAT]. Generally speaking, they are problems whose solutions require a time that grows exponentially in the input size N of the problem. Understanding what sorts of problems have solutions that require exponential or polynomial time is an important issue that has many practical implications  [\cite=Arora2009].

However, proving that a problem is indeed computationally intractable is by itself a difficult task. One tool utilized by theoretical computer scientists is mapping between problems with a known computational complexity. By mapping one problem into another, one can show their relative difficulty. In this work, we use for the first time the well-established statistical mechanics technique of Kramers-Wannier duality to analyze the famous Boolean satisfiability problem. We discover an a new and exact dual formulation of the counting problem #SAT, which maps it on an under-constrained system of Diophantine equations.

Kramers and Wannier's work in 1941 [\cite=Kramers1941] exactly related the partition function of the 2D square lattice Ising model to itself, deriving the exact transition temperature of the model. The method consists of introducing new link variables, summing out the original variables, and defining the link variables in terms of plaquette variables in order to satisfy constraints introduced by the summations. In this way, the plaquettes of the original lattice become the vertices of the dual lattice. The graphical dual of the square lattice is itself, so the square lattice Ising model is self-dual. With this relation, the knowledge that a phase transition must happen in the dual model when it happens in the regular model, and the assumption that there is only one phase transition in the square lattice Ising model, the transition temperature is easily derived. This value was later confirmed by Onsager's exact solution for the model [\cite=Onsager1944].

Since then, dualities of this sort have been generalized to a broad range of models [\cite=Savit1980] [\cite=Kogut1979]. Furthermore, the recently invented bond algebraic dualities [\cite=Nussinov2009] [\cite=Cobanera2010] [\cite=Cobanera2011] [\cite=Ortiz2012] have not only grouped many of these classical and quantum dualities under a general framework, but also present methods to discover new dualities. The duality we use in this work is essentially the classic Kramers-Wannier duality for an Ising model in an external field. This additional field changes the constraints introduced so that the variables and interactions switch under duality, rather than the variables switching with the plaquettes. This is a lattice-independent transformation and allows us to apply duality not only for models with multi-spin interactions, but also for networks of spins, with no lattice structure required.

We will focus our attention on the Boolean satisfiability problem in computer science, known as SAT. Let {xi} be a set of N Boolean variables. Define a "clause" as the logical OR ([formula]) of some combination of these variables, possibly with negation, e.g. [formula]. A SAT problem asks whether some set of M clauses of the N Boolean variables may be simultaneously satisfied by some assignment of the variables. SAT problems that have the same number k of variables in each clause are known as k-SAT problems.

This problem is extremely important in computational complexity theory and computer science in general. It is in the non-deterministic polynomial time computational complexity class (NP), meaning it is verifiable, but not necessarily solvable, in polynomial time. It is in fact an NP-complete problem, meaning that in addition to being in NP itself, it is also as difficult as all other problems in NP [\cite=Cook1971] [\cite=Levin1973]. A polynomial time solution for this problem would imply a polynomial time solution for all NP problems, answering the famous question P[formula]NP. The SAT problem is actually the first proven example of an NP-complete problem, and many other NP-complete problems were proven so by reducing them to the SAT problem.

It is straightforward to examine the SAT problem from a statistical mechanics standpoint. Consider that the Boolean variables are equivalent to Ising variables and that the clauses can be expressed as Hamiltonian contributions that are zero if satisfied and positive otherwise, represented as a combination of multispin interactions. Many methods used to study sets of random SAT problems are also used to study disordered Ising models, including the replica method, belief propogation, and survey propogation [\cite=Mezard1987] [\cite=Mezard2002] [\cite=Mezard2009].

Random k-SAT problems with a large number of variables and clauses have a variety of interesting behavior and have been a topic of study in statistical mechanics for some time. It was found for instance that in random 3-SAT problems there is a phase transition at the critical ratio αc  =  M / N  ≈  4.25. The majority of 3-SAT instances are satisfiable below αc, and unsatisfiable above αc. Moreover, the time to find a solution is polynomial in N below the transition and exponential above [\cite=Mezard2002] [\cite=Mezard2009]. At the threshold, there is an exponentially sharp peak in the median running time for the best known 3-SAT solvers to decide if there is a solution or not. From a statistical physics point of view, this exponential slow down corresponds to a spin glass transition in an equivalent disordered Ising model [\cite=Monasson1997] [\cite=Montanari2008]. One of the primary motivations for studying duality in k-SAT is because of the close connection between phase transitions and duality. We hope that the duality derived here and similar dualities for other computer science problems may help study the phases and phase transitions in these problems, particularly in establishing exact relations between the phases of seemingly unrelated problems.

To be specific, in this article we are concerned with calculating the number of assignments of the Boolean variables that make the set of clauses true. This problem is known as sharp-SAT, or #SAT. While the "counting problem", #SAT, is closely related to the "decision problem", SAT, they are distinct. SAT is in the class of NP-complete problems; it is in NP and is as difficult as any other problem in NP. #SAT is in the #P-complete problems, where #P roughly is the class of counting problems associated with decision problems that are in NP. Because Kramers-Wannier duality is a relation between the partition functions of two problems and not, for example, between low energy states, we will be able to more easily investigate counting problems than decision problems.

A SAT instance can be mapped into a spin glass model. Define the Ising spin variable as σs  =  ( - 1)xs where xs  =  0,1 is the Boolean variable in a given clause, and define cμs to be - 1 if xs is involved in clause μ with a negation, 1 if it is involved without a negation, and 0 if it is not involved in the clause. One can define an energy cost for a violated clause as proportional to a number Xμ > 0 with the Hamiltonian

[formula]

It is easy to see that [formula]. The decision problem is equivalent to determining if this Hamiltonian has any ground states with zero energy. The counting problem is equivalent to calculating how many states have zero energy. This can be compactly described by calculating the associated partition function, [formula], in the limit as each Xμ  →    ∞  .

This Hamiltonian can be rearranged to suggest its nature as an Ising spin glass:

[formula]

[formula]

Note that each of H0, Hs, and Tl are linearly proportional to the large constants Xμ. This is the model of a network of Ising spins with multispin interactions and a site-dependent magnetic field. E.g. in the case of 3-SAT, there are two- and three-body interactions. In this article, s will signify the "sites" or locations of the variables σs, and l will signify the "links" or locations of the multispin interactions [formula]. ∂l refers to the sites of spins involved in the interaction at l, and ∂s refers to the links for interactions in which the spin σs is involved.

For any model of this type, there is a relatively simple Kramers-Wannier like duality [\cite=Savit1980] [\cite=Supplement].

[formula]

[formula]

[formula]

[formula]

In short, dual spins are introduced at the links of the original network and the original spins are summed out, leaving interactions for the dual spins in their places. I.e. the sites and links switch under duality. In addition, the dual couplings are monotonically decreasing functions of the original, and if the original couplings are negative then the dual couplings give a negative Boltzmann weight. The effect of a complex coupling in the Ising model [\cite=Matveev2008] when dealing with duality could be of some interest, but the SAT problem has real couplings and we do not consider it here.

Now we will simplify using the specifics of the SAT model. We must take the limit Xμ  →    ∞   prudently, Taylor expanding the partition function in terms of [formula]. With careful work, the partition function becomes:

[formula]

[formula]

[formula]

[formula]

This does not seem a particularly enlightening form of the partition function, or of the #SAT problem. We have introduced extra summations over the natural numbers for each site and link. However, there are two points that should be considered.

First, consider the Xμ independent part of the partition function, Eq. [\eqref=eqn:z-alpha]. Given a set of {ks,ml}, this calculation is much simpler than it appears. Because of the particular simplicity of Dαk, an algorithm may be designed to calculate the αs summation in time polynomial in N. Effectively, this is an unimportant calculation when compared to the full #SAT.

The second point to consider is that the limit Xμ  →    ∞   will greatly restrict the summation over ks and ml. Since we control each Xμ, we can set them so that Xμ is much greater than Xμ + 1. Given this, [formula] in the first clause where cμs is nonzero, and [formula] in the first clause where the product is nonzero. Now consider S{k,m}, a sum of terms proportional to the Xμ. If this sum is positive, then the contribution to the partition function vanishes. If the sum is negative, then the sums must arrange to cancel this term or else the partition function would diverge. The only relevant sets of {k,m} in the summation are those that give S{k,m} = 0.

Each Xμ is controlled separately, so we can set each term of S to zero separately:

[formula]

[formula]

This is a system of linear Diophantine equations. Finding the nonnegative ks and ml that satisfy these equations gives exactly the {k,m} that should be summed over in the partition function, Eq. [\eqref=eqn:full-dual]. The complexity of calculating the number of solutions to a Boolean satisfaction instance has transformed into finding the nonnegative solutions of this (likely) underconstrained system of equations and summing an integer function over these solutions.

Eqs. [\eqref=eqn:full-dual]-[\eqref=eqn:Diophantine] are the main results of this article. We have shown that a problem in #SAT is equivalent to listing the solutions to this system of integer equations. It would be useful to simplify these equations to also find an equivalent for the decision problem, i.e. whether Z = 0 or not. However, this is no trivial task. Any given solution to Eq. [\eqref=eqn:Diophantine] could give a positive or negative contribution to the partition function. Knowing a portion of the solutions may give little information, as the rest may cancel the contribution to the partition function from the portion known, and so it will be difficult to say whether an instance is satisfiable or not. This may change if solutions can be categorized or if the important solutions can be singled out, but naively only #SAT is considered.

Now we will show simple examples of this duality. First, we take a look at a single clause of three variables:

[formula]

This equation is satisfiable, and has Z = 7 solutions that satisfy F = T, all possible configurations except x1 = x2 = x3 = F. Now we will use [\eqref=eqn:full-dual] and [\eqref=eqn:Diophantine] to calculate this number.

First, the sites are s = 1,2,3 and the links are l = 12,13,23,123. Seeing that cμs = 1, we find [formula] and for all l  ≠  123, [formula]. This means the Diophantine system of equations is just

[formula]

The partition function is

[formula]

Using [\eqref=eqn:z-alpha], z{k,m} may be calculated with relative simplicity. There are eight configurations of {δks,0,δml,0} that leave z nonzero. One of these requires all seven of the k and m to be nonzero, while the others require exactly three nonzero and four zero. These each contribute 1 to the partition function, leaving us with Z = 7.

Now look at a very simple unsatisfiable case:

[formula]

First, note that the calculation of z{k,m} is exactly the same. When calculating a new #SAT case, z{k,m} need not be recalculated unless the sites or links are changed. A simple benefit from this is that it makes it easier to analyze all bit flips of a SAT instance. However, the {k,m} that give S = 0 must be recalculated each time. In this case, the Diophantine system is overconstrained and unsatisfiable. This immediately gives Z = 0.

An overconstrained system is one way in which SAT instance may reveal its unsatisfiability. However, this is not the only way. As noted previously, the contributions to the partition function, [formula], may be positive or negative, and it is possible for there to be many solutions to the Diophantine system that give contributions that cancel. For another example and more discussion on unsatisfiability, see section 2 of the supplement [\cite=Supplement].

It is important to ask how difficult it is to find the solutions to Eq. [\eqref=eqn:Diophantine]. First, let us discuss the matrix size. Although the equations apply to any instance, let us restrict to interesing instances, with a large number of variables and clauses, roughly of the same order: N  ~  M >  > 1. Let us also assume the clauses contain a small number of variables. Assuming the clauses are well distributed among the variables, the matrix is roughly of the size N + kM  ×  M, where k is some small number related to the number of variables in the clauses. The matrix size is quadratic in input size N.

There is much research addressing algorithms for reducing a Diophantine system to useable forms, in particular the Hermite and Smith normal forms [\cite=Mulders1999] [\cite=Jager2009]. The algorithms take more time than the analagous reduced row echelon algorithms for real matrices but the time is still polynomial in N. However, acquiring the nonnegative solutions to the system is not a polynomial task. Indeed, the number of nonnegative solutions need not be polynomial in N. For example, a collection of M clauses with 3 variables where no clauses share variables will have 7M solutions. Simply listing the solutions is #P-hard.

There is no doubt that there are instances where Z is easier to calculate without using duality. However, it is quite possible that there are situations where it will be easier to use the dual equations, notably when the number of solutions to the Diophantine system is small or zero. This situation is likely to coincide to some extent with when the number of solutions to SAT instances is small or zero, the region of greatest interest in Boolean satisfiability research.

Beyond this, the particular form of the matrix (the fact that it is a ( - 1,0,1) matrix and how the link columns are completely determined from the site columns) could lead to great simplification in algorithms for finding the nonnegative solutions. Also, by categorizing which solutions will give negative values, the equations could be simplified to describe the decision problem which is of more interest, SAT itself.

Combining duality with the cavity method, commonly used to study SAT problems as well as Ising problems, could be a promising research direction. Preliminary steps may be found in the supplement [\cite=Supplement].

Other computer science problems could also have interesting dual problems. Many of these problems are easily stated as some limit of a statistical mechanics model, which likely has a simple duality relation to another model. Once the appropriate limit is taken, this dual problem will reduce to a problem very unlike the original. The x - y, p-clock, Coulomb gas, and vector Potts models are a small set of classical models with well studied, simple duality relations [\cite=Savit1980] [\cite=Kogut1979].

The recent work with bond algebraic dualities [\cite=Nussinov2009] [\cite=Cobanera2010] [\cite=Cobanera2011] [\cite=Ortiz2012] opens up the number of models to study even further. With this new way to categorize and explore dualities, even quantum complexity classes could be accessible for study with duality [\cite=Laumann2010] [\cite=Hsu2013].

In this letter, we have presented an exact relation between problems in #SAT and solving a linear Diophantine system of equations, given from a modified version of the established Kramers-Wannier duality. This relation serves both as a novel avenue for study of #SAT and a glimpse at the power statistical mechanics dualities can bring to computer science. With the large number of duality relations and the ease of relating a computer science problem to the limit of a physical model, the study of duality could prove very fruitful.

This research was supported by NSF-CAREER award No. DMR-0847224 and Simons Foundation.