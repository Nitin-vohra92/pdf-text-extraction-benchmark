Interactive Relay Assisted Source Coding

Introduction

Consider a distributed source coding problem in which two terminals A and B, each having access to a correlated source sequence Xn and Yn respectively, wish to obtain lossless or lossy estimates of each other's sources. The terminals are only able to interact over rate limited directed links through a relay (R), who observes a correlated sequence Zn. This scenario, which we call interactive relay assisted source coding is illustrated in Fig [\ref=fig:system_model_z]. While in general multiple communication rounds through the relay are possible as in interactive source coding with multiple rounds [\cite=Kaspi1985]; here we only assume that each link is used once.

One can envision various communication schemes depending on the order of communication. For example, first A and B can communicate with R, which then processes both signals and sends information back to the terminals. This scheme breaks the problem of interactive relay assisted source coding into a distributed source coding (DSC) phase [\cite=NIT] with no reconstruction constraints at the relay, and a delivery (broadcast) phase [\cite=Kimura2008]. We will call this scheme DSC/delivery. Note that while this is similar to the scenario considered in [\cite=SuElGamal2010], a main difference is that in the delivery phase, the relay has two separate rate-constrained links to the terminals. Another strategy is for A to first forward information to B through R, which then obtains its estimate X̂n and forwards information back to A through R. This scheme puts together two cascaded communication rounds [\cite=Yamamoto1981] - one in each direction - and will be called two cascaded rounds. Our goal in this paper is to study inner and outer bounds for the rate-distortion regions of above two strategies and examine some conditions under which these bounds are tight. We also argue that neither strategy strictly dominates the other in general.

Interactive relay assisted source coding is related to several other problems investigated in the literature. The first step in DSC/delivery is closely related to lossy DSC, which is only solved for certain cases [\cite=Wagner2008] [\cite=Courtade2012]. The complementary delivery problem, which constitutes the broadcast phase of DSC/delivery scheme, is investigated in [\cite=Kimura2008].

The cascade source coding problem, which considers only one round of the two cascaded round scheme (from A to R and then to B) is introduced by Yamamoto [\cite=Yamamoto1981]. In [\cite=Yamamoto1981] there is no side information, and R and B are interested in different lossy reconstructions of the source. Vasudevan et al. [\cite=VasudevanTianDiggavi2006] further investigated this problem by letting R and B to have access to side information Z and Y respectively, where X - Y - Z. They considered the cases where A may or may not have access to Z and Y. In [\cite=CuffSuElGamal2009] B has side information and there are no distortion constraints at R.

This paper is organized as follows. In Section [\ref=setup] we present the system model, notation and the two schemes, DSC/delivery and two cascaded rounds. For each scheme we characterize inner and outer bounds in Sections [\ref=dscd] and [\ref=cascade]. In Section [\ref=discussion] we introduce some examples to show that although these bounds are not tight for general sources, they can be used to prove that neither scheme is in general dominant.

Problem Set-Up

System Model

We consider interactive relay assisted source coding shown in Fig [\ref=fig:system_model_z]. Terminal A observes source Xn, terminal B observes Yn, and the relay, R, observes Zn. The sequences are drawn i.i.d.  ~  p(x,y,z). The objective of terminal j, j = A,B is to recover the source at terminal k, k = B,A, [formula] in a lossy fashion. To achieve this, messages MAR, MRB, MBR, and MRA at rates RAR, RRB, RBR, and RRA respectively are communicated among the terminals, where Mjk is the message sent from j to k. We consider the following two schemes, each with a specified communication order:

DSC/delivery

In this scheme, the messages are sent in the following order: First A and B generate and send MAR and MBR respectively, to R. This is the DSC stage. The order of these two messages does not impact the resulting distortions at the terminals. After R gets both messages, it generates MRA and MRB and sends them to A and B respectively. Similar to the DSC stage, these two massages can be sent in any order. More formally the encoding functions are MAR  =  φ(n)AR(Xn), MBR  =  φ(n)BR(Yn), MRA  =  φ(n)RA(Zn,MAR,MBR) and MRB  =  φ(n)RB(Zn,MAR,MBR).

Two cascaded rounds

The order in which the messages are sent is given by A to R, R to B, B to R and then finally R to A. Similarly, the communication can start from B, but in the rest of the paper we will assume A starts the communication. This can be mathematically described by the following encoding functions: MAR  =  φ(n)AR(Xn), MRB  =  φ(n)RB(Zn,MAR), MBR  =  φ(n)BR(Yn,MRB) and MRA  =  φ(n)RA(Zn,MAR,MBR).

The decoding functions in both schemes are given by: [formula] and [formula]. Also note that in both schemes, [formula] where Rjk is the directed communication rate between terminals j and k.

For any of the schemes the tuple (φ(n)AR,φ(n)BR,φ(n)RA,φ(n)RB, [formula] is called an [formula]-code if the produced sequences X̂n and Ŷn satisfy [formula] and [formula], where [formula], j = A,B are single letter distortion functions at the corresponding terminals. The rate and distortion tuple [formula] is achievable if for any ε  ≥  0 and n sufficiently large there exists an [formula]-code.

The set of all achievable [formula] is denoted by [formula], where sch refers to one of the two schemes above. The interactive relay assisted rate-distortion region for that scheme is given by:

Notation

We will use the following notation based on the source coding set-up in Fig [\ref=fig:modifiedWZ]. When all switches are open, this set-up becomes identical to Wyner-Ziv problem [\cite=WynerZiv1976], with rate-distortion function RWZX|Y(D). We let RWZ*X;Z|Y(D) be the rate-distortion function when switch 1 is closed, while switches 2 and 3 are still open. We also define RWZ*X;Z|YZ(D) to be the rate-distortion function when switches 1 and 2 are closed while 3 is still open. Finally when all switches are closed we get RX|YZ(D), the rate-distortion function with side information YZ available both at the encoder and the decoder. With these definitions we have:

DSC/Delivery

Outer Bound

If (RAR,RBR,RRA,RRB) is in the rate-distortion region of the DSC/delivery scheme, [formula], then for some (U1,U2,V1,V2) where U1 - X - (Y,Z), U2 - Y - (X,Z), and (V1,V2) - (Z,U1,U2) - (X,Y) and decoding functions [formula] and [formula] such that [formula] and [formula].

The following simple outer bound: which can be found by considering the cuts between each terminal j and super-node (k,R), j,k = A,B and [formula] is looser than the bound in Theorem [\ref=DSC/deliveryOB]. This is because the cut-set bound is found by optimizing each rate separately with respect to auxiliary random variables, while in Theorem [\ref=DSC/deliveryOB], a joint optimization is considered.

Inner Bound

Any rate vector (RAR,RBR,RRA,RRB) satisfying for some p(x,y,z)p(q)p(u1|x,q)p(u2|y,q)p(v1,v2|u1,u2,z, q) and some decoding functions [formula] and [formula] such that [formula] and [formula] is in the rate-distortion region of the DSC/delivery scheme, [formula].

Two Cascaded Rounds

Outer Bound

If (RAR,RRB,RBR,RRA) is in the rate-distortion region of the two cascaded rounds scheme, [formula], then

Inner Bound

Any rate vector (RAR,RRB,RBR,RRA) satisfying: for some [formula] and some decoding functions [formula] and [formula] such that [formula] and [formula] is in the rate-distortion region of two cascaded rounds scheme, [formula].

Discussion

In this section, we introduce two scenarios to show that in general neither of the proposed schemes outperforms the other one. To argue this we consider some extreme cases. We assume all sources have discrete alphabets.

Case 1: Large RAR and RBR

Consider the case where RAR  ≥  H(X|Z) and RBR  ≥  H(Y|Z). This suggests that for both schemes, upon receiving MjR, j = A,B, the relay can reconstruct the respective source losslessly. With DSC/delivery scheme it is easy to see that [formula] and [formula] are achievable. Note that these rates are the same as the ones in Remark [\ref=DSC_delivery_-_simple_outer], which proves the inner bound is tight in this case. Comparing these rates with the outer bound for two cascaded rounds in Theorem [\ref=cascade_outer_bound] we observe that they fall outside or in the worst case on the outer bound for two cascaded rounds scheme. This means that DSC/delivery can achieve lower rates than two cascaded rounds.

Case 2: Large RRA and RRB

This time let RRA  ≥  H(Y,Z|X) and RRB  ≥  H(X,Z|Y). This allows for the relay to forward any description of the sources that it receives as well as its own side information Z losslessly to each terminal, in both communication schemes. In this case two cascade rounds scheme becomes equivalent to interactive source coding with multiple rounds [\cite=Kaspi1985]. Therefore for some U1 and U2 satisfying U1 - X - (Y,Z) and U2 - (Y,Z,U1) - X and some decoding functions [formula] and [formula] such that [formula] and [formula] is achievable. Note that this inner bound may not be tight in this case. Nevertheless, setting U2 independent of U1 and U2 - Y - (X,Z) and optimizing over U1 and U2 we can achieve the outer bound for DSC/delivery in Remark [\ref=DSC_delivery_-_simple_outer]. Therefore the inner bound for two cascaded rounds can potentially achieve lower rates than DSC/delivery for some sources and distortion functions.

Conclusion

In this paper we have studied different possible schemes, DSC/delivery and two cascaded rounds, for interactive relay assisted source coding, and characterized inner and outer bounds for each scheme. We have evaluated these bounds in some extreme cases to show that in general neither of the schemes dominates the other. Future work includes identifying scenarios in which the inner and outer bounds are tight.