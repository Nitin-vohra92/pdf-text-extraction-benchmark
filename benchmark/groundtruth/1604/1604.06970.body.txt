=1

Bayesian Inference of Recursive Sequences of Group Activities from Tracks

Introduction

Human activity recognition comprises a range of open challenges and is a very active research area [\cite=aggarwal2011] [\cite=vishwakarma2013] [\cite=sukthankar2014], spanning topics from visual recognition of individual behavior [\cite=poppe2010], pairwise interactions among individuals participating in different roles in a joint activity [\cite=barbu2012] [\cite=9_kwak2013], coordinated sequences of actions as expressions of planned activity [\cite=geib2009], and multiple groups of individuals interacting across broad time scales. In this paper, we address the last of these, presenting a framework for automatically constructing an interpretation of high-level human activity structure as observed in surveillance video, across multiple, interleaved instances of activities. We assume that lower-level visual processing provides high quality tracks of individuals moving through the scene. Our goal is to construct accurate descriptions of the events in the video at different levels of granularity, based on the tracks alone. We develop a probabilistic generative model that combines multiple features that to our knowledge have not been previously incorporated into a single framework for joint inference. To wit: (1) Activities have composite structure with roles representing semantically distinct aspects of the overall activity structure. (2) Activities are described hierarchically and recursively, entailing multiple levels of granularity both in time and membership. (3) Arbitrarily sized groups of actors participate in activities and fulfill roles. (4) Hierarchical descriptions and temporally changing groupings consist of the best joint explanation of the full set of individual trajectories, as found via posterior probabilistic inference.

The rest of the paper is organized as follows. In the next section, we review prior research, with a focus on work modeling group membership, hierarchically structured activities, and the identification of roles. In Section [\ref=sec:model] we present our probabilistic generative model. In Section [\ref=sec:inference] we present an MCMC sampling framework for performing joint inference using the model. In Section [\ref=sec:experiments] we evaluate the model on synthetic and real-world data from the VIRAT [\cite=42_oh2011large] and UCLA Aerial Event [\cite=shu2015_CVPR] video data sets, demonstrating the model's expressive power and effectiveness. We conclude with a discussion of future work.

Related Work

A number of researchers have proposed models that distinguish the different roles that individuals play in a coordinated activity [\cite=2_ryoo2011] [\cite=barbu2012] [\cite=lan2012] [\cite=9_kwak2013]. These models capture the semantics of activities with component structure. It can be difficult to scale role identification in scenes with an arbitrary number of individuals, in particular while properly handling identification of non-participants [\cite=9_kwak2013]. A consequence of our joint inference over role assignments and groups is that our model naturally distinguishes and separates participants of different activities playing different roles.

Considerable work has been devoted to developing more expressive models in which activities are decomposed into hierarchical levels of description, across different spatial and temporal granularities. Some prior models account for a specific number of hierarchical levels of description, with up to 3 levels being a popular choice [\cite=1_choi2012] [\cite=4_lan2010beyond] [\cite=17_chang2011probabilistic] [\cite=6_cheng2014recognizing]. Other models permit a potentially greater number of levels of activity description, but the activity hierarchy is fixed prior to inference [\cite=9_kwak2013] [\cite=14_garate2014group] [\cite=23_zaidenberg2012generic]. In only a few cases, including our model, are the levels of activity description assessed during inference [\cite=3_lin2010group] [\cite=2_ryoo2011].

A third branch of work has been devoted to modeling activities not just among individuals, but involving groups of actors. In some models, activities include groups, but interactions are still considered between individuals within groups [\cite=1_choi2012] [\cite=4_lan2010beyond] [\cite=28_zhang2013beyond] [\cite=33_odashima2012collective] [\cite=36_zhu2011generative]. Other models allow for activities to be performed between groups themselves [\cite=17_chang2011probabilistic] [\cite=18_chang2010group]. Still others, including our model, take group activity modeling a step further, allowing for arbitrary numbers of participants in groups, provided they satisfy group membership criteria while performing the activity [\cite=3_lin2010group] [\cite=9_kwak2013] [\cite=shu2015_CVPR] [\cite=24_zhang2012parsing].

Two recent papers, one by [\citeauthor=2_ryoo2011] and one by [\citeauthor=shu2015_CVPR] , come closest to accommodating the combination of features in our model. Both have developed methods for simultaneous inference of group structure with roles in hierarchically structured activities. One key difference between the two is that the former, like our model, can flexibly accommodate multiple levels of activity description in the course of inference, while the latter is restricted to two fixed levels of description during inference (one for group activities, and the other for their member roles). A crucial difference with our approach is that we consider the possibility of detecting multiple occurrences of the same type of activity description in a scene, and these descriptions are integrated into a single probabilistic joint model in order to influence inference of the overall activity structure. While activities described in [\citeauthor=2_ryoo2011] have hierarchical component structure with roles, their model does not accommodate more than one top level activity (i.e. assault, meet, robbery, etc.) occurring during the course of the video, nor changes in group membership by individuals over such high-level activities.

Model

We present a probabilistic generative model describing how coordinated activities by groups of individuals give rise to the observed physical trajectories of the actors involved. In Section [\ref=sec:terms] we introduce some terminology. Then, in Section [\ref=sec:representation] we give precise definitions of the representations employed by our model for activities, groups, activity sequences, and spatial trajectories. Next, in Section [\ref=sec:topology], we define the factors in the joint probability distribution that comprise the generative model. Finally, in Section [\ref=sec:specific-activities] we define the specific activities that are used to model the scenes that we use for evaluation in Section [\ref=sec:experiments].

Terminology

Activities are optionally composed of other activities. For example, the canonical meet activity in our model consists of multiple participating groups, each of which must move-to the location of the meeting, unless they are already there, and then possibly wait ( stand) until one or more other groups arrive. Engaging in a move-to activity requires the group to carry out a sequence of walk and run activities. The semantics of a walk or run is, in turn, characterized by the group's physical trajectory in space.

A scene is described as an activity tree, which has a recursive structure, much as a syntactic tree describes the recursive phrase structure of a natural language sentence, but with an added temporal component. An example of such a tree is depicted in Figure [\ref=fig:ex-tree]. We refer to the more abstract, "nonterminal" activities that are defined in terms of other activities as intentional, and the "leaf" activities that are defined in terms of observable movement as physical.

Participants in an intentional activity are divided into subgroups, each of which plays a particular role with respect to the parent activity. Carrying out a particular role entails engaging in a sequence of subactivities, each of which may be physical or intentional. In intentional activities, the group may be decomposed further into smaller subgroups, each with their own role in the subactivity, and so on. The sequence of subactivities performed by participants in a role is constrained (either deterministically or stochastically) according to the dynamics associated with the role. In cases where a role in a parent activity may be realized as a sequence that includes the same activity type as the parent, the structure is recursive, and allows for arbitrary nesting of activities at different time scales. For example, in Figure [\ref=fig:example], a group of individuals participating in a meet activity performs a sub- meet of their own.

Physical activities are associated with group trajectories, which are coupled either via shared membership or when an intentional activity requires their coordination. An individual, j, has an observed trajectory that is generated as a sequence of connected sub-trajectories, one for each physical activity in which j participates, and which is constrained to be near the respective group trajectory. An example of an observed set of individual trajectories is shown in Figure [\ref=fig:ex-trajs-3].

An important feature of our model is that group trajectories are not explicitly represented during inference. The assertion that there is some group trajectory induces correlations among the individual trajectories of the members, but we average over all possible group trajectories (marginalizing them out) when computing the posterior probability of a description. This allows activity descriptions with different numbers of groups to be compared based on the posterior probabilities of their activity trees alone, without needing to deal with probability densities with different numbers of dimensions.

Representation

Activities

Formally, an activity is a tuple C  =  (a,s,e), where a is an activity label (e.g., walk), and [formula] are the start and end time of the activity, respectively. The simplest activities are physical activities, e.g., walking, running and standing, which directly constrain the motion of a group of individuals over an interval of time. For example, a run activity is expected to yield trajectories with speeds corresponding to typical human running. We denote the set of physical activity labels by [formula]. Similarly, intentional activities include meet and move-to. We denote the set of intentional activity labels by [formula]. The complete set of activities is denoted by [formula].

Groups

The set of participants in activity C is denoted by [formula]. We let [formula], the size of the group. This set is partitioned into subgroups, [formula], where the number KC of subgroups is bounded only by the number of individuals, JC, in the group. When specifying the probability model, it is convenient to work instead with the indicator variables, [formula], where zCj indicates which of the KC subgroups participant j is affiliated with. Note that [formula] contains exactly the same information as the partition. In the following description, we omit the subscript C for readability.

Activity Sequences

Each subgroup within activity C performs a sequence of subactivities. For example, a subgroup in a meet might perform a sequence of two subactivities: first, move-to a designated meeting location, and then stand in that location while meeting with other subgroups, who may have also approached that location. Alternatively, one of the subgroups could be involved in a side meeting, with further subgroups that approach and merge with each other before their union merges with another subgroup of the top-level meet. Figure [\ref=fig:example] provides such an example.

The sequences of subactivities performed by subgroups are governed by roles. Each subgroup k is assigned a role from a set Ra defined by the parent activity a. Roles govern the dynamics of the sequence of subactivities that each group carries out, via a set of parameters associated with that role. The parameters for role r specify what the allowable activities are in the activity sequence of a group carrying out that role, as well as hard or soft constraints involving what order the activities occur in. The subgroup of the example meet activity above would be assigned the role of APPROACHER, which prescribes a move-to followed by a stand. In this case the constraint on the order of subactivities is deterministic, with the only degrees of freedom being the times at which transitions take place. These constraints can be represented by a Markov chain with a degenerate initial distribution and a transition matrix with only one non-zero off-diagonal entry per column. More general initial and transition distributions will give rise to softer constraints on activity sequences.

Trajectories

Ultimately, each physical activity, realized over the interval

[formula]

. Since individual j's path depends on the sequence of activities it participates in, each individual trajectory [formula] consists of segments, [formula], consecutive pairs of which must be connected at transition points, [formula], where y(i)* j denotes the start of segment i and the end of segment i - 1.

Generative Model

We now describe the generative process for activities. The high-level process has three steps: (1) recursive expansion of intentional activities, (2) generation of group trajectories for the set of physical activities, and (3) generation of individual trajectories conditioned on the group assignments and group trajectories.

Overview

In the first step of activity generation, each intentional activity gives rise to one or more child activity sequences: one for each subgroup of participants involved in the parent activity. Each child sequence is assigned a role, based on the parent activity type. Subgroups and role assignments occur jointly. The choice of role governs the sequence of activities that the subgroup engages in, by specifying a Markov transition function. Each segment of an activity sequence may be a physical activity or another intentional activity. Each intentional activity in the sequence is recursively expanded until only physical activities are generated.

As a working example for this stage of the process, we consider the meet activity at node 1, at the root of the tree in Figure [\ref=fig:ex-tree]. Node 1 has two child sequences corresponding to the two subgroups involved in the meeting, both carrying out the APPROACHER role. One of those child sequences consists of just a single move-to activity, while the other consists of two activities: a meet, followed by a move-to. In general, a special top-level root activity, a "free-for-all" ( FFA), comprises all actors and has a duration over the entire video. All other activities are children of the root FFA. (To simplify the example tree in Figure [\ref=fig:ex-tree], we removed the parent FFA.) The details of this tree expansion are given in "", below.

We make a conditional independence assumption by supposing that the contents of a parent activity fully specify the distribution of possible child sequences, and that child sequences are conditionally independent of each other given their parent. Since child sequences can contain other intentional activities, activity generation is a recursive process, which bottoms out when no intentional activities are generated.

In the second step of the generative process, group trajectories are generated for each physical activity. This process must satisfy two constraints: (a) physical activity trajectories that share members and that border in time must be spatially connected; and (b) groups that need to physically interact as co-participants in an intentional activity, such as a meet, must have trajectories that intersect at the appropriate points in time. Due to these constraints it is not feasible to generate group trajectories conditionally independently given the activity tree. Instead they are generated jointly according to a global Gaussian Process with a covariance kernel that depends on the activity tree in such a way as to enforce the key constraints. The details of this process are given in "", below.

For the example tree in Figure [\ref=fig:ex-tree], four group trajectory segments are needed, one for each physical activity leaf node. Since walk activity 9 is part of a meeting in which its participants must meet with the participants in walk activity 7, the group trajectories for 7 and 9 must end in the same location. Similarly, walk 4 must end where stand 5 is located.

In the final step of the generative process, the individual trajectories are realized, conditioned on the set of group trajectories. Here, conditional independence is possible, with each individual's trajectory depending only on the sequence of group trajectories for physical activities in which that individual is a participant. This process is detailed in Section "".

Generating the Activity Tree

Let Cm  =  (am,sm,em) be a parent intentional activity, where m indexes the set of activities. Its participant set Zm (by relabeling, we assume that [formula]) is divided into subgroups, where the jth participant of Cm is assigned to group zmj, and the distinct realized groups are numbered 1 through Km. We let [formula], which defines a partition of Zm into Km subgroups, [formula], with Zmk  =  {j∈Zm  |  zmj  =  k}. Subgroup k is assigned role rmk∈R, and we define [formula].

The kth subgroup, which has participants Zmk and role rmk, produces an activity sequence according to the stochastic process associated with rmk, which has parameters [formula], a Markov transition function, and [formula], an initial activity distribution. Denote the resulting sequence by [formula], where Imk is the number of jumps generated by the process, and the C(i)mk are activity tuples, C(i)mk  =  (a(i)mk,s(i)mk,e(i)mk), where s(i)mk  =  e(i - 1)mk. Figure [\ref=fig:activity] illustrates the graphical model of this production.

To summarize, the grouping, role assignment, and child activity sequences within activity Cm are generated according to [formula], which factors as

[formula]

where we define [formula]. We assume that roles are assigned independently, so that [formula]. Additionally, we model the partition of Zm into subgroups using a Chinese Restaurant Process ([formula]), whose concentration parameter αam depends on the activity label. That is, we let [formula] be the [formula] mass function with parameter αam. Each segment C(i)mk of [formula] that is an intentional activity is expanded and its members are subdivided recursively according to [\eqref=eq:sequence], replacing Cm with C(i)mk and Zm with Zmk. Once all expansions contain exclusively physical activities, the recursion has bottomed out. The resulting tree consists of all intentional activities [formula], all physical activities, [formula], and, for each intentional activity [formula], its membership partition [formula], role assignments [formula], and subgroup activity sequences [formula]. We denote this complete tree by Λ, whose prior distribution is

[formula]

Generating Group Trajectories

The leaves of the activity tree are all physical activities, each of which is associated with a group trajectory. In general, the endpoints of different group trajectories are not independent (given Λ), since they may be constrained to start or end at the same location. Consequently, we define a joint distribution on all of the group trajectory endpoints, and, conditioned on their endpoints, we treat their interiors as independent.

We model the interiors as realizations of Gaussian processes [\cite=gpml2006] with the squared-exponential kernel function. This results in trajectories that are generally smooth, but flexible enough to allow for different kinds of motion. We use different scale parameters σam depending on the activity am, which determines the rate of change of the trajectory.

We specify dependencies among the set of trajectory endpoints by first defining an undirected weighted graph G over the endpoints. We use this graph to construct a constraint matrix over transition points by interpreting the sum of the weights on the shortest path between two nodes as distances. We then apply a positive semidefinite isotropic covariance kernel point-wise to the distance matrix to transform the distances into covariances.

Let [formula] represent the sequence of ground-plane positions that make up the group trajectory for activity m. Abusing notation slightly, we will write x(s)* m and x(e)* m for both the endpoints of a group trajectory and the corresponding node in G. We introduce three kinds of edges on G: temporal, transitional, and compositional. Two nodes are connected by a temporal edge when they belong to the same physical activity. The start of an activity, x(s)* m, is connected to the end of another activity, x(e)* m', by a transitional edge when they correspond to the same moment in time and the corresponding activities share at least one participant. Finally, two endpoints are connected by a compositional edge if they correspond to the same moment in time and have a common ancestor that specifies they must coincide, e.g., in a meet activity, all participants must end in the same location. All transitional and compositional edges have weight (or "distance") zero, corresponding to the constraint that the connected edges must correspond to the same trajectory position. The weight assigned to temporal edges is a function of the time elapsed during the intervening physical activity and the σ associated with the activity label (e.g., "slower-moving" activities having lower weights, corresponding to a stronger dependence between the positions of their endpoints). Figure [\ref=fig:ex-graph] shows an example G.

Having defined G we can compute a distance matrix [formula] for the set of physical activity endpoints, where the entry dii' is the sum of the weights along the shortest path in G from node i to node i'. If no path exists between two nodes, the distance is set to ∞  . We then transform [formula] into a covariance matrix [formula] by applying the covariance function φii'  =  κ(dii')  =  λe- d2ii'. The locations of the set of group trajectory endpoints [formula] is distributed as [formula]. Conditioned on the endpoints, the interiors are mutually independent, so that

[formula]

where [formula] is the vector of interior points of trajectory [formula] and [formula]. Each [formula] is generated according to the Gaussian process for activity m; i.e., [formula] is normally distributed. Finally, the distribution over the physical trajectories [formula] factorizes as

[formula]

Using the fact that factors in [\eqref=eq:physical-traj-prior] are normally distributed, we can easily see that [formula] also has a normal distribution.

Generating Individual Trajectories

As described above, individual j participates in physical activity sequence [formula], which has the sequence of group trajectories [formula]. The individual trajectory [formula] consists of segments, [formula], where [formula] spans the same temporal interval as [formula]. Given these group trajectories, the individual trajectory segments are mutually independent, so that

[formula]

where a(i)(j) is the label of the ith activity in sequence [formula].

We also use a Gaussian process for individual trajectories, but fix the mean to the (given) group trajectory, i.e. [formula], which implies that [formula], where the ijth entry in [formula] is the covariance function κ evaluated at the ith and jth frames of [formula], using the scale corresponding to the activity label associated to [formula]. See Figure [\ref=fig:act-traj] for an example graphical model of this distribution.

Specific Activities

In this work, we limit ourselves to six specific activities, three intentional ( free-for-all, meet, and move-to) and three physical ( stand, walk, and run). FFA has a single role which allows all activities to take place. A meet activity assigns non-zero probability to two roles, APPROACHER and WAITER; an APPROACHER performs a meets (recursively) and move-tos, and a WAITER only performs stands. Move-to only produces one role, MOVER, which switches uniformly at random between the three physical activities. Finally, the physical activities have scale parameters such that [formula].

Inference

Given a set of J individual trajectories [formula], such as those depicted in Figure [\ref=fig:ex-trajs-3], we wish to find an activity tree Λ, such as that depicted in Figure [\ref=fig:ex-tree], that best describes them. Specifically, we wish to maximize the posterior probability of an activity tree given the observed data

[formula]

where the prior is given by [\eqref=eq:tree-prior], and the likelihood is

[formula]

The integrands are given by [\eqref=eq:physical-traj-prior] and [\eqref=eq:individual-likelihood]. In general, the integral in [\eqref=eq:likelihood-full] cannot be computed analytically. However, since every factor in [\eqref=eq:likelihood-full] is a normal pdf, [formula] is also normal, which makes the evaluation of [\eqref=eq:posterior] straightforward.

We cannot find [formula] analytically. Instead, we draw S samples from the posterior [\eqref=eq:posterior] using the Metropolis-Hastings (MH) algorithm, and keep the sample with the highest posterior probability. At the ith iteration, we draw Λ' from a proposal distribution q(  ·    |  Λ(i - 1)), where Λ(i - 1) is the current sample, and accept the sample with the standard MH acceptance probability [\cite=Neal-93-MCMC].

The ability of MH to efficiently explore the space depends largely on the choice of the proposal distribution q. Although there has been work on MCMC sampling on tree models [\cite=bayesian-treed-chipman] [\cite=pratola-mh-tree] there is no general approach which can be applied to any model. Consequently, we employ a proposal distribution which is specific to our model.

Proposal distribution

Our proposal mechanism is composed of sampling moves which perform edits to the current hypothesized activity tree to produce a new tree sample. When drawing a sample from q, we choose a move uniformly at random to apply. When applying a move, we must make sure that the resulting tree is valid (e.g., start and end times must be consistent; or activity sequences must be possible given the role), which requires book-keeping that is beyond the scope of this document.

We have also developed a set of bottom-up activity detectors to help explore the space efficiently. These detectors provide rough estimates of groupings of individuals at each frame, and activities being performed by each group (see Section [\ref=sec:detectors], "Detectors"). We use these detectors in two ways. First, we initialize the sampler to a state obtained by transforming the output of the detectors to an activity tree Λ(0). Additionally, we bias our proposal distribution toward groups and activities found by the detectors. For example, when proposing a merge move, we might choose participants which are predicted to be in a group by some activity detector.

Sampling moves

During inference, we employ the following moves (see Figure [\ref=fig:moves] for an illustration). (a) Birth/death: a birth move inserts an intentional activity node between an intentional activity and some of its children. We randomly choose a set of sibling activity sequences [formula] whose parent is intentional activity Cm, and insert a new intentional activity node C' (whose label is also chosen at random), such that C' becomes the parent of [formula] and a child of Cm. In a death move, we randomly choose a intentional node C', remove it from the tree, and connect its children nodes to its parent. (b) Merge/split: In a merge move, we take two sibling activity nodes with the same label and combine them into a single activity. If C' and C'' are two activities with label a and groups Z' and Z'', we create a new node C with label a and participants [formula]. The split move performs the opposite operation, taking a-labeled node C and splitting it into two nodes C' and C'', both with activity a, assigning participants in Z to either Z' or Z'' uniformly. (c) Sequence/unsequence: Let [formula] and [formula] be two temporally non-overlapping sibling activity sequences. A sequence move concatenates [formula] and [formula] into a new sequence [formula]. An unsequence move randomly selecting a split point at which to separate a sequence. (d) Relabel move: The relabel move randomly changes C's label. Note that the label must be valid, e.g., we cannot assign a physical activity label to an intentional activity node.

Detectors

The bottom-up detectors provide an estimate of how individuals in the video are grouped across time, as well as the physical activity they are performing.

At each frame, we cluster individuals into groups using their trajectories on the ground plane. We apply the density-based spatial clustering of applications with noise (DBSCAN) [\cite=Ester96adensity-based] algorithm independently on each frame, where our feature is composed of the position and velocity of an individual at that frame, both of which are obtained from the smoothed trajectories (which are assumed to be given). Importantly, we keep track of individual identities over time by recording the actors involved in each group in the previous frame and assigning the cluster found in the following frame where the majority of individuals in that new set are still involved. Given the groups as computed above, we want to identify the physical activities of their individuals (e.g., walk, run). For this we use a hidden Markov model, where the observation function is a naive Bayes model with each individual's speed modeled by a Gamma distribution, and a transition function that prefers staying within the current activity.

Experiments and Results

We evaluate the model in two ways. First, we demonstrate the model's expressive power in inferring two different types of complexly structured scenarios from synthetic data. In the first, groups of individuals engage in activities and disband, forming different groups over time. The second demonstrates a recursively structured activity, in which one meeting is a component of a higher-level meeting. We then evaluate the model on real data; specifically on two publicly available group activity datasets, VIRAT [\cite=42_oh2011large] and the UCLA aerial event dataset [\cite=shu2015_CVPR].

Evaluation

Performance is measured in terms of how well activities are labeled in the scene, and how well individuals are grouped, irrespective of activity label. In the following, Λgt and Λ are the ground truth and inferred activity trees, respectively.

Activity Labeling

For each activity a and video frame f, we compare between Λgt and Λ the set of individuals performing a at f. We first define performance counts in terms of an individual at a frame, then compute overall counts and associated performance measures.

For an individual j at frame i, let λji be the set of individuals which have the same label as j in Λ. Define λji' similarly for Λgt. The set of false positives for j is [formula], the set of false negatives is [formula], the true positives are [formula], and the true negatives are [formula], where Z is the set of all individuals.

Grouping

We follow a similar approach when evaluating grouping performance. For person j, we compare the groups to which j belongs in Λgt and Λ at each frame t. Since the two trees could have different depths and topologies, it is not necessarily clear which groups should be compared with which; however, every individual is part of exactly one physical activity group at each frame, as well as one highest level node. Consequently, we only compare groups at these two levels of the tree, without penalty for difference in activities within a level. Thus once we determine the group associated with person j at frame t at the physical (resp. highest) activity level of each tree, we compute the score as before.

Results

The performance of our algorithm is summarized in Tables [\ref=tab:act-label] and [\ref=tab:group-performance]. Table [\ref=tab:act-label] shows the activity labeling precision and recall on the two synthetic scenes (SYNTH1 and SYNTH2), a video sequence obtained from the VIRAT dataset, and four different video sequences from the UCLA aerial event dataset (UAED). In Table [\ref=tab:group-performance] we see the performance as measured by our grouping evaluation metric described above.

Synthetic data

The synthetic dataset comprises two videos, where a video is a set of trajectories on the ground plane. In the first, SYNTH1, five actors participate in a series of meetings, where participants repeatedly change group memberships across 20 frames. The second (SYNTH2) features five actors meeting, with four of them participating in a side meeting before joining the global meeting. As Table [\ref=tab:act-label] shows, our model performs very well on high-level activities, such as meet, even when presented with nested structure.

VIRAT

We also evaluate on real data, specifically frames 2520 to 3960 of video 2 of the VIRAT dataset. This video features seven people participating in two meetings, where groups exchange members several times. Fig. [\ref=fig:virate-qual] shows two frames of the video, along with the inferred activity tree. Our model correctly recognizes the two meetings, as well as all of the groups at the highest level of description. The activity labeling results (Table [\ref=tab:act-label]) show perfect FFA performance, and the grouping results (Table [\ref=tab:group-performance]) show a perfect highest-level intentional activity score. As before, there is divergence from ground truth at the physical activity level, but this does not affect the grouping score.

UCLA aerial event dataset

We extracted four video sequences from the UCLA aerial event dataset (UAED). More specifically, we searched for subsequences of videos which featured properties like activity nesting, groups interchanging members, etc. The result is four video sequences of roughly 2000 frames each. As we can see in Table [\ref=tab:act-label], which shows the overall precision and recall scores, for all four videos, our algorithm performs reasonably well across all activities. Note the relatively low recall score of the meet activity, which is due in large part to one very long missed meet in the third video sequence. Similarly, Table [\ref=tab:group-performance] shows that our algorithm performs well at finding groups of individuals at both the physical and intentional activity levels.

Discussion

We have presented a probabilistic generative model of complex multi-agent activities over arbitrary time scales. The activities specify component roles between groups of actors and accommodate unboundedly deep recursive, hierarchical structure. The model accommodates arbitrary groups participating in activity roles, describing both between-group and between-individual interactions. Physical and intentional (higher-level description) activities explain hierarchical correlations among individual trajectories. To our knowledge, no existing model of track-based activity recognition provides this expressiveness in a joint model.

The modeling framework is naturally extensible. We are currently undertaking several extensions, including (1) developing additional activities, including following, exchanging items, and interacting with vehicles and building entrances, (2) adding prior knowledge about the spatial layout of the scene that naturally constrains what activities are possible, such as roads, sidewalks, impassible buildings, and other spatial features that influence behavior in order to improve both accuracy and speed by reducing the search space, (3) using our model as a prior for a 3D Bayesian tracker [\cite=brau2013], and (4) connecting natural language to activity descriptions as our model accommodates activity descriptions across multiple events, tracking individual participation throughout, providing opportunities for building natural language narratives about activities at different levels of granularity.

Acknowledgements

This research was supported by grants under the DARPA Mind's Eye program W911NF-10-C-0081 (subcontract to iRobot, 92003) and the DARPA SSIM program W911NF-10-2-0064. We give special thanks to Paul R. Cohen and Christopher Geyer for helpful discussions and advice.