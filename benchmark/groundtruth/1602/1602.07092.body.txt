Quality Attributes in Practice: Contemporary Data

Introduction

Quality is the set of characteristics of an entity that describe its ability to satisfy stated and implied needs of the customer and/or of the end user; this notion has been formalized in numerous standards like the ISO 9000. For systems including software, the notion of quality has been instantiated in several standards, including the ISO 9216 [\cite=ISOIEC9126] and IEEE 730 [\cite=6835311]. Software Quality is an essential and distinguishing attribute of the final product. Nevertheless, functionality usually takes the front seat during software development. This is mainly because of the nature of these quality requirements which poses a challenge when taking the choice of treating them earlier in the software development. Quality requirements are subjective, relative and they become scattered among multiple modules when they are mapped from the requirements domain to the solution space. Furthermore, Quality requirements can often interact, in the sense that attempts to achieve one can help or hinder the achievement of the other at particular software functionality. Such an interaction creates an extensive network of interdependencies and tradeoffs among quality requirements which is not easy to trace or estimate [\cite=Chung].

This preference for functionality over the qualities is shortsighted though. Software systems are often redesigned not because they are functionally deficient but because they are too slow, not user friendly, hard to scale or hard to maintain. In addition, quality requirements drive architectural structure more than functionality. In fact, if functionality were the only thing that mattered, there wouldn’t be a need to divide the system into architectural components at all; a single monolithic blob with no internal structure would satisfy the need [\cite=Garlan].

The key issue in implementing an improvement in industrial practices is to first identify the areas that need the most improvement. But little contemporary data exists to report on how the quality requirements and its tight coupling to architecture are perceived in industry. To remedy this deficiency and provide useful data to other researchers we conducted an exploratory survey study on quality requirements and software architecture in practice. In this article, we report on our findings from this survey. Reported data includes characteristics of projects, practices, organizations, and practitioners linked to projects’ qualities and their architectural structures.

While there is an endless list of qualities a software system may have to exhibit, the focus of this survey is on the pre-dominant ones as described in [\cite=SA]: Availability, Interoperability, Modifiability, Performance, Security, Testability and Usability.

The rest of this paper is organized as follows: section [\ref=sec:2] describes tools and techniques to build questions and collect answers; section [\ref=sec:3] reports on the nature of respondents profiles and the businesses in which they are employed; section [\ref=sec:4] shows the actual empyrical data and section [\ref=sec:5] draws some preliminary conclusions that have to be validate in future with the collection of further data and expansion of dataset.

Experimental Design

A web-based survey instrument was created using the web-based QuestionPro survey tool (www.QuestionPro.com). The survey consisted of 19 questions. The survey questions were designed after a careful review to specialized literature on conducting survey studies (e.g. [\cite=Hoinville:1982], [\cite=Silverman:2000], [\cite=Marshall:1989], [\cite=methodology1], [\cite=methodology2]). A summary of our survey questions is available via the link. While the respondents reported a wide range of experiences; they were asked to base their responses on only one software project that they were either currently involved with or had taken part in during the past five years.

Using the conjectures in our hypotheses as means of constructing specific questions, the survey was arranged into five sections: First section aiming at capturing general project characteristics first. Then, a series of questions were asked in the second section to determine the participants’ knowledge of architectural styles and whether if any were applied into the surveyed projects. In case of incorporating architectural styles into the projects; the respondents were then asked to report on the criteria they used to select these styles in the third section and the challenges they faced while incorporating them in the forth section. Since quality requirements are the major that shapes the software architecture [\cite=SA]; a series of questions were then asked in the fifth section to report on the level of customer’s satisfaction with these qualities while the final product is in use.

We drew our survey participants from multiple sources but primarily from members of the following Linked-In professional groups, to which one or more of the authors belonged: "Software Engineering Productivity: Software Architecture", "Techpost Media","ISMG: Software Architecture" and "ISMG Architecture World". A invitation on these groups was posted under the subject "Software architecture in practice". The participation to this survey was entirely anonymous and voluntarily. Survey data was collected from May 2015 through September 2015. The survey drew 687 participants from 37 countries. Of these survey takers; 103 completed the survey to the end. The completion rate was 15% and the average time taken to complete the survey was 10 minutes. We also included the results of the partially completed responses. When respondents aborted the survey, they tended to do so on or near question 15, we speculate from “survey fatigue.”

Profiles of the Respondents

In this analysis we take into consideration also the answers given by people who partially completed the questionnaire for statistical analysis not requiring pairing or correlating information, as suggested in [\cite=Kassab]. Given this population, responses to the survey are more likely to reflect the opinions and biases of any given project’s development team rather than those of other groups represented in a software development effort. In this section we will consider two aspects of respondents' profiles: distribution of business and type of respondents.

Analysis of the Results

In this section we will present a portion of the collected data with some projections in order to identify and highlight some aspects of Quality Attributes and satisfaction. The collected data allow several projections and analysis that cannot be reported in full in this paper. due to space constraints. In Section [\ref=sec:5] we will discuss these results in more detail and we will try to connect the dots. We will also anticipate how the work can be continued. In this section in particuar, and mor ein general in this paper, we focus on Quality Attributes and satisfaction. All data are based on the responses of IT-specialists and we use the "satisfaction rate" as the main measure in evaluating quality of final product. The "satisfaction rate" is defined as the estimation made by IT-specialists of the percentage of customers satisfied with quality attributes and overall quality of the final product.

Figure  [\ref=fig:general_satisfaction] shows the overall satisfaction rate for each specific Quality Attribute considered in the survey. In this figure over hundreds responses of the survey have been computed. Functionality appears as the QA for which customers have an overall higher satisfaction level with over 80% of customers satisfied with functionality of the final product. Availability, usability and overall quality also shows high level of satisfaction while security, performance and modifiability suited only about half of customers. As for testability and interoperability, just one out of three respondents reported customers' satisfaction with respect to these attributes. These results can be interpreted according to a specific attention of software engineers on on functionality, usability and availability resulting in higher overall quality of the final software artifacts.

Figure  [\ref=fig:domain_satisfaction] considers Quality Attributes satisfaction rates for specific industry domains. Here only fields which had ten or more responses have been computed, therefore eight industry domains are shown: Education, Finance & Banking, Gaming & Utilities, Sales & Business Development, Telecommunications, Medical Systems & Pharmaceuticals, Government, Human Resources & Payroll. The level of customer satisfaction has been here computed individually for each domain.

Regarding Functionality each industry domain reports level of satisfactions of 75% or higher with Finance & Banking and Government projects almost reaching 100%. As for Security, Government projects shows an unexpectedly low 30% not very far from games and utilities. Here HR and Finance & Banking fields reports the highest level. The highest satisfaction levels with Performance are shown in HR & Payroll systems and Medical systems, while Education and Sales scores the least.

Usability satisfaction rates have Government and HR projects around 90% and Gaming and Telecommunication with 50%. When it comes to Modifiability for Gaming & Utilities also have very low 30% levels and Medical Systems score the highest (more than 60%). More than half customers met the expectations with respect to Availability in all business domain. In general, customers have not been much satisfied by Testability, where percentages stay between 45% and 20%. Interoperability also shows low average satisfction levels. Satisfaction concerning Overall Quality of the final product is generally high, in particular for Medical Systems and Government projects.

Summing up data from Figure [\ref=fig:domain_satisfaction] we can conclude that satisfaction rates appear coherent with expectations of a business domain for a specific quality attribute, for example Security is a priority for Finance & Banking sector. General low rates appearing for Gaming & Utilities can be explained by the peculiar nature and needs of this domain.

Figure  [\ref=fig:arch_satisfaction] shows the impact of architectural styles on the final product. Levels of satisfaction related to six among the most popular architectural styles have been projected. Layer, Publisher-Subscriber and Multi-tier are generally higher than MVC, SOA and Client server. However, no significant difference can be appreciated among different architectures used in projects and the fact that architectural style do not affect quality of final product can be concluded.

We have also analyzed quality attributes from the point of view of software development methods, and observed how projects performed following Agile methodologies shows higher rates of satisfaction than those following Waterfall (see Figure  [\ref=fig:methods_satisfaction]).

Figure  [\ref=fig:budget_satisfaction] we observe how the overall quality of final products developed by companies with an annual budget higher than 5M of US dollars is higher. This could be considered as the result of the fact that large companies might have more slack time for developers [\cite=DeMarco:2002], who can then devote more time to refactoring or to improve their own development skills.

Figure [\ref=fig:duration_satisfaction] shows that projects with a duration inferior to six months have satisfaction rates higher than projects with a longer duration. This can be interpreted along the line that longer development activities result in more complex projects for which may be harder to maintain high quality and more generally keep customer's satisfaction high for all the process.

Conclusions

In the current literature there is no wealth of empirical data on Quality Attributes related to industrial projects. In this survey, data from more than 100 software developers and engineers have been collected and the results on Quality Attributes and satisfaction levels have been reported. In this section we report a synthesis of the findings.

This is just a preliminary work and results are synthetized by a reasonbaly large dataset, though it cannot be considered definitive. It is necessary to expand the number of respondents and possibly double it to reach more solid conclusions. On the other side, the nature of domains investigated is pretty broad, therefore to reach some stable conclusion will also be necessary to separately investigate the different domains.

This work is intended to shed some light on the relationships between Quality Attributes and different aspects of software developmnet, and consitutes only a starting point for the accumulation and analysis of further data. In this paper we have indeed estabilished methods and approach to the research which will be applied and extened in future. Next steps are:

Expand dataset

Specialize on business domains

Validate the temporary conclusion presented in this work

As a matter of fact, we are already working on the first of these steps.