The isomorphic version of Brualdies nestedness is in P

Introduction

Let's start with a formal description. Given is an m  ×  n 0,1-matrix A with non-increasing row sums [formula] and non-increasing column sums [formula] The corresponding Ferrers matrix F is the matrix where each row i of F starts with ri 1's followed by n - ri 0's. It can be achieved by several shifts. A shift is the movement of a 1 in a row from a righter to a lefter column with entry 0. Ferrers matrices together with majorization theory are classical concepts for deciding the question if there exists a matrix A with given row and column sums. They were invented by Ferrers [\cite=Syl:1882] in the 18th century. Matrix F has also row sums [formula] but different column sums, i.e., [formula] where [formula] A matrix A can also be interpreted as the adjacency matrix of a bipartite graph, and the corresponding graph of F is then a threshold graph. For an overview about these problems we recommend Brualdi's book [\cite=Brualdi2006] and Mahadev's and Peled's book [\cite=MaPe:95]. However, Ferrers matrices also occur in ecology under the name nested matrices to describe idealized ecological networks due to the strength of nestedness. In these contexts matrix A represents the presence or absence of interactions between pollinator and plant species, or, the occurrence and absence of species on several islands. If A was a nested matrix, then one bee in an arbitrary pair of bees, would always pollinate a subset of the plant species which is pollinated from the other one. The opposite scenario is that, all bee pairs pollinate completely different plants. If A was not nested the natural question arises of how far the ecological matrix is apart from being nested. Brualdi et al. answered this question by the metrics of discrepancy between A and F [\cite=Brualdi1999]. They count how many 1's need to be shifted at least to the left to achieve F. This value can easily be calculated but there is one conceptual problem regarding the ecological application. The exchange of two columns in A with same column sum keeps all interactions between pollinators and bees but can lead to a different discrepancy. The reason is that both matrices are formally considered as different because two bees have different labels. For ecological purposes these labels are not necessary. They are only assigned to columns and rows due to the mathematical denotation of columns and rows. In more formal words both matrices are isomorphic but lead to several values of discrepancy. The discrepancy between A and F should be extended to the problem of finding the minimal number of shifts under all isomorphic graphs of A to achieve F. The isomorphic discrepancy finds an optimal labeling for a network regarding a minimum number of shifts to achieve the nested matrix F. We solve this problem in reducing it to a couple of maximum perfect weighted matching problems leading to an O(n3) asymptotic running time. Please observe that there exist other approaches and assumptions how a perfect nested matrix N for A has to look like. This results in another difference of both matrices. One approach is to replace a minimal number of 0's by 1's in A such that A (or an isomorphic matrix of A) becomes nested. This problem is known as minimal chain completion problem and was shown to be NP-complete in 1981 by Yannakakis [\cite=Yannakakis1981]. The opposite problem is to delete a minimal number of 0's in A to achieve a nested matrix which is also NP-complete (please exchange the rules of 1's and 0's to see this). An approximation algorithm was given in the Phd-thesis of Juntilla in 2011 [\cite=Junttila2011]. A whole bunch of formulas are used in the ecological community. For an overview see the nestedness guide [\cite=Ulrich2009] which also includes the discrepancy of Brualdi and Sanderson (there called BR). All these metrics can be seen as heuristics for the above described approaches. In the next section we give a formal definition of isomorphic discrepancy, and show how it can be solved in asymptotic running time O(n3).

The discrepancy problem for isomorphic matrices

Let A be an m  ×  n 0,1-matrix with non-increasing row sums [formula], and non-increasing column sums [formula] Then all isomorphic matrices B of A can be achieved by permuting columns and rows with equal sums. We denote the set of all isomorphic graphs of A by IA. The discrepancy of A given by Brualdi and Sanderson [\cite=Brualdi1998] is the minimum number of shifts to achieve the corresponding Ferrers matrix F as described in the last section. We denote the discrepancy of A by disc(A). We now give the definition of the isomorphic discrepancy Id(A) of A which is defined by

[formula]

That is we try to find an isomorphic graph of A with minimal discrepancy. We also want to mention that this new metric should be invariant against the transposition of A. This can be achieved by transposing A and determine Id(At). The general isomorphic discrepancy of A is then the minimum value (or the mean value) of Id(A) and Id(At). We here focus on Id(A), because the calculation of Id(At) can be done analogously. A simple approach were to permute all columns and rows with equal sums and to choose a permutation of A which yields the minimum discrepancy. This can lead to the determination of exponentially many possible permutations. Please observe that it is sufficient for our problem to permute columns in A and keep the rows fixed. Following this approach we will not necessarily generate all isomorphic matrices in IA but we will generate all possible discrepancies which occur for matrices in IA. The reason is that the switching of rows with equal sums does not change the number of shifts in a row. Hence, it is sufficient to permute columns for the calculation of Id(A). Brualdi and Shen showed [\cite=Brualdi1999] that there is always one matrix C with minimum possible discrepancy [formula] under all matrices with row sums [formula] and column sums [formula] To see this consider the following example. Given is the matrix [formula] with corresponding Ferrers matrix [formula]. The column sums from A are (6,3,3,3) and for F we find (6,6,3,0). If we shift the four bold 1's in A to the left we get F and disc(A) = 4. Comparing the two column sums (6,3,3,3) and (6,6,3,0) one could get the impression that it could be sufficient to shift three 1's of the fourth column to the second column. In A this is not possible because the third columns of A and F differ in the third and sixth rows. Hence, something in the third column of A needs to be changed to generate F. On the other hand it is easy to construct a matrix C with [formula] by shifting the 1's of the first, fourth and sixth row in the second column of F to the fourth column. However, Id(A) = 4 because each permutation σ of the last three columns of A leads to a matrix Aσ with disc(Aσ) = 4. We observe in the third column of an Aσ that the third column misses a 1 whereas F has one. Matrix C cannot be achieved by a permutation of columns from A, i.e., C∉IA. We formalize the observation that the number of absences of 1's in A, when they are present in F, correspond to the number of minimum shifts disc(A). We define the difference of the jth columns Vj and Uj of m  ×  n 0,1-matrices V and U by

[formula]

The notation ()+ means that only positive differences are summed up. Back to our problem we find (Fj - Aj)  ≥  c'j - cj for all j with c'j - cj  ≥  0. The reason is that a column Fj has c'j 1's and a column Aj has cj many. That means the minimum difference of both columns happens if all 1's in Aj also occur in Fj. Then (Fj - Aj) = c'j - cj. In all other cases a 1 in Aj which does not occur in Fj need to be shifted to a lefter column j' where F has a 1 and A a 0. A 1 from a righter column j'' in A has to be shifted to Aj to achieve the c'j 1's in F. We give another formula for the discrepancy.

Given is the m  ×  n 0,1-matrix A with non-increasing row sums [formula] and non-increasing column sums [formula] Let F be the corresponding Ferrers matrix. Then the minimum number of shifts to achieve F from A can be calculated by [formula].

The minimum number of shifts to achieve F from A is per definition disc(A). We claim for each column j that (Fj - Aj) is the minimum number of shifts of righter columns j'' which has to be done such that Aj contains all 1's of Fj. Note that Aj can contain more 1's which need to be shifted to a lefter column j'. These shifts will be counted in (Fj' - Aj'). In the first case one shift corresponds to entries Fi,j = 1, Ai,j = 0 and Fi,j'' = 0, Ai,j'' = 1. In the second case the shift corresponds to entries Fi',j = 1, Ai',j = 0 and Fi,j = 0, Ai,j = 1. Hence, for each shift it is sufficient to consider the difference Fi,j' - Ai,j' = 1 or Fi',j - Ai',j = 1, respectively. Assume now another kind of a shift from the jth column to a lefter column j' which we do not count in our formula, i.e., the constellation Fi,j = 1, Ai,j = 1 and Fi,j = 1, Ai,j = 0. This implicates another shift from a j''th column to the jth column to fulfill Fi,j = 1, i.e., Fi,j'' = 0, Ai,j'' = 1. (We use the most right j'' which must exist due to row sum ri for F and A.) That is this constellation results in two shifts. But then we can also do one single shift, i.e., we move the 1 from column j'' to column j'. This contradicts the assumption of a minimum number of shifts.

We denote an isomorphic element of class IA by Aσ where [formula] is the permutation of the columns of A which exchanges columns with same column sums. More formally permutation σ can be divided in k permutations σi if A possesses k different column sums, i.e., [formula]. Each [formula] permutes all columns with column sum xi independently, i.e., [formula] We denote the set of all possible permutations σi by Σi, and for all σ by Σ.

The discrepancy dis(Aσ) of each isomorphic matrix Aσ can be calculated with Proposition [\ref=prop:Disc]. Since the isomorphic discrepancy is defined as the minimum discrepancy in the set of all isomorphic matrices in IA, we can state the following proposition.

Given is the m  ×  n 0,1-matrix A with non-increasing row sums [formula] and non-increasing column sums [formula] [formula]. Let F be the corresponding Ferrers matrix. Then the isomorphic discrepancy of matrix A is

[formula]

Proposition [\ref=Prop:isomDisc] says that the minimization of each block with same row sum in A can be done independently. More exactly, we need to find for each block in A with same column sums an order (a permutation σi) of the columns which minimizes the following sum.

[formula]

We reduce this problem to a perfect weighted matching problem in a complete bipartite graph Gi = (Fv,Av,Ei) where |Fv| = |Av|. Each vertex in Fv corresponds to a column j of Ferrers matrix F and a vertex Av corresponds to a column j of matrix A if cj = xi. For simplicity we denote vertices of Fv by columns Fj, or, of Av by Aj, respectively. We assign each edge {Fj,Aj'}∈Ei the weight w(Fj,Aj'): = (Fj - Aj').

Calculating the isomorphic distance Id(A) of an m  ×  n 0,1-matrix A needs O(n3) asymptotic time.

Let Mi be a minimum perfect weighted matching in bipartite graph Gi. Then [formula] with σi(j') = j for all edges (Fj,Aj')∈Mi, and σi(j) = j for all j mit cj  ≠  xi is a permutation of all columns in A with sum xi which minimizes w(σi) in equation [\ref=equ:block]. For [formula] we can conclude with Proposition [\ref=Prop:isomDisc] that [formula] Contrary, each permutation σ which minimizes [formula] corresponds in each graph Gi to a perfect matching Mi with (Fj,Aj')∈Mi if σi(j') = j for Fj∈Fv and Aj'∈Av which is by construction minimal. Let ni be the number of columns with sum xi. Then the computation of a minimum weighted perfect matching in Gi is O(n3i) see for example [\cite=Gab:1974]. Since [formula] we get a total asymptotic running time of O(n3).

Please observe that the construction of several graphs Gi can be avoided. This happens for example when the corresponding Ferrers columns are completely equal. Then all edge weights in Gi are also equal, and therefore each perfect matching is a solution. Neither it is not necessary to construct in graphs Gi all vertices of Fv. For columns Fj which possess only 0's (or only 1's) we get for all edge which end in these vertices equal weights 0 (or cj). That is we can refine the construction of Gi to ni vertices in Av which are connected to all columns Fj with same index but 0 < c'j < m. Then the optimal solution is not a perfect but a minimum weighted matching with the size of columns Fj in Gi.