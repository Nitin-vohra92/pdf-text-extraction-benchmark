Every positive integer is a sum of three palindromes

Corollary Lemma Proposition Problem Conjecture Definition Remark

Introduction

Let g  ≥  2 be a positive integer. Any nonnegative integer n has a unique base g representation namely

[formula]

The numbers δi are called the digits of n in base g. If l is the number of digits of n, we use the notation

[formula]

where we assume that δl - 1  ≠  0.

We say that n is a base g palindrome whenever δl - i  =  δi - 1 holds for all [formula].

There are many problems and results concerning the arithmetic properties of base g palindromes. For example, in [\cite=BHS] it is shown that almost all base g palindromes are composite. In [\cite=BS], it is shown that for every large L, there exist base g palindromes n with exactly L digits and many prime factors (at least ( log  log n)1 + o(1) of them as L  →    ∞  ). The average value of the Euler function over binary (that is, with g = 2) palindromes n with a fixed even number of digits was investigated in [\cite=BS1]. In [\cite=CLT] (see also [\cite=L1]), it is shown that the set of numbers n for which Fn, the nth Fibonacci number, is a base g palindrome has asymptotic density zero as a subset of all positive integers, while in [\cite=CLS] it was shown that base g palindromes which are perfect powers (of some integer exponent k  ≥  2) form a thin set as a subset of all base g palindromes. In [\cite=LT], the authors found all positive integers n such that 10n  ±  1 is a base 2 palindrome, result which was extended in [\cite=BZ].

Recently, Banks [\cite=Ba] started the investigation of the additive theory of palindromes by proving that every positive integer can be written as a sum of at most 49 base 10 palindromes. A natural question to ask would be how optimal is the number 49 in the above result. In this respect, we prove the following results.

Let g  ≥  5. Then any positive integer can be written as a sum of three base g palindromes.

The case g = 10 of Theorem [\ref=main] is a folklore conjecture which has been around for some time. The paper [\cite=Friedman] attributes a stronger conjecture to John Hoffman, namely that every positive integer n can be written in base g = 10 as a sum of three palindromes where one of them is the maximal palindrome less than or equal to n itself. This was refuted in [\cite=Sigg] which provided infinitely many examples of positive integers n which are not a sum of two decimal palindromes.

However, we prove that "many" positive integers are a sum of two palindromes.

Let g  ≥  2. There exists a positive constant c1 depending on g such that

[formula]

for all x  ≥  2.

On the other hand the set of integers which are not sum of two palindromes has positive density.

For any g  ≥  3 there exists a constant c < 1 such that

[formula]

for x large enough.

It makes sense to ask whether the set of positive integers which are sum of two base g palindromes has positive density.

We set forward the following conjecture.

It would be interesting to extend Theorem [\ref=main] to the missing bases g∈{2,3,4}. Throughout this paper, we use the Landau symbols O and o as well as the Vinogradov symbols ≪   and ≫   with their usual meaning. These are used only in the proof of Theorem [\ref=pp].

The algorithms

The proof of Theorem [\ref=main] is algorithmic. Indeed one can program the following proof to input a positive integer n and obtain a representation of n as a sum of three palindromes in base g  ≥  5. We assume through the proof that g  ≥  5.

For ease of notation, and using a convention introduced by Banks [\cite=Ba], we consider that 0 is a base g palindrome as well. For any integer a, we write D(a) for that unique [formula] such that [formula].

As in [\eqref=eq:1], we write the base g representation of n as

[formula]

As before, δl - 1  ≠  0.

Small cases

To present a clear algorithm, those integers with less than 7 digits are considered separately in Section § [\ref=small].

So, the algorithm starts by counting the number of digits of n. If n has less than 7 digits, then Proposition [\ref=smallcases] from Section § [\ref=small] shows how to write n as a sum of three palindromes. If n has 7 or more digits then we apply the general algorithm that we present in the next pages.

The starting point

For those integers with at least 7 digits, the starting point consists in assigning a type to n according to the following classification. The type will define the lengths and the first digits (so, also the last) of the three palindromes p1,p2,p3 that we will use to represent n.

Type A:

δl - 2  ≠  0,1,2,  z1 = D(δ0  -  δl - 1  -  δl - 2 + 1)  ≠  0.

[formula]

δl - 2  ≠  0,1,2,  D(δ0  -  δl - 1  -  δl - 2 + 1) = 0.

[formula]

δl - 2  =  0,1,2,  δl - 1  ≠  1,  z1 = D(δ0  -  δl - 1 + 2)  ≠  0.

[formula]

δl - 2  =  0,1,2  δl - 1  ≠  1,  D(δ0  -  δl - 1 + 2) = 0.

[formula]

δl - 1 = 1,  δl - 2 = 0, δl - 3  ≤  3,  z1 = D(δ0  -  δl - 3)  ≠  0.

[formula]

[formula].

[formula]

Type B

δl - 1 = 1,  δl - 2  ≤  2,  δl - 3  ≥  4,  z1 = D(δ0  -  δl - 3)  ≠  0.

[formula]

δl - 1 = 1,  δl - 2  ≤  2,  δl - 3  ≥  4,  D(δ0  -  δl - 3) = 0.

[formula]

δl - 1 = 1,  δl - 2 = 1,2,  δl - 3 = 0,1,  δ0 = 0.

[formula]

δl - 1 = 1,  δl - 2 = 1,2,  δl - 3 = 2,3,  δ0 = 0.

[formula]

δl - 1 = 1,  δl - 2 = 1,2,  δl - 3 = 0,1,2,  z1  =  δ0  ≠  0.

[formula]

δl - 1 = 1,  δl - 2 = 1,2,  δl - 3 = 3,  z1 = D(δ0 - 3)  ≠  0.

[formula]

δl - 1 = 1,  δl - 2 = 1,2,  δl - 3 = 3,  δ0 = 3.

[formula]

Notice that all the digits appearing in the clasification are valid digits; i.e. 0  ≤  δ  ≤  g - 1. We observe also that when n if of type B, the digit of p1 below δl - 3, which will be denoted by x2, takes the values 0,1,2 or 3.

The algorithms

Once we have asssigned the type to n we have to check if n is a special number or not.

We say that n is a special number if the palindrome p1 corresponding to n according the classification in types above has an even number of digits, say l = 2m, and at least one of the digits δm - 1 or δm is equal to 0. Otherwise we say that n is a normal number.

We use five distinct algorithms. We use Algorithms I, II, II and IV for normal numbers and Algorithm V for special numbers.

To be applied to integers such that the associated palindromes p1,p2,p3 have 2m + 1, 2m, 2m - 1 digits respectively for some m  ≥  3. In other words, those of type A1, A2, A3 and A4 when l = 2m + 1 and those of type A5 and A6 when l = 2m + 2. The cases m  ≤  2 correspond to the small cases.

To be applied to integers such that the associated palindromes p1,p2,p3 have 2m, 2m - 1, 2m - 2 digits respectively for some m  ≥  3 and such that δm - 1  ≠  0 and δm  ≠  0. In other words, those of type A1, A2, A3 and A4 when l = 2m and δm - 1  ≠  0 and [formula] and those of type A5 and A6 when l = 2m + 1 and δm - 1  ≠  0 and δm  ≠  0. The cases m  ≤  2 correspond to the small cases.

To be applied to integers such that the associated palindromes p1,p2,p3 have 2m + 1,2m - 1,2m - 2 digits respectively for some m  ≥  3. In other words, those of type B with l = 2m + 1. The cases m  ≤  2 correspond to the small cases.

To be applied to integers such that the associated palindromes p1,p2,p3 have 2m,2m - 2,2m - 3 digits respectively for some m  ≥  4. In other words, those of type B with l = 2m and with δm  ≠  0 and δm - 1  ≠  0. The cases m  ≤  3 correspond to the small cases.

To be applied to special numbers that are not covered by the small cases.

Algorithm I

Asssume m  ≥  3. The initial configuration when we apply Algorithm I is one of the following configurations:

[formula]

[formula]

Algorithm I in either case is the following:

Step 1: We choose x1,y1,z1 according to the configurations described in the starting point. Define c1 = (x1 + y1 + z1) / g, which is the carry of the column 1.

Step 2: Define the digits

[formula]

Step i, 3  ≤  i  ≤  m: Define the digits

[formula]

Step m + 1: Define

[formula]

The diagram below represents the configuration after step i:

[formula]

A few words to explain what is behind the algorithm:

The digit yi is defined to adjust the digit δ2m - i from the left side once we know the digit zi - 1 and assuming a possible carry from the previous column (the - 1 in the definition of yi takes into account this possible carry). The zi is defined to adjust the digit δi - 1 in the right side once we know xi,yi and ci - 1, the carry from the previous column. Now we go again to the left side. If zi  ≥  δ2m - i - 1 we will get the possible carry we had assumed and then we define xi + 1 = 0. If zi  ≤  δ2m - i - 1 - 1 we do not get any carry and then we define xi + 1 = 1, which has the same effect that the carry we expected.

After the last step the configuration that we obtain is the following:

[formula]

We call temporary configuration the configuration we get after the last step. We have drawn a vertical line where both sides of the algorithm collide. It is not true in general that n is equal to the sum of the three palindromes we obtain in the temporary configuration.

If Δm is the digit we obtain in column m + 1 when we sum the three palindromes, we observe that

[formula]

If cm = 1 then Δm  =  δm and we obtain the correct digit in column m + 1 and, as consequence of Proposition [\ref=induction], we obtain the correct digit in all the columns. In this case n is equal to the sum of the three palindromes of the temporary configuration so the temporary configuration is also the final configuration.

If cm  ≠  1, then we need an extra adjustment.

The adjustment step

For [formula] we denote by Δi the digit we obtain in column i + 1 when we sum the three palindromes that we have obtained after the last step. Of course we want that Δi  =  δi for all i, 0  ≤  i  ≤  2m. Unfortunately, this is not always true but it is almost true. The following proposition shows that we obtain the correct digits on the left side (thanks to the zi's) and that we obtain the correct digit in a column of the right side if the digit we obtain in the previous column is also the correct digit.

Let g  ≥  5 and m  ≥  3. We have that Δi  =  δi for all 0  ≤  i  ≤  m - 1. Furhthermore, for any 0  ≤  i  ≤  m - 1, if Δm + i  =  δm + i, then Δm + i + 1  =  δm + i + 1.

The first statement of the proposition is clear because of the way we have defined the zi's. As for the second statement, we prove it separately for i = 0, for 1  ≤  i  ≤  m - 3, for i = m - 2 and for i = m - 1.

i = 0. We have

[formula]

Then we have to prove that xm + cm + 1 = 1.

If xm = 1 then zm - 1  ≤  δm - 1, so ym  =  δm - zm - 1 - 1. Since

[formula]

and we have assumed that Δm  =  δm, we conclude that [formula], so cm = 1 (because |cm - 1|  ≤  2 < g). Thus,

[formula]

and then xm + cm + 1 = 1.

If xm = 0, then zm - 1  ≥  δm, so ym = g + δm - zm - 1 - 1. The argument is similar to the one before except that now we get

[formula]

and again xm + cm + 1 = 1.

In any case, we have that xm + cm + 1 = 1, and then Δm + 1  =  δm + 1.

1  ≤  i  ≤  m - 3 (these cases are vacuous for m = 3):

[formula]

We have to prove that xm - i + cm + i + 1 = 1.

If xm - i = 1, then zm - i - 1  ≤  δm + i - 1, so ym - i  =  δm + i - zm - i - 1 - 1. Since

[formula]

and we have assumed that Δm + i  =  δm + i, we conclude that

[formula]

therefore xm - i + 1 + cm + i - 1 = 0 (because |xm - i + 1 + cm + i - 1|  ≤  2). Thus,

[formula]

and xm - i + cm + i + 1 = 1.

If xm - i = 0, then zm - i - 1  ≥  δm + i, so ym - i = g + δm + i - zm - i - 1 - 1. The argument is similar to one before except that now we get

[formula]

and again xm - i + cm + i + 1 = 1.

In any case, we have that xm - i + cm + i + 1 = 1 and then Δm + i + 1  =  δm + i + 1.

i = m - 2. We have

[formula]

We distinguish two cases:

If z1  ≤  δ2m - 2 - 1, then y2  =  δ2m - 2 - z1 - 1 and

[formula]

Since

[formula]

and we have assumed that Δ2m - 2  =  δ2m - 2, we get x3 - 1 + c2m - 2 = 0 (because |x3 - 1 + c2m - 2|  ≤  2 ). Thus,

[formula]

and we have Δ2m - 1  =  δ2m - 1.

If z1  ≥  δ2m - 2, then y2 = g + δ2m - 2 - z1 - 1 and

[formula]

We repeat the same argument as in case a) except that now

[formula]

and again Δ2m - 1  =  δ2m - 1.

i = m - 1. We can check in the classification in types that if Δ2m - 1  =  δ2m - 1, then Δ2m  =  δ2m. In other words, that we have c2m = 0 for the types A1 and A2 and we have c2m = 1 for the types A3, A4, A5 and A6.

Proposition [\ref=induction] shows that if Δm  =  δm then Δi  =  δi for all [formula] and then the three palindromes we have obtained do the job.

The problem appears when Δm  ≠  δm and this occurs when cm  ≠  1. When this happens, we need to make an adjustment to our temporary configuration.

Notice that for m  ≥  3 we have

[formula]

and that cm takes the value 0,1 or 2.

All the possible situations are considered in the cases below:

I.1 [formula]. In this case Δm  =  δm and there is nothing to change. The temporary configuration is simply the final configuration since in all columns the sums of the digits including the carries yield the digits of n.

I.2 [formula]. In this case we need to increment by one unit the digit we obtain in the column m + 1. We can do this by changing the value of xm + 1 = 0 to xm + 1 = 1.

[formula]

Notice that we have modified the central digit of the first palindrome, so the new first row is also a palindrome. Notice also that now we obtain the correct digit in column m + 1 and also in all remaining columns.

I.3 [formula]. In this case, we have that ym  ≠  0 (otherwise cm  ≠  2). We distinguish two cases:

[formula].

[formula]

[formula].

[formula]

Observe that in every adjustment step we have been successful in increasing or decreasing the digit that was obtained in the column m + 1 when [formula] without altering the digits from the previous column. Notice also that in every adjustement we always modify the central digits of the temporary palindromes such that the new ones are also palindromes. Once we have realized these adjustments, the digit we get in the column m + 1 is δm, the correct digit, and Proposition [\ref=induction] proves that all the digits are correct.

The three palindromes and an example

We end this subsection by illustrating the application of Algorithm I to an example. Let n be the positive integer giving the first 21 decimal digits of π:

[formula]

We see that n is of type A1, therefore the configuration after Step 1 is the following :

[formula]

Thus n is a normal integer and we can apply Algorithm I.

Since z1  ≥  δ2m - 2, Step 2 starts defining

[formula]

and the configuration after Step 2 is

[formula]

and after Step 3 is

[formula]

Continuing with the algorithm we get to the temporary configuration:

[formula]

Since cm = 0, we need to apply Adjustment I.2 and obtain the final configuration:

[formula]

The remaining cases

Algorithm II

The algorithm only differs in the subindices of the δi's (because now l = 2m is even) and in the adjustment step, which is slightly more complicated to describe because of the many cases to be considered. The cases m  ≤  2 correspond to the small cases. For m  ≥  3, we proceed in the following steps:

Step 1: We choose x1,y1,z1 according to the configurations described in Section [\ref=initial]. Define c1 = (x1 + y1 + z1) / g, which is the carry of the column 1.

Step 2: Define the digits

[formula]

Step i, 3  ≤  i  ≤  m - 1 (these steps are vacuos for m = 3): Define the digits

[formula]

Step m: Define the digits

[formula]

The temporary configuration is:

[formula]

or

[formula]

with δm - 1  ≠  0 and δm  ≠  0.

Let g  ≥  5 and m  ≥  3. We have that Δi  =  δi for all 0  ≤  i  ≤  m - 1. Furhthermore, for any 0  ≤  i  ≤  m - 2, if Δm + i  =  δm + i, then Δm + i + 1  =  δm + i + 1.

The proof is similar to the proof of Proposition [\ref=induction]. We only give the details for i = 0, which is the only case somewhat different.

Assume that Δm  =  δm. In other words, that (ym - 1 + zm - 2 + cm  -  δm) / g is an integer. We have

[formula]

If xm - 1 = 0, then zm - 2  ≥  δm and ym - 1 = g + δm - zm - 2 - 1. Thus,

[formula]

because cm + 1 is an integer and |cm - 1|  ≤  1 < g.

If xm - 1 = 1, then zm - 2  ≤  δm - 1 and ym - 1  =  δm - zm - 2 - 1. Thus,

[formula]

because cm + 1 is an integer and |cm - 1|  ≤  1 < g.

In any case, we have that xm - 1 + cm + 1 = 1, so [formula]

The above proposition implies that if Δm  =  δm, then Δi  =  δi for all [formula].

Adjustment step: Notice that [formula]. Thus, we make the adjustment according this observation.

II.1 [formula]. We do nothing and the temporary configuration becomes the final one.

II.2 [formula]. We distinguish the following cases:

[formula].

[formula]

[formula].

[formula].

[formula]

[formula].

[formula]

[formula]. In this case, we have that zm - 1  ≠  0. Otherwise we would have that δm - 1 = 0 (because cm - 1 = 0), which is not allowed.

[formula]

II.3 [formula]. In this case it is clear that zm - 1 = ym = g - 1 (otherwise cm  ≠  2). Note also that if ym - 1 = 0, then cm - 1  ≠  2 and then cm  ≠  2.

[formula]

Let us illustrate this algorithm with an example. We consider the positive integer representing the first 22 decimal digits of e:

[formula]

First let us note that since δ10  ≠  0 and δ11  ≠  0, then n is a normal integer. In addition n is of type A1. Therefore the initial configuration is:

[formula]

Applying the algorithm II we get to the temporary configuration:

[formula]

Observe that the digit in column 12 is not correct (we get a 3 instead of a 4 for the sum). This is because c11 = 0, therefore we have to apply the adjustment step. Since y11 = 0, y10  ≠  0 and z10  ≠  0, the adjustment step is that described in II.2.ii.a):

[formula]

Algorithm III

The cases m  ≤  2 correspond to the small cases. For m  ≥  3, we proceed in the following steps:

Step 1: We choose x1,y1,z1 according to the configurations described in Section [\ref=initial]. Define c1 = (1 + y1 + z1) / g, which is the carry of the column 1.

Step 2: Define the digits

[formula]

Step i, 3  ≤  i  ≤  m - 1: (these steps are vacuos for m = 3). Define the digits

[formula]

Step m: Define the digits

[formula]

The temporary configuration is:

[formula]

We omit the proof of the following proposition because it is similar to the Proposition [\ref=induction] of Algorithm I.

Let g  ≥  5 and m  ≥  3. We have that Δi  =  δi for all 0  ≤  i  ≤  m - 2. Furthermore, for any - 1  ≤  i  ≤  m - 2, if Δm + i  =  δm + i, then Δm + i + 1  =  δm + i + 1.

Again, the above proposition gives that if Δm  =  δm, then Δi  =  δi for [formula].

Adjustment step: Notice that [formula]. According this observation we distinghish the following cases:

III.1 [formula]. We do nothing and the temporary configuration becomes the final one.

III.2 [formula].

[formula]

III.3 [formula]. Notice that ym  ≠  0 (otherwise cm  ≠  2). This is clear for m  ≥  4 because xm - 1 takes the values 0 or 1. It also holds for m = 3 because x2 takes the values 0,1,2 or 3 for integers of type B when g  ≥  5 and then x2  ≤  g - 2.

[formula].

[formula]

[formula].

[formula]

[formula]. In this case xm - 1  ≠  0.

[formula]

[formula]. In this case xm - 1  ≠  0.

[formula]

Example: Let us illustrate this algorithm with an example. We consider the positive integer representing the first 21 decimal digits of ζ(3):

[formula]

First let us note that n is a normal integer because the number of digits is odd. In addition n is of type B3. Therefore the initial configuration is:

[formula]

Applying the algorithm III we get to the temporary configuration. Since c10 = 1 we do not need any adjustment step and the temporary configuration is also the final configuration.

[formula]

Algorithm IV

The cases m  ≤  3 correspond to the small cases. For m  ≥  4, we proceed in the following steps:

Step 1: We choose x1,y1,z1 according to the configurations described in Section [\ref=initial]. Define c1 = (1 + y1 + z1) / g, which is the carry of the column 1.

Step 2: Define the digits

[formula]

Step i, 3  ≤  i  ≤  m - 2: Define the digits

[formula]

Step i = m - 1: Define the digits

[formula]

The temporary configuration is:

[formula]

Let g  ≥  5 and m  ≥  4. We have that Δi  =  δi for all 0  ≤  i  ≤  m - 2. Furhthermore, for any - 1  ≤  i  ≤  m - 3, if Δm + i  =  δm + i, then Δm + i + 1  =  δm + i + 1.

The first statement of the proposition is clear. For the second one, we consider firs the case i =  - 1. Assuming that Δm - 1  =  δm - 1 we have to prove that Δm  =  δm. Indeed

[formula]

If xm - 1 = 1 then zm - 2  ≤  δm - 1 - 1 and ym - 1  =  δm - 1 - zm - 2 - 1. On the other hand, since [formula] and Δm - 1  =  δm - 1, we have that xm - 1 + cm - 1 = 1. Thus, cm - 1 = 0. Finally

[formula]

If xm - 1 = 0, then zm - 2  ≥  δm - 1 and ym - 1 = g + δm - 1 - zm - 2 - 1. On the other hand, since [formula] and Δm - 1  =  δm - 1, we have that xm - 1 + cm - 1 = 1. Thus cm - 1 = 1. Finally

[formula]

In any case we have that xm - 1 + cm = 1 and then we conclude that Δm  =  δm.

We omit the proof of the proposition for the other cases because they are similar to the case i =  - 1.

The above proposition gives that if Δm - 1  =  δm - 1 then Δi  =  δi for all [formula]

The adjustment step of this algorithm is more complicated than the previous ones.

Adjustment step: Assume that m  ≥  4. Notice that in this algorithm we have that

[formula]

IV.1 [formula]. We do nothing and the temporary configuration becomes the final one.

IV.2 [formula]. Then xm - 1 = cm - 1 = 0. If ym - 1 = 0, then [formula], thus zm - 1  ≤  δm - 2 - 1, so xm - 1 = 1 unless δm - 1 = 0, which is not allowed. Thus, ym - 1  ≠  0.

[formula]

[formula]

[formula]

[formula].

[formula]

[formula].

[formula]

[formula].

[formula]

[formula].

[formula]

[formula] Notice that [formula]. Since ym - 2 = 0 and δm  ≠  0, we have that zm - 3  ≤  δm - 1 and then xm - 2  ≠  0 (even when m = 4).

[formula]. It follows that ym - 1  ≠  0. Otherwise we would have δm - 1  =  0, which is not allowed.

[formula]

[formula].

[formula]

[formula].

[formula]

IV.3 [formula]. Since cm - 1 = 0, it follows that xm - 2 = zm - 1 = 0. Notice that if ym - 2 = 0, then δm = 0 (otherwise zm - 3  =  δm - 1 and then xm - 2  ≠  0), which is not allowed.

[formula].

[formula]

[formula].

[formula]

IV.4 [formula]. If ym - 1 = 0, then zm - 2 = g - 1 and then δm - 1  ≠  0. So, ym - 1  ≠  0.

[formula].

[formula]

[formula]. Notice that ym - 1  ≠  1. Otherwise cm - 1  ≠  2 (even when m = 4)

[formula].

[formula]

[formula]. As in case IV.2.iii), we have that xm - 2  ≠  0.

[formula]

IV.5 [formula]. In particular, it follows that zm - 2  ≠  g - 1 (otherwise we would have xm - 1 = 0).

[formula].

[formula]

[formula].

[formula]

[formula].

[formula].

[formula]

[formula].

[formula]

[formula].

[formula]

[formula].

[formula]

[formula].

[formula]

[formula].

[formula].

[formula]

[formula].

[formula]

[formula].

[formula]

[formula]. If xm - 2 = 0, then δm = 0, which is not allowed. Thus, xm - 2  ≠  0 (even when m = 4).

[formula]. As in case IV.2.iii), we have that xm - 2  ≠  0.

[formula]

[formula].

[formula]

[formula].

[formula]

IV.6 [formula]. Then xm - 1 = 1 and cm - 1 = 2. We always have that xm - 2  ≤  3 (even when m = 4). It follows that ym - 1  ≥  1 and zm - 1  =  g - 1 (otherwise zm - 1 + ym - 1 + xm - 2 + cm - 2  ≤  g - 1 + 4 + 2  ≤  2g - 1 and then cm - 1  ≠  2).

[formula]

Algorithm V

We recall that in this case the associated palindrome p1 of n has 2m digits and that δm - 1 = 0 or δm = 0. First we consider the integer

[formula]

If δ'm - 1  ≠  0 and δm'  ≠  0, we keep n'. Otherwise we consider the integer n' = n - 2s. It is easy to check that one of n' = n - s or n' = n - 2s satisfies that δ'm - 1  ≠  0 and δm'  ≠  0.

We distinguish two cases:

The associated palindrome p1' of n' has also 2m digits (this is the typical situation).

We apply Algorithms II or IV according the type of n'. Then n' = p1' + p2' + p3' and so

[formula]

Notice that p1' + s is also a palindrome because we are adding 1 or 2 to the two central digits of p1'. Note that if we have applied Algorithm II, then the central digits are xm' and xm', which are 0 or 1 for m  ≥  3. Note also that if we have applied Algorithm IV, then the central digits are xm - 1' and xm - 1', which are 0 or 1 for m  ≥  4. Hence, in all the cases the value of the two central digits is at most 3, which are legal digits for g  ≥  5 (indeed, even for g  ≥  4).

The associated palindrome p1' of n' has 2m - 1 digits.

This is only possible if n is of the form [formula] and [formula]. In this special situation, we consider n' as of type B1 or B2 and apply the Algorithm IV to n' (instead of Algorithm I). Notice that the configuration of the starting point in B1 and B2 is also valid when δl - 3 = 3. Then the palindrome p1' we get in this way has 2m digits and, as above, we have

[formula]

Example: We finish with one example which shows how to apply Algorithms IV and V. Let n be the positive integer giving the first 20 digits of [formula]:

[formula]

The number n is a special number because it has an even number of digits, 20, m = 10 and δm = 0. Thus, we apply Algorithm V and consider n' = n - s, where s = 1010 + 109. Note that n' = 12267420096203532444, which is a normal number because δm'  ≠  0 and δm - 1'  ≠  0.

We observe that n' is of type B.3, so we apply Algorithm IV to n'. The initial configuration is

[formula]

The temporary configuration is

[formula]

Note that we need an adjustment becuase the digit in column 10 is not correct. The reason is that x9 + c9 = 2. Looking at the central digits, we must follow the Adjustment Step IV.5.iii.a):

[formula]

Finally, we add s = 1010 + 109 to n' to obtain a representation of n as a sum of three palindromes.

[formula]

Small integers

All positive integers with less than seven digits are the sum of three palindromes in base g  ≥  5.

The proof is a consequence of the Lemmas [\ref=two], [\ref=three], [\ref=four], [\ref=five] and [\ref=six].

All positive integers with two digits are the sum of two palindromes in base g  ≥  5, except those of the form n = (δ + 1)δ,  1  ≤  δ  ≤  g - 2, which are sum of three palindromes.

Let n = δ1δ0.

[formula]

[formula] [formula] [formula]

All positive integers with three digits are the sum of two palindromes in base g  ≥  5, except n = 201 which is sum of three palindromes.

Let n = δ2δ1δ0.

[formula]

[formula] [formula] [formula]

If δ2  ≥  δ0 + 1, δ1  =  0, and D(δ2  -  δ0 - 1) = 0, we have that [formula] and we distinguish the following cases:

[formula]

[formula] [formula] [formula]

All positive integers with four digits are the sum of three palindromes in base g  ≥  5.

Let n = δ3δ2δ1δ0.

n  ≥  δ300δ3, and n is not of the form n = δ300δ3 + m with m = 201, or m = (δ + 1)δ with δ  ≥  1. Then n - δ300δ3 is the sum of two palindromes p1,p2 and

[formula]

n = δ300δ3 + 201.

[formula]

[formula] [formula] [formula]

n = δ300δ3 + (δ + 1)δ, 1  ≤  δ  ≤  g - 2:

δ3  +  δ  =  δ0,

[formula]

[formula] [formula]

δ3  +  δ  =  g + δ0 with 0  ≤  δ0  ≤  g - 1: [formula]

n  ≤  δ300(δ3 - 1) and δ3  ≠  1. Then: [formula]

n  ≤  δ300(δ3 - 1) and δ3  =  1. Then: [formula]

All positive integers with five digits are the sum of three palindromes in base g  ≥  5.

If δ4  ≠  1, then n is of type A and we apply Algorithm I, which works for m = 2.

Thus, we assume that δ4 = 1. Let n = 1δ3δ2δ1δ0.

n  ≥  1δ30δ31 and n is not of the form n = 1δ30δ31 + m with m = 201, or m = (δ + 1)δ with δ  ≥  1. By Propositions [\ref=two] and [\ref=three], n - 1δ30δ31 is the sum of two palindromes p1,p2 and then

[formula]

n = 1δ30δ31 + 201: [formula]

n = 1δ30δ31 + (δ + 1)δ,  1  ≤  δ  ≤  g - 2, δ3  ≠  0:

δ + 1 + δ3  ≤  g - 1:

[formula]

δ3 + 1 + δ  =  g + δ1 with 0  ≤  δ1  ≤  g - 1:

[formula]

n = 1δ30δ31 + (δ + 1)δ,  1  ≤  δ  ≤  g - 2, δ3  =  0:

[formula]

n  ≤  1δ30δ30 and δ3 = 0. Then: [formula]

n  ≤  1δ30δ30 and δ3  ≠  0 with n = 1(δ3 - 1)(g - 1)(δ3 - 1)1 + m with m  ≠  201 and m  ≠  (δ + 1)δ, 1  ≤  δ  ≤  g - 2. Propositions [\ref=two] and [\ref=three] imply that m is sum of two palindromes p1,p2 and then

[formula]

n = 1(δ3 - 1)(g - 1)(δ3 - 1)1 + 201, δ3  ≠  0:

[formula]

n = 1(δ3 - 1)(g - 1)(δ3 - 1)1 + (δ + 1)δ, δ3  ≠  0, δ3  +  δ  ≤  g - 1:

[formula]

n = 1(δ3 - 1)(g - 1)(δ3 - 1)1 + (δ + 1)δ, δ3  ≠  0, δ3  +  δ = g + δ1, 0  ≤  δ1  ≤  g - 1:

[formula]

All positive integers with six digits are the sum of three palindromes in base g  ≥  5.

First, we consider the case δ5  ≠  1.

We apply Algorithm II for m = 3 with some exceptions. Note that Algorithm II was applied to normal numbers. It was only used in the Adjustment Step II.2.ii.c), where we assumed that δ2  ≠  0 and then that z2  ≠  0 in that step. Thus, to apply Algorithm II when n is not a normal number, we have to account also for the possibility z2 = 0 in the Step II.2.ii.c). This is the temporary configuration in Step II.2.ii.c) (c2 = 0, y3 = y2 = 0) with z2 = 0.

[formula]

If x2  ≠  0, then the adjustment step is the following:

[formula]

If x2 = 0, we distinghish several cases:

x1 = 1. It follows that δ5 = 1 (which is not allowed), unless y1 = z1  =  g - 1. The adjustment step is the following:

[formula]

x1  ≠  1, y1  ≠  g - 1. The adjustment step is the following:

[formula]

x1  ≠  1, z1  ≠  g - 1. The adjustment step is the following:

[formula]

x1  ≠  1,g - 1, z1 = x1  =  g - 1. The adjustment step is the following:

[formula]

x1 = y1 = z1  =  g - 1. Note that in this case we have that

[formula]

but we can check easily that this number has 7 digits.

Secondly, we consider the case δ5 = 1.

z1 = D(δ0  -  δ4 + 1)  ≠  0 and D(δ0  -  δ4 + 2)  ≠  0.

[formula]

We choose x1,y1 such that 1  ≤  x1,y1  ≤  g - 1 and x1 + y1 = g + δ4 - 1. This is possible because 2  ≤  g + δ4 - 1  ≤  2g - 2.

We choose x2,y2 such that 0  ≤  x2,y2  ≤  g - 1 and x2 + y2 = g + δ3 - 1. This is possible because 0  ≤  g + δ4 - 1  ≤  2g - 2. We also define z2 = D(δ1 - x2 - y2 - c1).

We choose x3,y3 such that 0  ≤  x3,y3  ≤  g - 1 and x3 + y3 = g + δ2 - c2 - z1. This is possible because, as z1  ≠  0, we have that g + δ2 - c2 - z1  ≤  2g - 2, and since D(δ0  -  δ4 + 2)  ≠  0, we have z1  ≠  g - 1 and therefore

[formula]

D(δ0  -  δ4 + 2) = 0, δ2  ≠  0.

[formula]

We choose x1,y1 such that 1  ≤  x1,y1  ≤  g - 1 y x1 + y1 = g + δ4 - 1.

We choose x2,y2 such that 0  ≤  x2,y2  ≤  g - 1 y x2 + y2 = g + δ3 - 1.

We choose x3,y3 such that 0  ≤  x3,y3  ≤  g - 1 y x3 + y3 = g + δ2 - c2 - z1.

All such choices are possible by the same argument as in i) except that now we have to justify in a different way that g + δ2 - c2 - z1  ≥  0. But this is clear because g + δ2 - c2 - z1  ≥  g + 1 - 2 - (g - 1) = 0.

D(δ0  -  δ4 + 2) = 0, δ2 = 0.

δ4 = 0. Then δ0 = g - 2.

[formula]

We choose x2,y2 such that 0  ≤  x2,y2  ≤  g - 1 and x2 + y2  =  δ3.

We choose x3,y3 such that 0  ≤  x3,y3  ≤  g - 1 and x3 + y3 = g - c2 - z2.

Observe that c2 = (x2 + y2 + z2 + c1  -  δ1) / g  ≤  (g - 1 + g - 1 + 1) / g < 2. Thus, c2  ≠  2 and g - c2 - z2  ≥  g - 1 - (g - 1)  ≥  0, therefore we can choose such x3 and y3.

δ4 = 1. Then δ0 = g - 1.

[formula]

The choices for the xi's are identical to the ones from case a).

δ4 = 2. Then δ0 = 0.

[formula]

We choose x2,y2 such that 0  ≤  x2,y2  ≤  g - 1 y x2 + y2  =  δ3.

We choose x3,y3 such that 0  ≤  x3,y3  ≤  g - 1 y x3 + y3 = g - c2 - z2.

If c2  ≠  2, then we can make such a choice for x3 and y3.

However, if c2 = 2, then x2 + y2 = z2 = g - 1 and δ1 = 0 and δ3 = g - 1. In this special case, we have:

[formula]

D(δ0  -  δ4 + 1) = 0, δ3  ≠  0:

[formula]

We choose x1,y1 such that 1  ≤  x1,y1  ≤  g - 1 and x1 + y1 = g + δ4. This is possible because δ4  ≤  2  ≤  g - 2. On the other hand, z1 = g - 1.

We choose x2,y2 such that 0  ≤  x2,y2  ≤  g - 1 and x2 + y2  =  δ3 - 1.

We choose x3,y3 such that 0  ≤  x3,y3  ≤  g - 1 and

[formula]

This is possible because c2  ≤  1. Indeed,

[formula]

D(δ0  -  δ4 + 1) = 0, δ3 = 0.

δ4 = 0. Then δ0 = g - 1.

If δ2  ≠  0, then n - 100001 = δ2δ1(g - 2) is a sum of two palindromes.

If δ2 = 0 and δ1  ≠  0,g - 1, then n - 100001 = (δ1 - 1)(g - 1) is also a sum of two palindromes.

If δ2 = 0 and δ1 = 0, then

[formula]

If δ2 = 0 and δ1 = g - 1, then

[formula]

δ4 = 1. Then δ0 = 0.

If δ2  ≥  2 or if δ2 = 1 and δ1  ≠  0,1 then n - 110011 has three digits, its last digit is g - 1, therefore it can be written as a sum of two palindromes.

If δ2 = 1 and δ1 = 0, then

[formula]

If δ2 = 1 and δ1 = 1, then

[formula]

If δ2 = 0 and δ1  ≥  2, then

[formula]

If δ2 = 0 and δ1 = 1, then

[formula]

If δ2 = 0 and δ1 = 0 then

[formula]

δ4 = 2. Then δ0 = 1.

If δ2  ≥  2 or if δ2 = 1 and δ1  ≠  0,1, then n - 120021 has three digits, its last digit is g - 1, therefore can be written as a sum of two palindromes.

If δ2 = 1 and δ1 = 0, then

[formula]

If δ2 = 1 and δ1 = 1, then

[formula]

If δ2 = 0 and δ1  ≥  3, then

[formula]

If δ2 = 0 and δ1 = 2, then

[formula]

If δ2 = 0 and δ1 = 1, then

[formula]

If δ2 = 0 and δ1 = 0, then

[formula]

The proofs of Theorems [\ref=pp] and [\ref=ppu]

Proof of Theorem [\ref=pp]

To get the lower bound we argue in the following way. Let Pl be the set of palindromes with l base g digits. Its cardinality is bounded by g(l + 1) / 2. Let X be large and l be that positive integer such that 2gl  ≤  X < 2gl + 1. It is clear that for all r  ≥  1, |Pl + Pl - r| is a lower bound for the number of positive integers less than or equal to X which are a sum of two base g palindromes. We use the relation

[formula]

Consider the representations of n of the form n = x + y with x∈Pl and y∈Pl - r. Assume that l = 2mr + t, with 0  ≤  t  ≤  2r - 1.

If

[formula]

are the base g representations of x and y, then we group the digits in blocks of length r from the left to the right and we get left over with a middle block of length t:

[formula]

If [formula], we define [formula]. With this notation, x and y are represented as Xi,Yi,f(Xi), f(Yi), Δ3 of length r, while Δ1,Δ2 have lengh t:

[formula]

When we sum x and y, digit by digit, in every column we could get a carry or not. Let ti for [formula] be the carries in each column and let [formula] be the vector of carries. We denote by [formula] the number of representations of n under the form n = x + y with x∈Pl, ~ y∈Pl - r with a carries vector [formula]. Clearly,

[formula]

As in the case of x and y, we write n with the same length of the string of digits as x.

[formula]

Let us see that Xi,Yi,Δ1,Δ2,Δ3 are all determined by δi and by the vector [formula].

In fact, X1 is determined by δ2m are t2m. We then put f(X1), which in turn determines Y1. If the carry in the first column does not coincide with t1, then [formula]. If it does, then we put f(Y1) in its appropriate position. We then determine X2 using δ2m - 1 and t2m - 1. Again if the carry in the second column does not correspond with t2, then [formula]; otherwise, we keep on determining Xi,Yi and Δ3. If one of these determinations is not compatible with the corresponding ti's then [formula]. In the last step, we have to determine who is Δ1. Since Δ1 is a palindrome itself and has length t, there are at most gr possibilities for it. Once we made up our mind about Δ1, the value of Δ2 is determined. So, [formula] and therefore r(n)  ≤  2mgr.

Hence,

[formula]

Taking [formula] and using the fact that l  ~   log X /  log g, we get

[formula]

Proof of Theorem [\ref=ppu]

For g  ≥  3, it is not hard to see that then the number

[formula]

is not a sum of two base g palindromes. Indeed, assume that the length of the above n is l  ≥  4 and that [formula] are base g palindromes whose sum is the above n, where r, ~ s are nonnegative integers. Since x0 + y0  ≤  2g - 2 and the last digit of n is g - 1, there is no carry in the last position when summing x and y in base g, so x0 + y0 = g - 1 with 1  ≤  x0,y0  ≤  g - 2. If both r > 0 and s > 0 (so, the lengths of both x and y are smaller than l), then n = x + y which has length l in base g should start with 1, which is not the case. If r = 0 but s > 0, then x0 = g - 2 and y0 = 1. Since yl - 2 = 1 or 0 according to whether s = 1 or s  ≥  2, respectively, and since there is a carry in the position l - 2 when adding x with y, we conclude that xl - 2 = g - 2 or g - 1. But then g + 1  ≥  xl - 2 + yl - 2 + 1  ≥  g + (g - 1) = 2g - 1, where the last inequality follows from the fact that the digit in the position l - 2 of n is g - 1, and the above string of inequalities is impossible. Hence, r = s = 0. Now looking at x1 and y1, we get that x1 + y1 = 0 or g. Looking now at the left, we conclude that xl - 2 + yl - 2 = x1 + y1 = 0 or g, so in the position l - 2 of the digits of n we should have either the digit 0 or 1 according to whether there is no carry coming from the sum of digits of x and y from the position l - 3, or of there is one such carry, respectively, and both these numbers are smaller than the corresponding digit g - 1 of n, which is the final contradiction.