0.0in

Higher Order Hybrid Monte Carlo at Finite Temperature

Introduction

In lattice QCD the hybrid Monte Carlo (HMC) algorithm [\cite=HMCA] is widely used for simulations of even-flavor of quarks. These simulations are usually difficult tasks, especially at small quark masses where the computational cost of the matrix solver which is the most time consuming part of the HMC algorithm grows. In order to obtain reliable results within limited computer resources it is important to find an efficient way to implement the HMC algorithm so that the total computational cost of the algorithm is minimized [\cite=Recent].

The basic idea of the HMC is a combination of 1) molecular dynamics and 2) Metropolis test. Usually the second order leapfrog integrator is used at the molecular dynamics (MD) step. The integrator causes O(Δt3) integration errors, where Δt denotes the step-size. Due to the integration errors the Hamiltonian is not conserved. The errors introduced by this integrator have to be removed by the Metropolis test, i.e. accept the new configuration with a probability ~   min (1, exp ( - ΔH)) where ΔH = Hnew - Hold is an energy difference between the starting Hamiltonian Hold and the new Hamiltonian Hnew at the end of the trajectory.

The acceptance at the Metropolis step depends on the magnitude of the energy difference induced by the integration errors. If a higher order integrator is used at the MD step, the integration errors can be reduced. Therefore one may easily imagine that the performance of the HMC increases with the higher order integrator. However this is not always true since the higher order integrator has more arithmetic operations than the lower one and this might decrease the performance. The total performance should be measured by taking account of two effects: acceptance and the number of arithmetic operations. In Ref.[\cite=Takaishi] the performance of the higher order integrator at zero temperature (β = 0) was studied systematically and it turned out that for the simulation parameters used for the current large-scale simulations with the Wilson fermion action the 2nd order integrator is the best one. The main reason why the higher order integrators are not so effective is that the energy difference caused by the errors of the higher order integrator increases more rapidly than that of the lower one as the quark mass decreases. In Ref.[\cite=Accept] it is shown that at finite temperature the quark mass dependence of the energy difference is small. If so, the conclusion of Ref.[\cite=Takaishi] might change at finite temperature. In this letter we test higher order integrators at finite temperature and demonstrate that they can actually perform better than the lower order.

Higher order integrator

In this section we define higher order integrators studied here. Our definition is parallel to that of Ref.[\cite=Takaishi]. Let H be a Hamiltonian given by

[formula]

where q = (q1,q2,...) and p = (p1,p2,...) are coordinate variables and conjugate momenta respectively. S(q) is a potential term of the system considered. For the lattice QCD, q correspond to link variables and S(q) consists of gauge and fermion actions.

In the MD step we solve Hamilton's equations of motion,

[formula]

In general these equations are not solvable analytically. Introducing a step-size Δt, the discretized version of the equations are solved. In the conventional HMC simulations the 2nd order leapfrog scheme, which causes O(Δt3) step-size error, is used to solve the equations. This scheme is written as

[formula]

Eq.([\ref=2ND]) forms an elementary MD step. This elementary MD step is performed repeatedly N times. The trajectory length τ is given by τ = N  ×  Δt.

Any integrator which satisfies two conditions: 1)time reversible and 2)area preserving can be used for the MD step of the HMC. These conditions are needed to satisfy the detailed balance. When we use the Lie algebraic formalism [\cite=SW] [\cite=HOHMC] [\cite=Yoshida] [\cite=Suzuki] we can easily construct higher order integrators which satisfy the above conditions. From the Lie algebraic formalism we find that higher order integrators can be constructed by combining lower order integrators. Let G2nd(Δt) be an elementary MD step of the 2nd order integrator with a step-size Δt. The 4th order integrator G4th(Δt) is constructed from a product of three 2nd order integrators as [\cite=SW] [\cite=HOHMC] [\cite=Yoshida] [\cite=Suzuki] [\cite=4th]

[formula]

where the coefficients ai are given by

[formula]

[formula]

Eq.([\ref=4TH]) means that there are three elementary MD steps: (i) first we integrate the equations by eq.([\ref=2ND]) with a step-size of a1Δt, (ii) then proceed the 2nd order integration with a step-size of a2Δt, (iii) finally integrate the equations with a step-size of a1Δt. After performing these three elementary MD steps sequentially we obtain the 4th order integrator with the step-size Δt. This construction scheme can be generalized to the higher even-order integrators. The (2k + 2)-th order integrator is given recursively by

[formula]

where the coefficient bi are

[formula]

[formula]

Compared with the 2nd order integrator, the computational cost of the n-th order one constructed from eq.([\ref=rec]) grows as 3n / 2 - 1. For instance the 6th order integrator has 9 times more arithmetic operations than those of the 2nd order one. Yoshida [\cite=Yoshida] found three parameter sets of 6th order integrators with less arithmetic operations (Table.[\ref=Table1]). Yoshida's 6th order integrators consist of seven G2nd's as

[formula]

In Ref.[\cite=Takaishi] these 6th order integrators were examined and one of three parameter sets, denoted by Y1, was found to give smaller integration errors than those of others. In this study the parameter set Y1 ( see Table.[\ref=Table1] ) is used for the 6th order integrator.

Efficiency of the HMC algorithm

In order to compare among various integrators one needs a criterion which ranks integrators. Following Ref.[\cite=Takaishi] we utilize the efficiency function Eff constructed from a product of acceptance Pacc and step-size Δt:

[formula]

This function has one maximum at a certain step-size which we denote Δtopt. Using the energy difference ΔH the acceptance is expressed by [\cite=Accept]

[formula]

where erfc is the complementary error function. In stead of using eq.([\ref=acc]), when 〈ΔH〉 is small, we may use

[formula]

Although mathematically speaking eq.([\ref=Papprox]) is valid only for 〈ΔH2〉1 / 2  ≪  1, the numerical study [\cite=Takaishi] shows that eq.([\ref=Papprox]) approximates the acceptance quit well for 〈ΔH2〉1 / 2  ≤  3 which corresponds to 〈Pacc〉  ≥  20%. This is enough for our purpose since typically the acceptance of the HMC is taken to be 〈Pacc〉  ≥  50%.

In the lowest order of Δt, 〈ΔH2〉1 / 2 of the n-th order integrator is expressed as [\cite=Takaishi] [\cite=Accept]

[formula]

where V is volume of the system and Cn is a Hamiltonian dependent coefficient.

Substituting eq.([\ref=dH2]) into eq.([\ref=Papprox]) one obtains

[formula]

where [formula]. If one uses eq.([\ref=Accaprox]) for eq.([\ref=efficiency]) one can easily obtain the optimal step-size which gives the maximum efficiency:

[formula]

Furthermore substituting Δtopt to eq.([\ref=Accaprox]) one obtains the optimal acceptance as [\cite=Takaishi]

[formula]

Note that the above result does not depend on the specific Hamiltonian and can be applied for any model.

Using eq.([\ref=DTopt]) and ([\ref=PAopt]) we obtain the optimal efficiency of the n-th order integrator:

[formula]

We use eq.([\ref=Eopt]) to compare among integrators. Eq.([\ref=Eopt]) is easy to handle because eq.([\ref=Eopt]) has one unknown parameter [formula] and the value of [formula] can be estimated easily from a single simulation on a rather small lattice.

Now let us compare n-th and m-th order integrators (n > m). If one obtains a gain G for the n-th order integrator over the m-th order one, the following condition must be satisfied:

[formula]

where knm is a relative cost factor needed to implement the n-th order integrator against the m-th one and G is defined so that both n-th and m-th order integrators are equally effective with G = 1. In our case, k42 = 3 and k64 = 7 / 3. Substituting eq.([\ref=Eopt]) to eq.([\ref=comp]) and rewriting the equation one obtains the lattice volume needed to have the gain G:

[formula]

Our formulas are based on the assumption that 〈ΔH2〉1 / 2 satisfies eq.([\ref=dH2]). The validity of eq.([\ref=dH2]) depends on the action we take and simulation parameters. In general it is expected that the contribution of the higher order terms to eq.([\ref=dH2]) becomes small as the lattice size increases. Let us rewrite eq.([\ref=dH2]) as

[formula]

where Cn + 1V1 / 2Δtn + 1 stands for the first relevant higher order term. We measure the contribution of the higher order term by the ratio:

[formula]

In order to keep the constant acceptance, Δt must be taken to be small as the lattice size increases. Thus eq.([\ref=cratio]), ie. the contribution of the higher order term, becomes small for larger lattices.

Fig.1 shows a typical example of Cn on a [formula] lattice as a function of Δt. 〈ΔH2〉1 / 2 are well expressed by the functions proportional to Δtn except for large Δt. We are only interested in the acceptance region indicated by eq.([\ref=PAopt2]): Pacc  ≥  60% which corresponds to 〈ΔH2〉1 / 2  ≤  1. It seems that for 〈ΔH2〉1 / 2  ≤  1 the effect of the higher order terms is small.

Simulation results

We use the plaquette gauge action and standard Wilson fermion action with two flavors of degenerate quarks (nf = 2). We first determine the coefficients Cn at zero and finite temperature. This can be done by measuring 〈ΔH2〉1 / 2 at a small step-size and substituting the results into eq.([\ref=dH2]). The trajectory length τ is set to 1. We choose β = 5.75 and make simulations on both 124 and 123  ×  4 lattices. The critical kappa κc of nf = 2 at this β is around 0.157. We use several κ's in a range of 0.1  ≤  κ  ≤  0.155. In this range we maintain the confinement phase on the 124 lattice and the deconfinement phase on the 123  ×  4 lattice. In this study we refer to the results on the 124(123  ×  4) lattice as those at zero(finite) temperature.

Figs.2-4 show Cn as a function of mqa. Here mqa is defined by [formula]. At large quark masses where the fermionic effects are negligible, values of Cn at zero and finite temperature coincide each other. This may indicate that the contribution to Cn from the gauge sector is almost same at zero and finite temperature. At small quark masses Cn at zero temperature increases more rapidly than those at finite temperature as mqa decreases. The quark mass dependence of Cn at finite temperature, compared to that at zero temperature, is small for all the integrators studied here. This behavior is consistent with the result of Ref.[\cite=Accept]. Substituting values of Cn at finite temperature into eq.([\ref=comp3]) with G = 1, we calculate the lattice size Le ( here V = L3e  ×  Nt ). This lattice size Le is the one with which the higher order integrator and the lower order one perform equally. For a lattice size L > Le the higher order integrator is more effective than the lower one. Fig.5 shows Le from comparison between the 2nd and 4th order integrators (2nd vs. 4th) and between the 4th and 6th order ones (4th vs. 6th). For the case of 4th vs. 6th, Le increases as mqa decreases, which we do not appreciate. On the other hand for the 2nd vs. 4th, Le remains less than 20 even at small mqa. This result is contrast to that obtained at zero temperature where Le increases as mqa decreases [\cite=Takaishi]. The above result encourages us to use the 4th order integrator at finite temperature.

The results in Fig.5, however, just show the lattice on which the both integrators are equally effective. To use the higher order integrator in simulations one must obtain some gain over the lower order one. In Fig.6, using eq.([\ref=comp3]), we show the expected gain ( the region between the solid lines ) at κ  =  0.1525(mqa  ≈  0.094) as a function of lattice size L. To have G = 2 gain ( which means 2 times faster ) a lattice size L  ≈  100 is required. This huge lattice size is still not accessible in the current large-scale simulations. Probably the maximum lattice size accessible at the moment is [formula]. Therefore we can not expect a large gain from the 4th order integrator even if it is used now. If we use a lattice with [formula], [formula] can be achieved. Thus at the level of the current large-scale simulations, we expect to obtain G  ≤  1.5.

We also make simulations at κ  =  0.1525 to confirm that we can actually obtain some gain for the 4th order integrator over the 2nd one. At κ  =  0.1525, Le is estimated to be 17.5(9). We choose 183  ×  4 and 283  ×  4 lattices. On the 183  ×  4 lattice we expect [formula] and on the 283  ×  4 lattice, G > 1. The step-size is adjusted so that the acceptance gives a similar value with eq.([\ref=PAopt2]). The gain G is calculated by

[formula]

where a factor of 3 in the denominator comes from the relative cost factor k42 = 3. Table 2 shows the simulation results. Using these results, we obtain G = 1.08(3) on the 183  ×  4 lattice and G = 1.35(8) on the 283  ×  4 lattice (see also Fig.6). As expected the gain increases with L. The result on the 283  ×  4 lattice is an example showing that the 4th order integrator is more effective than the 2nd order one.

Conclusions

We have studied higher order integrators for the HMC algorithm with the Wilson fermion action at finite temperature. Contrast to the zero temperature case, the 4th order integrator at finite temperature can be more effective than the 2nd order one. This was demonstrated by the simulations at β = 5.75 on L3  ×  4 lattices. The gain is dependent of the lattice size. It was shown that on the 283  ×  4 lattice at β = 5.75 and κ = 0.1525 the 4th order integrator is about 35% faster than the 2nd order one.

When large-scale simulations at finite temperature are planned, it is recommended to check which integrator is effective for the lattice considered. This check can be done easily. First we measure C2 and C4. This first step does not take much computational time since they can be measured on a small lattice. Then substituting values of C2 and C4 to eq.([\ref=comp3]), we obtain a relation between G and L. If we obtain G > 1 on the lattice planned for the simulations, we should consider to use the 4th order integrator.

Eq.([\ref=comp3]) is obtained by using the approximation at small Δt. There might exist the systematic errors caused by the approximation. Although for the present study we considered the errors to be small, for other actions and simulation parameters they might contribute largely. We have to keep in mind that there might exist such contributions depending on the simulation details.

Acknowledgments

The simulations were done on the NEC SX-5 at INSAM Hiroshima University and at Yukawa Institute. The author would like to thank Atsushi Nakamura for useful discussion and comments. This work was supported by the Grant in Aid for Scientific Research by the Ministry of Education, Culture, Sports, Science and Technology(No.13740164).