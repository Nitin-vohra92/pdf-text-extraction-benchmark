Fractal behind smart shopping

Introduction

An English proverb says that "a heavy purse makes a light heart", but we do not welcome a literal heavy purse full of coins. By repeated payments in everyday shopping, the number of coins in the shopper's purse constantly increases or decreases, and sometimes the purse gets full of coins. A purse with a lot of coins is uneconomic because it becomes heavy and bulky, and even worse, the shopper has a lot of trouble in picking out coins from the purse. Electronic money[\cite=Furche] is hoped to eliminate such trouble, but it has not become a substitute for real cash so far because of technical, economical, and legal issues.

Some mathematical problems treat of coins. A famous one is known as the change-making problem[\cite=Chang]: how can a given amount of money be made with the least number of coins of given denominations? This problem is a variation of the knapsack problem[\cite=Martello], and it is known to be NP-hard[\cite=Hromkovic]. The greedy algorithm[\cite=Magazine] gives a solution in some limited cases, and other heuristic algorithms have been also proposed[\cite=Wright] [\cite=Pearson] [\cite=Bocker]. The optimality or efficiency of a monetary system itself has been also evaluated[\cite=Telser] [\cite=Tschoegl] [\cite=Shallit], and the Frobenius coin problem[\cite=Nijenhuis] [\cite=Kannan] [\cite=Beck] asks what is the largest amount of money that cannot be obtained using only coins of specified denominations. We note that such problems are for retailers (how to make change) or for governments (what currency system is preferable); consumers are not considered. To prevent the swelling of a purse, which is a problem for consumers, we propose a method to minimize the number of coins in the purse through the payment. We also show that this method accompanies a remarkable mathematical structure like fractals.

What is the minimal payment?

We define the 'minimal payment' as follows. (i) A retailer keeps all kinds of coins sufficiently, and gives back change with the least number of coins. Namely, the retailer never gives 10-cent change by ten 1-cent coins or two 5-cent coins. (ii) The shopper pays with a combination of coins that minimizes the number of coins in the purse after the payment. (iii) The coins paid by the shopper and the ones given back to the shopper do not include common coins.

Let us play with a simple example. Imagine a nation where the coins are issued in [formula], [formula], and [formula] denominations ('[formula]' is the currency sign of this nation, and we also use this symbol as the generic currency sign in this paper, instead of the formal symbol ''), and a shopper in this nation has each of [formula], [formula], and [formula] coins in the purse, and is buying an item of [formula]. We compare two ways of payment. (1) If the shopper pays with one [formula]-coin alone, then the change is [formula], hence three coins (one [formula]- and two [formula]-coins) are left in the purse. (2) If the shopper pays with one [formula]- and one [formula]-coins, then the change is [formula] (paid with one [formula]-coin), hence two [formula]-coins are left after the payment. Other payment patterns do not meet the condition (iii). Therefore, the minimal payment in this case is that the shopper pays with one [formula]- and one [formula]-coins and receives one [formula]-coin in change (see Fig. [\ref=fig:purse]). The important fact is that the number of coins left in the shopper's purse can vary according to the combination of coins in the payment.

Next we present the efficient calculation method of the minimal payment. Let us consider again the currency '[formula]'. The notation (n1,n2,n3) represents the content of the shopper's purse, where n1, n2, and n3 are respectively the number of [formula], [formula], and [formula] coins. In the above example, the coins before the payment are written as (1,1,1) (see also Fig. [\ref=fig:purse]). By using this vector-like notation, the total amount of money in the purse can be expressed as the scalar product: [formula]. In this sense, we identify a vector with the total amount, and simply express as [formula]. Returning to the above example, [formula]([formula]) is left in the purse after the purchase of an item of [formula]. Through the transition from [formula] (before the payment) to [formula] (after the payment), one [formula]- and one [formula]-coins are gone and one [formula]-coin is gained, which correspons to the minimal payment process (Fig. [\ref=fig:purse]). We note that this calculation procedure for the minimal payment is far more efficient than the 'full search', and it can be applied straightforwardly to general currencies.

Fractality of successive minimal-payment processes

Here we show the mathematical structure of successive minimal-payment processes. We set the following four assumptions. (i) The shopper and the retailer iterate the minimal payment. (ii) Prices are generated randomly and independently in each payment, and we used a uniform random number in the numerical calculations. (iii) In order for the shopper not to lack money, we assume that the shopper has sufficiently large number of banknotes, and that the shopper can use banknotes if needed. (iv) Every coin is a multiple of the immediately smaller coin, and the smallest banknote is a multiple of the largest coin. We call (iv) the 'multiplicable condition.' For example, the Japanese yen (1000 yen bill; 500, 100, 50, 10, 5, 1 yen coins), the Korean won (1000 won bill; 500, 100, 50, 10, 5, 1 won coins), and the Swedish krona (20 krona bill; 10, 5, 1 krona, 50 öre (= 0.5 krona) coins) are multiplicable. However, the majority of currencies in the world is partially not multiplicable; in the US dollar (1 dollar (= 100 cent) bill; 50, 25, 10, 5, and 1 cent coins), 25 is not a multiple of 10.

For the analysis of successive change in the minimal payment, we employ the delay plot. For a given time series [formula], the delay plot is defined as a planar point set [formula]. The delay plot is a useful tool for visualizing the correlation of adjoining pairs of the time series. In chaos theory[\cite=Alligood] and nonlinear time series analysis[\cite=Kantz], the delay plot is used for the reconstruction of an attractor from a series of experimental data. In general, a delay plot generated from a deterministic system forms an organized structure, whereas a plot from a stochastic noisy system forms an indistinct distribution.

Figure [\ref=fig:gasket-yen] illustrates the delay plot of a series of change generated by computer simulation of the minimal payment. In the simulation, we adopted the Japanese yen as the currency system (which holds the multiplicable condition), and iterated payment processes 107 + 1 times. The whole structure is similar to the celebrated fractal object 'Sierpinski gasket'[\cite=Sierpinski].

In order to explain the mechanism of this quasi-fractal structure, let us go back once again to the model currency '[formula]', where [formula], [formula], and [formula] coins are issued. We additionally imagine that the smallest banknote is [formula] denomination. Note that this currency is multiplicable. (n1(t),n2(t),n3(t)) represents the coins in the shopper's purse after the t-th payment, and we set the initial condition (n1(0),n2(0),n3(0)) = (0,0,0). We also denote by c(t) = (c1(t),c2(t),c3(t)) the change given back in the t-th payment. Since the prices are randomly generated, (n1,n2,n3) and (c1,c2,c3) are random variables. If n1(t) > n1(t - 1) ([formula] coins in the purse increases), the t-th change includes n1(t) - n1(t - 1) pieces of [formula] coin. Otherwise, if n1(t)  ≤  n1(t - 1), the t-th change includes no [formula] coins. Hence we can simply express as c1(t) =  max {n1(t) - n1(t - 1),0}. The sum of the number of [formula] coins in t-th and (t + 1)-th change is then calculated as

[formula]

where we use the formula in a max-plus algebra[\cite=Baccelli]: max {a,b}  +   max {c,d}  =   max {a + c,a + d,b + c,b + d}. By the definition of the minimal payment and above algorithm, we can derive 0  ≤  n1(t)  ≤  1 for any [formula], where '1' at the right hand side is given by the ratio of two denominations as [formula]. Therefore, the four arguments of 'max ' in Eq. [\eqref=eq:1] are all equal to or less than 1 constantly, and we obtain 0  ≤  c1(t) + c1(t + 1)  ≤  1 as a result. Similarly, we can derive the relations [formula] and [formula] for c2 and c3 respectively. These relations signify that successive change c(t) and c(t + 1) are correlated.

By the above calculation, the points (c(t),c(t + 1)) of the delay plot are confined within the lattice points satisfying the conditions

[formula]

As in Fig. [\ref=fig:iteration], the effect of including smaller coins progressively generates a nested pattern (smaller coins contribute to higher resolution). In each iterative step, the blocks (the squares with bold contours) are replaced with smaller blocks aligned in a step-shape (or an L-shape), and finally the structure of the delay plot has a fine structure as in the Sierpinski gasket. Note that the side lengths, 12 (the length of the 'whole' block), 6, 2, and 1, of blocks in the iterative steps are identical with the denominations [formula], [formula], [formula], and [formula]. This scenario of 'successive replacement' universally works on general multiplicable currency systems. In particular, if the denominations of coins grow geometrically (i.e., [formula], [formula], [formula], [formula]), the delay plot possesses (discrete) self-similarity, and its fractal dimension D is given by

[formula]

This expression also appears in a study of Pascal's triangle[\cite=Gamelin]; we discuss delay plots and Pascal's triangle in more detail in Section [\ref=sec:Pascal]. The multiplicable condition is necessary for the realization of a regular shape of the delay plot. For example, the delay plot of the US dollar exhibits a relatively disordered structure, reflecting the breaking of the multiplicable condition between 25 and 10 cent coins (Fig. [\ref=fig:gasket-cent]).

Effectivity of the minimal payment

Here we comment on the effectivity of the minimal-payment method, measured by the average number of coins in the shopper's purse. We estimated this average numerically. In this calculation, we adopted the US dollar as the currency, and iterated the minimal payment 107 times. The results are summarized in Fig. [\ref=fig:timeseries]. Figure [\ref=fig:timeseries] (a) shows the fluctuation of the number of coins in the purse of the first 1000 steps, and Fig. [\ref=fig:timeseries] (b) is the numerically-generated probability distribution of the number of coins in the purse. By taking the mean value of Fig. [\ref=fig:timeseries] (b), the number of coins in the purse is 4.20 pieces on average. Furthermore, the maximum number of coins in Fig. [\ref=fig:timeseries] (b) is eight. Thus, by using the minimal-payment strategy, we can constantly keep the coins in a purse 8 pieces or less.

We can also calculate this average more rigorously. Since the prices are distributed randomly and independently in our numerical model, a probability of the amount of money in the purse becomes uniform. Figure [\ref=fig:rigorous_dollar] illustrates how many coins are needed to represent each amount of money, and the average number of coins is exactly 4.2 pieces by taking the mean value. Note that the two distributions in Fig. [\ref=fig:timeseries] (b) and Fig. [\ref=fig:rigorous_dollar] (b) are so alike.

The average number can be calculated easily for a multiplicable currency. For the model currency '[formula]' ([formula] bill; [formula], [formula], and [formula] coins), the set of possible amounts of money in a purse is

[formula]

For the same reason as above, each amount of money listed in Eq. [\eqref=eq:list] emerges with a uniform probability. In Eq. [\eqref=eq:list], the possible numbers of [formula] coins are either 0 or 1, which appear six times each. Thus, the average number of [formula] coins is 0.5, which is also given by [formula]. The same estimation is valid for the numbers of [formula] and [formula] coins. Therefore, the average number of coins in a purse is

[formula]

We can straightforwardly apply this formula to any multiplicable currencies. For example, the average number of the Japanese yen (1000 yen bill; 500, 100, 50, 10, 5, and 1 yen coins) is both 7.5 pieces.

Conversely, we note that this average number can be regarded as the lower bound, that is, we cannot keep down the average number of coins below this lower bound, no matter what payment strategy is used. This is the 'minimality' of the presented payment method.

Relevance to the rule-60 cellular automaton

In the present section, let us consider the denominations of coins grow with a binary scale, that is, the coins are [formula], [formula], [formula], [formula], [formula], [formula], and the smallest banknote is [formula]. As in Section [\ref=sec:3], let ci(t) denote the number of [formula] coins in t-th change, and the condition ci(t) = 01 holds for any t and i. The corresponding delay plot is obtained by solving

[formula]

In other words, cn(t) = 1 and cn(t + 1) = 1 never take place at the same time. The delay plot forms the discrete Sierpinski gasket (Fig. [\ref=fig:gasket-binary]).

The discrete Sierpinski gasket appears in various systems in mathematics and physics, ranging from an analysis of the Tower of Hanoi[\cite=Hinz] to pulse dynamics in a reaction-diffusion system[\cite=Hayase] and a model of fracture[\cite=Matsushita]. As a typical example, we focus on the rule-60 cellular automaton in this section.

A cellular automaton (CA)[\cite=Wolfram] is a discrete dynamical system on cells aligned linearly. The possible state of each cell is either '0' or '1', and the evolution of states generally depends on their own state and the states of their neighbors. In particular, the rule-60 CA can generate the discrete Sierpinski gasket, which is driven by the following rule. (i) If a cell and its left neighbor are in the same state, the next state of the cell is 0. (ii) Otherwise (i.e., the states of the two cells are different), the next state is 1. This evolution rule is schematically shown in Fig. [\ref=fig:rule60] (a). We denote stn by the state of n-th cell at time t. Then, the evolution of the state is simply expressed as [formula], where [formula] is an exclusive-or operation defined as [formula] and [formula]. A resultant pattern is depicted in Fig. [\ref=fig:rule60] (b), where the initial condition is that one cell is '1' and the others are '0'. The evolution rules of other cellular automata, such as rule-90, 22, 154 and 102, can be expressed by [formula], and they also generate discrete Sierpinski gaskets.

Similarity between a delay plot of binary coins (Fig. [\ref=fig:gasket-binary]) and the evolution pattern of the rule-60 CA (Fig. [\ref=fig:rule60] (b)) is obvious. We discuss this similarity more in detail. Figure [\ref=fig:iteration-binary] shows iterative steps for solving Eq. [\eqref=eq:area-binary]. As a condition for a smaller coin is considered, the blocks in each step are subdivided according to the following rule:

[formula]

As shown in Fig. [\ref=fig:subdivision] (a), this subdivision preserves the exclusive-or structure of the rule-60 CA. Moreover, a spatio-temporal pattern after the subdivision is similar to the one before the subdivision, that is, the subdivision works on the rule-60 CA as a spatio-temporal scale transformation. Both the unit lengths of space and time are halved by subdivision (see Fig. [\ref=fig:subdivision] (b)). Therefore, we conclude that the key to similarity between the delay plot of a binary currency and the rule-60 CA is compatibility of the rule [\eqref=eq:rule] of subdivision and the exclusive-or relation.

Comparison with the Pascal-Sierpinski gaskets

Pascal's triangle (Fig. [\ref=fig:pascal] (a)) also generates a discrete Sierpinski gasket by coloring the odd numbers (Fig. [\ref=fig:pascal] (b))[\cite=Wolfram1984]. Clearly, Fig. [\ref=fig:pascal] (b) is essentially the same as Fig. [\ref=fig:gasket-binary] and Fig. [\ref=fig:rule60] (b). In fact, the coloring rule is reduced to the exclusive-or operation[\cite=Culik]. As a generalization, the Pascal-Sierpinski gasket[\cite=Holter] of modulo r is obtained by coloring the elements not divisible by r. In this section, we compare the Pascal-Sierpinski gasket of modulo r and the delay plot of the coins [formula], [formula], [formula], [formula].

In Fig. [\ref=fig:compare] (a), we show the delay plots corresponding to r = 3,4,5, and 6. The shapes of them are quite similar to the Sierpinski gasket. In contrast, the Pascal-Sierpinski gaskets are more complicated (Fig. [\ref=fig:compare] (b)). In the case of r = 3 and 5, the Pascal-Sierpinski gaskets are similar to the corresponding delay plots. However, the Pascal-Sierpinski gaskets of modulo r = 4 and 6 exhibit disordered structure, and they looks different from the delay plots of such r. According to the theory[\cite=Frame] of the Pascal-Sierpinski gasket, the Pascal-Sierpinski gasket possess the same structure as the corresponding delay plot if r is a prime number; however, the pattern is more complicated if r is a composite number.

Analogues of Fig. [\ref=fig:iteration-binary], Eq. [\eqref=eq:dimension], and Eqs. [\eqref=eq:area] and [\eqref=eq:area-binary] have appeared in some research articles of Pascal's triangle[\cite=Gamelin] [\cite=Peitgen] [\cite=Peitgen2]. Hence, we note that the minimal payment is a real-world counterpart of such purely mathematical objects.

Discussion

In the numerical simulations of the minimal payment in this paper, we assume that the prices are distributed randomly, independently, and uniformly. Randomness and independentness are reasonable for real payment, but uniformness is a debatable point. In fact, the range of prices depends on each person's life style or consumption behavior. We simply model this non-uniform occurrence of prices by using a triangular random number. In this numerical calculation, the Japanese yen (1000 yen bill; 500, 100, 50, 10, 5, and 1 yen coins) was used as a currency, and we iterated the minimal-payment processes 107 + 1 times. The prices are generated by a triangular random number on the interval

[formula]

Conclusion

We demonstrated that a payment method affects the number of coins left in a purse, and showed how to minimize the number of coins in a purse after a payment. We called this method the 'minimal payment'. By using the delay plot, a time series of change under successive minimal-payment processes a fine structure like the Sierpinski gasket. The mechanism of this fine structure is reduced to a coupled inequalities as in Eqs. [\eqref=eq:area] and [\eqref=eq:area-binary]. We also compared delay plots and the rule-60 cellular automaton and the Pascal-Sierpinski gasket.

Acknowledgments

We are very greatful to Dr. Mitsugu Matsushita and Dr. Hiroto Kuninaka for their beneficial comments. One of the authors (K.Y.) is a Research Fellow of the Japan Society for the Promotion of Science.