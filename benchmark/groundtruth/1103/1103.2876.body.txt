=1

A framework for list representation, enabling list stabilization through incorporation of gene exchangeabilities

Introduction

Since the advent of the microarray technology, high-throughput experiments generating vast amounts of data have been ubiquitous in genetics, for studying e.g. genome-wide patterns of gene expression and copy number alterations. The output of univariate analysis of such high-throughput experiments is often a gene list, consisting of genes related to some response of interest (e.g. the discrimination between groups or a quantitative trait). The gene list can be ordered or unordered (i.e. ranking the genes by their association to the response or just listing all genes whose association exceeds some threshold) and it can consist of all studied genes or only a subset. The challenge is then to interpret the obtained list in a biological context to understand the underlying processes and generate biologically valid hypotheses. An inherent problem compromising the interpretability of the observed gene lists is that they are often highly unstable, both with regards to small changes in the underlying data set and with regards to changes in the ranking method [\citep=Fortunel_etal_03] [\citep=Irizarry_etal_05] [\citep=Michiels_etal_05] [\citep=EinDor_etal_06] [\citep=Fan_etal_06] [\citep=Boulesteix_Slawski_09] [\citep=Abraham_etal_10]. This could be due to redundancy in the cell machinery, i.e. the existence of many genes having similar functions in the cell and thereby being exchangeable in a given experimental list. In this case, the observed gene list depends on the selection of samples in the data set. This means that the functional overlap between two lists may be substantial even though the actual gene overlap is very small. Other possible causes of the apparent instability are noisy measurements and the generally small sample sizes in this type of experiments [\citep=EinDor_etal_06] [\citep=He_Yu_10].

In this paper we propose a method for stabilization of observed gene rankings, using information extracted from the experimental data. We employ the concept of exchangeability of random variables to quantify the functional redundancy among the genes and we propose a general framework for incorporating exchangeability into the representation of gene lists. In this framework, each list is represented as a vector in [formula] where M is the number of genes in some universal set, typically the genes measured by a microarray chip. Each entry of the list vector quantifies the contribution to the list from one of the genes. This representation allows straightforward comparison of any two gene lists by means of any of the conventional measures of similarity or dissimilarity defined on [formula]. This is in contrast to previously proposed methods for list comparison, which are tailored to compare specific types of lists. We show that using the proposed method, we obtain gene rankings that are more robust than the original lists against sampling variations in the underlying data, without compromising the relevance to the response.

Related work

The stabilization of gene rankings has attracted considerable interest during the last decade. Some authors have addressed the ranking method directly and proposed methods providing more robust and accurate ranking results and differential expression detection for the "large p, small N" situation which is standard in biomedical applications (e.g. [\citet=Tusher_etal_01] [\citet=Perelman_etal_07]).

Another way to obtain more stable rankings is to combine the information from several different rankings (e.g. [\citet=Rhodes_etal_02] [\citet=Rhodes_etal_04] [\citet=Breitling_etal_04] [\citet=DeConde_etal_06] [\citet=Hong_Breitling_08] [\citet=Abeel_etal_10]). An overview of the most well-known aggregation methods is given by [\citet=Boulesteix_Slawski_09]. The most straightforward method is to compute some univariate statistic for each gene from the set of rankings and re-order the genes by their value of this statistic. The statistic can be e.g. the mean of the positions for the gene [\citep=Jurman_etal_08], a rank product of the positions [\citep=Breitling_etal_04] or the fraction of the rankings where the gene is among the top-k genes for some k [\cite=Pepe_etal_03] [\cite=Jurman_etal_08]. There are also more complex aggregation methods for extracting an optimal top-k list based on e.g. Markov chains [\citep=DeConde_etal_06].

Comparison of gene lists is an essential part of many algorithms, e.g. for enrichment analysis of gene sets [\citep=Draghici_etal_03] [\citep=Subramanian_etal_05] [\citep=EinDor_etal_06] [\citep=Ackermann_Strimmer_09] and assessment of the stability of gene rankings [\citep=Jurman_etal_08] [\citep=Jurman_etal_10] [\citep=Abraham_etal_10]. In general, each of the existing methods can only be used to compare specific types of lists, e.g. two ordered lists with the same number of genes, or one ordered list and one short unordered list. Appendix I provides a brief overview of the most well-known list comparison methods and show that many of them can be cast in the here proposed framework if its components are chosen suitably.

Methods

Exchangeability of random variables

Consider a probability triple [formula] and let [formula] denote random variables on Ω, taking values in some space [formula]. Given [formula] we define the multivariate random variable

[formula]

by [formula] To each random variable [formula] there is an associated measure [formula] defined by

[formula]

for all measurable subsets [formula].

Conventionally, a finite sequence [formula] of random variables is called exchangeable if their joint distribution is invariant under permutation of [formula], i.e. if

[formula]

for each π∈Sm (the group of permutations of [formula]). This means that from a statistical point of view the order of the variables in the product is completely irrelevant. From this definition, it is clear that any sequence of independent and identically distributed (i.i.d.) random variables is exchangeable, but the reverse implication is false. For overviews on exchangeability, see e.g. [\citet=Kingman_78] [\citet=Aldous_85]. The definition of exchangeability given above is rather strong, and we introduce a much weaker notion of exchangeability as follows: It is clear that a finite sequence of random variables [formula] that is exchangeable is weakly exchangeable, but that the opposite implication is false in general.

Measures of exchangeability

In this section we will discuss some ways to quantify the degree of exchangeability for a sequence of random variables. We note that [formula] iff the sequence [formula] is exchangeable.

We now turn to a discrete probability space [formula], where Ω is a finite set, F = 2Ω is the σ-algebra consisting of all events and P:F  →  [0,1] is a probability measure. We let [formula] be random variables on Ω taking values in [formula]. The support of the random variable [formula] is defined by

[formula]

For finite sequences of discrete random variables, Definition [\ref=def:exchangeable] implies that [formula] is weakly exchangeable iff

[formula]

for all π∈Sm. Therefore, to quantify the degree of weak exchangeability for a sequence of discrete random variables we will compare the support of the joint distributions.

Let [formula] be a metric and define the distance between two sets [formula] by

[formula]

Furthermore, define the Hausdorff distance between the two sets by

[formula]

Clearly, [formula] for any π∈Sm, and [formula] iff [formula] is weakly exchangeable, and the same is true for [formula].

In the rest of this paper we will mainly consider exchangeability of pairs of discrete random variables with values in [formula]. In this special case, since X1  ×  X2 is the reflection of X2  ×  X1 with respect to the line [formula], we get

[formula]

The exchangeability plot

To illustrate the degree of weak exchangeability of a pair of discrete random variables visually we propose the exchangeability plot. The exchangeability plot for the random variables X1 and X2 is obtained by depicting both [formula] and [formula] in the same figure. A pair of random variables (X1,X2) is weakly exchangeable iff the two sets overlap completely. Figure [\ref=fig:exchplots] shows two exchangeability plots. The pair of variables in the left panel is weakly exchangeable, while the pair of variables in the right panel is not. Given samples of X1  ×  X2 and X2  ×  X1 we can also define a sample exchangeability plot, depicting the observed supports. Further details are provided in Appendix A.

The exchangeability of genes

In this section we use the terminology developed in the previous sections to define the exchangeability of a set of genes with respect to a specific experiment. We will also define another measure of exchangeability which is specifically adapted to the study of ranked gene lists.

We assume that we are given a universal set of M genes, denoted [formula]. We use the word experiment to denote a pair consisting of a population (e.g. cancer patients and healthy control subjects) and a variable ranking method (e.g. a t-test contrasting the two groups in the population). The sample space Ω consists of all possible rankings of the M genes, and the random variables [formula] represent the ranking positions of the genes in G. A finite set of genes [formula] is said to be (weakly) exchangeable iff the corresponding sequence of random variables [formula] is (weakly) exchangeable. Intuitively, a set of genes is exchangeable iff their positions in the variable ranking can be interchanged without changing the biological interpretation of the ranking.

Of course, we do not know the measures Pr Xi for the variables in practice, so these have to be estimated. In this paper we use subsampling to generate a collection of B data sets for which we compute gene rankings. From the B gene rankings, we construct a position vector Si for each gene gi by collecting all positions of the gene in the B rankings. The elements of a position vector Si are then samples of the random variable Xi. Combining two position vectors Si and Sj gives samples of the variables Xi  ×  Xj and Xj  ×  Xi which can be used to obtain estimates of PVarXi  ×  Xj, EDmaxXi  ×  Xj and EDmeanXi  ×  Xj. This estimation is discussed further in Appendix A.

We now introduce another measure of exchangeability which is especially adapted to the study of ranked gene lists. The rationale behind this measure is that we may not want two genes to obtain a small exchangeability distance if they always appear in the same order in the rankings. For example, a gene which is always ranked first is not highly exchangeable with a gene that is always ranked second, since the first gene is clearly more strongly related to the response than the second. The new measure penalizes such situations in the computation of the exchangeability distance. For a pair of random variables (X1,X2) we define a new set-valued random variable on Ω by

[formula]

Details on the estimation of the one-sided mean exchangeability distance are provided in Appendix A. It is also possible to define a one-sided variant of the maximal exchangeability distance (oEDmaxXi  ×  Xj) in an analogous manner.

We note that due to the normalization factors introduced in the estimates of weak exchangeability, all measures introduced above attain only values in

[formula]

[formula]

A general framework for list representation and comparison

In this section, we present a general framework for list representation and comparison. The lists are represented as vectors in [formula], where the entry in position i gives the contribution of gene gi. The vector representation allows us to compare both ranked and unranked gene lists within the same framework, using one of the many similarity or dissimilarity measures available to compare vectors in [formula]. This is an advantage compared to existing methods for list comparison, which are specifically designed to compare certain types of lists. Our framework also provides a way to determine which genes are most important for explaining the similarity between two lists. Assume for example that some measure based on the scalar product in [formula] is used to measure the similarity between two vectors x and y. Then the value of xiyi is a measure of the influence of the i'th variable on the similarity between the two lists (see Appendix G). Finally, ordering the genes by their weights in the vector gives a new ranking of the genes.

As above, we have a universal set of M genes, [formula], where the genes are indexed in a fixed (but otherwise arbitrary) fashion. The universal set can be e.g. all genes on a microarray chip. An ordered (unordered) gene list is then an ordered (unordered) subset of the universal set. By defining a function

[formula]

we use information about various characteristics of the given list to create a vector representation.

General idea

Let [formula] denote a list. If [formula] is ordered and if gene gi is contained in [formula], we denote its position by [formula]. If [formula], we define [formula]. For an unordered list, we let [formula], where [formula] is the characteristic function of the set [formula]. Given a list [formula] we define a corresponding list matrix [formula] as the product of three basic M  ×  M matrices;

[formula]

The three basic matrices are designed to represent different characteristics of [formula]. We call [formula] the position matrix, [formula] the exchangeability matrix and [formula] the global weight matrix. From the list matrix we form a list vector [formula] by letting [formula] where [formula] denotes the i'th column of [formula] and [formula] is a summarization function, e.g. a norm. The list vector will be used as the vector representation of the list. Once all lists of interest are represented by vectors in [formula], we can define the similarity between them e.g. as the cosine of the angle between the corresponding list vectors, i.e.

[formula]

where ·   denotes the inner product in [formula], and we can obtain a dissimilarity coefficient as

[formula]

Choosing [formula] and the (dis)similarity coefficient on [formula] suitably, most methods currently available for list comparison fit into this general framework. In Appendix I we show how this can be done for a collection of well-known methods.

The position matrix [formula]

The position matrix [formula] is defined as a diagonal matrix that contains information about the type of list (ordered or unordered) and the positions of the genes within the list. We define the diagonal element [formula] (the position value of gene gi) via a monotone transformation of the ranking statistic of the gene. This means that the diagonal elements corresponding to genes in the top of the list [formula] are high, while the genes further down in the list obtain lower values. All genes not in the list are given position value zero. We note that in some cases, other choices of position values may be better suited for unordered lists, where it may be desirable to give the genes different weights, e.g. depending on some external criterion, even though there is no specified ordering.

The exchangeability matrix [formula]

The exchangeability matrix [formula] carries information about the exchangeability between the genes in G in the specific experiment giving the list [formula]. In most examples in this paper, we define the entry [formula] to be the estimated normalized one-sided mean exchangeability score of gi and gj (i.e. meanXi  ×  Xj), so the diagonal elements are always 1. If [formula] is diagonal, i.e. [formula], then the only non-zero elements in the list vector are those corresponding to genes that are actually contained in [formula] and consequently only the genes that are present in the list affect its vector representation. However, if [formula] is not diagonal, there is a possibility that the vector representation of the list is extended, i.e. that it contains non-zero entries for genes which are not themselves present in the list, but are exchangeable with some gene in the list. The (absolute) weight of a gene in the list can also be increased if it is highly exchangeable with a gene with a higher (absolute) position value, since the high exchangeability indicates that the genes could as well have switched positions without changing the interpretation of the list.

We note that the general framework for list representation supports any matrix of gene similarities in the place of [formula]. For example, [formula] could be defined from some kind of expert biological knowledge, e.g. concerning which genes are related to the same biological function. This could be used for example when comparing lists from different experiments to each other. Yet another option is to use the positive part of the correlation matrix in place of [formula], since a high correlation between the expression levels of two genes is often considered to indicate similar biological functions of the genes.

The global weight matrix [formula]

The global weight matrix [formula] is a diagonal matrix that permits weighting the influence of the genes differently, depending on some informativeness or reliability estimate. For example, we may wish to downweight the influence of a gene that has a high probability to be present in an arbitrarily chosen list, since this gene is unspecific and may not give much relevant information about the similarity between a pair of lists.

Applications

Data sets

To illustrate the proposed methods, we use three microarray data sets, which were downloaded from http://www.broadinstitute.org/gsea/datasets.jsp. These data sets have already been pre-processed by replacing the original probe set IDs with gene symbols and summarizing all probe sets mapping to the same gene by the largest value for each sample. The two lung cancer data sets were re-analyzed by [\citet=Subramanian_etal_05].

Boston lung cancer data [\citep=Bhattacharjee_etal_01]. This data set contains expression measurements of 5,217 genes in 62 lung cancer patients, classified according to outcome (good or poor) with 31 observations in each group.

Michigan lung cancer data [\citep=Beer_etal_02]. This data set contains expression measurements of the same 5,217 genes as in the Boston lung cancer data, for 86 lung cancer patients (24 with poor outcome and 62 with good outcome).

Diabetes data [\citep=Mootha_etal_03]. This data set contains expression measurements of 15,056 genes in 17 diabetic patients and 17 control subjects.

Stabilization of ranked gene lists

The main objective for introducing exchangeabilities into the list representation is to increase the robustness of the resulting gene list. In this section we evaluate different aspects of the stability of the extended gene lists by comparing with non-extended lists, lists extended using correlations and lists generated by aggregation.

Stability of top-k gene lists

In many cases, only the top-ranked genes from an experiment are studied further, which stresses the importance of obtaining a robust and informative set of top-ranked genes. To study the usefulness of exchangeability stabilization for this purpose we apply the following steps to the Boston lung cancer data.

We generate 10 modified data sets by bootstrapping samples from the original data set, taking the class labels into account.

For each modified data set, we rank the genes using five different methods:

Ranking the genes according to their signal-to-noise ratio (SNR) when comparing the two patient groups. Genes positively associated with good outcome are placed in the top. Here,

[formula]

where mi(poor) and σi(poor) denote the mean value and standard deviation of gene i in the patients with poor outcome, and mi(good) and σi(good) are the corresponding values in the patients with good outcome. Ranking the genes by their SNR values gives the non-extended lists. In general, lists generated in this or similar ways are those that are used for interpretation and biological conclusions.

Computing the extended list vector as described in Section [\ref=sec:framework] and ranking the variables according to their contribution to the list vector. The position matrix is derived from the SNR-based ranking of the genes, by letting

[formula]

with b2 = 350 and M = 5,217. We comment on the selection of this function and the parameter values in Appendix B. The position vectors are computed by subsampling the original data set B = 20 times (each time keeping 2/3 of the samples from each group) and ranking the variables by their SNR values. From the position vectors we then compute the normalized one-sided mean exchangeability scores meanXi  ×  Xj for all gene pairs to create the exchangeability matrix. We take the global weight matrix [formula]. To create the list vector from the list matrix, we define the i'th entry of the list vector as the element with the largest magnitude in the i'th column of the list matrix [formula]. This means that a gene which is strongly exchangeable with a gene with a highly negative position value can be moved downwards in the list, so the two extreme ends are treated symmetrically. In the final ranking, genes with a highly positive contribution are placed in the top and genes with a highly negative contribution are placed in the bottom. This gives the extended lists.

Subsampling the modified data set 100 times, and each time deducing a ranking from the SNR values as above. The final ranking is then obtained as an aggregate ranking, by computing the median position of each gene in the 100 subsample rankings. The gene with the lowest median position is placed in the top. This procedure gives the median aggregated lists. We also create aggregated lists by computing the product of the ranks of each gene in the 100 subsample rankings and ordering the genes by increasing value of the rank product. This gives the rank product aggregated lists.

Computing the extended list vector as described in step [\ref=step:extended], but using the positive part of the correlation matrix of the original data set as the exchangeability matrix. The genes are ordered by decreasing contribution to the resulting list vector. This gives the correlation extended lists.

The correspondence between the lists from different bootstrap data sets are visualized through concordance plots. For each of the five ranking methods described in step [\ref=step:createrankings], let fk denote the number of genes that are among the top-k in the resulting lists from all bootstrapped data sets. The concordance plot depicts fk as a function of k for [formula]. If the lists are highly reproducible with respect to sampling variation in the underlying data, we get fk  ≈  k for all k. We also construct concordance plots for the reversed lists, i.e. letting fk be the number of genes that are among the bottom-k in all lists. As another measure of the stability of the gene rankings, we compute the mean overlap between the top-30 and bottom-30 genes from each pair of bootstrapped data sets for each of the five ranking methods defined in step [\ref=step:createrankings]. The resulting figures are given in Appendix E.

The top row in Figure [\ref=fig:concordance] shows concordance plots for the gene lists obtained by the five ranking methods. It is clear that the exchangeability-extended lists are more stable than the lists obtained by the other methods with respect to sampling variations in the underlying data set. Notably, the correlation-extended lists are less stable than the exchangeability-extended lists, indicating that the correlations in this case do not capture the relevant characteristics of the data. The bottom row in Figure [\ref=fig:concordance] shows corresponding concordance plots for gene lists extracted from a data set where the sample labels have been randomly permuted. These figures show that the stability of the extended lists that was noted in the top row is clearly dependent on that the gene lists actually share some information. Hence, the stability is not due to spurious features unrelated to the discrimination between patients with good and poor outcome. For this data set, the correlation between the expression values for a pair of genes has little to do with the estimated exchangeability of the genes (see Appendix D).

Stability of distances between ranked lists

Next, we study the stability of the distance between ranked lists from the three different data sets. First, the data sets are adjusted to contain the same genes, which leaves 5,149 genes. We then compute the exchangeability matrix for each data set (normalized one-sided mean exchangeability scores, position vectors obtained by subsampling B = 20 times). For each data set, we construct 10 modified data sets by bootstrapping, taking the class labels into account, and compute extended and non-extended list vectors for each bootstrapped data set. The pairwise distances between all extended (or non-extended, respectively) list vectors are computed using ([\ref=eq:distmeas]) and we study the variation of the distances from each comparison. For list vectors from different data sets, the aim is to obtain a robust value of the distance. For list vectors from the same data set the distance should also be close to zero.

Figure [\ref=fig:distancestabilityrankedlists] shows histograms of the computed distances for each comparison. It is clear that the lists from the same data set are much more similar after extension than before (the distances are much closer to zero). Comparing the two lung cancer data sets, the extended list vectors are more similar and the distance estimates are more stable than without extension. This suggests that the extended list vectors incorporate information which is shared between the two data sets and that is missed if we only study the top genes. For the comparisons between the lung cancer data sets and the diabetes data set, the non-extended list vectors are almost orthogonal (implying a dissimilarity around 1), which indicates that the top genes from the data sets are completely different. The dissimilarities are close to 1 also after extension, which suggests that there is much less shared functional information between a lung cancer data set and the diabetes data set than between the two lung cancer data sets. In Appendix F we give the corresponding histograms for rankings obtained from data sets were the class labels are permuted independently in each bootstrap round.

Informativeness of ranked gene lists

Although stability of gene rankings is an important and desirable property, it is not the only thing that is of interest. For example, if we define a ranking method which always assigns a gene the same pre-defined position, the ranking would be extremely stable but most likely useless. We therefore study the informativeness of the rankings obtained as described above by examining the ability of the top-ranked genes in each list to discriminate between the two patient groups in the Boston lung cancer data. We use ten-fold cross-validation to assess the performance of the classifiers. For each training/test set split we compute the five rankings as described in Section [\ref=sec:rankingstability] for the training set, and extract the top- and bottom-k genes from each ranking. The expression levels for these genes are centered and standardized based on their mean value and standard deviation in the training set. The standardized expression levels of the selected genes are then used as features in a centroid classifier [\citep=Scholkopf_Smola_02] which is used to classify the remaining (test) samples. The reported classification accuracy is the mean area under the receiver operating characteristic curve (AUC) across the 10 training/test set splits. Table [\ref=tab:classificationability] shows the estimated classification accuracy for the top and bottom genes from the five rankings as well as the mean classification accuracy for top and bottom genes from 20 random rankings. Note that the top-ranked gene is always the same for the extended and non-extended rankings. The classification ability of the top-ranked genes in the extended list vectors is considerably higher than for the other methods, indicating that the increased stability observed in the previous section does not come at the expense of decreased biological significance.

Discussion

Univariate analysis of multivariate genetic data sets usually results in a ranking of the variables according to some criterion. This ranking is then interpreted to gain biological knowledge and understanding. However, it has been noted that the variable rankings are often highly unstable with respect to small changes in the underlying data set or the method used to obtain the ranking and therefore, methods for stabilizing the variable ranking and allowing more robust comparison to other lists are much needed. In this paper we have presented a general framework for robust representation and comparison of variable lists. The framework encompasses both ordered and unordered lists, which can therefore be compared on similar terms. Having a robust measure of similarity between any pair of variable lists can furthermore enable visualization through e.g. multidimensional scaling to obtain a low-dimensional visual representation of large collections of lists. We have shown that the extended variable lists are more stable than the original variable lists from an experiment, and also more stable than lists obtained by aggregation of several lists from subsampled data sets. These results suggest that the exchangeability concept for random variables may be a suitable tool for quantifying the functional redundancy among genes and incorporating this information into the list representation.

The results from the proposed method can be used in different ways. Given the vector representation of the gene lists there are many natural choices of similarity and dissimilarity measures that can be applied to compare lists. By ranking the genes according to their contribution to the list vector we also obtain a new gene ranking which may be used to obtain more robust results with other methods, such as e.g. Gene Set Enrichment Analysis (GSEA) [\citep=Subramanian_etal_05] to study the enrichment of gene sets among the genes most highly related to a response.

Estimating exchangeability distances

In the main article, we indicate how to estimate the exchangeability distances between genes based on subsampled data. This section provides a more thorough description. Recall that for any gene gi in the universal set G, we define a random variable Xi representing the position of the gene in the gene ranking from an experiment. We use subsampling to generate B slightly modified data sets from which we extract gene rankings. The observed ranking positions for gi, i.e. the samples of the random variable Xi, are collected in a position vector Si. Note that the positions from the B rankings must be placed in the same order in all position vectors. Combining two position vectors Si and Sj provides samples of Xi  ×  Xj and Xj  ×  Xi, which are used to estimate the exchangeability distance between gi and gj.

First, the sample exchangeability plot for the two genes is obtained by depicting in the same plot [formula] and [formula]. If these point sets overlap completely, the two genes are considered to be weakly exchangeable. The estimates of EDmaxXi  ×  Xj and EDmeanXi  ×  Xj are obtained by

[formula]

We note that since EDmaxXi  ×  Xj only considers the largest distance between the two sets it is sensitive to outliers which may have detrimental effects when the number of samples used to estimate it (B) is small. To estimate the total exchangeability variation we first compute Gaussian kernel density estimates of the probability density functions of Xi  ×  Xj and Xj  ×  Xi from the samples Si  ×  j and Sj  ×  i. We then compute the difference between the two kernel density estimates and integrate the positive part (or, equivalently, the negative part) of the difference over [formula]. The value of the integral is taken as the estimate P̂VarXi  ×  Xj.

Note that it is also possible to let Si be a binary vector such that (Si)k = 1 if gi is present in some gene set output from the experiment (e.g. differentially expressed genes) and (Si)k = 0 otherwise.

The one-sided exchangeability distance introduced in the main article penalizes gene pairs where one of the genes is always ranked before the other by computing distances only between points on the same side of the line [formula]. Given two position vectors Si and Sj of length B, we define

[formula]

for [formula]. The one-sided mean exchangeability distance between the two genes is then estimated by

[formula]

if [formula] for all k, and we define meanXi  ×  Xj = 1 otherwise.

To estimate normalized exchangeability scores, e.g.

[formula]

for the Boston lung cancer data we note that for virtually all pairs of variables (Xi,Xj), the cardinality of the observed support of Xi  ×  Xj is equal to B. Therefore, to compute meanYi  ×  Yj, we repeatedly sample B points uniformly from [formula] to form [formula], and compute the resulting exchangeability scores for Yi  ×  Yj uniformly distributed on its support. Then meanYi  ×  Yj is taken to be the mean value of the estimated exchangeability scores.

Constructing the position matrix [formula]

In the main article we use the rank-based function

[formula]

with b2 = 350 and M = 5,217 to construct the position matrix [formula] from the positions of the genes in the ranking. This function and parameters were chosen heuristically, and here we give some motivation behind the choices. First, we want to treat the variables which are positively and negatively associated to poor outcome symmetrically, hence the different expressions for positive and negative SNR. Second, we want the position values to be somewhat adapted to the exchangeability scores. If the position values decrease too fast, the influence of the exchangeabilities is too high since all variables exchangeable with the top gene will be moved close to the top of the list. On the other hand, if the position values decrease too slowly, the exchangeabilities only have a marginal impact. We found the selected function to provide a good trade-off between these two effects.

We chose a rank-based function since this type of functions can be used also when there is no clearly defined ranking statistic. Note that another way of constructing the position matrix would have been to choose [formula], which in this case gives very similar results (data not shown).

Choosing the weight matrix [formula]

The global weight matrix [formula] in the general framework presented in the main article can be used to incorporate any information about the quality of the measurements corresponding to each gene. In the examples in the paper, we do not have this information and hence use [formula]. Here, we give some examples of how the weight matrix can be chosen. Given a collection of K reference lists, we can choose e.g.

[formula]

where Ki is the number of reference lists containing gi. This resembles the inverse document frequency weighting commonly used in the field of information retrieval. With this choice, a gene which is present in a large number of lists obtains a lower weight. Another weighting scheme could take into account the stability of the position of the gene in the list, which could be estimated through resampling techniques. A gene which is often in the same position would then have a large influence on the list vector relative to a gene which can be in many different positions.

Relationship between positive part of correlations and exchangeabilities in the Boston lung cancer data

As discussed in the main article, using the positive part of the correlation matrix to extend the list vector did not give more stable rankings. Figure [\ref=fig:correxchboston] shows the relationship between the positive part of the correlation between the expression values and the estimated exchangeabilities for 10,000 randomly chosen gene pairs in the Boston lung cancer data. Apparently, in this data set the correlation between expression values has little to do with the estimated exchangeability between the genes.

Overlap plots

The concordance plots shown in the main article give a visualization of the overlap among the rankings from all the 10 bootstrapped data sets. Here, we show overlap plots, giving the mean overlap between the top- and bottom-30 genes from each pair of bootstrapped data sets, for each of the ranking metrics. This emphasizes other aspects of the stability since we only consider pairwise overlaps. The top rows in Figure [\ref=fig:overlapbostonlungbootstrap] show the mean overlap between the top-30 and bottom-30 genes for each pair of bootstrapped data sets. It is clear that the top parts of the extended lists have a larger overlap than the non-extended or aggregated lists, further indicating that the exchangeability captures relevant biological information. The bottom rows in Figure [\ref=fig:overlapbostonlungbootstrap] show corresponding plots for random rankings (obtained by independently permuting the sample labels in each bootstrapped data set). These figures show that in the absence of a functional connection between two gene lists, no lists have the same top-ranked genes.

Distance between ranked lists from permuted data

In the main article, we studied the stability of distances between ranked lists from different experiments (Figure 3 in the main article). Figure [\ref=fig:distancestabilityrankedlistsrandom] shows corresponding plots for random rankings, i.e. for rankings obtained from data sets were the class labels are permuted independently in each bootstrap round. The distance between the extended list vectors are not more stable than the distance between the non-extended list vectors and as expected, the list vectors from the same data set are more dissimilar than for the original data (Figure 3 in the main article), since there is no shared information between the different rankings.

Interpretation of similarity score

In this section we show how to find the genes which are the most important for explaining the similarity between two gene lists. As an example, we take the lists obtained from the Boston lung cancer data and the Michigan lung cancer data. We compute extended lists as described in the main article, using meanXi  ×  Xj as a measure of exchangeability in each data set. Then we compute the dot product between the resulting extended list vectors and find the genes with the highest contribution. Table [\ref=tab:genecontribution] shows the genes with the highest contribution, their position in the original (non-extended) list and their position in the extended lists from each data set.

Synthetic examples

In this section we give some examples comparing the different measures of exchangeability to each other and to the correlation coefficient, which is often used to quantify the relationship between two genes. We expect the exchangeability to highlight other relationships than the correlation coefficient since the latter does not take into account the specific experiment.

We simulate a synthetic data matrix [formula] by letting

[formula]

As the variable ranking method we use a univariate t-test contrasting the first 20 samples against the last 20 samples. Clearly, with respect to this experiment the first 10 variables should be highly exchangeable since on a population level, they are all equally related to the contrast between the two sample groups. Similarly, there should also be a certain degree of exchangeability between the last 40 variables, since none of them is related to the response. We generate position vectors for the genes by subsampling the original data set B = 50 times, each time keeping 2/3 of the samples from each group. We then compute VarXi  ×  Xj, meanXi  ×  Xj, maxXi  ×  Xj, meanXi  ×  Xj, maxXi  ×  Xj and the positive part of the correlation coefficient between each pair of variables. Figure [\ref=fig:significantexchangeabilitiesoverexpressed] shows the exchangeability matrices and the positive part of the correlation matrix, averaged over 10 realizations. All exchangeability measures clearly divide the genes into two groups consisting of the first 10 and the last 40 genes, with only very few nonzero exchangeabilities between genes from different groups. Moreover, the first 10 genes are more highly exchangeable than the last 40. The correlations do not detect this structure.

We simulate a synthetic data matrix [formula] such that

[formula]

We assign the first 30 samples to one group and the next 30 samples to another group. Hence, the first group of 8 variables and the next group of 8 variables are both related to the contrast between the two groups, but the two groups of variables are mutually exclusively overexpressed in each sample. This could correspond to a situation where these two groups of variables have the same function in the cell and therefore do not all have to be overexpressed in a particular sample. The structure of the data matrix is shown in Figure [\ref=fig:coregulateddata]. We rank the variables by comparing the two sample groups with a univariate t-test. We estimate the exchangeability scores meanXi  ×  Xj between the variables from position vectors obtained by subsampling the data set B = 50 times, each time keeping 2/3 of the samples from each group. Figure [\ref=fig:coregulatedexchangeability] shows the exchangeability matrix and Figure [\ref=fig:coregulatedcorrelation] shows the positive part of the correlations, all averaged over 10 realizations. The exchangeability score detects the equivalence of the two groups of 8 variables with respect to the ranking method. The correlation does not take the response into account and hence does not find the relationship between the two groups of variables. Figure [\ref=fig:coregulatedcorrexch] shows the exchangeability scores of the variable pairs plotted against the corresponding correlations.

Methods for list comparison

In this section, we provide a brief overview of previously proposed methods for list comparison. These comprise both methods for comparing two unordered lists, methods for comparing two ordered lists and methods for comparing one ordered and one unordered list. Reviews can also be found in e.g. [\citet=Goeman_Buhlmann_07] [\citet=Song_Black_08] [\citet=Ackermann_Strimmer_09] [\citet=Boulesteix_Slawski_09] [\citet=Huang_etal_09]. We will also show how a number of the most well-known methods can be formulated within the framework presented in the main article by tuning the selection of [formula], [formula], [formula], h and the similarity or dissimilarity measure on [formula].

Comparison of gene lists is an essential part of many applications. One such is gene set enrichment analysis, where a (usually short) unordered list (a gene set) is checked for significant enrichment among genes which are highly related to a response. The simplest methods, commonly denoted overrepresentation analysis methods, are based on computing the overlap between the gene set and an unordered set of e.g. differentially expressed genes. The size of the overlap is then checked for significance by comparison to the hypergeometric distribution or its approximation by the binomial or χ2 distributions [\citep=Draghici_etal_03] [\citep=Hosack_etal_03] [\citep=Khatri_Draghici_05]. The simplicity of these methods have made them the methods of choice in many software packages and web tools for gene set analysis. In the same spirit, methods based on Venn diagrams have been proposed [\citep=Smid_etal_03], as well as the POG (percentage of overlapping genes) score [\citep=EinDor_etal_06] [\citep=MAQCConsortium_06]. The POG score has recently been extended to take into account correlated molecular changes [\citep=Zhang_etal_09] or known functional relationships between the genes [\citep=Gong_etal_10].

Another approach to gene set enrichment analysis is to first compute a ranking of all the genes from an experiment and then check the genes in the gene set for significant enrichment in the top and/or bottom of the ranking. The most well-known method is Gene Set Enrichment Analysis (GSEA) [\citep=Mootha_etal_03] [\citep=Subramanian_etal_05] where a modified Kolmogorov-Smirnov statistic is used to quantify the enrichment of a gene set. Other methods for combining individual gene statistics into a summary statistic for a gene set, e.g. by simple averaging, have also been pursued [\citep=Ackermann_Strimmer_09].

To e.g. assess the stability of gene rankings from different studies, several authors have proposed methods for comparing two ordered gene lists. The overlap score proposed by [\citet=Yang_etal_06] is one such method, which computes a weighted sum of the overlap of the top-k and/or bottom-k lists for [formula] where M is the number of genes in the ranking. By adjusting the weights, genes in the extreme ends of the lists can have a higher influence on the stability score than the genes in the middle. Viewing the rankings as permutations of [formula] (possibly truncated) several methods have been proposed for comparing the corresponding permutations using e.g. Spearman's footrule, Kendall distance or the Canberra metric (or a modified variant for truncated lists) [\citep=Fagin_etal_03] [\citep=Jurman_etal_08] [\citep=Jurman_etal_10]. [\citet=Jurman_etal_08] also account somewhat for the relationship between the genes by including the possibility to define functionally related gene modules, such that the ranking of the variables within such a module does not matter. Other methods for comparing top-k lists taking the ranking into account have been proposed by [\citet=Pearson_07] and [\citet=Stiglic_Kokol_10].

In the rest of this section, we will show how it is possible to formulate many of these methods for gene list comparison in our proposed framework by choosing the basic matrices [formula], [formula] and [formula] as well as the summary function h and the similarity or dissimilarity measure on [formula] suitably. It can be noted that most methods use [formula], meaning that associations between the genes in the universal set are not explicitly taken into account.

First, we note that if we compare two unordered lists [formula] and [formula] and choose [formula] and [formula] for each of the lists, the similarity score defined by the cosine of the angle between the list vectors is equal to

[formula]

This similarity coefficient is the geometric mean of the quantities [formula] and [formula] and has been discussed e.g. by [\citet=Warrens_08].

Percentage of overlapping genes-related (POGR)

[\citet=Zhang_etal_09] described a novel metric for quantifying the overlap of two unordered gene sets. Let k denote the number of genes that are shared between the lists [formula] and [formula]. Then let Or12 be the number of genes in [formula] that are not shared but significantly positively correlated with at least one gene in [formula]. The POGR score is then defined by

[formula]

and similarly for POGR21. We can compute POGR12 in our framework by choosing [formula] and

[formula]

for the first list and [formula],

[formula]

for the second list. We take [formula], and then

[formula]

Hence, to compute POGR12 we only extend the list vector corresponding to [formula]. Note however that the exchangeability matrix in this case takes both data sets into account, since two genes are significantly correlated only if their expression levels are significantly correlated in both data sets. The reverse score POGR21 is calculated by interchanging the roles of [formula] and [formula].

Hypergeometric test (Fisher exact test)

A hypergeometric test, comparing the overlap between two unordered lists [formula] and [formula] to what would be expected if they were drawn randomly from the ground set, can be performed by letting [formula] and taking

[formula]

(and similarly for [formula]). We take [formula] and define

[formula]

This gives the size of the overlap between the lists, which is compared to a hypergeometric distribution with parameters M, [formula], [formula] to obtain a p-value.

Gene set enrichment analysis (GSEA)

GSEA [\citep=Mootha_etal_03] [\citep=Subramanian_etal_05] was developed to estimate the enrichment of the genes within a gene set in a ranking of all variables from an experiment. Hence, the first list ([formula]) is an ordered list containing all genes in G, and the second list (or gene set) ([formula]) is an unordered list with K genes. For [formula], we define

[formula]

where r is the correlation or ranking metric used to order the genes from the experiment and q is the exponent controlling the weights. We take [formula].

For [formula], we choose

[formula]

Note that strictly speaking, this is not a function of the position in the list since all genes in the unordered gene set have the same position. However, as discussed in the main article this may be suitable for gene sets where we wish to incorporate some external information (in this case, information regarding the ranking statistic). We let

[formula]

Finally, we choose

[formula]

Then, we compute the list matrices [formula] and [formula] and create the vector representations of the lists by choosing

[formula]

which means that for the ordered list,

[formula]

and for the unordered gene set,

[formula]

The similarity between the lists (the enrichment score) is then defined as the maximum deviation from zero of

[formula]

for m∈[1,M], and the significance of the score is estimated by repeatedly permuting the sample labels and redoing the calculations.

Algebraic comparison of ranked lists

[\citet=Jurman_etal_08] proposed a method for comparing ordered top-k lists, e.g. to estimate the stability of different variable selection methods. Assuming that the two ranked lists to be compared ([formula] and [formula] respectively) each contain K genes. We choose [formula] and let

[formula]

with [formula] chosen analogously. To create the list vector we use e.g. h(x) =  min 1  ≤  i  ≤  M|xi| and we define a dissimilarity measure by

[formula]

The authors also introduce so called feature modules, consisting of genes known to have similar function. They argue that rank differences within such a module should be less penalized that other differences, and therefore propose to make the distance independent of the ordering within the given modules. In practice, this is obtained by putting the elements of such a module in the same order in all lists by permuting the values in [formula] and [formula] corresponding to the genes in the module.

Reciprocal rank-based comparison of ranked lists

[\citet=Pearson_07] proposed a method for comparing ordered top-k lists based on reciprocal ranks. We denote the two ordered lists to be compared [formula] and [formula], and choose [formula]. We choose

[formula]

and similarly for [formula]. Furthermore, we take e.g. [formula], and choose

[formula]

Similarity for ordered gene lists

[\citet=Yang_etal_06] presented a method for comparing two rankings [formula] and [formula] of all the M genes from an experiment. We let [formula], and take [formula] (and similarly for [formula]). Then take e.g. [formula]. This gives

[formula]

The preliminary similarity score is defined in [\citep=Yang_etal_06] as

[formula]

where α is a parameter, [formula] is the overlap between the top-n lists of [formula] and [formula], and [formula] is the list obtained by reversing [formula]. We have

[formula]

since a gene will contribute to the overlap for all k following its highest position in the two lists. The second term in [formula] can be written accordingly by replacing [formula] and [formula] with [formula] and [formula], respectively. Summation gives

[formula]

If it is desirable to allow one list to be the reverse of the other, one can define

[formula]

with β  ≠  1.