Evaluation and Optimization of Gaussian Approximation for Polar Codes

Introduction

codes proposed by Arıkan [\cite=arikan] have been proved to achieve the capacity of binary input symmetric discrete memoryless channels (B-DMCs) under a successive cancellation (SC) decoder as the code length goes to infinity. To construct polar codes, the channel reliabilities can be calculated efficiently using Bhattacharyya parameters for binary-input erasure channels (BECs). For channels other than BECs, Mori et. al. viewed the construction of polarized subchannels as an instance of density evolution (DE) [\cite=mori_de1]. Considering its high computational complexity, Tal and Vardy devised two approximation methods to simplify the calculation of DE [\cite=talvardy]. After that, Gaussian approximation (GA) was proposed to further reduce the computational complexity of DE [\cite=trifonov] without much sacrifice in accuracy.

In GA, the log-likelihood ratio (LLR) of each subchannel is assumed to obey Gaussian distribution. Although the construction of polar codes involves iterative update of LLRs between variable nodes and check nodes, the only issue needed to be dealt with is the mean of LLRs. However, the LLRs updates in check nodes require complex integration. Therefore, exact GA (denoted by EGA) makes the computational complexity increases exponentially with the polarization levels. In practice, the conventional approximate version of GA (denoted by AGA) based on approximation function can be used to speed up the calculations [\cite=ldpc_2GA]. Nevertheless, in the recursion process of polar codes, the calculation error of AGA versus EGA will be cumulated and amplified. Therefore, the subchannel selection of polar codes using AGA will still present high deviation and result in a catastrophic loss of block error ratio (BLER) performance when the code length is long.

In this paper, to design good polar codes, we first propose a new metric, named cumulative-logarithmic error (CLE) of channel polarization, to evaluate the calculation error between AGA and EGA. Then we derived the upper bound of CLE to simplify its calculation. With this bound, we can easily make analytic calculation to evaluate the performance of different versions of AGA rather than redundant simulation. Therefore, guided by CLE bound, we propose new criteria to design multi-segment GA for polar codes. Finally, different versions of AGA are compared with the help of CLE bound.

Preliminaries

Notations and polar codes

We use the same notations defined in [\cite=arikan]. As mentioned in [\cite=arikan], polar codes can be decoded by successive cancellation (SC) decoding algorithm. Given a polar code with code length N, information length K and selected channels indices A, the block error probability under SC decoding algorithm is upper bounded by

[formula]

where [formula] denotes the error probability of the i-th subchannel, [formula] is named as SC bound.

Gaussian approximation for polar codes

Without loss of generality, we assume that all-zero codeword is transmitted. For AWGN channels with variance σ2, the LLR of each received symbol yi is denoted by [formula]. One can check [formula]. The only issue needed to be dealt with is the mean since the mean of a consistent normal distribution is half of the variance. If we write [formula] to denote the LLR of subchannel, then, when i is odd,

[formula]

and when i is even,

[formula]

where [formula] denotes the mean of random variable, [formula] and

[formula]

where x denotes LLR mean [\cite=trifonov].

Obviously, the LLR updates in check nodes require complex integration in above EGA. Therefore, Chung et. al. give the following two-segment approximation function of [formula] in [\cite=ldpc_2GA],

[formula]

Its corresponding AGA algorithm is represented as "Chung". Note that there is a discontinuity point in [formula], that is,

[formula]

Due to this discontinuity, the difference between [formula] and [formula] will produce calculation error in subchannel capacity evaluation. The original absolute error of capacity calculation between AGA and EGA is denoted by [formula], which is a function of LLR mean x. And [formula] will be abbreviated to Δ0 without ambiguity in this paper.

Improved Gaussian Approximation

In this section, we propose the concept of cumulative-logarithmic error (CLE) of channel polarization and give a bound to simplify its calculation. Guided by CLE bound, we propose new criteria to design AGA for polar codes.

CLE of Channel Polarization

The channel polarization process can be represented on a code tree. For a polar code with code length N = 2n, the corresponding code tree T is a perfect binary tree. Specifically, T can be represented as a 2-tuple [formula], where V and B denote the set of nodes and the set of edges, respectively.

The depth of a node is the length of the path from the root to this node. The set of all the nodes at a given depth i is denoted by Vi, [formula]. The root node has a depth of zero. Let [formula], [formula], denote the j-th node in Vi. Except for the nodes at the n-th depth, each [formula] has two descendants in Vi  +  1, and the two corresponding edges are labeled as 0 and 1, respectively. The nodes [formula] are called leaf nodes.

All the edges b∈B are partitioned into n levels Bl, [formula]. Each edge in the l-th level Bl is incident to two nodes: one at depth l - 1 and the other at depth l. An i-depth node is corresponding to a path [formula] which consists of i edges, with bl∈Bl, [formula]. A vector bi1 is used to depict the above path.

Assume Δ0 occurs after r recursions, denoted by Δ0,r. Thus, Δ0,r is then accumulated as final error after n - r polarization levels, and this process can be represented on a subtree with a depth n - r. To evaluate the calculation error of AGA, we focus on the difference of subchannel's capacity calculated by AGA and EGA in logarithmic domain. The capacities calculated by EGA can form a set I defined on this code subtree with the following properties:

On this subtree, the set of capacities corresponding to the nodes at a given depth d are denoted by Id, [formula]. Let [formula], [formula], denote the k-th element in Id. For each [formula], [formula] takes value on [formula]. And for d  >  r, [formula] is a function of vector bdr + 1. Actually, bdr + 1 is the binary expansion of k - 1. Therefore, [formula], where [formula] and [formula] denote the capacities calculated by AGA and EGA respectively. And Δ0,r occurs at [formula] which is the subtree root.

As stated in [\cite=arikan_rm], without much sacrifice in accuracy, BEC approximation can act as faithful surrogate for GA in error analysis. Due to the iteration structure in the subtree, we have

[formula]

Furthermore, when bd + 1 = 1, we have [formula]. Thus, in logarithmic domain, we can get

[formula]

Define [formula], where [formula] denotes the capacity corresponding to AGA, [formula] represents the absolute error of capacity calculation between AGA and EGA. Therefore, [formula]. Let [formula] denote the relative error, and [formula] denote the capacity calculation error in logarithmic domain. Hence, the partial cumulative-logarithmic error (PCLE) can be written as

[formula]

The cumulative-logarithmic error (CLE) will be [formula].

CLE Bound

The precise calculation of CLE is too complicated to be analyzed by using of recursive relation ([\ref=cap_iter]). In this subsection, we propose a upper bound on CLE to simplify its calculation.

Proposition 1: For the [formula] leaf node corresponding to a path bnr + 1, suppose [formula] and [formula].

Theorem 1: [formula] can be bounded by

Let [formula] denote the bound of [formula]. Then, [formula] is determined by specifying [formula] and

[formula]

where E : [formula], [formula] denotes equality, and D : [formula], [formula] denotes doubling.

If [formula], it is obvious that [formula] holds on. Note that during the iteration, when bd   +   1  =  0,

[formula]

And when bd   +   1  =  1, it will be proved that [formula]. According to the first equation of ([\ref=cap_iter]), it's easy to get that

[formula]

Therefore, [formula] can be written as

[formula]

And

[formula]

Then we can get

[formula]

It can be inferred that [formula] holds on.

Recall Proposition 1, during the iterative calculation of [formula], we count doubling α times and remaining n - r - α times. Hence, we have

[formula]

Similarly, if [formula], we have [formula]. From ([\ref=ineq_1]) and ([\ref=forCLEupbound]), we can get

[formula]

Combing ([\ref=boundpositive]) and ([\ref=boundnegative]), we prove the theorem.

Theorem 2: PCLE Cr:n can be upper bounded by

For any [formula], the number of vectors bnr + 1 which satisfy Proposition 1 is [formula], where bnr + 1 is the binary expansion of k - 1. Combined with definition ([\ref=CLEdefine]) and Theorem 1, Cr:n satisfies the following constraint

[formula]

The last equation in ([\ref=CLEupbound]) uses binomial theorem. Therefore, CLE C can be upper bounded by [formula], and the exponent n  -  r stands for polarization level.

Improved GA based on CLE bound

For AWGN channel, AGA is widely used to construct polar codes. However, in practice, the accuracy of [formula] in ([\ref=convGA]) will greatly affect the construction of polar codes especially when the code length is long. According to Theorem 2, the initial error will be is amplified by a scalar which is exponential in the number of polarization levels.

Note that PCLE bound is mainly affected by two factors: the first term 3n - r is relevant to polarization levels, and the second term is dependent on the original relative error [formula]. Usually, the absolute error [formula] is tiny. Hence, for the good channels whose capacities [formula] approach 1, their original relative errors [formula] are sufficiently small so that they can be neglected. However, for the bad channels whose capacities [formula] approach 0, their original relative errors are not negligible. Given a fixed [formula], the more [formula] is close to 0, the larger the original relative error [formula] becomes.

The above analysis indicates that CLE bound is mainly affected by the terms Cr:n with small initial capacity [formula], which correspond to bad channels. Due to the error, some frozen subchannels will be wrongly identified as information-carrying ones (role flipping), and result in performance degradation.

Note that the capacity [formula] is proportional to LLR mean x in GA assumption. In addition, [formula] and [formula] hold on. Guided by above CLE analysis, GA approximation function [formula] satisfies the following constraints:

When x comes close to 0, [formula] will need more complex forms and must guarantee [formula] to reduce its approximation error. This criteria can reduce the absolute error [formula] so as to lower [formula] when its corresponding [formula] approaches 0. Recall that in ([\ref=limga]), x = 0 is the discontinuous point of [formula]. Hence, it brings in obvious error between [formula] and [formula];

When x leaves away from 0, thanks to the relatively large [formula], CLE bound can tolerate a more obvious absolute error [formula]. Therefore, [formula] can be designed to some simpler forms to reduce its calculation complexity.

[formula] must keep continuity between the adjacent two segments. This rule can mitigate the jitter of CLE bound by keeping smooth of initial error;

With the increase of code length, CLE bound will be amplified exponentially with the number of polarization levels. The only way to reduce CLE bound is to lower the initial relative error [formula]. Therefore, [formula] needs to be divided into more segments when x approaches 0. This criteria can reduce the original absolute error [formula] in the vicinity of 0 so as to lower [formula].

The first two constraints indicate that CLE bound is a dual guidance to design [formula]. Since CLE bound is easily calculated, we can use it as a performance metric to evaluate different versions of AGA.

Guided by above criteria, we design the following new two-segment approximation function, denoted by [formula],

[formula]

where the boundary point a  =  7.0633, its AGA algorithm is denoted by AGA-2.

Combining above criteria, we also introduce a new interval in the vicinity of 0 and propose a new piecewise function with three segments as ([\ref=AGA_3]),

[formula]

where the boundary points a  =  0.6357 and b  =  9.2254. Its corresponding AGA algorithm is represented as AGA-3. Therefore, AGA-3 is specially designed for polar codes, which follows the proposed criteria. AGA-3 has not only lower complexity but also remarkable performance.

Simulation Results

Fig. [\ref=CLE_plot_1] shows the precise results and corresponding upper bounds of CLE for various AGAs, where the polarization level n  =  8 and r  =  0 (CLE C  =  C0:8). It can be found that CLE bound and exact result coincide well. Thanks to the convenient calculation of CLE bound, it can be used as an effective tool to evaluate the performance of AGA.

Fig. [\ref=CLE_plot_2] shows the CLE bounds for different AGAs. It can be found that AGA-3 can significantly outperform that of AGA-2 when x approaches 0. However, when polarization levels increase from n  =  14 to n  =  20, their corresponding CLE bounds will significantly increase no matter for AGA-2 or AGA-3. Therefore, when the code length is long, the three-segment approximation function will also bring obvious error so that [formula] needs more segments.

Fig. [\ref=BLER_plot] gives the BLER performance comparisons for different GAs. All the schemes have code rate R  =  1 / 3 with SC decoding. The code length N  =  212,214,218, and SC bound is calculated under exact GA (EGA SC bound). For long code length, Chung's scheme results in a dramatical performance loss. On the contrast, the polar codes constructed by AGA-3 perform well. When N  =  218, AGA-2 has small performance loss. And all the results are consistent with the CLE analysis.

Conclusion

In this paper, we first propose a new metric, named CLE, to evaluate the error of AGA. We further derive the upper bound of CLE to simplify its evaluation. Guided by CLE bound, we propose new criteria to design approximate GA for polar codes. Simulation results show the performance of all GA algorithms is consistent with CLE analysis. And when polarization levels increase, the approximation function needs to be divided into more segments.