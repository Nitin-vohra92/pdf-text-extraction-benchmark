Theorem Proposition Definition Corollary

Construction of [formula]-linear Reed-Muller codes

This work has been partially supported by the Spanish MEC and the European FEDER Grant MTM2006-03250. Part of the material in Section III of this paper was presented at the 17th Symposium on Applied algebra, Algebraic algorithms, and Error Correcting Codes (AAECC), Bangalore, India, December 2007.

Introduction

In [\cite=N89] Nechaev introduced the concept of [formula]-linearity of binary codes and later, in [\cite=Ham], Hammons, Kumar, Calderbank, Sloane and Solé showed that several families of binary codes are [formula]-linear. In [\cite=Ham] it is proved that the binary linear Reed-Muller code RM(r,m) is [formula]-linear for r = 0,1,2,m - 1,m and is not [formula]-linear for r = m - 2 (m  ≥  5). In a subsequent work, Hou, Lahtonen and Koponen [\cite=Hou], proved that RM(r,m) is not [formula]-linear for 3  ≤  r  ≤  m - 2.

In [\cite=Ham] it is introduced a construction of codes, called (r,m), based on [formula]-linear codes, such that after doing modulo two we obtain the usual binary linear Reed-Muller (RM) codes. In [\cite=BFP05] [\cite=BFP06] such family of codes is studied and their parameters are computed as well as the dimension of the kernel and rank. In [\cite=PR97] a kind of Plotkin construction was used to build a family of additive Reed-Muller codes and also in [\cite=Sol05] it was used a Plotkin construction to obtain a sequence of quaternary linear Reed-Muller like codes. In both last quoted constructions, the images of the obtained codes under the Gray map are binary codes with the same parameters as the binary linear RM codes. Moreover, on the other hand, in [\cite=BoRi99] [\cite=Kro00] [\cite=Kro01] [\cite=prv] were classified all the non-equivalent [formula]-linear extended 1-perfect codes and their duals, the [formula]-linear Hadamard codes. It is a natural question to ask for the existence of families of quaternary linear codes such that, after the Gray map, the corresponding [formula]-linear codes have the same parameters as the well known family of binary linear RM codes. In these new families, like in the usual RM(r,m) family, the code with (r,m) = (1,m) should be a Hadamard code and the code with (r,m) = (m - 2,m) should be an extended 1-perfect code.

It is well known that an easy way to built the binary RM family of codes is by using the Plotkin construction [\cite=Mac]. So, it seems a good matter of study to try to generalize the Plotkin construction to the quaternary linear codes and try to obtain new families of codes which contain the above mentioned [formula]-linear Hadamard codes and [formula]-linear extended 1-perfect codes and fulfill the same properties from a parameters point of view (length, dimension, minimum distance, inclusion and duality relationship) than the binary RM family.

In this paper we begin by studying the [formula]-linear case and we organize it in the following way. In Section [\ref=sec:sec2] we introduce the concept of quaternary code and give some constructions that could be seen as quaternary generalizations of the well known binary Plotkin construction. In Section [\ref=sec:sec3], we construct several families of [formula]-linear Reed-Muller codes and prove that they have similar parameters as the classical binary RM codes but they are not linear. In Section [\ref=sec:sec4], we discuss the concept of duality for the constructed [formula]-linear Reed-Muller codes and, finally, in Section [\ref=sec:sec5] we give some conclusions and further research in the topic.

Constructions of quaternary codes

Quaternary codes

Let [formula] and [formula] be the ring of integers modulo two and modulo four, respectively. Let [formula] be the set of all binary vectors of length n and [formula] be the set of all quaternary vectors of length N. Any non-empty subset C of [formula] is a binary code and a subgroup of [formula] is called a binary linear code. Equivalently, any non-empty subset C of [formula] is a quaternary code and a subgroup of [formula] is called a quaternary linear code. In general, any non-empty subgroup C of [formula] is an additive code.

The Hamming weight [formula] of a vector in [formula] is the number of its nonzero coordinates. The Hamming distance [formula] between two vectors [formula] is [formula]. For quaternary codes it is more appropriate to use the Lee metric [\cite=lee]. In [formula] the Lee weight coincides with the Hamming weight, but in [formula] the Lee weight of their elements is L(0)  =  0,L(1)  =  L(3)  =  1, and L(2)  =  2. The Lee weight [formula] of a vector in [formula] is the addition of the Lee weight of all the coordinates. The Lee distance [formula] between two vectors [formula] is [formula].

Let C be an additive code, so a subgroup of [formula] and let C = Φ(C), where [formula], n = α + 2β, is given by [formula] for any [formula] from [formula] and any [formula] from [formula] where [formula] is the usual Gray map, so [formula] and φ(0) = (0,0),φ(1) = (0,1),φ(2) = (1,1), φ(3) = (1,0). We will use the symbols [formula], [formula] and [formula] for the all zeroes, the all ones and the all twos vectors, respectively (by the context it will be always clear we speak about the binary vectors [formula], [formula] or quaternary, it will also be clear the length of the vectors).

Hamming and Lee weights, as well as Hamming and Lee distances, can be generalized, in a natural way, to vectors in [formula] by adding the corresponding weights (or distances) of the [formula] part and the [formula] part.

Since C is a subgroup of [formula], it is also isomorphic to an abelian structure like [formula]. Therefore, we have that |C| = 2γ4δ and the number of order two codewords in C is 2γ  +  δ. We call such code C an additive code of type (α,β;γ,δ) and the binary image C = Φ(C) a [formula]-linear code of type (α,β;γ,δ). In the specific case α = 0 we see that C is a quaternary linear code and its binary image is called a [formula]-linear code. Note that the binary length of the binary code C = Φ(C) is n = α + 2β.

The minimum Hamming distance d of a [formula]-linear code C is the minimum value of [formula], where [formula] and [formula]. Notice that the Hamming distance of a [formula]-linear code C coincides with the Lee distance defined in the additive code C  =  Φ- 1(C). From now on, when we work with distances it must be understood that we deal with Hamming distances in the case of binary codes or Lee distances in the case of additive codes.

Although C could not have a basis, it is appropriate to define a generator matrix for C as

[formula]

where B2 is a γ  ×  α matrix; Q2 is a γ  ×  β matrix; B1 is a δ  ×  α matrix and Q1 is a δ  ×  β matrix. Matrices B1,B2 are binary and Q1,Q2 are quaternary, but the entries in Q2 are only zeroes or twos.

Two additive codes C1 and C2 both of the same length are said to be monomially equivalent, if one can be obtained from the other by permuting the coordinates and multiplying by - 1 of certain coordinates. Additive codes which differ only by a permutation of coordinates are said to be permutation equivalent.

For [formula]-linear codes is usual to use the following definition of inner product in [formula] that we will call the standard inner product [\cite=RP97] [\cite=BP07]:

[formula]

where [formula]. We can also write the standard inner product as

[formula]

where [formula], N = α  +  β, is a diagonal matrix over [formula]. Note that when α = 0 the inner product is the usual one for vectors over [formula] and when β = 0 it is twice the usual one for vectors over [formula].

For α = 0 and N = β = 2i, [formula], we can define the inner product in an alternative way. Let [formula] be a matrix over [formula] and define [formula] where [formula] denotes the Kronecker product of matrices. We call the Kronecker inner product the following:

[formula]

The additive dual code of C, denoted by [formula], is defined in the standard way as

[formula]

or, using the Kronecker inner product

[formula]

The definition and notations will be the same for the [formula]-duality obtained by using the standard inner product or the Kronecker inner product and the difference will be clear from the context.

Note that [formula]. Hence, both additive dual codes by using the standard inner product or the Kronecker inner product, respectively, are monomially equivalent and so they have the same weight distribution. For both inner products, the additive dual code [formula] is also an additive code, that is a subgroup of [formula]. Its weight enumerator polynomial is related to the weight enumerator polynomial of C by the MacWilliams identity [\cite=Del73]. The corresponding binary code [formula] is denoted by [formula] and called the [formula]-dual code of C. In the case α = 0, the code [formula] is also called the quaternary dual code of C and [formula] the [formula]-dual code of C. Notice that C and [formula] are not dual in the binary linear sense but the weight enumerator polynomial of [formula] is the McWilliams transform of the weight enumerator polynomial of C. Given an additive code C of type (α,β,γ,δ) it is known the type of the additive dual code ([\cite=BP07] for additive codes with [formula] and [\cite=Ham] for additive codes with α = 0).

In the present paper, as we will see later, the duality concept using the Kronecker inner product will make more visible the property that if a code C belongs to a family of Reed-Muller codes then its dual code belongs to the same family.

From now on, we focus our attention specifically to additive codes with α = 0, so quaternary linear codes such that after the Gray map they give rise to [formula]-linear codes. Given a quaternary linear code of type (0,β;γ,δ), we will write (N;γ,δ) to say that α = 0 and β = N.

The Plotkin construction

In this section, we show that the well-known binary Plotkin construction can be generalized to quaternary linear codes.

Let   A   and   B   be two quaternary linear codes of types   (N;γA,δA)   and (N;γB,δB) and minimum distances dA, dB, respectively. Given [formula] define [formula] as the set of nonzero coordinates of vector [formula].

It is easy to see that if GA and GB are generator matrices of A and B, respectively, then the matrix

[formula]

is a generator matrix of the code (A,B).

The quaternary linear code (A,B) defined using the Plotkin construction is of type (2N;γ,δ), where γ  =  γA  +  γB and δ  =  δA  +  δB; the binary length is n = 4N; the size is 2γ + 2δ and the minimum distance is d =  min {2dA,dB}.

The quaternary Plotkin construction

A useful generalization of the above construction to obtain quaternary linear codes is the following construction, called the quaternary Plotkin construction. Such construction was used, for example, in [\cite=Kro01] for the classification of all [formula]-linear Hadamard codes.

It is easy to see that if GA and GB are generator matrices of A and B, then the matrix

[formula]

is a generator matrix of the code (A,B).

The quaternary linear code (A,B) given in Definition [\ref=defi:QuatPlot] is of type (4N;γ,δ), where γ  =  γA  +  γB and δ  =  δA  +  δB; the binary length is n = 8N; the size is 2γ + 2δ and the minimum distance is d  ≥   min {4dA,2dB}.

The Plotkin and the quaternary Plotkin constructions can be combined in a double Plotkin construction. Let   A,   B,   C and D   be four quaternary linear codes of types   (N;γA,δA),   (N;γB,δB),   (N;γC,δC),   and (N;γD,δD) and minimum distances dA, dB, dC, dD, respectively.

It is easy to see that if GA, GB, GC and GD are generator matrices of A, B, C and D, then the matrix

[formula]

is a generator matrix of the code (A,B,C,D).

The quaternary linear code (A,B,C,D) given in Definition [\ref=defi:DoublePlot] is of type (4N;γ,δ), where γ  =  γA  +  γB  +  γC  +  γD and δ  =  δA  +  δB  +  δC  +  δD; the binary length is n = 8N; the size is 2γ + 2δ and the minimum distance is d  ≥   min {4dA,2dB,2dC,dD}.

Note that in case B  =  C the bound is tight because dB = dC and the minimum distance d =  min {4dA,2dC,dD} can be obtained taking specific vectors from A, C or D.

The BQ-Plotkin construction

We slightly change the construction given in Definition [\ref=defi:DoublePlot] in order to obtain a tight bound for the minimum distance. We call this new construction the BQ-Plotkin construction.

Let A, B and C be three quaternary linear codes of types (N;γA,δA), (N;γB,δB), (N;γC,δC), with minimum distances dA, dB and dC, respectively.

The quaternary linear code (A,B,C) is of type (4N;γ,δ), where γ  =  γA  +  γC and δ  =  δA  +  γB + 2δB  +  δC; the binary length is n = 8N; the size is 2γ + 2δ and the minimum distance d  =   min {4dA,2dB,dC}.

Quaternary Reed-Muller codes

The usual binary linear RM family of codes is one of the oldest and interesting family of codes. The codes in this family are easy to decode and their combinatorial properties are of great interest to produce new optimal codes.

For any integer m  ≥  1 the family of binary linear RM codes is given by the sequence RM(r,m), where 0  ≤  r  ≤  m. The code RM(r,m) is called the r-th order binary linear Reed-Muller code of length n = 2m and it is true that

[formula]

Let 0  ≤  r  ≤  m, m  ≥  1. Following [\cite=Mac] the RM(r,m) code of order r can be constructed by using the Plotkin construction in the following way:

[formula]

It is important to note that if we fix m, once we know the sequence RM(r,m) for all 0  ≤  r  ≤  m, then it is easy to obtain the new sequence RM(r,m + 1) by using the Plotkin construction ([\ref=defi:definicio]).

Moreover, the codes in the RM family fulfill the basic properties summarized in the following theorem:

In the recent literature [\cite=Ham] [\cite=W97] [\cite=BFP05] [\cite=BFP06] several families of quaternary linear codes have been proposed and studied trying to generalize the RM codes. However, when we take the corresponding [formula]-linear codes, they do not satisfy all the properties in Theorem [\ref=theo:reed-muller]. This last requirement is the main goal of the present work, to construct new families of quaternary linear codes such that, after the Gray map, we obtain [formula]-linear codes with the parameters and properties quoted in Theorem [\ref=theo:reed-muller]. The result of the present paper generalizes the results in [\cite=Sol05].

Further we will refer to these quaternary linear Reed-Muller codes as [formula] to distinguish them from the binary linear Reed-Muller codes RM. Contrary to the binary linear case, where there is only one RM family, in the quaternary case we have [formula] families for each value of m. We will distinguish these families by using subindexes s from the set [formula].

The family of [formula] codes

We begin by considering the trivial case of m = 1, that is, the case of codes of binary length n = 21. The quaternary linear Reed-Muller code [formula] is the repetition code with only one nonzero codeword (the vector with only one quaternary coordinate of value 2). This quaternary linear code is of type (1;1,0). The code [formula] is the whole space [formula], so a quaternary linear code of type (1;0,1).

These two codes, [formula] and [formula], after the Gray map, give binary codes with the same parameters of the corresponding binary codes RM(r,1) and with the same properties described in Theorem [\ref=theo:reed-muller]. In this case, when m = 1, not only these codes have the same parameters, but they have the same codewords.

We will refer to these codes as [formula] and [formula], respectively, as it is shown in Table [\ref=tab:taulaARM(r] [\ref=1)]. In each entry of this table there are the parameters (γ,δ) of the corresponding code of type (N;γ,δ).

Since we will need an specific representation for these codes in Table [\ref=tab:taulaARM(r] [\ref=1)], we will agree in using further the following matrices as the generator matrices for each one of them. The generator matrix of [formula] is [formula] and the generator matrix of [formula] is [formula].

Plotkin and BQ-Plotkin constructions

The first important point is to apply the Plotkin construction to quaternary linear Reed-Muller codes.

Let [formula] and [formula], [formula], be any two [formula] codes of type (N;γsr,m - 1,δsr,m - 1) and (N;γsr - 1,m - 1,δsr - 1,m - 1); binary length n = 2m - 1; number of codewords 2kr and 2kr - 1; minimum distance 2m - r - 1 and 2m - r respectively, where

[formula]

For m = 2, taking the [formula] codes in Table [\ref=tab:taulaARM(r] [\ref=1)] and applying Theorem [\ref=theo:plotkin] we obtain the codes in Table [\ref=tab:taulaARM(r] [\ref=2)]. The generator matrices for these codes are the following

[formula]

For m = 3, it is well known that there exist two [formula]-linear Hadamard codes [\cite=Kro01]. So, our goal is to construct two families of quaternary linear Reed-Muller codes as it is shown in Table [\ref=tab:taulaARM(r] [\ref=3)]. The codes in the first row of Table [\ref=tab:taulaARM(r] [\ref=3)] can be obtained due to the Plotkin construction from the codes of Table [\ref=tab:taulaARM(r] [\ref=2)]. But, the codes in the second row can not be obtained by using only the Plotkin construction. It is in this case that we need to exploit the new BQ-Plotkin construction as we will see later in this section.

Constructions of additive codes with the parameters of the binary linear Reed-Muller codes by using only the Plotkin construction were initiated in [\cite=PR97] [\cite=Sol05].

Let {Ai}, i = 1,2,3,4, be a family of four quaternary linear codes of types (N;γi,δi) with generator matrices Gi, respectively. Let Ai' and i be the codes generated by Gi' and i, respectively, such that for i = 1,2,3 it is true that

Then, the family {(Ai + 1,Ai)} of the three codes (A2,A1), (A3,A2) and (A4,A3) satisfies (i), (ii), (iii) and (iv) for i = 1,2 and the family {(Ai + 2,Ai + 1,Ai)} of the two codes (A3,A2,A1) and (A4,A3,A2) satisfies the properties (i), (ii), (iii) and (iv) for i = 1.

Let [formula], [formula] and [formula], [formula], m > 3, be any three [formula] codes of type   (N;γs - 1r,m - 2,δs - 1r,m - 2),   (N;γs - 1r - 1,m - 2,δs - 1r - 1,m - 2) and (N;γs - 1r - 2,m - 2,δs - 1r - 2,m - 2); binary length n = 2m - 2; number of codewords 2kr, 2kr - 1 and 2kr - 2; minimum distances 2m - r - 2, 2m - r - 1 and 2m - r respectively, where

[formula]

Let Gs(r,m), 0 < r < m - 1, be the matrix

[formula]

For the special case r = 1 we need to define Gs - 1( - 1,m - 2) as the generator matrix of the all zero codeword code.

For every [formula] the family of codes [formula] constructed using the above theorem is incomplete in the sense that the codes [formula], [formula], [formula], [formula] do not come from the construction. To be coherent with all the notations, for r =  - 1, the code [formula] is defined as the all zero codeword code. For r = 0, the code [formula] is defined as the repetition code with only one non zero codeword (the all twos quaternary vector). For r = m - 1 and r = m, the codes [formula] and [formula] are defined as the even weight code and the whole space [formula], respectively. The construction of the families of Reed-Muller codes in Theorem [\ref=theo:BQ-plotkin] is based on the generator matrices and so, for each index s, we need a generator matrix for the codes [formula], [formula], [formula], [formula].

We will use the following generator matrices: [formula], [formula], Gs(m,m) = I2m - 1.

The generator matrix Gs(m - 1,m) will be recursively obtained by using the BQ-Plotkin construction [formula] (see Definition[\ref=defi:BQPlot]).

For m  ≥  3, the matrix Gs(m - 1,m) of Definition [\ref=defi:BQPlot] associated to [formula] is a generator matrix of [formula].

Note that with these definitions of [formula], [formula], [formula], [formula], the family of codes [formula], 0  ≤  r  ≤  m, [formula], fulfills the four conditions of Lemma [\ref=lemm:PBQ-subset].

Using Theorems [\ref=theo:plotkin] and [\ref=theo:BQ-plotkin] we can construct the [formula] codes in the two rows of Table [\ref=tab:taulaARM(r] [\ref=3)]. We do not write the generator matrices for codes [formula] because they can be directly obtained from the respective codes for m  =  2 by using the Plotkin construction. For the codes in the family [formula] we present the generator matrices as a direct application of Theorem [\ref=theo:BQ-plotkin]:

[formula]

and the remaining code [formula] in the family is the whole space [formula].

All these codes, after the Gray map, give binary codes with the same parameters as the codes RM(r,3) and with the same properties described in Theorem [\ref=theo:reed-muller]. In the case m  =  3, like in the case m  =  2 not only these codes have the same parameters, but they have the same codewords. This is not in this way for all the other values m  >  3.

Now, from Table [\ref=tab:taulaARM(r] [\ref=3)] and by using the Plotkin construction we can construct the two families of the codes [formula] for s = 0,1, as it is shown in Table [\ref=tab:taulaARM(r] [\ref=4)]. Note that the family of codes [formula] also can be obtained using the BQ-Plotkin construction from the family of codes [formula] in Table [\ref=tab:taulaARM(r] [\ref=2)].

From the codes in Table [\ref=tab:taulaARM(r] [\ref=4)] applying the Plotkin construction we can construct the two families of [formula], s = 0,1, as it is shown in Table [\ref=tab:taulaARM(r] [\ref=5)]. The third family in Table [\ref=tab:taulaARM(r] [\ref=5)], [formula], is obtained applying the BQ-Plotkin construction to the [formula] family of Table [\ref=tab:taulaARM(r] [\ref=3)].

Note that [formula] only can be obtained applying the Plotkin construction, [formula] only can be obtained applying the BQ-Plotkin construction, but [formula] can be obtained by using the Plotkin or the BQ-Plotkin construction.

In general, for m > 1, the code [formula] can be only obtained applying the Plotkin construction. For m even and m odd, but [formula], families of [formula] can be obtained applying the Plotkin or the BQ-Plotkin construction. For m odd and [formula], [formula] only can be obtained applying the BQ-Plotkin construction. A question arises at this point, how many families of Reed-Muller codes can be obtained combining the Plotkin and the BQ-Plotkin constructions? Next proposition proves that no new codes appear when we combine both these constructions.

Given three quaternary linear codes A, B and C, we remind that (A,B) is the quaternary linear code obtained applying the Plotkin construction (see Definition [\ref=defi:PlotDefi]) and (A,B,C) is the quaternary linear code obtained by using the BQ-Plotkin construction (see Definition [\ref=defi:BQPlot]). The following proposition shows that the two constructions commute.

Given four quaternary linear codes A, B, C and D, then the codes ((A,B,C)),(B,C,D)) and ((A,B),(B,C),(C,D)) are permutationally equivalent.

The proof is straightforward.

Notice that the same result is true changing the BQ-Plotkin construction by the quaternary Plotkin construction or the double Plotkin construction.

From now on, when we talk about the family of Reed-Muller codes [formula] constructed by using the Plotkin and the BQ-Plotkin constructions we will assume that for m even and m odd, but [formula], these families of codes are obtained applying the Plotkin construction. For m odd and [formula], the family of codes is obtained applying the BQ-Plotkin construction.

The following lemma computes the values for the parameters γ and δ of the [formula] codes in the specific case when m is odd, m  ≥  3 and [formula].

For odd m, m  ≥  3 and [formula] we have the following values for the parameters γsr,m and δsr,m of the [formula] code built by using the BQ-Plotkin construction with the generator matrix ([\ref=matrix_even]):

As it is proved in Theorems [\ref=theo:plotkin] and [\ref=theo:BQ-plotkin] the constructed families of [formula] codes satisfy the same properties we stated for binary linear Reed-Muller codes in Theorem [\ref=theo:reed-muller] except for the duality. In the following Section we will discuss this topic.

Notice that, after the Gray map, the constructed [formula] families of quaternary linear Reed-Muller codes have not only the same parameters as the usual binary linear family of RM codes, but also the characteristic properties of codes [formula] and [formula] as it is stated in the following proposition.

For any integer m  ≥  1 and [formula], after the Gray map the code [formula] is a [formula]-linear Hadamard code and the code [formula] is an [formula]-linear extended perfect code.

Duality

For the usual binary linear RM codes we know that the codes RM(r,m) and RM(m - r - 1,m) are dual to each other. The families of [formula] codes have the same property if we use the Kronecker inner product to define the [formula]-duality.

Throughout this section the notion of duality will be related to the Kronecker inner product defined in ([\ref=kip]).

We begin by studying the duality properties for the family of [formula] codes obtained by using the BQ-Plotkin construction, that is, we are going to prove the duality relationships for the family of codes [formula], m odd, [formula], constructed from the family [formula].

Basically, we will prove this fact by induction but, previously, we need two technical lemmas. We will use Gs(r,m) to refer to the generator matrix of code [formula]; the matrices G's(r,m), s(m - r - 1,m) will have the meaning that we introduced in Definition [\ref=defi:BQPlot] and 's(r,m), s(m - r - 1,m) will be the codes generated by G's(r,m) and s(m - r - 1,m), respectively.

Let [formula] be any two vectors such that [formula] and [formula], where [formula]. Then,

[formula]

Let m be an odd integer, m  ≥  3, N = 2m - 1 and [formula]. Let [formula] be the family of [formula] codes obtained in Theorem [\ref=theo:BQ-plotkin] by using the BQ-Plotkin construction. Then, for each 0  ≤  r  ≤  m, for all [formula] and [formula] we have [formula].

Now we are going to prove the duality relationship for the families of codes obtained by using the Plotkin construction.

We summarize the properties of the [formula] codes in the following theorem:

In this section we used everywhere the Kronecker inner product to define the duality relationship. But it is also possible to use the standard definition of inner product given in ([\ref=eq:inner]) and, in this case, instead of the property 6) into the above Theorem, we obtain an alternative property 6') that we state as a new result:

Conclusion

New constructions based on quaternary linear codes has been proposed such that, after doing a Gray map, the obtained [formula]-linear codes fulfill the same properties and fundamental characteristics as the binary linear RM codes. Apart from the parameters characterizing each code an important property which remains in these new presented families is that the first order [formula] code is, under the Gray map, a [formula]-linear Hadamard code and the (m - 2)-th order [formula] code, after the Gray map, is a [formula]-linear extended perfect code, like in the usual binary case. So the families of codes obtained in the paper, after the Gray map, contain the families of [formula]-linear extended perfect and [formula]-linear Hadamard codes introduced in [\cite=Kro00] [\cite=Kro01]. Moreover, it is important to note that, after defining the Kronecker inner product, the codes [formula] and [formula] are dual each other like in the binary linear case.

There are several questions and subjects related to this work where would be of great interest to go deeply. The first one is about the generalization of the constructions of [formula] codes to the case of general additive codes, so the case of additive codes with [formula]. It is known from [\cite=BoRi99] that there exist [formula]-linear perfect and Hadamard codes (which are not [formula]-linear) and these could be the starting point of the new families. Other questions of interest are related to uniqueness (up to equivalence) of the codes in a given family of [formula] codes, weight distribution, etc.