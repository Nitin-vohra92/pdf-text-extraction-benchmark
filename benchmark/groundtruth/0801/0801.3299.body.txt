Theorem Corollary Lemma Remark Proposition Definition conjecture

A method for computing general automorphic forms on general groups

The purpose of this note is to describe a method for computing general automorphic forms. I have carried out only limited computational tests so far, and have not discovered any new automorphic forms using it. However, the method does identify some lifted cusp forms on GL(3), and until recently was the only general method to compute an automorphic form on a higher rank group. It generalizes the methods of Hejhal (e.g. [\cite=hejhal]) and others for Maass forms on GL(2), but does not require Whittaker or Bessel functions. Aside from trying to compute some of the same objects, this method is otherwise unrelated to the cohomological methods developed by Ash and others which use geometric data to compute special types of automorphic forms.

I shall begin with a highbrow version of the method, and later explain its concrete manifestations and how they relate to existing methods. Every cuspidal automorphic representation for [formula], where G is a arbitrary reductive Lie group and Γ an arithmetically defined subgroup, has associated automorphic distributions as in [\cite=voronoi]. These are viewed as objects in C-    ∞(N), the distributions on the maximal unipotent subgroup N of G. Furthermore, they satisfy invariance properties, in particular under [formula]. Fourier expansions for [formula] and [formula] can be computed in an algorithmic way using tools from representation theory, for example using [\cite=Brezin:1970] or Kirilov's method of co-adjoint nilpotent orbits. The invariance under the rest of the group Γ then provides many nontrivial (distributional) identities between these Fourier components. So far this has been carried out for GL(3) and GL(4) (see, for example, [\cite=voronoi] [\cite=glnvoronoi]) and Sp(4) ([\cite=chen]). The full set of identities characterizes automorphy (a kind of converse theorem), and when these identities are integrated against test functions, they yield identities involving invariants of the automorphic representation (such as Hecke eigenvalues). The main idea of this note is to use these relations to numerically identify automorphic forms.

The integrated identities for [formula] and [formula] were worked out in detail in [\cite=voronoi], where they are the analogs of the classical Voronoi summation formulas for GL(2). These GL(2) formulas have the form

[formula]

where a / c is a fraction in lowest terms, [formula], an are the coefficients of the form, e(u) = e2πiu, f is a test function, and F a type of transform of it (for details please see the statement in [\cite=voronoi]). When f is chosen to be the appropriate K-Bessel function, the relation ([\ref=voronoigl2]) amounts to the equality between the Fourier expansions of a Maass form evaluated at two Γ-equivalent points in the upper half plane. The generalized Voronoi formulas are similar equalities, but for specific Fourier components on [formula], and more general vectors in the automorphic representation (e.g. not just the spherical vector, which corresponds to the K-Bessel function).

Such a relation, with the K-Bessel function, has been the starting point for many numerical computations of Maass forms, which seek to solve identities such as ([\ref=voronoigl2]) for the values of the coefficients an. The essential point of the method here is that the Voronoi formula still affords this opportunity, and in fact with much greater flexibility in that it does not force a single choice of test function. Indeed, f can be a certain fractional power times any Schwartz function.

More importantly, Voronoi formulas have now been established for GL(n) in [\cite=voronoi] [\cite=glnvoronoi]. The GL(3) formula has the following form:

[formula]

where [formula] is the usual Kloosterman sum, and F represents a different transform of f than in ([\ref=voronoigl2]). The Fourier coefficients on GL(3), as they are on other higher rank groups, are indexed by more than one integral parameter, though the L-function is determined by the data [formula].

Thus one can simply seek to apply the existing coefficient-solving methods to formula ([\ref=voronoigl3]). This seems to be advantageous compared to long-standing proposals to explicitly compute GL(n) Whittaker functions: for one thing, it is uniform over all representations, and again subsumes the Whittaker approach. Thus it cannot be any less successful, though choosing appropriate functions may still be a challenge. Also, the Fourier expansion in higher rank involves more complicated sums than it does for classical modular or Maass forms, and so it is appealing to isolate individual Fourier components of it like distributional identities such as ([\ref=voronoigl3]) do. The coefficient-solving methods also include techniques to hone in on the correct eigenvalue of form when it is not known in advance, which in principal apply here also. I have not been able to investigate this in detail, however.

I have attempted to carry out the method in a simple case, of cohomological cusp forms on [formula]. The reason for doing so is that the representation type is pinned down exactly, and the coefficients are also expected to have integrality properties. Indeed, for many purposes cohomological forms are the appropriate analog of discrete series/holomorphic forms on GL(2). I wish to stress that this is done simply to avoid precision problems, and that the technique is in principal general. The simplest case of ([\ref=voronoigl3]) occurs when there is no additive twist, corresponding to a = 0 and c = 1:

[formula]

where again f and F are a transform pair of functions. This formula can also be proven by writing the lefthand side as a contour integral in terms of the Mellin transform of f, [formula], and applying the functional equation of the L-function [formula]. Formula ([\ref=simplevoronoi]) is thus essentially an equivalent form of the approximate functional equation. One could also of course attempt to use the additive twists e( - na / c) present in ([\ref=voronoigl3]) to gain further information. In the experiments f(x) was chosen to be a polynomial times a Gaussian, and F was computed using [\cite=voronoi] - more accurately, approximated by a partial sum of its residues since a closed form expression for F was impractical. An important difference between higher and lower rank groups is that more coefficients are needed as c grows, owing to the cd growth of the twisted conductor of a degree d L-function, such as one coming from GL(d). The smaller growth for GL(2) is an important ingredient in Stark's Hecke operator method [\cite=stark] (see also [\cite=terras]), which accordingly appears difficult to generalize to higher rank.

The experiments were carried out to search for cusp forms whose representation type agrees with the symmetric square lift of Ramanujan's Δ cusp form of weight 12. Here one knows via earlier computations (originating in studying the group cohomology of [formula] - see [\cite=ashpol], for example) that there is only one such form to be found: the global lift of Δ. Locking in the value a1 = 1 and using [formula] as 49 unknowns, 49 different Voronoi equations were created. The truncation of identity ([\ref=simplevoronoi]) to its first 50 terms on each side was then solved for [formula] using matrix inversion. The first few coefficients found this way are listed in Table [\ref=table1], along with their correct values (which can be independently calculated using the description of the symmetric square lift). One could further use the fact that the correct values of ann11 are integers to eliminate precision errors (in this atypical situation).

It is natural to ask whether or not there are cohomological cusp forms for [formula] aside from these symmetric square lifts from GL(2). They do exist for general congruence subgroups, but none are known at full level - this despite a serious numerical search by Ash and Pollack [\cite=ashpol], who consequently conjectured that none exist. (See also [\cite=calmaz], who propose another explanation for the paucity of these forms.)

In the case of Maass-type (i.e. spherical) cusp forms on GL(3), one does not know the eigenvalue to start with, and thus must apply procedures similar to those developed for the GL(2) case to find it along with the coefficients. Though there are again symmetric square lifts of GL(2) Maass forms, it was proven in [\cite=thesis] that there do exist many nonlifted forms: in fact the lifted ones comprise only a minuscule portion of the spherical automorphic spectrum on GL(n) [\cite=muller]. Nevertheless, none have been identified to date, and finding them remains an important challenge.

Recent Developments

Shortly after this note was first distributed on the arXiv, significant progress was made in computing Maass-type automorphic forms on GL(3). The methods used are similar to those described above in that they use an integrated form of the functional equation, as opposed to trying to use the Whittaker expansion directly. However, the success of these methods depends very much on some important differences.

First, Andrew Booker and Ce Bian announced the breakthrough calculation of new automorphic forms for [formula] [\cite=booker]. Their method uses the approximate functional equation ([\ref=simplevoronoi]), but also for the L-function twisted by Dirichlet characters. This is equivalent to using the additively-twisted Voronoi formula ([\ref=voronoigl3]), though it is not clear yet whether grouping into additive or multiplicative twists is more efficient computationally. A key point in their work is creating sufficient numerical stability for their large system of roughly 10,000 equations (related to [\cite=bookerthesis]). The payoff is clear: their results go well beyond the experiment above, which used only 49 equations. The use of twisted functional equations is motivated by the GL(3)  ×  GL(1) converse theorem of [\cite=jpss], which shows that these L-functions are sufficient to characterize automorphy. The identity ([\ref=voronoigl3]) shares this feature, as do the generalizations to [formula] Fourier expansions mentioned earlier. For this reason, it may be possible to use the distributional identities in [\cite=chen] to compute cusp forms for Sp(4), e.g. Siegel modular forms.

Days later, David Farmer, Sally Koutsoliotas, and Stefan Lemurell announced another method to numerically compute automorphic forms on [formula] [\cite=farmer]. They again use the approximate functional equation ([\ref=simplevoronoi]), with a wider choice of test functions. However, a crucial point is that they force certain expected Hecke relations (such as a2a3 = a6 and a2a5 = a10), thereby obtaining a nonlinear system of equations. They report that this has the effect of drastically lowering the number of equations needed down to about 20 for the smallest examples. Despite this reduced number of equations, their numerical accuracy still exceeds that of Table [\ref=table1].

Finally, a third method was introduced by Borislav Mezhericher [\cite=boris]. This method develops a formula which is simultaneously both a consequence of ([\ref=voronoigl3]), and yet a generalization in that it reduces to ([\ref=voronoigl3]) when an auxiliary parameter is set to zero. It shares some features in common with Hejhal's GL(2) approach, and may be useful for employing techniques that are successful there.

It should be noted that, in computing spherical automorphic forms for [formula], there are no integrality results that can be relied upon: every parameter of these forms, whether they be coefficients or eigenvalues, is thought to be transcendental. Thus all methods include an approach to identify the correct eigenvalue parameters.