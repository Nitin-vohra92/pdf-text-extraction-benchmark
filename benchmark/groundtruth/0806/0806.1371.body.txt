Unranking permutations in transposition order and linear time.

Introduction

An algorithm P(s) is constructed that produces a permutation of objects in factoradic representation. All permutations of n objects can be produced, evaluating P(s) for every 0  ≤  s  ≤  n! - 1.

The key property of the algorithm is that permutations [formula] are produced in transposition order.

Transposition Order

It is an ordering of permutations in which each two adjacent permutations differ by the transposition of two elements. For the permutations of {1,2,3} there are two listings which are in transposition order. One is 123, 132, 312, 321, 231, 213, and the other is 123, 321, 312, 213, 231, 132.[\cite=wolf]

Factoradic representation

Factoradic is a numeral system based on factorials. In factoradic, the sequence [formula] represents the number

[formula]

, where ai  ≤  i

One can represent any permutation using factoradic as follows: Suppose we have a set of n + 1 objects [formula] and the factoradic sequence [formula]. We remove the an-th element from the set of objects (the element with index an) and place it first on the permuted list. We continue with the an - 1-th object of the re-indexed set, placing it second on the permuted list and proceed likewise through a0-th (which is always zero: the first and only element left in the set).[\cite=wik]

Algorithm

The algorithm is O(n), i.e. linear in respect to the number of objects n in the set.

For a given seed s, we choose an n such that s  ≤  n! - 1. The algorithm outputs the factoradic sequence [formula] that corresponds to the s-permutation of a set of n objects.

Properties

Defining a distance d(s,s') as the minimum number of transpositions needed to reach permutation P(s') starting from permutation P(s) , the following properties can be proved:

P is a bijection: [formula]

P unranks permutations in transposition order: d(s  ±  1,s)  =  1

Also,

d(s,s')  ≤   min (|s - s'|,n - 1) ⇒  d(s  ±  2,s)  =  2

d(s,0)  ≤  k - 1, s  <  k!

|d(s,0) - d(s',0)|  ≤  d(s,s')

Examples

For s  =  4 we choose n = 4, so:

[formula]

thus P(4)  →  03220100  →  1423.

Similarly:

[formula]

Using the above values, we can validate some distance relationships:

[formula]

[formula]

[formula]

[formula]