Draft Theorem Lemma Fact Corollary Remark Observation Example Counterexample Conclusion Assumption

cm 1.3cm 1.00in 0.5in

Combinatorial invariants for graph isomorphism problem.

Introduction

We have some undirected graphs, given by the adjacency matrix

[formula]

We would like to check if there is a permutation matrix:

[formula]

So we have to check if G1, G2 are similar and if the similarity matrix is permutation. The similarity matrix could be found using numerical methods, which are asymptotic - the problem is to estimate when to be sure if we won't get permutation.

To check if the matrixes are similar, we can compare their characteristic polynomials, what can be done in polynomial time. If not - the graphs are not isomorphic, but if yes - we still don't know if the similarity matrix is permutation, but it seems unlikely that similarity matrix between two {0,1} matrixes isn't permutation.

Algorithm

To get safer algorithm we will focus on, we can compare diagonals of powers of the adjacency matrixes.

There is known and easy to check combinatorial property, that:

[formula]

where in path edges and vertices can be repeated.

Without loss of generalities, we can assume that graph is connected, so from Frobenius-Perron theorem it has unique dominant eigenvalue (≤  n) and corresponding eigenvector is nonnegative - the diagonal terms of powers of the adjacency matrixes will increase exponentially (length of numbers grows linearly) and in the limit has distribution as the eigenvector.

If the graphs are isomorphic, diagonals of above powers has to be the same up to permutation. This time the isomorphism is suggested by large numbers on the diagonal - we can just sort them. Sometimes different vertices can give the same invariants - it suggests some symmetry in the graph. In this case we have to be careful if we would like to reconstruct the isomorphism - we should build it neighbor by neighbor.

For second power the invariants ensure that degrees of vertices agrees. Higher powers checks local topology of vertex deeper and deeper. The length of numbers in powers of matrixes grows linearly with the power, so calculating powers can be done in polynomial time.

The algorithm: " For graph" G":" " For" i,k = 1,..,n " calculate" dki = (Gk)ii " sort vectors "{(dki)k}i " lexicographically" gives us n2 invariants in polynomial time.

If graphs are isomorphic, above invariants has to agree. But if they agree, are graphs isomorphic? Do they determine graph uniquely? I'll show that in 'generic' case it's true - we can even reconstruct the matrix. Unfortunately I cannot prove in this moment that there are no graphs that starting from above invariants, then eventually using some standard techniques, we couldn't determine in polynomial time if they are isomorphic, but it looks highly unprovable.

In practice we can make arithmetics modulo some large number and just check a few steps G  →  G2 and try to reconstruct isomorphism power by power. If something's wrong, we should see it early, if not we should quickly get isomorphism to check.

Reconstruction

We would like to have some nice combinatorial procedure to uniquely reconstruct the graph. Unfortunately I couldn't find it. I will show algebraic construction, which is rather unpractical, but should give unique graph in practically all - 'generic' cases.

Generally - there is some symmetric matrix [formula], but we only know

[formula]

The matrix is real, symmetric so we can diagonalize it - there exists V,D:

[formula]

where matrix V is made of eigenvectors: Avi  =  λivi.

Observe that

[formula]

so we can reconstruct the characteristic polynomials determining the spectrum.

We can present canonical base in the base of eigenvectors: [formula]. Writing this relation in columns we get: [formula], so W = VT,

[formula]

Finally we have (for k = 0 we have [formula]):

[formula]

We already know the eigenvalues - for each i we get interpolation problem. Assume that there are no two equal eigenvalues - it's one of generic property we would need. In this case, because the Vandermonde matrix is reversible, we can find all (Vij)2. We also see that checking more than n powers doesn't bring any new information. If some eigenvalues repeats, we would find smaller number of coefficient and have freedom to distribute our squares of terms between them, what would complicate the next step.

We see that we have another problem - determine signs for nonzero terms. Remember that V is orthogonal:

[formula]

and that in fact we are interested only in A:

[formula]

We see that multiplying whole column by - 1 doesn't change A - we can fix signs in the first row of V as we want. Now using above two equations, and assuming that Aij∈{0,1} and there are no zero rows/columns in A (graph is connected), we have to determine the rest of signs. It can be thought as choosing sings for 2-dimensional vectors, so that they sum up to one of two points in [formula]. We know that there is one such assignment. Coordinates of these vectors are some real numbers - in generic case there shouldn't be second one.

So in 'generic' case - that there are no two the same eigenvalues and that the signs can be assigned in unique way, the invariants determine the graph up to isomorphism.

I've also found some relations between dki and characteristic polynomials of the matrix with removed column and row of the same number - some kind of generalized Newton's identities. They could be helpful for reconstructing the matrix. The derivation is practically exactly Dan Kalman's derivation of Newton's identities [\cite=kal], so I'm presenting it shortly and referring to the paper for details. Denote [formula], p(x) = xn + an - 1xn - 1 + ... + a0  =   det (X - A) - the characteristic polynomial of A,pi(x) - characteristic polynomials of A with removed i-th row and column. From Ceyley-Hamiltonian theorem, we know that p(A) = 0. Dividing it by X - A, we will get:

[formula]

In this moment in [\cite=kal] is taken trace of both side, the left occurs to be p'(x) - we get Newton's identities. We can also be more subtle - take for example diagonal elements (i-th) - using formula for inverse matrix, we get pi on the left side, so:

[formula]

Using the right side, we get:

[formula]

Finally having (dki)k,i = 1..n, summing over i and using Newton's identities we can find the characteristic polynomial and using above relations find (pi)i = 1..n and spectrum of A with removed i-th row and column. On the other hand having (pi)i = 1..n we can sum them to get a1,...,an - 1 and finally dki using above identities. We don't get the determinant (a0) this way.

More invariants

In this moment we have n independent invariants for each vertex, which usually should determine the graph and needed n - 1 multiplications of large matrixes with large numbers. We see that if we would need less powers, the algorithm would be much faster. We should achieve it using more invariants. Unfortunately I still didn't prove fully determining of graph, but using more invariants makes it even more probable.

In previous sections, for vertex i from Nki = ((Ak)ij)j we took only the diagonal term, because the rest permute in not known way. We see that we could take the rest of terms of Nki, but we should forget about their order, but we should remember that for different k, j denotes the same vertex. For example for each vertex i we should sort lexicographically:

[formula]

For every power of A we get this way n(n - 1) invariants. Using the method from the end of previous section, we see that these invariants are equivalent knowing for each i list of characteristic polynomials of A with removed i-th row and one column. It suggest that again there is no point in using more than n powers.

The other way of constructing invariants is using not only number of pathes from given vertex, but also invariants of it's neighbors. There is huge number of possibilities now - for example take sum of some invariants of every neighbor of the vertex.

There have to be plenty of relations between these invariants. We should now choose some invariants which fully determine the graph and uses as small powers as possible.

To summarize - I didn't excluded cases that two graphs has the same invariants and they are not isomorphic, but it looks extremely improbable and probably it should be corrected in polynomial time by trying to reconstruct the isomorphism using orders from sorting.