Corollary Lemma Proposition Definition Remark

A construction of a generalised quantum SWAP gate

Introduction

Of central importance to the theory of quantum computation is the role assumed by multiple qubit gates in establishing a basis for quantum circuitry designs. A quantum circuit is an assembly of discrete sets of components which describe computational procedures (Nielsen and Chuang (2000a)). Physical implementations of such designs describe the process of computation whereby the evolution of a quantum state and its influence on other states can be modelled. In many aspects, the quantum network approach to computation resembles the classical procedure to computing (Vlasov (2004)) where quantum circuits are formed from a composition of quantum states, quantum gates and quantum wires (Nielsen and Chuang (2000b)). Our ability to preserve the coherence of quantum state rests with our ability to implement quantum computations successfully. Quantum computations are described within the Hilbert space [formula] of n qubits. Horizontal quantum circuit wires correspond to the individual [formula] subspaces. Vertical wires in a quantum circuit represent the coupling of arbitrary pairs of quantum gates, and, as such, quantum computations identify the changes imposed on a quantum state during the implementation of quantum gates in a manner analogous to classical implementation of logic gates. Those quantum gates that have been experimentally demonstrated are said to be elements of the quantum gate library. Unfortunately, there are only a handful of quantum gates that can be experimentally realised within the coherence time of their systems (Vatan and Williams (2004)). Barenco et al. (1995) showed that any quantum gate on a set of n-qubits can be restricted to a composition of realisable gates; the controlled- () gate and single qubit gates. For this reason, we say that the qubit gate library consisting of single qubit gates and the gate is universal, and in doing so, it has become standard in quantum information to express any n-qubit quantum operation as a composition of single qubit gates and gates.

Most often it is assumed that a quantum computer is predicated on a collection of two-dimensional quantum mechanical systems called qubits. However, there has been the view to generalise to d-dimensional, or qudit, quantum mechanical systems. Given an arbitrary finite alphabet Σ of cardinality d, we process quantum information by specifying a state description of a finite dimension quantum space - in particular, the state description of the Hilbert space [formula]. While the state of an d-dimensional Hilbert space can be more generally expressed as a linear combination of basis states [formula], we write each orthonormal basis state of the d-dimensional Hilbert space [formula] to correspond with an element of [formula]. In this context the basis [formula] is referred to as the computational basis. Therefore, a state [formula] of [formula] is given by [formula], where [formula] and [formula]. A qudit describes a state in the Hilbert space [formula], and the state space of an n-qudit state is the tensor product of the basis states of the single system [formula], written [formula], with corresponding orthonormal basis states given by [formula], where [formula]. The general state of a qudit in the Hilbert space H is then written

[formula]

where [formula] and [formula]. The qudit representation of a quantum state provides a natural mechanism by which quantum computations can be implemented. That such a computation is made possible initially lies with the notion of state signature. In particular, the correspondence of quantum information αk with a computational qudit basis element [formula] and the subsequent genesis of the quantum state [formula] in the Hilbert space [formula]. Such a correspondence between information and a Hilbert space representation is prerequisite to quantum computation since the successful transmission of any information state is predicated on encoding the basis states associated with the quantum information elements rather than the information itself.

Let [formula] and [formula] be two d-dimensional Hilbert spaces with bases [formula] and [formula] respectively. Let [formula] denote a pure state of the quantum system [formula]. Similarly, let [formula] denote a pure state of the quantum system [formula] and consider an arbitrary unitary transformation U∈2) acting on [formula]. Let [formula] denote a controlled-NOT (CNOT) gate that has qudit [formula] as the control qudit and [formula] as the target qudit; then

[formula]

where [formula] denote modulo d addition. We now introduce a quantum gate construction - determined entirely from instances of the gate - that generalises the qubit gate (see Fig. [\ref=swap]) to higher dimensional quantum systems.

The WilNOT Gate

The WilNOT gate is a generalised quantum SWAP gate (see Fig. [\ref=wilnotswap]) that cycles the states of d d-dimensional quantum systems. Suppose that the first quantum system A0 prepared in the state [formula], the second system A1 prepared in the state [formula] and so forth, with the final system Ad - 1 prepared in the state [formula]. Construction of the WilNOT gate over prime dimension yields a generalised SWAP gate so that the system A0 is in the state [formula], the system A1 is in the state [formula] and so forth, until the system Ad - 1 is in the state [formula]. Central to this implementation is the use of the generalised quantum controlled-NOT operator, [formula].

(Rosen (2000)) [formula].

d  =  p be a prime. The WilNOT operator algorithm provides a construction for a generalised quantum SWAP operator through uses of the generalised quantum controlled-NOT operator. The quantum SWAP operator has

Input: [formula]

Output: [formula] The WilNOT operator algorithm is described as follows:

Input: [formula]

Output: [formula]

for [formula] The WilNOT gate is initiated by Stage 1 and step j = 0 by making the correspondence between a representative input element i0k of the WilNOT gate algorithm and each standard basis state ek.

with

Proof: We show that the algorithm outputs id + 2k  =  ek + 1 for [formula] and id + 2d - 1  =  e0. At step j  =  0, we have it that,

[formula]

At Stage 2, step j  =  1 the algorithm sets i10  =  i00 and computes i11 as i11  =  i10  +  i01. Similarly, [formula]. Therefore, for [formula], we have,

[formula]

The next step, Stage 2 step j = 2, implements a repeat set of gates of step 1. By definition i20  =  i10  =  i00. The case for [formula] follows from the algorithm step,

[formula]

[formula]

We show by induction that, for [formula], [formula], [formula]. We have shown that this is true for j = 1. Let 1  ≤  j  <  d - 1 and suppose that

[formula]

[formula]. Now, ij + 10  =  ij0  =  i00. For 1  ≤  k  ≤  d - 1, we have

[formula]

Since ij + 10  =  ij0 follows from the algorithm step, we have it that [formula]. Hence, by the induction process,

[formula]

Therefore, the result is true for j + 1

[formula]

and the result follows by induction.

The algorithm at Stage 3, step j = d gives

[formula]

Implementing the algorithm step idk  =  idk - 2  +  id - 1k for [formula], we have it that

[formula]

Therefore, for odd valued k,

[formula]

and, similarly, for even valued k,

[formula]

Stage 4, step j  =  d + 1 of the algorithm is given by id + 1k = idk + idk + 1 for [formula]. Let us consider [formula]. There are two cases; for even valued k, we note that

[formula]

while

[formula]

Therefore, [formula] for even valued k. Alternatively, for odd valued k then [formula] while [formula] and [formula]. Hence,

[formula]

Recall that since the dimension, d  =  p, considered is prime, under arithmetic modulo d, [formula] vanishes for m  ≠  k + 1 and therefore we deduce that id + 1k = i0k + 1 for [formula]. When k  =  d - 1, we have

[formula]

The WilNOT gate concludes at Stage 5, step j = d + 2 with the implementation of a sequence of gates targeted on id + 1d - 1. For [formula], we have the result

[formula]

For k  =  d - 1, the value of id + 2d - 1 is given by

[formula]

To show that this returns the desired result, we consider the value id + 1d - 1  d.

[formula].

Proof.

[formula]

Since [formula] for [formula] then

[formula]

Thus, [formula] By definition of Stage 5, we have it that [formula]. The value of id + 2d - 1 is then given by

[formula]

Consequently, id + 2d - 1  d  =  id + 20  =  i00. Stage 5 of the algorithm ensures that the WilNOT gate effectuates the transformation of an input sequence given by i0k  =  ek for [formula] to the sequence id + 2k  =  ek + 1 for [formula] and id + 1d - 1  =  e0, thereby finalising the construction process for a generalised quantum SWAP gate. We show that the network swaps all dd sequences of input states.

Let [formula] be d-dimensional systems with bases [formula], [formula], [formula], where [formula]. Let [formula]. If a network implements a SWAP on each basis state [formula] of A where [formula] then the network implements a SWAP on any input state [formula].

Proof: Let [formula], [formula]. Then

[formula]

Now,

[formula]

as required.

In particular, for an input quantum state of a d-fold quantum system whose first system A0 is prepared in the state [formula], whose second system A1 is prepared in the state [formula] and so forth, and whose final system Ad - 1 of the input state is prepared in the state [formula], an application of the WilNOT gate over prime dimensions yields a generalised SWAP gate so that the system A0 is in the state [formula], the system A1 is in the state [formula] and so forth, until the system Ad - 1 is in the state [formula]. Furthermore, a (l), l  <  d, operator composed of l repeating WilNOT gates can be constructed to effectuate a cyclic shift of quantum states through l quantum systems of a d-fold qudit system.

Example: The Qutrit Case

The qubit network that swaps two arbitrary qubit states is well known [\cite=NC00c]. When restricted to the qubit setting, the WilNOT operator yields the unitary transformation matrices that swap the states of a pair of arbitrary qubits. We give an example of how WilNOT is used to swap the information content of three arbitrary qutrit states by defining the required unitary transformation matrices, see Fig. [\ref=poiu]. For the case d = 3, the WilNOT operator produces the following sequence of states of systems A0,A1,A2 on input [formula]: Stage 1. [formula] Stage 2, step 1. [formula] Stage 2, step 2. [formula] Stage 3. [formula] Stage 4. [formula] Stage 5. [formula]

The unitary transformation matrices associated with the WilNOT operator over [formula] are as follows; let U1 be the unitary transformation corresponding to Stage 1, step 1. Thus, for Stage 2, step 1 and usual lexicographic ordering for rows and columns, the matrix corresponding to U1 is given in Fig. [\ref=U1]. Then [formula]. Let [formula] Then we may write [formula] as

[formula]

Thus,

[formula]

[formula]

The state returned after step 1, is now an entangled state. This is because there is a positive entangling power measure associated with the CNOT gate (Vatan and Williams (2004)). As we seek a generalised quantum SWAP gate, we have by extension of the qubit SWAP gate, to construct a quantum gate whose entangling power measure is zero (Vatan and Williams (2004)). The state of the WilNOT gate remains entangled until all the unitary transformations described by WilNOT are applied. The set of unitary transformations are given by definition of each step in WilNOT. We now give the remaining set of unitary transformations and the action of each unitary on the corresponding input states.

The unitary matrix corresponding to Stage 2, step 2 is the same as U1. Let the transformation corresponding to Stage 2 of WilNOT be U2. So U2  =  U21. We may write the action of U2 on the state of the system prior to application of step 2 of WilNOT as

[formula]

[formula]

Let U3 denote the unitary transformation corresponding to Stage 3 of WilNOT. Then [formula] The result of applying U3 is

[formula]

[formula]

Let U4 and U5 be the unitary transformations given by [formula] and [formula]. Then Stage 4 of WilNOT is done by applying U4 and then U5. The results of applying U4 and U5 are

[formula]

and

[formula]

Let U6 and U7 be the unitary transformations given by [formula] and [formula]. Then Stage 5 of WilNOT is done by applying U6 and then applying U7 twice. The result of applying U6 is

[formula]

Similarly, the action of U7 on the state [\ref=u6] may be given as

[formula]

The second application of U7 gives

[formula]

Note that state given in equation ([\ref=U8]), the state of the system following the application of the last unitary transformation as defined by WilNOT, can be written as

[formula]

The state given in equation ([\ref=last]) is separable and has the form

[formula]

This illustrates the WilNOT gate as a quantum SWAP gate over qutrits. Fig. [\ref=poiu] gives the WilNOT network for a qutrit SWAP of arbitrary quantum states. Fig.  [\ref=u16] gives the qutrit SWAP matrix that swaps the information content of three arbitrary qutrit states and this matrix is the product of the above matrix transformations outlined in the example.

On the WilNOT Gate over Even Dimensions Greater than Two

In this section, we consider the question of whether or not the WilNOT operator can be altered so that a generalised SWAP gate can be constructed over even dimensions. It will be shown that the answer to this question is in the negative, as we induce an unavoidable sign change in one subsystem. This question is motivated by the case d  =  4 in which we considered if it was possible to swap the states of four 4-dimensional system whereby first system A0 prepared in the state [formula] is left in the state [formula], the second system A1 is prepared in the state [formula] is left in the state [formula], the third system A2 prepared in the state [formula] is left in the state [formula] and finally the system A3 prepared in the state [formula] is left in the state [formula].

Let us consider an operator with Stage 1 and Stage 2 identical to those of the WilNOT gate given in Section [\ref=WilNOT_section]. In equation ([\ref=614]) (with j = d - 1), and at Stage 2 and step j = d - 1, the state of the algorithm is given by id - 10  =  i00, and [formula] for [formula]. To effectuate the algorithm state (see equations ([\ref=619]) and ([\ref=6110]))

[formula]

on systems [formula], the WilNOT algorithm process at Stage 3 for prime d given in Section [\ref=WilNOT_section] requires revision when we consider dimensions d = 0  2. Instead we take id - 1k with the following linear combination

[formula]

where

[formula]

and the result modulo d given by ([\ref=s3]) can be obtained for Stage 3, step j  =  d.

For d = 0 mod 2, the algorithm process at Stage 3, step j  =  d given by

[formula]

for [formula], returns outcome ([\ref=s3]).

Proof. For k  =  0,1, we have it that id0  =  id - 10 and id1  =  id - 11. Thus, the states e0 and e1 are given as i00 and (d - 1)i00  +  i01 respectively. The state e2 is written as

[formula]

We show by induction that, for k  =  0  2,

[formula]

[formula]

and for k  ≠  0  2,

[formula]

We have shown that this is true for k = 0,1,2. Suppose 0  ≤  k  ≤  d - 2 and further suppose that

[formula]

k  =  0  2,

[formula]

k  ≠  0  2. Therefore, for j  =  d, we have,

[formula]

[formula]

Recall that the binomial coefficients of [formula] are precisely those coefficients of [formula] for [formula]. Hence, the particular combination of systems A(k - 2) - s that return the state [formula] is the combination that effectuates a similar sequence on idk + 1 for [formula]. Since k  =  0  2, then for idk + 1 we require that the scalar value for i00 degenerates to (d - 1) mod d. Thus, for m = 0 and by definition of as, we have

[formula]

Hence, [formula], and the result follows. We now implement Stage 4 of the WilNOT gate, which is written as

[formula]

for [formula] and

[formula]

and a revised Stage 5 given by [formula] which then returns

[formula]

Although we have not achieved our aim, our modification of the WilNOT gate for d even has produced a similar state, namely a SWAP but with a sign change for the system Ad - 1. We have not been able to modify WilNOT to produce the SWAP gate. We give the following argument to show that a different approach would be required. Result ([\ref=even3]) is a particular outcome for an even valued d and once entered into this sequence of CNOTs seems not to return an output with scalars on [formula] all equal to unity. To show this claim, let us consider the more general case given by

[formula]

Consider the pairs (ξi0k,ξi0k  +  1), for [formula], and further consider the pair (ξi0d  -  1,ξi00). Given the paired input sequence (ξi0k,ξi0k  +  1), for [formula], and a mapping that targets ik + 1, we have it that (ξi0k,ξi0k  +  1)   ↦  (ξi0k,ξi0k  +  ξi0k  +  1). Denote by Pξ the inverse mod d of ξ, whence, Pξξ  =   1 (mod d). Applying Pξ  -  1 gates, see Figure [\ref=aaaa], from the control with value ξi0k  +  ξi0k to the target corresponding to the output ξi0k results in

[formula]

To eliminate the value ξi0k from result ([\ref=gates1]), d - ξ gates are implemented on the target ξi0k  +  ξi0k  +  1 thereby illustrating the mapping

[formula]

In a similar fashion, let us consider the final pair (ξid  -  1,(d - ξ)i0). Applying those gates that correspond to result ([\ref=gates1]) and result ([\ref=gates2]) on the pair ξid  -  1,(d - ξ)i0 returns the outcome (i0d - 1 + (ξ - 1)i00,  -  ξ2i00). Thus, we have the mapping given by

[formula]

Since the scalar values ξ2 and -  ξ2 can not simultaneously be one, it seems that any mapping on the state ([\ref=even4]) will fail to return a state whose scalars values all equal unity. That such outcome in result ([\ref=even6]) is best possible suggests that the WilNOT algorithm fails to extend over dimensions d  =  0 ( 2). Therefore, it seems that WilNOT cannot be modified for the case d even to permit a cycle of states such that first system A0 prepared in the state [formula] is left in the state [formula], the second system A1 is prepared in the state [formula] is left in the state [formula], the third system A2 prepared in the state [formula] is left in the state [formula] and finally the system A3 prepared in the state [formula] is left in the state [formula]. Interestingly, WilNOT can demonstrate the case where first system A0 prepared in the state [formula] is left in the state [formula], the second system A1 is prepared in the state [formula] is left in the state [formula], the third system A2 prepared in the state [formula] is left in the state [formula] and finally the system A3 prepared in the state [formula] is left in the state [formula].

Conclusion

A construction generalising the qubit gate to qudit quantum system has been presented. This construction is composed entirely from instances of the gate. Over prime dimensions d, our construction cycles the states of d qudits while over even valued dimensions d > 2, we show that our construction can not be modified to permit a cycle of states.