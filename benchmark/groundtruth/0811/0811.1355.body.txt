=1

Matrix approach to discrete fractional calculus II: partial fractional differential equations

Introduction

Recently, kinetic equations of the diffusion, diffusion-advection, and Fokker-Planck type with partial fractional derivatives were recognized as a useful approach for the description of transport dynamics in complex systems whose temporal evolution deviates from the standard laws, that is, from exponential Debye or Gaussian laws, and from fast decaying correlations. Examples include systems exhibiting Hamiltonian chaos, disordered medium, plasma and fluid turbulence, underground water pollution, dynamics of protein molecules, motions under the influence of optical tweezers, reactions in complex systems, and more (see reviews on fractional kinetics [\cite=CheGoMeKla-ACP06] [\cite=MeKla-PhysRep00] [\cite=SoKlaBlu-PhysTo02] [\cite=Zaslav-PhysRep02] [\cite=MeKla-JPA03], the recent multi-author book [\cite=Klagers-2008], and references therein). These fractional equations are derived asymptotically from basic random walk models, the generalized master and Langevin equations. The advantage of the fractional models lies in the straightforward way of including external force terms and of calculating boundary value problems. Also, the consideration of transport in the phase space spanned by both position and velocity coordinates is possible within the fractional approach. However, because of complicated integro-differential structure of fractional kinetic equations the analytical solutions are presently known only in a very few relatively simple cases. Therefore, the development of numerical methods is of current importance.

Let us recall briefly how the kinetic equations with integer partial derivatives can be "fractionalized". There are two generic types of fractionalization, which can be explained by taking as an example the parabolic diffusion equation for the particles density u(x,t) in a one-dimensional space,

[formula]

where constant χ is diffusion coefficient. The first type of fractionalization leads to a time fractional diffusion equation by means of replacing the first order time derivative by afractional derivative of order α less than 1,

[formula]

Here, C0 Dαt is the Caputo fractional derivative [\cite=Caputo-1969], which is defined as

[formula]

Taking α  =  1 in ([\ref=eq:time-frac-diffusion]) gives the classical diffusion equation ([\ref=eq:classic-diffusion]).

Other two forms of a time fractional diffusion equation that appears in the literature use the Riemann-Liouville fractional derivative instead of the Caputo one [\cite=MeKla-PhysRep00]. Although recently, in addition to a geometric and physical interpretation of fractional integration and fractional differentiation [\cite=Podlubny-geomint-2002], a physical interpretation for the initial conditions in terms of the Riemann-Liouville fractional derivatives of the unknown function has been suggested [\cite=Heymans:2006fy], the use of Caputo derivative in physical problems is perhaps more convenient since it allows using initial conditions expressed in terms of values of the unknown function and its integer-order derivatives [\cite=Podlubny-FDE-book]. However, all three forms of "time-fractionalization" are equivalent if zero initial conditions are posed. In what follows we use the form with the Caputo derivative, equation ([\ref=eq:time-frac-diffusion]), since some of the illustrating examples use non-zero initial conditions.

In the second type of fractionalization, the second order spatial derivative is replaced by the fractional derivative of the order β between 1 and 2, thus leading to spatial fractional diffusion equation,

[formula]

where ∂β  /  ∂|x|β (we adopt here the notation introduced in [\cite=SZ97]) is a partial (with respect to spatial variable) symmetric Riesz derivative, which is defined as a half-sum of the left- and right-sided Riemann-Liouville derivatives [\cite=Podlubny-FDE-book] [\cite=Podlubny-MFC-2000]:

[formula]

where the left- and right-sided Riemann-Liouville derivatives are defined by

[formula]

[formula]

For β  =  2 the equation ([\ref=eq:intro-1-5]) becomes the classical diffusion equation ([\ref=eq:classic-diffusion]).

Other forms of asymmetric space fractional generalizations use the left-side Riemann - Liouville derivative instead of the symmetric Riesz derivative [\cite=Diego-PRL03] [\cite=MeerTad04], or asymmetric derivative with different asymmetry factors at the left- and right-side derivatives [\cite=Diego-PRL05] [\cite=DiegoPhysPlas] [\cite=Meerschaert2006]. In terms of random walk schemes, the symmetric derivative corresponds to a symmetric jump probability distribution of a diffusing particle, whereas any asymmetry in space derivative accounts for inherent force-free preferable direction of jumps which may occur, e.g., in heterogeneous porous media or magnetically confined fusion plasmas. In our paper we restrict ourselves to symmetric case, equation ([\ref=eq:intro-1-5]).

Of course, there are different generalizations of time and space fractional diffusion equations, including: multidimensional fractional diffusion and kinetic equations [\cite=ChePlas] [\cite=Friedrich03] [\cite=Meer1999], both time and space fractional generalizations [\cite=MaiLu01], different regular forces in space and time fractional Fokker-Planck equations [\cite=MeBarKla99] [\cite=CheChemPhys] [\cite=Added-11] [\cite=Added-12] [\cite=Added-13] [\cite=Added-14], variable transport coefficients [\cite=Meer06], equations with fractional derivatives of distributed and variable orders  [\cite=PhysRevE02] [\cite=JPA05] [\cite=Added-21] [\cite=Added-22] etc. The realm of fractional kinetics is growing, and therefore it is desirable to have at hand a method for numerical solution which would be relatively simple and at the same time general enough to deal effectively with different forms of fractional kinetic equations. However, while different numerical tools for ordinary fractional equations exist and a basic framework of their numerical solution is already established, relatively few numerical methods exist to solve fractional equations with partial derivatives, and the development of effective numerical schemes is now on the agenda. We recall briefly the different approaches used in the literature.

The numerical methods differ essentially in the way in which normal and fractional derivatives are discretized. In [\cite=Lynch-et-al-2003] to solve diffusion-reaction equation with the left Riemann-Liouville derivative between 1 and 2, the L2 discretization method was used taken from [\cite=Oldham-Spanier], together with its modification, L2C (both L2 and L2C methods are based on numerical approximation of a fractional integral that appears in the definition of the Riemann-Liouville fractional derivative). It was shown that the former is the most accurate for orders larger than 1.5, whereas the latter is the most accurate for orders less than 1.5. For the first order time derivative, the explicit forward Euler formula and semi-implicit scheme were used.

Langlands and Henry [\cite=Langlands-2005] used L1 scheme from [\cite=Oldham-Spanier] to discretize the Riemann-Liouville fractional time derivative of order between 1 and 2.

Yuste [\cite=Yuste2006] considered a Grünwald-Letnikov approximation for the Riemann-Liouville time derivative and used a weighted average for the second-order space derivative.

Scherer et al. [\cite=Scherer:2008kk] introduced very recently a modification of the Grünwald-Letnikov approximation for the case of the Caputo derivative of a function which is not zero in the starting point of the considered time interval, and applied that approximation for the numerical solution of fractional diffusion equations with the Caputo time derivative and non-zero initial conditions.

To solve the one-dimensional space fractional advection-dispersion equation with left-side Riemann-Liouville derivative and variable coefficients the shifted Grünwald-Letnikov approximation was proposed by Meerschaert and Tadjeran [\cite=MeerTad04]. For two-sided space-fractional partial differential equations the shifted Grünwald-Letnikov formula was proposed and discussed in [\cite=MeerTad06]. The fractional Crank-Nicholson method based on the shifted formula was elaborated, giving temporally and spatially second-order numerical estimates [\cite=TadMeer06]. The generalizations of the shifted formula and of the fractional Crank-Nicholson method in the two-dimensional case were discussed in [\cite=MeerSchef06] and  [\cite=TadMeer07], respectively.

Another method to solve the space-fractional Fokker-Planck equation with constant coefficient on the fractional derivative term was pursued by Liu et al.  [\cite=Liu2004]. They transform the partial differential equation into a system of ordinary differential equations, which is solved by a method of lines.

Ervin and Roop  [\cite=Ervin2005] [\cite=Ervin2006] presented a theoretical framework for the Galerkin finite element approximation to the steady state fractional advection-diffusion equation, and extended this approach to multidimensional partial differential equations with constant coefficients on the fractional derivative terms.

Valko and Abate [\cite=Valko2005] solved the time-fractional diffusion equation on a semi-infinite domain by numerical inversion of the two-dimensional Laplace transform. To solve the time-fractional diffusion equation in a bounded domain, Lin and Xu  [\cite=Lin07] proposed the method based on a finite difference scheme in time and Legendre spectral method in space.

Liang and Chen [\cite=Liang:2006nx] used a combination of symbolic computations and numerical inversion of the Laplace transform for solving a time-fractional diffusion-wave equation with the time derivative of order between 1 and 2.

We also mention that in order to approximate shifted Caputo time derivative appearing in hydrodynamic equations for heterogeneous porous media the modification of Yuan and Agrawal's method  [\cite=Yuan2002] was used to transform a fractional derivative into an infinite integral over auxiliary internal variables  [\cite=Lu2005].

Another approach for the solution of fractional kinetic equations employs the methods of Monte Carlo type (random walk based methods). A set of random walk schemes applied to fractional diffusion equations based on the Grünwald-Letnikov approximation was developed in the papers by Gorenflo, Mainardi and co-workers. They were applied to solve (i) symmetric space-fractional diffusion equation  [\cite=Gorenflo1999] [\cite=Gorenflo2001]; (ii) asymmetric space-fractional diffusion equation in the Lèvy-Feller form  [\cite=Gorenflo1998]; (iii) time-fractional diffusion equation with Caputo derivative [\cite=GoMa02]; (iv) time-space fractional diffusion equation  [\cite=GoMaMo02] [\cite=GoMaMo02a]. Chechkin et al.  [\cite=CheFCAA03] generalized the approach on a double-order time fractional diffusion equation. Gorenflo and Abdel-Rehim  [\cite=GoAb05] proposed discrete approximations to time-fractional diffusion process with non-homogeneous drift towards the origin by generalization of Ehrenfest's urn model. The Lèvy-Feller diffusion-advection process with a constant drift was approximated by random walk and finite difference method by Liu et al.  [\cite=Liu2007]. The random walk particle tracking approach to solve one-dimensional space-fractional diffusion-advection equation with space dependent coefficients was employed by Meerschaert and co-authors  [\cite=Meer06]. The method based on numerical solution of a coupled stochastic differential equations driven by Lèvy symmetric stable processes was proposed in [\cite=Stanescu2005] to solve a non-linear evolution problem involving the fractional Laplacian operator.

All aforementioned works indicate that numerical solution of partial fractional differential equations plays an important and increasing role in the applications of the methods and models of non-integer order.

In the present paper we propose a general approach to the numerical solution of partial fractional differential equations, which is based on the matrix form representation of discretized fractional operators introduced in [\cite=Podlubny-MFC-2000]. This approach unifies the numerical differentiation of arbitrary (including integer) order and the n-fold integration, using the so-called triangular matrices. Applied to numerical solution of differential equations, it also unifies the solution of integer- and fractional-order partial differential equations. The suggested approach leads to significant simplification of the numerical solution of partial differential equations, and it is general enough to deal with different types of partial fractional differential equations, even with delays.

The idea of the suggested method

The method that we suggest is based on triangular strip matrix approach  [\cite=Podlubny-MFC-2000] to discretization of operators of differentiation and integration of arbitrary real order.

In contrast with generally used numerical methods, where the solution is obtained step-by-step by moving from the previous time layer to the next one, let us consider the whole time interval of interest at once. This allows us to create a net of discretization nodes. In the simplest case of one spatial dimension this step gives a 2D net of nodes. An example of such discretization is shown in Fig. [\ref=fig:nodes-net]. The values of the unknown function in inner nodes (shaded area in Fig. [\ref=fig:nodes-net]) are to be found. The values at the boundaries are known: they are used later in constructing the system of algebraic equations.

The system of algebraic equations is obtained by approximating the equation in all inner nodes simultaneously (this gives the left-hand side of the resulting system of algebraic equations) and then utilizing the initial and boundary conditions (the values of which appear in the right-hand side of the resulting system).

The discretization nodes in Fig. [\ref=fig:nodes-net] are numbered from right to left in each time level, and the time levels are numbered from bottom to top. We use such numbering in this article for the clarity of presentation of our approach, although standard numberings work equally well.

In the following sections we recall the basic tools that are necessary for the method: the triangular strip matrices, the Kronecker product, the eliminators, and the shifters. Then we show how they are used for approximating partial derivatives of arbitrary real order and the equation, and how the resulting system of algebraic equations appears.

Triangular strip matrices

In this paper we use matrices of a specific structure, which are called triangular strip matrices [\cite=Podlubny-MFC-2000] [\cite=Suprunenko-Tyshkevich-66], and which have been also mentioned in [\cite=Bulgakov-54] [\cite=Gantmakher-Matrix-Theory]. We will need lower triangular strip matrices,

[formula]

and upper triangular strip matrices,

[formula]

A lower (upper) triangular strip matrix is completely described by its first column (row). Therefore, if we define the truncation operation, [formula], which truncates (in a general case) the power series ϱ(z),

[formula]

to the polynomial ϱN(z),

[formula]

then we can consider the function ϱ(z) as a generating series for the set of lower (or upper) triangular matrices LN (or UN), [formula]

It was shown in  [\cite=Podlubny-MFC-2000] that operations with triangular strip matrices, such as addition, subtraction, multiplication, and inversion, can be expressed in the form of operations with their generating series ([\ref=eq:Generating-function-general]).

Among properties of triangular strip matrices it should be noticed that if matrices C and D are both lower (upper) triangular strip matrices, then they commute:

[formula]

Kronecker matrix product

The Kronecker product [formula] of the n  ×  m matrix A and the p  ×  q matrix B

[formula]

is the np  ×  mq matrix having the following block structure:

[formula]

For example, if

[formula]

then

[formula]

Among many known interesting properties of the Kronecker product we would like to recall those that are important for the subsequent sections. Namely [\cite=Loan:2000],

if A and B are band matrices, then [formula] is also a band matrix,

if A and B are lower (upper) triangular, then [formula] is also lower (upper) triangular.

We will also need two specific Kronecker products, namely the products [formula] and [formula], where En is an n  ×  n identity matrix. For example, if A is a 2  ×  3 matrix

[formula]

then

[formula]

[formula]

This illustrates that left multiplication of An  ×  m by En creates an n  ×  n block diagonal matrix by repeating the matrix A on the diagonal, and that right multiplication of An  ×  m by Em creates a sparse matrix made of n  ×  m diagonal blocks.

Eliminators

The suggested method requires also the use of a certain type of matrices called eliminators [\cite=Podlubny-MFC-2000], which are obtained from the N  ×  N unit matrix E by keeping only some of its rows and omitting all other rows: S1 is obtained by omitting only the first row of E; S2 is obtained by omitting only the second row; S1,2 is obtained by omitting only the first and the second row of E; and, in general, [formula] is obtained by omitting the rows with the numbers [formula]. In case of infinite matrices, similar matrices appeared in [\cite=Cooke-IMS-book].

If A is a square N  ×  N matrix, then the product [formula] contains only rows of A with the numbers different from [formula]. Similarly, the product [formula] contains only columns of A with the numbers different from [formula].

The following simple example illustrates the main property of eliminators:

Shifters

For some types of approximation of differential operators (for example, one of the approximations of the symmetric Riesz derivative below in this article) and especially for numerical solution of differential equations of arbitrary order (integer or fractional) with delays, it is convenient to introduce another special kind of matrices - shifters -, which will represent discrete shifts, like, for example, delays.

Shifters (although without using this term) were used in [\cite=Podlubny-MFC-2000] for a simple generation of triangular strip matrices. There are shifters of two kinds: (N + 1)  ×  (N + 1) matrices E+N,p, [formula], with ones on p-th diagonal above the main diagonal and zeroes elsewhere, and matrices E-N,p, [formula], with ones on p-th diagonal below the main diagonal and zeroes elsewhere. We also denote [formula] the unit matrix.

The shift of all the coefficients in the triangular strip matrix UN in the south-west (bottom-left) direction can be easily written if we start with UN + 1 and then use shifters and eliminators:

[formula]

Similarly, the shift of all the coefficients in the triangular strip matrix UN in the north-east (top-right) direction can be easily obtained as:

[formula]

Discretization of ordinary fractional derivatives

It follows from [\cite=Podlubny-MFC-2000], that the left-sided Riemann-Liouville or Caputo fractional derivative v(α)(t)  =    0Dαtv(t) can be approximated in all nodes of the equidistant discretization net t  =  jτ ([formula]) simultaneously with the help of the upper triangular strip matrix B(α)n as :

[formula]

where

[formula]

[formula]

Similarly, the right-sided Riemann-Liouville or Caputo fractional derivative v(α)(t)  =    tDαbv(t) can be approximated in all nodes of the equidistant discretization net t  =  jτ ([formula]) simultaneously with the help of the lower triangular strip matrix F(α)n:

[formula]

[formula]

The symmetric Riesz derivative of order β can be approximated based on its definition ([\ref=eq:Riesz-derivative-definition]) as a combination of the approximations ([\ref=eq:left-sided-approximation]) and ([\ref=eq:right-sided-approximation]) for the left- and right-sided Riemann-Liouville derivatives, or using the centred fractional differences approximation of the symmetric Riesz derivative suggested recently by Ortigueira [\cite=Ortigueira-2006] [\cite=Ortigueira-2008]. The general formula is the same:

[formula]

In the first case, the approximation for the left-sided Caputo derivative is taken one step ahead, and the approximation for the right-sided Caputo derivatve is taken one step back. This leads to the matrix

[formula]

In the second case (Ortigueira's definition [\cite=Ortigueira-2006]) we have the following symmetric matix:

[formula]

[formula]

Both these approximations of symmetric Riesz derivatives give practically the same numerical results and in case of numerical solution of partial fractional differential equations lead to a well-posed matrix of the resulting algebraic system.

Discretization of partial derivatives in time and space

The simplest implicit discretization scheme for the classical diffusion equation is shown in Fig. [\ref=fig:stencil-1], where the two nodes in time direction are used for approximating the time derivative, and the three points in spatial direction are used for the symmetric approximation of the the spatial derivative. The stencil in Fig. [\ref=fig:stencil-1] involves therefore only two time layers. If we consider fractional-order time derivative, then we have to involve all time levels starting from the very beginning. This is shown in Fig. [\ref=fig:stencil-2] for the case of five time layers.

Similarly, if in addition to fractional-order time derivative we also consider symmetric fractional-order spatial derivatives, then we have to use all nodes at the considered time layer from the leftmost to the rightmost spatial discretization node. This most general situation is shown in Fig. [\ref=fig:stencil-3].

Let us consider the nodes (ih,jτ), [formula], corresponding to all time layers at i-th spatial discretization node. It has been shown in [\cite=Podlubny-MFC-2000] that all values of α-th order time derivative of u(x,t) at these nodes are approximated using the discrete analogue of differentiation of arbitrary order:

[formula]

In order to obtain a simultaneous approximation of α-th order time derivative of u(x,t) in all nodes shown in Fig. [\ref=fig:nodes-net], we need to arrange all function values uij at the discretization nodes to the form of a column vector:

[formula]

In visual terms of Fig. [\ref=fig:nodes-net], we first take the nodes of n-th time layer, then the nodes of (n - 1)-th time layer, and so forth, and put them in this order in a vertical column stack.

The matrix that transforms the vector Unm to the vector U(α)t of the partial fractional derivative of order α with respect to time variable can be obtained as a Kronecker product of the matrix B(α)n, which corresponds to the fractional ordinary derivative of order α (recall that n is the number of time steps), and the unit matrix Em (recall that m is the number of spatial discretization nodes):

[formula]

This is illustrated in Fig. [\ref=fig:discretization-partial-derivatives], where the nodes denoted as white and gray are used to approximate the fractional-oder time derivative at the node shown in gray.

Similarly, the matrix that transforms the vector U to the vector U(β)x of the partial fractional derivative of order β with respect to spatial variable can be obtained as a Kronecker product of the unit matrix En (recall that n is the number of spatial discretization nodes), and the matrix R(β)m, which corresponds to a symmetric Riesz ordinary derivative of order β [\cite=Ortigueira-2006] [\cite=Ortigueira-2008] (recall that m is the number of time steps):

[formula]

This is also illustrated in Fig. [\ref=fig:discretization-partial-derivatives], where the nodes denoted as black and gray (corresponding to all discretization nodes from the leftmost to the rightmost one) are used to approximate the symmetric fractional-order Riesz derivative at the same node shown in gray.

Having these approximations for partial fractional derivatives with respect to both variables, we can immediately discretize the general form of the fractional diffusion equation by simply replacing the derivatives with their discrete analogs (Fig. [\ref=fig:discretization-equation]). Namely, the equation

[formula]

is discretized as

[formula]

and the matrix of this system has the structure shown in Fig. [\ref=fig:matrix-structure-zoomed].

Initial and boundary conditions

Initial and boundary conditions must be equal to zero. If it is not so, then an auxiliary unknown function must be introduced, which satisfies the zero initial and boundary conditions. In this way, the non-zero initial and boundary conditions moves to the right-hand side of the equation for the new unknown function.

Implementation in MATLAB

We provide a set of MATLAB routines for implementing the suggested method [\cite=MFC2demo]. The function BCRECUR returns the values of the coefficients that appear in the fractional difference approximations of fractional derivatives. The function BAN returns the matrix for the backward difference approximation of the left-sided ordinary fractional derivative, the function FAN returns the matrix for approximating the right-sided ordinary fractional derivative, and the functions RANSYM and RANORT return the matrices for approximating the symmetric Riesz using the formulas ([\ref=eq:ran-half-sum]) and ([\ref=eq:ran-ort]), respectively. The function ELIMINATOR returns the eliminator matrix, and the function SHIFT implements the operations ([\ref=eq:shift-sw]) and ([\ref=eq:shift-ne]).

The use of these routines is illustrated by the demo functions FRACDIFFDEMOU, which implements Examples 1 and 2 below, FRACDIFFDEMOY, which implements Examples 3 and 4, and FRACDIFFDEMOYDELAY, which implements Example 5.

Examples

In this section we introduce several examples illustrating the use of the suggested method.

First, we demonstrate that for the classical integer-order diffusion equation our method gives proper results, which are in agreement with the analytical and numerical solutions provided in [\cite=milne].

Second, we obtain the numerical solution of a time-fractional diffusion equation. This solution is in perfect agreement with the numerical solution obtained in the very recent work [\cite=Scherer:2008kk] by a different approach.

Then we consider fractional diffusion equation with spatial fractional derivative. The fractional derivative with respect to the spatial variable is considered as a Riesz fractional derivative.

After that, we show the results of numerical solution of a general fractional diffusion equation, where time and spatial derivatives are both of fractional order - the time fractional derivative is a left-sided Riemann-Liouville derivative, and the spatial fractional derivative is a Riesz fractional derivatie.

Finally, we demonstrate that consideration of partial differential equations with fractional derivatives and delays is equally simple in the framework of the suggested general approach.

In all examples, the spatial interval is finite.

Example 1: Classical diffusion equation

Let us start with the classical problem [\cite=milne]:

[formula]

[formula]

[formula]

To reduce this problem to a problem with zero initial conditions (the boundary conditions are already zero), let us introduce an auxiliary function

[formula]

It follows from ([\ref=eq:example-1-y-u]) and ([\ref=eq:example-1-equation])-([\ref=eq:example-1-ic]) that the function y(x,t) must satisfy

[formula]

[formula]

The problem ([\ref=eq:example-1-equation-y])-([\ref=eq:example-1-ibc-y]) can be discretized using the described method (see Fig. [\ref=fig:discretization-equation]), which gives

[formula]

where m is the number of spatial discretization intervals and n is the number of time steps.

To obtain the system for finding the unknown values of ynm for the inner nodes of the discretization net, we have to use the initial and boundary conditions. Since they all are zero, it is sufficient to delete the corresponding rows and columns in the system ([\ref=eq:example-1-discretization]), which is easily done with the help of eliminators.

The result of computation of y(x,t) for the spatial step h = 0.1 and the time step τ  =  h2 / 6 is shown in Fig. [\ref=fig:example-1] (on the left) for n = 37 time steps. These values were chosen for the purpose of comparison with the results from [\cite=milne]. Using ([\ref=eq:example-1-y-u]), we can compute u(x,t), and the result is shown in Fig. [\ref=fig:example-1] (on the right). The values of u(x,t) are in perfect agreement with the values given in [\cite=milne] for the same values of h, τ, and n.

Example 2: Diffusion equation with time fractional derivative

Now let us consider the equation with the Caputo fractional-order time derivative:

[formula]

[formula]

[formula]

Since the Caputo derivative of a constant is zero [\cite=Caputo-1969] [\cite=Podlubny-FDE-book], for the auxiliary function y(x,t) defined by equation ([\ref=eq:example-1-y-u]) we obtain a problem with zero initial and boundary conditions similar to ([\ref=eq:example-1-equation-y])-([\ref=eq:example-1-ibc-y]):

[formula]

[formula]

This problem can be discretized in the same manner as the previous one (refer to Fig. [\ref=fig:discretization-equation]), with the only difference that instead of the first-order time derivative we have now a derivative of order α:

[formula]

where m is the number of spatial discretization intervals and n is the number of time steps.

As above, the use of the zero initial conditions means that the corresponding rows and columns in the system ([\ref=eq:example-2-discretization]) are removed with the help of eliminators.

The results of computations of y(x,t) and then u(x,t) for α = 1, α  =  0.7, α  =  0.5 with h = 0.05 and τ = h2 / 6 are shown in Fig.  [\ref=fig:example-2]. The structure of the matrix is the same as shown in Fig. [\ref=fig:matrix-structure-zoomed].

Obviously, for α  =  1 we have the classical case and the same plots as in Fig. [\ref=fig:example-1], and therefore Example 1 is a particular case of Example 2. As α goes to zero, the function y(x,t) slowly tends to u(x,0)  =  4x(1 - x) for all t. This is also not a surprize, because, indeed, for α = 0 the function y(x,t) does not depend on t and therefore must satisfy

which has the solution y(x)  =  4x(1 - x).

It should be noted that almost the same problem as ([\ref=eq:example-2-equation])-([\ref=eq:example-2-ic]) was numerically solved in [\cite=Scherer:2008kk] using a very different approach. The initial condition in [\cite=Scherer:2008kk] was u(x,0)  =  x(1 - x). Scaling the plots in figures 1 and 2 in [\cite=Scherer:2008kk] by the factor of 4, we obtain the plots which are practically identical with our results for u(x,t) shown in Fig. [\ref=fig:example-2]. For this comparison we considered the shorter interval 0  ≤  t  ≤  0.02 used in [\cite=Scherer:2008kk].

Example 3: Diffusion equation with spatial fractional derivative

Let us now focus on the role of spatial fractional derivative. For clarity, let us directly write the following analog of the problem ([\ref=eq:example-1-equation-y])-([\ref=eq:example-1-ibc-y]) for determining the function y(x,t):

[formula]

[formula]

where 1  <  β  ≤  2. The right-hand side is the same as in ([\ref=eq:example-1-equation-y]), but instead of second order spatial derivative we deal with the Riesz-Caputo fractional derivative.

The problem ([\ref=eq:example-3-equation-y])-([\ref=eq:example-3-ibc-y]) can be discretized using the described method (see Fig. [\ref=fig:discretization-equation]), which gives

[formula]

where m is the number of spatial discretization intervals and n is the number of time steps, and the corresponding rows and columns in the system ([\ref=eq:example-3-discretization]) are removed with the help of eliminators.

The results of computations for four different values of β are shown in Fig. [\ref=fig:example-3].

Example 4: General fractional diffusion equation

Now we can illustrate that the method works also in the case when both derivatives are of fractional order. Let us consider the most general situation:

[formula]

[formula]

The right-hand side is the same as in ([\ref=eq:example-1-equation-y]) and ([\ref=eq:example-3-equation-y]), but now both derivatives are allowed to be of non-integer order.

The problem ([\ref=eq:example-4-equation-y])-([\ref=eq:example-4-ibc-y]) can be discretized using the described method (see Fig. [\ref=fig:discretization-equation]), which gives

[formula]

where m is the number of spatial discretization intervals and n is the number of time steps, and the corresponding rows and columns in the system ([\ref=eq:example-4-discretization]) are as in all previous examples removed with the help of eliminators.

The results of computations for some sample combinations of non-integer orders α and different values of β are shown in Fig. [\ref=fig:example-4].

Example 5: Fractional diffusion equation with delay

Finally, let us consider the equation with two Caputo fractional-order time derivatives, of which one is with delay δ (we do not go into the physical interpretation of this equation, because physical interpretation of a delayed fractional derivative is not known so far, but use it for demonstrating how broad can be the field of application of our approach):

[formula]

[formula]

Obviously, for γ  =  α and δ = 0 we have the equation considered in Example 2. Let us select the discretization step so that δ is a multiple of the time step τ: δ  =  kτ. Then the problem ([\ref=eq:example-5-equation-y])-([\ref=eq:example-5-ibc-y]) can be discretized using the described method (see Fig. [\ref=fig:discretization-equation] and the equation ([\ref=eq:shift-ne])), which gives:

[formula]

where, as above, m is the number of spatial discretization intervals and n is the number of time steps, k is the number of time steps corresponding to the delay δ, and the appropriate rows and columns in the system ([\ref=eq:example-5-discretization]) are as in all previous examples are to removed with the help of eliminators.

The results of computations for a sample combination of non-integer orders α, β and γ and some delays δ represented by the parameter k are shown in Fig. [\ref=fig:example-5].

Conclusion

The suggested method represents a unifying approach to numerical solution of partial differential equations of both integer and non-integer order, including equations with delays.

For the sake of clarity, in this article we considered the case of one spatial variable. However, the suggested method can be easily extended to the case of two and three spatial variables by repeatedly applying the triangular strip matrix representations of fractional-order operators in combination with the Kronecker matrix product.

The problems considered in this article are linear, so the resulting systems of algebraic equations are linear as well. However, the suggested approach can be extended to the case of nonlinear problems, too.

The suggested method can be used also for solving partial fractional differential equations appearing from the Laplace equation by replacing second order spatial derivatives with fractional Riesz derivatives.

The suggested method can be used also for partial fractional FDEs of variable and distributed order(s) and for equations with delays.

Acknowledgments

This work could not be done without academic exchanges supported by the National Scholarship Program of the Slovak Republic (visit of A. Chechkin to Kosice, Slovakia), Summer Fellowships Program of the Department of Electrical and Computer Engineering of the Utah State University (visit of I. Podlubny to Logan, USA), and the support grant SAB2006-0172 from the Ministry of Education of Spain (visit of I. Podlubny to the University of Extremadura, Badajoz, Spain).

The authors are grateful to Professor Francesco Mainardi and to anonymous referees for their valuable comments and suggestions.

Appendix: sample evaluation of the symmetric Riesz fractional derivative

For φ(x)  =  x(1 - x) and the order of differentiation 1 < β  <  2 the left-sided Riemann-Liouville fractional derivative ([\ref=eq:RL-definition-left]) of the function φ(x) is

[formula]

Similarly, the right-sided Riemann-Liouville derivative ([\ref=eq:RL-definition-right]) of φ(x) is

[formula]

Therefore, the symmetric Riesz fractional derivative ([\ref=eq:Riesz-derivative-definition]) of the function φ(x) is:

[formula]