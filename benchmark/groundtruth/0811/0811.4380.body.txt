Proposition Lemma Conjecture Corollary

Example

Definition

Words with intervening neighbours in infinite Coxeter groups are reduced

Words with intervening neighbours

Let G be the Coxeter graph of a Coxeter group with generators S. Consider a word w in the alphabet S.

A word has the intervening neighbours property if any two occurrences of the same letter are separated by all its graph neighbours.

In the example below, s0s1s0s2 has this property, but s0s1s0s2s1 lacks it, since the two occurrences of s1 are not separated by the neighbour s3.

David Speyer [\cite=Speyer] recently proved the following result. In this note, we will demonstrate how the proof of this general result can be reduced to checking the property for just the affine Coxeter groups and just a small subset of words, for which verification of the property is straightforward. Our tool will be the finite automaton for recognition of irreducible words, invented in [\cite=H].

The root automaton

For any group given by generators and relations, a word w in the generators is called irreducible if it is the shortest word for that group element. In general, recognizing irreducible words is an undecidable problem. For a Coxeter group, however, a finite recognizing automaton exists [\cite=BH]. We will here use the concrete root automaton developed by H. Eriksson (for details, see [\cite=BB]).

In brief, a root in a Coxeter group can be represented as a vector of numbers, one for each vertex of the Coxeter graph. Let mxy  ≥  3 denote the label of the edge between two neighbouring vertices x and y in the Coxeter graph. The set of roots is generated from the unit vectors by sequences of "reflections" indexed by the vertices. The reflection corresponding to a vertex x changes only the x-component of the vector; to obtain the new x-component, change the sign of its previous value and for each neighbour y of x add the y-component value weighted by 2 cos (π / mxy)  ≥  1.

We partially order roots by componentwise ≤  . It is a fundamental fact in Coxeter theory that the nonzero values in a root are either all positive or else all negative, so the poset has a negative side and a positive side.

Figure [\ref=automaton] illustrates the root poset for the affine Coxeter group Ã2, for which the Coxeter graph is a cycle with three vertices, say a,b,c, and all edge labels equal to 3.

In order to interpret the root poset as an automaton, we let words represent paths in the poset: The path starts at the unit root corresponding to the first letter of the word. For each subsequent letter, follow the the corresponding edge in the poset (i.e., perform the corresponding reflection).

All paths start on the positive side (because unit roots are positive). Paths cross over to the negative side if and only if the corresponding word may be shortened (reduced) by deletion of its first and the letter where the crossing occurs [\cite=BB] [\cite=H]. For example, in Figure [\ref=automaton] the word acac gives a path that ends by crossing to the negative side, so we can delete the first and last letters and obtain ca as a reduced word for the same group element. Thus, we have a deterministic automaton that detects reductions involving the first letter.

Infinite groups have an infinite number of roots, but actually the automaton only needs states for the finitely many small roots, defined as the roots that can be reached from the unit roots without taking any step that changes a component by 2 or more. For example, the word abc takes the automaton in Figure [\ref=automaton] through three states:

[formula]

The last move increased the c-component by 2, so [formula] is not a small root, and in fact there are just six small roots in our example.

An automaton for recognition of irreducible words needs the small roots only, for when the current state has left the small roots (and reached a "big root"), it will not return to the small roots as long as the word is irreducible [\cite=BB] [\cite=H]. But such a path would have to return to the small roots strictly before crossing over to the negative side, and then we already know that the word allows some reduction not involving the first letter. For example, in deciding reducibility of a word in Ã2 starting with [formula], we may as well delete the first letter and look at [formula].

Intervening neighbours words in the infinite Coxeter groups

It is now immediate that if a word in Ã2 has the intervening neighbours property, then it is irreducible: The path taken by the first three letters of such words always leaves the small roots, so we can simply iterate deletion of the first letter until we are left with a two-letter word, evidently reduced.

This gives a general technique to prove irreducibility of a word: It is enough to prove that, starting anywhere in the word, the root automaton will always reach a big root before it reaches a negative root. For intervening neighbours words in the affine groups Ãn, Speyer's theorem follows from the following simple argument.

To begin with, the 1 in the initial state will propagate to neighbour vertices, then to their neighbours, and so on. Because of the intervening neighbours property, these 1-values will not change before the neighbour 0-value has been raised. The last 0-value to be raised has two neighbour 1-values, so the automaton reaches a big root before reaching the negative side.

A Coxeter graph defines an infinite group if and only if it has a subgraph like one of the graphs of the affine groups, possibly with increased edge values (see [\cite=BB]). Our next two propositions establish that it is sufficient to prove the main theorem for the graphs of the affine groups, depicted in Table [\ref=coxfin].

Consider an intervening neighbours word w' in the extended vertex set. We may write [formula], where the wi are words in the G-vertices. By assumption, the word [formula] is reduced, so it would take the root automaton through a series of positive roots. Now switch to the word [formula]. The difference comes when we play the s that necessarily is in w1, for now the extra vertex s' may make a positive contribution, say x. So x is added to the s-component and this effect propagates additively through [formula]. Since this is an intervening neighbours word, all additives will be positive or zero.

The same argument holds for the other occurrences of s' in w', so the states of the automaton will certainly stay positive.

Let w be an intervening neighbours word, so it is reduced over G and takes the automaton through positive roots. Now use the edge label m the first time a value is transported along this edge, from s to t, say. The result is a raise of the t-value and this effect propagates additively as a positive contribution, when the rest of the word is played. The same argument holds for all later uses of the m-label.

It remains for us to prove the main theorem for the graphs in Table [\ref=coxfin]. We have already covered the cyclic case in Proposition [\ref=pr:A]. All the other eight graphs are trees. For each of these graphs and each start vertex s in that graph, we will define the infinite intervening neighbours bicoloured word in the following way. Colour all neighbours of s black, colour the neighbours' neighbours white etc, so that black and white vertices alternate. The bicoloured word starts with s followed by all blacks (in any order, they commute!), then all whites, then all blacks etc. The intervening neighbours property is obvious.

The automaton action is so simple for the bicoloured word that the calculations can be performed mentally. For example, in Ẽ6 with the center vertex as s, we start with a 1 on s, then we get 1 on its neighbours, then 2 on s, then 2 on its neighbours and finally 4 on s, a raise by 2. Other start vertices also quickly move the automaton state onto a big root, so the bicoloured word must be reduced. We leave the trivial verifications to the enthusiastic reader.

So for every affine graph G and every starting letter s we have an infinite intervening neighbours words that is reduced. With no further reference to Coxeter theory, it is now possible to conclude that every intervening neighbours word in G is reduced. It is all a consequence of results about games on graphs.

Roots and chips - a polygon game

The construction of an intervening neighbours word w has an interpretation involving edge orientations. For each edge the neighbours s and t must alternate in w and we may indicate by the arrow that s was used last and that it is ts turn to occur next. If all edges are directed in this way, the dynamics of a growing intervening neighbours word can be formulated as a game with two rules:

Choose any sink vertex t and add its letter to the word.

Reverse all arrows into t so that t becomes a source.

This version of the game occurs in [\cite=HK] but if each arrow-head is detached and pronounced a chip, we have a special case of the chip-firing game by Björner, Lovász and Shor [\cite=BLS].

So now an intervening neighbours word w defines a move sequence in two different games on the same graph and we are going to merge them into the roots and chips game. A game position is a nonnegative number on each vertex and an orientation of each edge. Initially there are zeros on all vertices and the edge orientation if u occurs before t in w. If the first letter in w is s, we put a 1 on the s-vertex and reverse all its edge directions. The subsequent moves combine the action of the automaton and the chip-firing. Negative roots are not allowed, so is a terminal position. The sink in the middle cannot be played as the value would change to - 1.

The roots and chips game is a polygon game in the terminology of K. Eriksson [\cite=K]. In this game, the polygons are diamonds. An example in 2 follows.

Two neighbour vertices cannot both be sinks, so if two different moves are legal, they involve two non-neighbours. But then one move does not influence neither edge directions nor root values pertinent for the other move. Therefore the other move is still legal and the result of making both moves is independent of the order. And that defines a polygon game.

For polygon games, either all move sequences end in the same state after a finite number of moves or all move sequences can be continued indefinitely. For each of the affine groups we know one infinite move sequence, the bicoloured word, and we conclude that every intervening neighbours word with the same initial state is irreducible. The initial state includes the bicoloured edge orientation which is only one of the 2n possible edge orientations. So we need to extend the result to all the others. Our last lemma shows how this may be done, thus completing the proof of the main theorem.

For each of the eight treelike affine graphs, there is an infinite roots and chips game that passes through all possible edge orientations.

On a tree, any edge orientation can be transformed into any other edge orientation by a chip-firing game. For the simple proof by induction, see [\cite=HK].

Starting with the bicoloured edge orientation, we can construct a game that passes through all 2n possible edge orientations, and we just saw that the game will be infinite.