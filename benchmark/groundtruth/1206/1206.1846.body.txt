Warped Mixtures for Nonparametric Cluster Shapes

Introduction

Probabilistic mixture models are often used for clustering. However, if the mixture components are parametric (e.g. Gaussian), then the clustering obtained can be heavily dependent on how well each actual cluster can be modeled by a Gaussian. For example, a heavy tailed or curved cluster may need many components to model it. Thus, although mixture models are widely used for probabilistic clustering, their assumptions are generally inappropriate if the primary goal is to discover clusters in data. Dirichlet process mixture models can alleviate the problem of an unknown number of clusters, but this does not address the problem that real clusters may not be well matched by any parametric density.

In this paper, we propose a nonparametric Bayesian model that can find nonlinearly separable clusters with complex shapes. The proposed model assumes that each observation has coordinates in a latent space, and is generated by warping the latent coordinates via a nonlinear function from the latent space to the observed space. By this warping, complex shapes in the observed space can be modeled by simpler shapes in the latent space. In the latent space, we assume an infinite Gaussian mixture model [\cite=rasmussen2000infinite], which allows us to automatically infer the number of clusters. For the prior on the nonlinear mapping function, we use Gaussian processes [\cite=rasmussen38gaussian], which enable us to flexibly infer the nonlinear warping function from the data. We call the proposed model the infinite warped mixture model (iWMM). Figure [\ref=fig:generative] shows a set of manifolds and datapoints sampled from the prior defined by this model. To our knowledge this is the first probabilistic generative model for clustering with flexible nonparametric component densities. Since the proposed model is generative, it can be used for density estimation as well as clustering. It can also be extended to handle missing data, integrate with other probabilistic models, and use other families of distributions for the latent components.

We derive an inference procedure for the iWMM based on Markov chain Monte Carlo (MCMC). In particular, we sample the cluster assignments using Gibbs sampling, sample the latent coordinates using hybrid Monte Carlo, and analytically integrate out both the mixture parameters (weights, means and covariance matrices), and the nonlinear warping function.

Gaussian Process Latent Variable Model

In this section, we give a brief introduction to the GPLVM, which can be viewed as a special case of the iWMM. The GPLVM is a probabilistic model of nonlinear manifolds. While not typically thought of as a density model, the GPLVM does in fact define a posterior density over observations [\cite=nickisch2010gaussian]. It does this by smoothly warping a single, isotropic Gaussian density in the latent space into a more complicated distribution in the observed space.

Suppose that we have a set of observations [formula], where [formula], and they are associated with a set of latent coordinates [formula], where [formula]. The GPLVM assumes that observations are generated by mapping the latent coordinates through a set of smooth functions, over which Gaussian process priors are placed. Under the GPLVM, the probability of observations given the latent coordinates, integrating out the mapping functions, is

[formula]

where [formula] is the N  ×  N covariance matrix defined by the kernel function [formula], and [formula] is the kernel hyperparameter vector. In this paper, we use an RBF kernel with an additive noise term:

[formula]

This likelihood is simply the product of D independent Gaussian process likelihoods, one for each output dimension.

Typically, the GPLVM is used for dimensionality reduction or visualization, and the latent coordinates are determined by maximizing the posterior probability of the latent coordinates, while integrating out the warping function. In that setting, the Gaussian prior density on [formula] is essentially a regularizer which keeps the latent coordinates from spreading arbitrarily far apart. In contrast, we instead integrate out the latent coordinates as well as the warping function, and place a more flexible parameterization on [formula] than a single isotropic Gaussian.

Just as the GPLVM can be viewed as a manifold learning algorithm, the iWMM can be viewed as learning a set of manifolds, one for each cluster.

Infinite Warped Mixture Model

In this section, we define in detail the infinite warped mixture model (iWMM). In the same way as the GPLVM, the iWMM assumes a set of latent coordinates and a smooth, nonlinear mapping from the latent space to the observed space. In addition, the iWMM assumes that the latent coordinates are generated from a Dirichlet process mixture model. In particular, we use the following infinite Gaussian mixture model,

[formula]

where λc, [formula] and [formula] is the mixture weight, mean, and precision matrix of the [formula] mixture component. We place Gaussian-Wishart priors on the Gaussian parameters [formula],

[formula]

where [formula] is the mean of [formula], r is the relative precision of [formula], [formula] is the scale matrix for [formula], and ν is the number of degrees of freedom for [formula]. The Wishart distribution is defined as follows:

[formula]

where G is the normalizing constant. Because we use conjugate Gaussian-Wishart priors for the parameters of the Gaussian mixture components, we can analytically integrate out those parameters, given the assignments of points to components. Let zn be the latent assignment of the [formula] point. The probability of latent coordinates [formula] given latent assignments [formula] is obtained by integrating out the Gaussian parameters [formula] as follows:

[formula]

where Nc is the number of data points assigned to the [formula] component, Γ(  ·  ) is Gamma function, and

[formula]

[formula]

[formula]

are the posterior Gaussian-Wishart parameters of the [formula] component. We use a Dirichlet process with concentration parameter η for infinite mixture modeling [\cite=maceachern1998estimating] in the latent space. Then, the probability of [formula] is given as follows:

[formula]

where C is the number of components for which Nc > 0. The joint distribution is given by

[formula]

where factors in the right hand side can be calculated by ([\ref=eq:py_x]), ([\ref=eq:px_z]) and ([\ref=eq:pz]), respectively.

In summary, the infinite warped mixture model generates observations [formula] according to the following generative process:

Draw mixture weights [formula]

For each component [formula]

Draw precision [formula]

Draw mean [formula]

For each observed dimension [formula]

Draw function [formula]

For each observation [formula]

Draw latent assignment [formula]

Draw latent coordinates [formula]

For each observed dimension [formula]

Draw feature [formula]

Here, GEM(η) is the stick-breaking process [\cite=sethuraman94] that generates mixture weights for a Dirichlet process with parameter η, [formula] represents a multinomial distribution with parameter [formula], [formula] is the mean function of the Gaussian process, and [formula]. Figure [\ref=fig:graphical] shows the graphical model representation of the proposed model. Here, we assume a Gaussian for the mixture component, although we could in principle use other distributions such as Student's t-distribution or the Laplace distribution.

The iWMM can be seen as a generalization of either the GPLVM or the infinite Gaussian mixture model (iGMM). To be precise, the iWMM with a single fixed spherical Gaussian density on the latent coordinates corresponds to the GPLVM, while the iWMM with fixed direct mapping function [formula] and Q = D corresponds to the iGMM.

The iWMM offers attractive properties that do not exist in other probabilistic models; principally, the ability to model clusters with nonparametric densities, and to infer a seperate dimension for manifold.

Inference

We infer the posterior distribution of the latent coordinates [formula] and cluster assignments [formula] using Markov chain Monte Carlo (MCMC). In particular, we alternate collapsed Gibbs sampling of [formula], and hybrid Monte Carlo sampling of [formula]. Given [formula], we can efficiently sample [formula] using collapsed Gibbs sampling, integrating out the mixture parameters. Given [formula], we can calculate the gradient of the unnormalized posterior distribution of [formula], integrating over warping functions. This gradient allows us to sample [formula] using hybrid Monte Carlo.

First, we explain collapsed Gibbs sampling for [formula]. Given a sample of [formula], [formula] does not depend on [formula]. This lets resample cluster assignments, integrating out the iGMM likelihood in close form. Given the current state of all but one latent component zn, a new value for zn is sampled from the following probability:

[formula]

where [formula] is the set of latent coordinates assigned to the [formula] component, and [formula] represents the value or set when excluding the [formula] data point. We can analytically calculate [formula] as follows:

[formula]

where rc', νc', [formula] and [formula] represent the posterior Gaussian-Wishart parameters of the [formula] component when the [formula] data point is assigned to the [formula] component. We can efficiently calculate the determinant by using the rank one Cholesky update. In the same way, we can analytically calculate the likelihood for a new component [formula].

Hybrid Monte Carlo (HMC) sampling of [formula] from posterior [formula], requires computing the gradient of the log of the unnormalized posterior [formula]. The first term of the gradient can be calculated by

[formula]

and

[formula]

using the chain rule. The second term can be calculated as follows:

[formula]

We also infer kernel hyperparameters [formula] via HMC, using the gradient of the log unnormalized posterior with respect to the kernel hyperparameters. The complexity of each iteration of HMC is dominated by the O(N3) computation of [formula] .

In summary, we obtain samples from the posterior [formula] by iterating the following procedures:

For each observation [formula], sample the component assignment zn by collapsed Gibbs sampling ([\ref=eq:gibbs]).

Sample latent coordinates [formula] and kernel parameters [formula] using hybrid Monte Carlo.

Posterior Predictive Density

In the GP-LVM, the predictive density of at test point [formula] is usually computed by finding the point [formula] which which is most likely to be mapped to [formula], then using the density of [formula] and the Jacobian of the warping at that point to approximately compute the density at [formula]. When inference is done by simply optimizing the location of the latent points, this estimation method simply requires solving a single optimization for each [formula].

For our model, we use approximate integration to estimate [formula]. This is done for two reasons: First, multiple latent points (possibly from different clusters) can map to the same observed point, meaning the standard method can underestimate [formula]. Second, because we do not optimize the latent coordinates but rather sample them, we would need to perform optimizations for each [formula] seperately for each sample. Our method gives estimates for all [formula] at once, but may not be accurate in very high dimensions.

The posterior density in the observed space given the training data is simply:

[formula]

We approximate [formula] using the samples from the Gibbs and hybrid Monte Carlo samplers. We approximate [formula] by sampling points from the latent mixture and warping them, using the following procedure:

Draw latent assignment [formula]

Draw precision matrix [formula]

Draw mean [formula]

Draw latent coordinates [formula]

When a new component C + 1 is assigned to z*, the prior Gaussian-Wishart distribution is used for sampling in steps 2 and 3. The first factor of ([\ref=eq:density]) can be calculated by

[formula]

where [formula]. Each step of this procedure is exact, and since the observations [formula] are conditionally normally distributed, each one adds a smooth contribution to the empirical Monte Carlo estimate of the posterior density, as opposed to a collection of point masses. This procedure was used to generate the plots of posterior density in figures [\ref=fig:generative], [\ref=fig:warping], and [\ref=fig:posterior].

Related work

The GPLVM is effective as a nonlinear latent variable model in a wide variety of applications  [\cite=lawrence2004gaussian] [\cite=salzmann2008local] [\cite=lawrence2009non]. The latent positions [formula] in the GPLVM are typically obtained by maximum a posteriori estimation or variational Bayesian inference [\cite=titsias2010bayesian], placing a single fixed spherical Gaussian prior on [formula]. A prior which penalizes a high-dimensional latent space is introduced by  [\cite=geiger2009rank], in which the latent variables and their intrinsic dimensionality are simultaneously optimized. The iWMM can also infer the intrinsic dimensionality of nonlinear manifolds: inferring the Gaussian covariance for each latent cluster allows the variance of irrelevant dimensions to become small. Because each latent cluster has a different set of parameters, the effective dimension of each cluster can vary, allowing manifolds of different dimension in the observed space. This ability is demonstrated in figure [\ref=fig:warping]b.

The iWMM can also be viewed as a generalization of the mixture of probabilistic principle component analyzers [\cite=tipping1999mixtures], or mixture of factor analyzers [\cite=ghahramani2000variational], where the linear mapping of the mixtures is generalized to a nonlinear mapping by Gaussian processes, and number of components is infinite. There exist non-probabilistic clustering methods which can find clusters with complex shapes, such as spectral clustering [\cite=ng2002spectral] and nonlinear manifold clustering [\cite=cao2006nonlinear] [\cite=elhamifar2011sparse]. Spectral clustering finds clusters by first forming a similarity graph, then finding a low-dimensional latent representation using the graph, and finally, clustering the latent coordinates via k-means. The performance of spectral clustering depends on parameters which are usually set manually, such as the number of clusters, the number of neighbors, and the variance parameter used for constructing the similarity graph. In contrast, the iWMM infers such parameters automatically. One of the main advantages of the iWMM over these methods is that there is no need to construct a similarity graph.

The kernel Gaussian mixture model [\cite=wang2003kernel] can also find non-Gaussian shaped clusters. This model estimates a GMM in the implicit high-dimensional feature space defined by the kernel mapping of the observed space. However, the kernel GMM uses a fixed nonlinear mapping function, with no guarantee that the latent points will be well-modeled by a GMM. In contrast, the iWMM infers the mapping function such that the latent co-ordinates will be well-modeled by a mixture of Gaussians.

Experimental results

Clustering Faces

We first examined our model's ability to model images without pre-processing. We constructed a dataset consisting of 50 greyscale 32x32 pixel images of two individuals from the UMIST faces dataset [\cite=umistfaces]. Both series of images capture a person turning his head to the right. Figure [\ref=fig:faces] shows a sample from the posterior over the latent coordinates and density model. The model has recovered three relevant, interpretable features of the dataset. First, that there are two distinct faces. Second, that each set of images lies approximately along a smooth one-dimensional manifold. Third, that the two manifolds share roughly the same structure: the front-facing images of both individuals lie close to one another, as do the side-facing images.

Synthetic Datasets

Next, we demonstrate the proposed model on the four synthetic datasets shown in Figure [\ref=fig:warping]. None of these four datasets can be appropriately clustered by Gaussian mixture models (GMM). For example, consider the 2-curve data shown in Figure [\ref=fig:warping] (a), where 100 data points lie in one of two curved lines in a two-dimensional observed space. A GMM with two components cannot separate the two curved lines, while a GMM with many components could separate the two lines only by breaking each line into many clusters. In contrast, with the iWMM, the two non-Gaussian-shaped clusters in the observed space were represented by two Gaussian-shaped clusters in the latent space, as shown at the bottom row of Figure [\ref=fig:warping] (a). The iWMM separated the two curved lines by nonlinearly warping two Gaussians from the latent space to the observed space.

Figure [\ref=fig:warping] (c) shows an interesting manifold learning challenge: a dataset consisting of two circles. The outer circle is modeled in the latent space by a Gaussian with effectively one degree of freedom. This linear topology fits the outer circle in the observed space by bending the two ends until they overlap. In contrast, the sampler fails to discover the 1D topology of the inner circle, modeling it with a 2D manifold instead. This example demonstrates that each cluster in the iWMM manifold can have a different effective dimension.

Mixing

An interesting side-effect of learning the number of latent clusters is that this added flexibility can help the sampler escape local minima, helping the sampler to mix properly. Figure [\ref=fig:infer] shows the samples of the latent coordinates and clusters of the iWMM over time, when modeling the 2-curve data. [\ref=fig:infer](a) shows the latent coordinates initialized at the observed coordinates, starting with one latent component. At the 500th iteration [\ref=fig:infer](b), each curved line is modeled by two components. At the 1800th iteration [\ref=fig:infer](c), the left curved line is modeled by a single component. At the 3000th iteration [\ref=fig:infer](d), the right curved line is also modeled by a single component, and the dataset is appropriately clustered. This configuration was relatively stable, and a similar state was found at the 5000th iteration.

Density Estimation

Figure [\ref=fig:posterior] (a) shows the posterior density in the observed space inferred by the iWMM on the 2-curve data, computed using 1000 samples from the Markov chain. The two separate manifolds of high density implied by the two curved lines was recovered by the iWMM. Note also that the density along the manifold varies with the density of data shown in Figure [\ref=fig:warping] (a). This result can be compared to a special case of our model, which uses only a single Gaussian to model the latent coordinates instead of an infinite GMM. Figure [\ref=fig:posterior] (b) shows that the result of the iWMM with C = 1, where posterior is forced to place significant density connecting the two clusters. Figure [\ref=fig:posterior] (b) shows that the single-cluster variant of the iWMM posterior is forced to place significant density connecting the two clusters.

Visualization

Next, we briefly investigate the potential of the iWMM for visualization. Figure [\ref=fig:latent] (a) shows the latent coordinates obtained by averaging over 1000 samples from the posterior of the iWMM. Because rotating the latent coordinates does not change their probability, averaging may not be an adequate way to summarize the posterior. However, we show this result in order to show the characteristics of latent coordinates obtained by the iWMM. The estimated latent coordinates are clearly separated, and they form two straight lines. This result indicates that in some cases, the iWMM can recover the topology of the data before it has been warped into a manifold. For comparison, Figure [\ref=fig:latent] (b) shows the latent coordinates estimated by the iWMM when forced to use a single cluster: the latent coordinates lie in two sections of a single straight line. Figure [\ref=fig:latent] (c) and (d) show the latent coordinates estimated by the GPLVM when optimizing or integrating out the latent coordinates, respectively. Recall that the iWMM (C = 1) is a more flexible model than the GPLVM, since the GPLVM enforces a spherical covariance in the latent space. These methods did not unfold the two curved lines, since the effective dimension of their latent representation is fixed beforehand. In contrast, the iWMM effectively formed a low-dimensional representation in the latent space.

Regardless of the dimension of the latent space, the iWMM will tend to model each cluster with as low-dimensional a Gaussian as possible. This is because, if the data in a cluster can be made to lie in a low-dimensional plane, a narrowly-shaped Gaussian will assign the latent coordinates much higher likelihood than a spherical Gaussian.

Clustering Performance

We more formally evaluated the density estimation and clustering performance of the proposed model using four real datasets: iris, glass, wine and vowel, obtained from LIBSVM multi-class datasets [\cite=chang2011libsvm], in addition to the four synthetic datasets shown above: 2-curve, 3-semi, 2-circle and Pinwheel [\cite=adams2009archipelago]. The statistics of these datasets are summarized in Table [\ref=tab:statistics]. In each experiment, we show the results of ten-fold cross-validation. Results in bold are not significantly different from the best performing method in each column according to a paired t-test.

Table [\ref=tab:rand] compares the clustering performance of the iWMM with the iGMM, quantified by the Rand index [\cite=rand1971objective], which measures the correspondence between inferred clusters and true clusters. The iGMM is another probabilistic generative model commonly used for clustering, which can be seen as a special case of the iWMM in which the Gaussian clusters are not warped. These experiments demonstrate the extent to which nonparametric cluster shapes allow a mixture model to recover more meaningful clusters.

Table [\ref=tab:likelihood] lists average test log likelihood, comparing the proposed models with kernel density estimation (KDE), and the infinite Gaussian mixture model (iGMM). In KDE, the kernel width is estimated by maximizing the leave-one-out log densities. Since the manifold on which the observed data lies can be at most D-dimensional, we set the latent dimension Q equal to the observed dimension D in iWMMs. We also include the Q = 2 case in an attempt to characterize how much modeling power is lost by forcing the latent representation to be visualizable. The proposed models achieved high test log likelihoods compared with the KDE and iGMM.

Source code

Code to reproduce all the above experiments is available at .

Future work

The Dirichlet process mixture of Gaussians in the latent space of our model could easily be replaced by a more sophisticated density model, such as a hierarchical Dirichlet process [\cite=teh2006hierarchical], or a Dirichlet diffusion tree [\cite=neal2003density]. Another straightforward extension of our model would be making inference more scalable by using sparse Gaussian processes [\cite=quinonero2005unifying] [\cite=snelson2006sparse] or more advanced hybrid Monte Carlo methods [\cite=zhang2011quasi]. An interesting but more complex extension of the iWMM would be a semi-supervised version of the model. The iWMM could allow label propagation along regions of high density in the latent space, even if those regions were stretched along low-dimensional manifolds in the observed space. Another natural extension would be to allow a separate warping for each cluster, which would also improve inference speed.

Conclusion

In this paper, we introduced a simple generative model of non-Gaussian density manifolds which can infer nonlinearly separable clusters, low-dimensional representations of varying dimension per cluster, and density estimates which smoothly follow data contours. We then introduced an efficient sampler for this model which integrates out both the cluster parameters and the warping function exactly. We further demonstrated that allowing non-parametric cluster shapes improves clustering performance over the Dirichlet process Mixture of Gaussians.

Many methods have been proposed which can perform some combination of clustering, manifold learning, density estimation and visualization. We demonstrated that a simple but flexible probabilistic generative model can perform well at all these tasks.

Acknowledgements

The authors would like to thank Dominique Perrault-Joncas, Carl Edward Rasmussen, and Ryan Prescott Adams for helpful discussions.