=5

Bisous model - detecting filamentary patterns in point processes

Introduction

Galaxies, the main building blocks of our Universe, are not uniformly distributed in space. Instead, they form various structures: groups, clusters, chains, filaments, sheets, etc. Galactic filaments are the most prominent part of such a structure, containing nearly half of the total mass of the Universe [\citep=Jasche:10] [\citep=Tempel:14a].

Until now, the properties of galactic filaments have not yet been utilised fully. Compared, e.g., with galaxy clusters and cosmic voids, filaments are very rarely used as a probe of cosmology and also the role of filaments in galactic evolution is poorly known. In principle, statistics of galaxy filament properties, such as their length, width and connectivity, can be used to measure the large-scale structure and to test cosmological as well as galaxy formation models. However, detection and definition of filaments has remained problematic so far. Although filamentary structures are easily recognised visually in galaxy survey data, their complicated hierarchical nature does not allow a straightforward mathematical extraction and quantification.

A variety of methods has been proposed (e.g. based on Minkowski functionals, local topological measures, minimal spanning trees, tessellations, skeleton analysis, kinematics) that attempt to tackle the problem, briefly overviewed by [\citet=Cautun:14]. These include the methods that classify all the cosmic web elements simultaneously [\citep=Hahn:07] [\citep=AragonCalvo:10] [\citep=Falck:12] [\citep=Hoffman:12] [\citep=Smith:12] [\citep=Cautun:13] [\citep=Leclercq:15] or are specifically meant for filament detection [\citep=Bond:10] [\citep=Gonzalez:10] [\citep=Sousbie:11] [\citep=Alpaslan:14] [\citep=Chen:15].

The first attempts of filament identification have already given some surprising results. For example, filaments have been found in voids [\citep=Beygu:13] and other low-density environments [\citep=Alpaslan:14]. These examples demonstrate the potential of filament studies to take us closer to understanding the structure formation in the Universe.

In the current paper we use the Bisous model, a probabilistic filament finder that takes an advantage of the Bayesian framework and is straightforward to apply to observational datasets. Our approach to filament detection uses a marked point process that takes into account the connectivity of the filamentary network, i.e. whether or not a given filament is linked to other filament(s). The mathematical basis of the method has been described and proved in [\citet=Stoica:05] [\citet=Stoica:05a] [\citet=Stoica:07] [\citet=Stoica:10] [\citet=Stoica:14]. This model for filament detection has been developed especially for application to observational datasets in cosmology. In [\citet=Tempel:14a] we applied the Bisous model to the Sloan Digital Sky Survey (SDSS) data and published a catalogue of filaments for the SDSS.

The Bisous model fits well in a Bayesian framework that may be considered as an advantage over the conventional methods. The Bisous model does not attempt to classify the web into strict components. Instead, it assigns a confidence estimate to each detected structure. The filamentary network is modelled as a whole and the connectivity between structures is intrinsically implemented in the model. To tackle the large parameter space and global optimisation, the model uses the Markov-chain Monte Carlo (MCMC) sampling together with simulated tempering and simulated annealing.

[\citet=Tempel:14c] tested the Bisous model on simulated data. Although they used only the spatial distribution of galaxies/haloes as input, the detected filaments turned out to follow also the underlying velocity field of the simulation, thus indicating that the recovered Bisous filaments are real dynamical structures, not just apparent configurations of galaxies. Similar conclusions were reached by [\citet=Libeskind:15], using observations of the local Universe.

Filaments are in the non-linear dynamical stage of evolution between the linear and fully virialised objects, and filament evolution in simulations has gained a lot of focus during recent years. For example [\citet=Bond:10] analysed the evolution of the distribution of filaments and their properties. They found that most of the filaments are already in place from high redshifts and that most of their evolution is restricted to changes in filament size. [\citet=Choi:10] showed that filament widths are most sensitive to the non-linear growth of structure. Recently, an in-depth study of galactic filaments in simulations was made by [\citet=Cautun:14]. To move further on, the evolution of actual filaments detected from observations has to be analysed and compared with simulations. This requires advanced observational methods for filament identification, such as the Bisous model.

During recent years, the Bisous model has been extensively used to analyse the filamentary structure in general and to study the influence of the filamentary environment on galaxy/group evolution and formation. [\citet=Tempel:13a] and [\citet=Tempel:13b] showed that the alignment of major axes of galaxies with respect to galactic filaments depends on galaxy morphology. [\citet=Guo:15] showed that isolated galaxies that are located in filaments have up to two times more satellites and the satellites tend to be aligned with galactic filaments [\citep=Tempel:15b]. The alignment of structures seems to be an universal trend, having been confirmed in various studies since [\citet=Tempel:15a] showed that galaxy pairs in filaments are very well aligned with the underlying structure. The analysis presented in [\citet=Tempel:14d] indicates that the distribution of galaxies and groups along the filaments has also some regularity. These successful applications of the Bisous filament finder form a good ground to develop the model further for other astronomical applications.

The aim of this paper is to review the model presentation, in order to emphasise those mathematical and applied aspects of the Bisous model directly linked with the computational use and numerical implementation of the model. We also want to encourage the astro-statistical community to use the Bisous model, and to compare and connect this model with other methods for filamentary pattern detection and characterisation.

The general outline of the paper is the following. In Sect. [\ref=sec:math] we give a brief description of the mathematical background and tools used. Sect. [\ref=sec:params] explains the motivation and strategies how to choose the parameters for the Bisous model. Sect. [\ref=sec:spines] outlines the algorithm used to extract single filament spines from the model output. An example is given in Sect. [\ref=sec:example] and the conclusions are presented in Sect. [\ref=sec:con]. The computer code for the Bisous filament finder is made available through GitHub and [\ref=app:program] gives a brief description how to download and install the program.

Mathematical tools

In this section we briefly describe the main tools we use to detect the filamentary pattern in the galaxy distribution. We outline the key points that are important to understand the code for the Bisous model. The description follows [\citet=Tempel:14a], for details of the mathematical model we refer to [\citet=Stoica:05] [\citet=Stoica:07] [\citet=Stoica:10].

Bisous model

The marked point process we use for filament detection is different from conventional point processes used in the field. The Bisous process models the structure outlined by galaxy positions, not the distribution of galaxies themselves.

We designate K as a finite volume (0  <  ν(K)  <    ∞  ), where a finite number of galaxies ([formula]) are observed. Our aim is to model the filamentary network outlined by the positions of galaxies.

The main hypothesis of our work is that the filamentary network can be modelled by a random configuration of connected and aligned cylinders - a realisation of a marked point process. Here the points (objects) are the centres of cylinders and marks are the length and orientation of cylinders (given with an uniform law). Note that this is different from the common use of point processes in cosmological studies, where the points are centres of galaxies. In the Bisous model, the centres of galaxies are just used to calculate the probability for filaments (see below).

A cylinder is an object given by its centre k∈K and the shape parameters. The shape of a cylinder is characterised by its radius r, the length h, and the orientation vector [formula]. We denote the cylinder together with its mark (the set of parameters) by s(y) = s(k,r,h,ω)  ⊂  K.

Each cylinder s(y) has two end points. Around these points spheres of radius [formula] are centred, forming the attraction regions. These regions are used to define the connectivity and alignment rules for the model (see Sect. [\ref=sect:intenergy]). The basic cylinder within a field of galaxies is illustrated in Fig. [\ref=fig:cylinder].

Let [formula] be a configuration of cylinders, where the cylinder mark is denoted by mi. The "simplest" random configuration of cylinders is the stationary Poisson process of unit intensity. This process is constructed in two steps. First, the number of cylinders n is chosen according to a Poisson distribution of the parameter ν(K). Then the cylinder marks (lengths and the orientation vectors) are chosen, independently and identically distributed with ν(M), the given marks distribution over the marks space M [\citep=Tempel:14a]. In order to obtain a filamentary network composed of connected and aligned cylinders, we define the probability density:

[formula]

where θ is the vector of parameters, α is the normalising constant, and [formula] is the energy function of the system.

The model assumes that locally galaxies may be grouped together inside rather small cylinders that connect and align. Following these ideas the energy function in ([\ref=eq:probability]) can be specified:

[formula]

where [formula] is the interaction energy controlling the alignments and connections (see Sect. [\ref=sect:intenergy]) and [formula] is the data energy controlling the positioning of the cylinders in the galaxy field (see Sect. [\ref=sect:dataenergy]).

In order to specify the model, we have to choose its parameters. Here, the Bayesian framework is adopted, where the prior for the parameters is denoted by p(θ) [\citep=Stoica:07a] [\citep=Stoica:07] [\citep=Stoica:10]. With all these elements, we construct the joint probability density [formula] and we propose for the filamentary pattern estimator the cylinder configuration maximising it.

Interaction energy

The interaction energy term depends on the relative position of the cylinders forming the network and it can be expressed (in general form) as

[formula]

where [formula] is the number of repulsive cylinder pairs and [formula] is the number of cylinders connected to the network through s end points. For filament detection, repulsive cylinders are forbidden, hence we may consider γk = 0, so for repulsive cylinders it's associated energy is infinite. The variables log γs are the potentials associated with the 0-, 1- and 2-connected cylinders.

Two cylinders y1 and y2 (yi = (ki,ri,hi,ωi)) are connected if they attract each other, do not reject each other, and are well aligned. Two cylinders attract each other if the distance between the cylinder end points is smaller than the interaction radius [formula] (see Fig. [\ref=fig:cylinder]). Two cylinders are well aligned if [formula]. We say that two cylinders reject each other if their centres are closer than the minimum allowed distance between cylinders, [formula]. Two cylinders are considered repulsive, if they are rejecting each other, if they are not orthogonal and if they have roughly the same scale ([formula]), where the ratio of the scales [formula] is a predefined parameter. Two cylinders are considered to be orthogonal if [formula]. The constants [formula] and [formula] are predefined parameters to allow a certain range of mutual angles for aligned and perpendicular cylinders. See fig. 2 in [\citet=Tempel:14a] for illustrations of these definitions.

Data energy

The data energy term describes the local properties of a filament. For that, we use the positions of galaxies to consider whether a cylinder is a fragment of a filament or not. We use several criteria that should be fulfilled simultaneously. The first one is that galaxies should be distributed roughly uniformly along the main axis of the cylinder. The second one is that inside the cylinder the number density of galaxies should be higher than in the close-by neighbourhood (in the shadow) of the cylinder. The third one is that the galaxies belonging to the filament should be concentrated along the cylinder's axis.

In the model, the data energy of a configuration of cylinders [formula] is defined as the sum of the energy of each cylinder:

[formula]

where the potential function of the cylinder y is denoted by v(y).

In order to formulate these requirements we use a test based on counts of galaxies. In short, the score for the test is defined as

[formula]

where [formula] gives the p-value for the "local uniform spread" and [formula] gives the p-value for the "locally high density". Both these two tests depend on two more parameters, called the threshold densities [formula] and [formula], respectively. All the details of the tests are given in [\citet=Tempel:14a] and [\citet=Stoica:14].

Additionally, to take into account the spatial distribution of galaxies in a filament we introduce the cylinder concentration

[formula]

where n is the number of galaxies in a cylinder, δj is the distance to cylinder's main symmetry axis for the jth galaxy, and r is the radius of the cylinder.

Finally, the cylinder potential function v(y) puts together all these criteria

[formula]

where [formula] is a given threshold value, and the parameters [formula] and [formula] are introduced to make the location and the concentration tests numerically comparable. Clearly, the higher v(y) is, the "better" is the place to put the cylinder.

Simulation of the model

To search for the filaments in the galaxy distribution, we need to sample from the joint probability density [formula]. In this purpose we are using an iterative MCMC algorithm, where one iteration consists of two steps. First, we choose a value for the parameter θ, from p(θ). Second, conditionally on θ, we use the Metropolis-Hastings (MH) algorithm to sample a cylinder pattern from [formula] [\citep=Geyer:94] [\citep=Geyer:99].

The MH algorithm used is constructed using three types of moves [\citep=Lieshout:03] [\citep=Stoica:05] [\citep=Stoica:07] [\citep=Stoica:10]: birth (proposing with a probability [formula] to add a new cylinder), death (proposing with a probability [formula] to delete an existing cylinder), change (proposing with probability [formula] to modify the parameters of an existing cylinder). All the practical details concerning the implementation of the MH dynamics are given in [\citet=Tempel:14a] and [\citet=Stoica:14]; for a complete description we refer to [\citet=Lieshout:03] and [\citet=Stoica:05].

Annealing and tempering

The MH sampling mechanism is integrated into simulated annealing and simulated tempering algorithms.

Simulated annealing is a global optimisation method. Simulated annealing iteratively samples from [formula], while the temperature Tn slowly decreases toward zero. For marked point processes, the convergence of a simulated annealing algorithm for a logarithmic cooling schedule was proven by [\citet=Stoica:05]. In this algorithm, the temperature is lowered as Tn  =  T0 / ( log n + 1), where T0 is the initial temperature and Tn is the temperature at the iteration n.

Simulated tempering [\citep=Marinari:92] is a multi-temperature simulation technique, where the temperature is changed along a fixed temperature ladder. The temperatures are chosen from the interval

[formula]

Choosing the parameters for the Bisous model

All the parameters that are needed in order to run the code are given in the configuration file and are explained in the manual provided with the program. Table [\ref=tab:params] shows the main parameters that affect the detection of filaments together with their suggested values. In this section, we give hints for the motivation and strategies, how the parameters that influence the detected filamentary network may be chosen.

Parameters for the data potential

The data energy is defined using three quantities: [formula] to describe the local uniform spread of galaxies along the filament, [formula] to describe the locally high density condition, and σ2 to describe the cylinder concentration. The values of [formula] and [formula] depend on the threshold densities [formula] and [formula], respectively. In fact, [formula] controls the level of the degree of uniformity inside cylinders, while [formula] controls the difference between the intensity inside the cylinder compared with the environs of the cylinder.

To give the hypothesis testing term ([formula]) and the concentration term (σ2) equivalent weights, we introduced the constants [formula] and [formula]. The Fig. [\ref=fig:datapot] shows the influence of these components on the data energy.

Clearly the data potential depends on the radius and length of the cylinder. These parameters can be fixed or pre-chosen: they can be modelled in a Bayesian framework or estimated based on the galaxy field. The cylinder length is controlled by the mark distribution. For the radius, we determine it following the gradient (perpendicular to the cylinder) of the galaxy density. The radius, where the density gradient is the highest, is taken as the cylinder radius.

Parameters for the interaction potential

The interaction potential determines the connectivity of the detected filamentary network. The interaction potentials are defined so that connected cylinders are encouraged, while isolated cylinders are rather penalised. This is done by selecting the connection potentials log γs. These parameters act together with the data term. If they are too strong compared to data energies then we may detect filaments where they do not exist. On the contrary, if connection potentials are too weak, no connected network is formed. Our strategy here is to fix the order of magnitude of the interaction term, based on the data term, and incorporate the interaction term in the Bayesian framework.

Parameters for the Metropolis-Hastings dynamics

There are several parameters that affect the dynamics of a MH simulation. The quality of the filamentary network detection is defined by the model, but bad dynamics can alter the detection. The proposal probabilities were chosen [formula] such that [formula]. For simplicity these parameters do not depend on the current state of the sampler. Since we want to detect filaments, we suggest an increased probability for the birth move.

In practice, the number of moves of a MH simulation should be as large as possible (infinite in theory), but, however, it is mainly determined by the time available for computations. Since the MH simulation is complemented by a simulated annealing/tempering optimisation scheme, we also have to determine the number of moves between temperature updates: we suggest that this number should be large enough, at least of the order of magnitude of the number of cylinders in a configuration.

In the implementation of the MH dynamic, we have to fix the effective sampling volume (the Lebesque measure ν(K)) for the simulation. Since the filamentary structure is rather sparse, it is reasonable to limit the sampling volume to the regions where galaxies exist [\citep=Tempel:14a].

Choosing the temperature values

Convergence for simulated annealing is guaranteed if the initial temperature is higher than a certain bound that depends on the maximum number of objects in a configuration. We can compute this using hard core repulsion interactions. Nevertheless, this is computationally too expensive. Therefore, we have chosen the temperature values based on several trials and errors. In the code, a set of testing values is proposed.

For simulated tempering, we choose NT temperature values in the range [formula] and [formula], where the temperature limits are chosen based on a test simulation. For simulated annealing, we set the initial temperature ([formula]), where the simulation starts and the final temperature ([formula]) at the end of the simulation.

Statistical analysis of the detected filamentary network

The algorithm as described in the previous sections produces N realisations of the filamentary network. In order to improve the quality of statistical inference, the realisations are obtained using both single and parallel MCMC runs. Each realisation includes the information for all cylinders in a configuration. This data is used to construct the statistical tools for the analysis of filamentary network. The proposed tools are the visit and orientation maps, and the algorithm to extract the spines of single filaments.

Construction of the visit and orientation maps

First, the visit map [formula] estimates the probability that a given point [formula] is touched by the filamentary pattern, defined as

[formula]

where [formula] are N cylinder configurations and [formula] is the indicator function selecting only points that are covered by any of the cylinders in the configuration [formula]. The visit map can be seen as the mean estimate of the filamentary pattern.

Second, for the filamentary network we define the density map [formula] as a weighted visit map

[formula]

where the first summation is over realisations and the next summations are over cylinders in the given configuration [formula]. W(y) defines the weight for a cylinder y in a location [formula], while the potential function v(y) is defined using Eq. ([\ref=eq:datapotential]).

Third, we define the orientation field [formula] for a point [formula] and for an orientation [formula]:

[formula]

where [formula] denotes the scalar product between the cylinder orientation ωy and the orientation vector field [formula]. The orientation field in a location [formula] can be calculated for every orientation [formula] and according to the definition ∈[0,1].

Based on the orientation field, we define the density field for orientation strengths. It is defined as the maximum (over [formula]) of the orientation field at a given location [formula]

[formula]

The corresponding orientation for the maximum value [formula] at the location [formula] is defined as

[formula]

Basically, [formula] gives the orientation of a filament at the location [formula] and [formula] measures the strength of the orientation, i.e. whether the orientation is clearly defined or not.

For computing the previous estimator, the orientation ω is restricted to be one of the orientations of the cylinders in the location [formula], since the best orientation is always very close to cylinder orientations. This significantly simplifies the estimation of the best orientation in the location [formula].

Extraction of single filaments

To extract the spines of single filaments, we use a very similar algorithm to that described in [\citet=Tempel:14a]. Basically, this algorithm walks along the ridges given by the filament density map and tests whether the filament orientation is defined and if it coincides with the walking direction. Filaments are extracted as a set of points that form the spines of the filaments. The exact description of the procedure is outlined below and Fig. [\ref=fig:spine] shows the general flow chart for the filament spine extraction algorithm.

For every point [formula] we have the following values: the filament visit map and the density map values [formula] and [formula]; the orientation strength [formula] and the filament orientation [formula]. To extract single filaments from the Bisous model output using these four quantities, we follow the steps as given below.

We start at a point (designated as [formula]) of the highest visit map value [formula] that is not yet masked out. Initially, all the regions where [formula] are masked out, where [formula] is the limiting visit map value. The initial visit map is calculated on a grid with a grid step approximately of the scale (radius) of the cylinders. After the maximum is found, the visit map is calculated locally on a finer grid (the final accuracy should be much smaller than the cylinder radius) and an updated maximum in the visit map is found. If the new maximum is farther away from the initial one than half the grid step (the filament spine goes through a nearby grid cell), the point is masked out and a new highest visit map location that is not yet masked out is chosen.

We start extracting a filament if the orientation at that point is well defined. The orientation is well defined if [formula], where [formula] is the limiting orientation strength value. Otherwise, we mask out the region around this point and proceed with the step (i). The size of the masked region is taken to be the cylinder radius. Masking removes the regions that are already explored.

When extracting the filament from the point [formula], we look to both sides along the direction [formula].

To extract the filament, we move from the point [formula] in the direction [formula] by δx. The new point is designated as [formula]. The step size can be arbitrary, but obviously a smaller step produces smoother filaments. The recommended step size δx  =  r, where r is the radius of a cylinder.

Next, using Eq. ([\ref=eq:eq9]) we compute the density map D(  ·  ) in the plane that passes through the point [formula] and is perpendicular to the filament direction [formula]. From that map we find the location of the maximum density (marked as [formula]) that is closest to the point [formula]. This step is necessary to restrict the filament spine to the highest density regions. Additionally, we test whether the point [formula] belongs to the masked out region: we stop and proceed with step (x) if this region has already been explored.

We test, whether the orientation is defined ([formula]) at [formula]. If the orientation is not defined, we stop the algorithm and proceed with the step (x).

If the orientation is defined, we move forward by δx and find the next point in the current filament. This new point is used to test two additional criteria.

First, to avoid breaks in the filament, we calculate the curvature of the filament at the point [formula] using this point and its neighbours. We use the limiting value [formula] (r is the radius of cylinder) to stop the filament finding algorithm.

Second, we require that the orientations at the point [formula] and at the neighbouring points [formula] are similar: [formula]. If these criteria are satisfied, we move in the direction [formula] by δx and proceed with the step (v). Otherwise, we stop the filament finding algorithm and continue with the step (x).

If all the filament points from both sides of [formula] have been found we save the extracted points as a single filament and mask out the region around that filament.

We shall return to the first step (i) again until all the analysed volume is explored (masked out).

There are two parameters that define the filament spines: [formula] defines the limiting visit map density and [formula] defines the orientation and estimates the strength of orientation for a filament. Both criteria do not affect strong filaments, but they influence the regions where filaments intersect or the regions where filaments are poorly defined. The limiting visit map density should be high enough to have a sufficiently large number of cylinders in a given location for statistical analysis. If the number of realisations is greater than 1000, we suggest to choose [formula], i.e. there should be at least 50 cylinders in every location. The suggested value for the limiting orientation strength [formula] is 0.75: this value guarantees that at least half of the cylinders are similarly oriented at a given location.

Example dataset for the Bisous model

The use of the Bisous model is explained using an example dataset accompanied with the program. The example dataset is a 300x320x260 [formula] brick from the main spectroscopic flux-limited sample of galaxies of the SDSS DR10 down to mr = 17.77 mag. For filament detection we suppressed the fingers-of-God redshift distortions (see [\citet=Tempel:14b] for the details of the full dataset.) The example dataset includes 179 463 galaxies.

The example parameter file is prepared to detect similar filamentary structures as in [\citet=Tempel:14a]. The suggested values for the most important parameters are given in Table [\ref=tab:params]. Since the Bisous model is stochastic, clearly, the realisations are not all identical. Moreover, the practical implementation we propose does not tell us whether we are close to the solution or not. Taking inference from one realisation is not a very efficient strategy. Our results are more robust when using the proposed statistical tools: the visit map, the orientation map, and the filament spines.

We show below some basic statistics and describe the detected filamentary network, using the example dataset.

Fig. [\ref=fig:datapot] shows the distribution of the data term probabilities together with the location test and the concentration term (see Sect. [\ref=sect:dataenergy]) probabilities for individual cylinders in a detected filamentary network. As mentioned above, the scaling parameters (see Sect. [\ref=sec:par_data]) for the location test and the concentration term should be chosen based on these distributions.

The Bisous model is monitored by following the sufficient statistics - the numbers of the 0-, 1-, 2-connected cylinders in the configuration. The numbers of these cylinders as a function of the cycles in the MCMC simulation are shown in Fig. [\ref=fig:stats] (upper panel). In the middle panel of Fig. [\ref=fig:stats] we show the average data potentials for the 0-, 1-, 2-connected cylinders. With "good" model parameters, the average data potential is the "best" for the 2-connected cylinders and the "worst" for the 0-connected cylinders.

Fig. [\ref=fig:stats] also illustrates how simulated tempering and simulated annealing work. At the start of the program, we fixed 20 temperature steps in the range 0.41.5. We can see that the upper temperature value is slightly lowered during the program. If the upper temperature is too high, all the configurations are equally probable, hence, the data and interaction potentials have a weak effect - we do not detect connected structures. Since the temperature in simulated tempering is jumping up and down, the numbers of the 0-, 1-, 2-connected cylinders also change. At a low temperature, the numbers of the 0-, 1-, 2-connected cylinders do not change dramatically, the configuration is practically frozen.

An example of the detected filamentary network is shown in Fig. [\ref=fig:slice]. In this Figure individual cylinders are shown as small lines and the detected filament spines are highlighted as solid blue lines. We can clearly see that galaxies trace the visit map and the filament spines are aligned with the orientation of cylinders. Fig. [\ref=fig:slice] also shows that some of the galaxies appear to be "orphans", not belonging to any cylinder. This happens because the algorithm requires at least three galaxies for a cylinder. Those orphan galaxies are located in regions, where the number density of galaxies is too low. However, it does not mean that those galaxies do not belong to any filament. They might belong to weaker filaments crossing voids, but are undetected in the Bisous model because of the low number density of galaxies.

Finally, to show how filament spines follow the distribution of galaxies, we calculated the distribution of galaxy distances from the nearest filament spines, as shown in Fig. [\ref=fig:scale]. Since the filament scale (the radius of the cylinder) is not entirely fixed in the model, we show this distribution as a function of the filament radius (the filament scale is defined by the radius of the cylinder). Fig. [\ref=fig:scale] shows that most of the galaxies are located close to filaments and are usually closer than 0.4 [formula] from the filament spines. The distance of a galaxy from a filament spine is roughly independent of the filament thickness. This is mostly because the variable filament radius in the model helps to detect filaments also in regions where the number density of galaxies is lower. The filament radius in the Bisous model is only a very rough estimate of the true filament thickness.

Conclusions

This paper presents the use of the Bisous model, a marked point process with interactions for tracing the filamentary network in the distribution of galaxies. This method works directly on the galaxy distribution and is specifically developed for observational datasets. We review the Bisous model and emphasise those mathematical and applied aspects of the model, which are directly linked with its computational use and numerical implementation.

Our probabilistic filament finder computes the visit map (the filament detection probability field) and the filament orientation field that are moments estimators of a complex geometrical pattern. Using these two fields, we define the spines of the filaments and extract single filaments from the data.

In [\citet=Tempel:14a] we applied the Bisous model to the SDSS data and showed that the detected filaments fit well with the visible large-scale structure.

Together with the current paper, we publish the computer code of the Bisous model. The code is available in GitHub. [\ref=app:program] gives a brief description how to download and install the program.

The current implementation of the Bisous model works with discrete points, i.e. we suppose that the galaxy coordinates are accurate. Since the Bisous model uses the distribution of galaxies to calculate the probability for the filamentary network, the model can be developed further to detect filamentary structure in photometric redshift surveys. In this case, the full posterior for photometric redshifts can be taken into account in the Bisous model. It is highly promising to apply this method to accurate photometric redshift surveys such as J-PAS [\citep=Benitez:14].

Acknowledgements

We thank the Referee for a useful feedback that helped to improve the paper. We acknowledge the support by the Estonian Research Council grants IUT26-2, IUT40-2, and TK133.

Download and installation details

The computer code is made available through GitHub from the following webpage . To download the code, follow the instructions in GitHub.

The program is written in Fortran using the Fortran 2003 standard. The code has been tested using the Intel Fortran Compiler, but it should compile with any Fortran compiler that supports the Fortran 2003 standard. The code can be compiled using the Makefile. If you use Intel Fortran Compiler there is no need to modify the Makefile, otherwise you should specify your Fortran compiler. To compile the program on Unix systems you should just give the command make. This will generate an executable file bisous_program.

To run the program you should prepare a configuration file, e.g. config_example.ini. Then just type bisous_program config_example.ini.

References