Potholes Ahead: Impact of Transient Link Blockage on Beam Steering in Practical mm-Wave Systems

Signal-to-Noise Ratio Modulation and Coding Scheme Transmission Control Protocol commercial off-the-shelf Blind Beam Steering window size millimeter wave Universal Software Radio Peripheral Beacon Interval Sector Sweep Interval Carrier Sense Multiple Access with Collision Avoidance

Introduction

Distinguishing link degradation due to mobility from that due to blockage in networks is challenging. However, transceivers operating in this band must be able to tell both apart for proper beam steering. Due to the high path loss at frequencies, transceivers use beamforming to overcome attenuation [\cite=challenges60Ghz]. Both the transmitter and the receiver must steer their beams towards each other to achieve a high . If one of them moves, they must adjust their beams accordingly. However, in case of transient link blockage due to, e.g., a person crossing the link, both transceivers should maintain their original beam steering. In home or office scenarios, such as envisioned in 802.11ad [\cite=ad_standard], mobility and blockage are likely to happen often.

Figure [\ref=fig:example_blockage] shows an example of the impact of transient blockage on the throughput for a 60 GHz device. While related work also studies the impact of blockage on 60 GHz communications [\cite=Zhu2014Mobicom] [\cite=measurements_blockage], it does not consider the beam steering misalignment that may occur as a result. In Figure [\ref=fig:example_blockage], we observe that after the first blockage at second 25, the throughput stabilizes at more than 200 mbps less than that prior to the blockage, even though the link is unobstructed. In other words, our device has interpreted the first blockage as mobility, thus trying to adapt its beam steering. While the new steering allows for communication, the is lower, resulting in lower throughput. At second 50 in Figure [\ref=fig:example_blockage], a second blockage causes another beam realignment, which in this case fortunately results in the original beam steering and allows to achieve again roughly 700 mbps. Figure [\ref=fig:example_blockage] shows that the impact of transient blockage can be highly detrimental to throughput if the transceiver classifies blockage as mobility, causing a throughput "pothole" while the link is misaligned. First, the link operates significantly below its potential. Second, the throughput exhibits high fluctuations. Regarding the latter, we find that throughput can stabilize at a number of different levels after a blockage. This is critical for traffic which requires stable, high throughput links, such as uncompressed video.

Related work proposes a number of beam steering solutions that partially solve the above problem. The 802.11ad standard suggests beam tracking to address mobility. That is, devices continuously track variations and adapt their beam steering accordingly. This avoids costly beam sweeping, i.e., exhaustively probing all directional beam patterns of a transmitter to find the receiver after the transmitter and/or the receiver move. Still, beam tracking itself cannot distinguish mobility from blockage, resulting in the behavior in Figure [\ref=fig:example_blockage]. Similarly, other approaches that aim at reducing the complexity of beam sweeping [\cite=opt_beam_sweep] cannot distinguish them neither. In contrast, [\cite=bbs] estimates the direction in which the receiver is located. Essentially, the transmitter uses an antenna array operating at 2.4 GHz to estimate the angle-of-arrival, and then uses this information to perform beam steering at 60 GHz. Hence, transceivers can distinguish mobility from blockage. However, considers a 2.4 GHz antenna array with at least four antennas, which at a minimum antenna separation of Î» / 2 might be impractical for certain devices. Other approaches exploit information about transmit directions which worked prior to an drop to narrow down the exhaustive beam steering search [\cite=mobiwac]. Alternatively, geometric analysis can also reveal which alternative beams are available at any location within a room [\cite=beamscope]. However, such approaches are meaningful for long-lived blockages which require finding alternative non-line-of-sight paths, while we consider a transient blockage scenario. Recent work [\cite=wimi] also suggests analyzing the initial samples of an drop in order to determine whether it is due to mobility or blockage. Such an approach must operate at the physical layer since it requires a timely reaction, i.e., the device must identify the cause of the drop immediately when it starts. This strict time constraint may hinder its implementation in devices. Although the propagation characteristics in the 60 GHz band allow for precise tracking [\cite=mtrack], distinguishing mobility from blockage remains challenging.

As a result of the above challenge, devices typically implement simple heuristics that result in the fluctuating behavior shown in Figure [\ref=fig:example_blockage]. In this paper, we analyze such throughput fluctuations and show their relation to frame-level aggregation [\cite=aggregation_overview]. Specifically, our contributions are as follows:

We measure throughput, adaptation, frame-level aggregation, and beam steering for a device to understand the impact of transient link blockage in practice.

We derive an analytical Markov chain model for transient link blockage based on our practical insights. We use it to analyze the trade-off between throughput and the overhead caused by periodic beam sweeps.

We show that frame aggregation can compensate for drops due to steering misalignments, thus reducing throughput fluctuations by up to 41% while maintaining high throughput on 60 GHz devices.

The remainder of this paper is structured as follows. In Section [\ref=sec:problem] we analyze the practical observations that allow us to understand the impact of transient blockages. After that, Section [\ref=sec:approach] presents our Markov chain model, and Section [\ref=sec:results] discusses the results that we obtain both from the model and from a device. Finally, Section [\ref=sec:conc] concludes the paper.

Practical Observations

In this section, we use a 60 GHz device to understand the impact of transient link blockage. To this end, we set up a 60 GHz link and walk through it at a normal indoor pace. We perform the experiment for low and high link loads.

Experiment setup

networking devices that operate at frequencies are not yet widely available. However, some notebook manufacturers have implemented the WiGig [\cite=wigig_overview] standard--which is very similar to 802.11ad--to design wireless docking stations. Basically, docking station and notebook establish a 60 GHz link to replace the traditional physical connection between both devices. We use such a setup for our practical experiments. In particular, we place a Dell D5000 docking station and a Dell Latitude E7440 notebook on two tables and separate them about two meters. We use iperf to transmit data on the 60 GHz link connecting both devices. To control the traffic load, we adjust the . For each experiment, we record the signal level, the , the throughput, and the frame aggregation size. To record the signal level, we overhear the communication using a SiversIMA FC1005V/00 V-band converter connected to a X310. While the 's bandwidth does not allow us to decode data, we obtain energy level traces that allow us to infer the beam alignment and the frame aggregation size.

Effects at the application layer

Figure [\ref=fig:example_trace] shows the application layer TCP throughput for both a high and a low link load. In this case, we measure the throughput every 500 ms, and induce transient link blockages roughly every 20 to 30 seconds. Each time we cross the link, we observe a significant throughput drop. Moreover, for increasing link loads our measurements show that the throughput drops at each blockage become larger and the number of suboptimal levels increases. As sketched in Section [\ref=sec:intro], the highest level corresponds to the best beam alignment for a certain load. The other levels correspond to suboptimal beam alignments resulting in a range of levels. While Figure [\ref=fig:example_trace] clearly shows that transient link blockages have a larger impact at higher traffic loads, the underlying reason is not evident. In the following, we show that this effect is related to aggregation.

Analysis at the lower layers

To understand the reason for the behavior in Figure [\ref=fig:example_trace], we measure lower layer metrics during a transient link blockage. Figure [\ref=fig:block_w10] and Figure [\ref=fig:block_w100] show these metrics for the case of low ( 10 kB) and high ( 100 kB) link load, respectively.

Low link load

At low load, the link achieves a rate of roughly 400 Mbps before the blockage, as shown in Figure [\ref=fig:block_w10_iperf]. As soon as we walk across the link, the signal level shown in Figure [\ref=fig:block_w10_trace] drops significantly. However, after the blockage, it only rises again to about half of the amplitude. This indicates that the docking station has switched to a different sector due to the blockage. Since the docking station is steering in a different direction while the transmit power remains unchanged, we observe a different signal level at the SiversIMA converter. In other words, the signal level drop in Figure [\ref=fig:block_w10_trace] has triggered a sector level sweep which has led to a suboptimal sector since the person was still crossing the link when it took place. As a result, the at the receiver dropped and thus the link switched to a significantly lower , as shown in Figure [\ref=fig:block_w10_mcs]. Still, while the physical layer rate has nearly halved, the iperf throughput in Figure [\ref=fig:block_w10_iperf] stabilizes at only 14.5% less throughput than prior to the blockage.

Figure [\ref=fig:block_w10_aggr] explains this somewhat surprising behavior. Before the blockage occurs, the duration of more than 60% of all data frames is less than 5  Î¼s. However, after the blockage most frames are longer than 10  Î¼s. That is, frame aggregation increases. The Dell D5000 is known to simply aggregate all data packets available in the transmit queue whenever it gets access to the channel. Due to the drop in after blockage, the transmission time increases. During the transmission, packets continue arriving at the queue at the same pace. Hence, the average queue length after the blockage is larger than before the blockage, resulting in larger aggregated frames. This means that sector mismatches due to transient link blockages have a small impact on application layer throughput for low link loads because the frame aggregation capability of the 802.11ad standard compensates for it.

High link load

For high link load, in Figure [\ref=fig:block_w100_trace] we observe again a sector mismatch after the blockage. As expected, also the in Figure [\ref=fig:block_w100_mcs] drops. Still, in Figure [\ref=fig:block_w100_iperf] we observe that the impact on application layer throughput is much larger than for the low link load case--the throughput drops by roughly 30%. The underlying reason is that, at high link load, the docking station is already using a high level of aggregation. As shown in Figure [\ref=fig:block_w100_aggr], approximately 70% of all data frames are longer than 20Î¼s before the blockage. Thus, the D5000 can only increase aggregation by about 10%, which is not enough to compensate for the lower . This suggests that increasing the traffic load beyond a certain level might not pay off for a given frequency of transient link blockages.

System Model

From Section [\ref=sec:problem] we conclude that transient blockage may cause sector misalignment which in turn affects and ultimately frame aggregation. Aggregation can mitigate blockage at moderate link loads. This is not intrinsic to the D5000 since any device must deal with the above issues. In the following, we derive a Markov model based on these insights.

Model overview

Due to suboptimal sector alignments, a link may be in N + 1 different states: N states due to all feasible combinations of transmit and receive sectors, and one state when the link is blocked. Figure [\ref=fig:example_markov] shows an example of such a Markov model for a link with N  =  3 throughput levels, that is, one high level [formula], and two suboptimal levels [formula] and [formula]. The blockage state is named [formula]. Whenever a transient link blockage occurs, the model transitions to blockage state [formula]. From there, it moves to one of the N states until the link is blocked again. If the state is one of the suboptimal ones, the model directly transitions to [formula] whenever the device performs a periodic sector level sweep. We choose a time-slot size of one millisecond for our Markov model since this matches the timescale at which sector level sweeps are expected to occur. However, it is straightforward to adjust the model parameters for other time-slot sizes.

We model the occurrence of transient link blockage as a Gaussian distribution N(Î¼,Ï2). The probability pS of staying in state [formula] for one time-slot is directly related to Î¼. To derive it, we first formulate the probability P(k) of staying k  >  1 time-slots at that state as in Equation [\ref=equ:pk_ps]. Then, we compute the average time T that we stay at the state as in Equation [\ref=equ:avg_time_state].

[formula]

[formula]

Since blockage occurs on average every Î¼ seconds, T  =  Î¼ and thus the probability of staying at [formula] is pS  =  1  -  1 / Î¼. Note that the units of Î¼ are time-slots, i.e., milliseconds in our case. From this we directly obtain that the transition probability from [formula] to [formula] is 1  -  pS  =  1 / Î¼. We follow a similar reasoning to compute the probabilities of staying at state [formula]. If blockages last on average tb, the probability of staying at state [formula] is 1  -  1 / tb. However, after a blockage, the link may recover to any of the other N states. Hence, we weight the probability of leaving state [formula], i.e., 1 / tb, with the probabilities of transitioning to each of the states. In the example in Figure [\ref=fig:example_markov], [formula] is the probability to transition to [formula] while [formula] and [formula] are the probabilities of transitioning to each of the suboptimal states, respectively. In general, [formula] must hold.

Finally, the probability of staying at the suboptimal states is related to Î¼ in the same manner as for [formula]. Still, in this case we must take into account that the device may perform a periodic sector level sweep that triggers a transition to [formula]. We define pC as the probability that a transient link blockage occurs before the next periodic sector level sweep takes place. Hence, the transition probability from [formula] to [formula] is [formula]. Since the probability of a sector sweep and a blockage are independent, we weight the result of Equation [\ref=equ:avg_time_state] with pC to obtain the probabilities of leaving and staying at a suboptimal state.

Periodic sector level sweeps

In the following, we derive the analytic expression of pC based on the statistical characteristics of blockages and the frequency of sector level sweeps. We consider that devices perform such sector level sweeps at regular intervals of length S. For 802.11ad, S translates directly into the , that is, the interval at which a station may transmit beacons to improve beam steering. Without loss of generality, we define the time origin t  =  0 as the point in time when the last sector level sweep took place. Given that a blockage occurs at time t  =  tb, the time that remains until the next sector level sweep is S  -  tb. Hence, the probability of another blockage C occurring prior to the next sector level sweep for time tb is as in Equation [\ref=equ:prob_cross_before_sweep], where [formula] is the error function.

[formula]

Next, we obtain the probability in Equation [\ref=equ:prob_cross_before_sweep] for any value of tbâ{0,S}. Using the definition of conditional probability, we obtain P(C,tb)  =  P(C,t  =  tb)P(tb), where P(t) is evenly distributed because sector level sweeps occur at fixed intervals. Hence, pC is the marginal probability of P(C,tb) for all values of tb. Based on this, we compute pC as in Equation [\ref=equ:final_pc_int].

[formula]

Throughput

Next, we derive the throughput for each of the N + 1 states of our Markov model. We consider a 60 GHz transmitter that operates as observed in Section [\ref=sec:problem]. That is, the transmitter has a queue of size q. Each time it gets access to the channel, the device aggregates up to [formula] data from the queue and transmits it. While it is transmitting, more packets arrive at the queue. Hence, the size of the aggregated frames directly depends on the transmission time [formula] and the channel access time [formula]. The latter includes the overhead as in 802.11ad. Further, control messages increase each by a factor f.

The application generates a link load l. The maximum link load that the device supports occurs when it aggregates [formula] data in each transmission. We compute l for a certain aggregation factor [formula] such that the device aggregates [formula] for [formula]. In this case, blockage has a significant impact since the device cannot aggregate more to mitigate the impact of lower values (c.f. Section [\ref=sec:problem]). Based on l, we compute the queue level qL for each of the N states. Each state is related to a certain . For transmission i, the queue level is the transmission time [formula] of the previous transmission multiplied by the link load l, as shown in Equation [\ref=equ:queue_levels].

[formula]

While [formula], the above equation converges to a stable queue level qL for i  â    â  . Based on this, we derive the throughput [formula] for each state. If the queue level is less than or equal to [formula], the throughput is directly the link load l, as shown in Equation [\ref=equ:thp_stable]. However, if [formula], the application is generating more data than the link can transmit. Eventually, the queue level reaches its maximum length q. In this case, we limit the amount of data in each transmission to [formula].

[formula]

Finally, we compute the throughput in state [formula]. To this end, we define the blockage duration tB as the time during which the blockage affects the throughput of the link. In general, tB is the sum of (a) the time t that the link is physically blocked and (b) the time to transmit the data that accumulates at the application while the link is blocked. The latter includes the new data [formula] that arrives while serving the accumulated data. Further, the accumulated data is limited to the queue size q. If the new state to which the Markov model transitions after a blockage already operates at the maximum aggregation size, (b) is infinite since the link cannot transmit more data. In that case, the duration of the blockage effect is just (a) and the related throughput is zero. Otherwise, we observe a higher throughput while (b) is ongoing. In this case, we compute the throughput in state [formula] as in Equation [\ref=equ:thp_blocked]. Since the duration of (b) depends on the of the state to which the Markov model transitions after the blockage, we compute tB as the average of all tBi values for jâ[1,N] weighted with the probabilities [formula] of transitioning to each of the states.

[formula]

Evaluation

Using our Markov model in Section [\ref=sec:approach], we study the impact of transient link blockage both in theory and based on practical traces from our 60 GHz wireless docking station.

Analytical evaluation

For our analytical evaluation, we set the parameters of our model as in Table [\ref=tab:params_anlyt]. We consider a 60 GHz link with N  =  3 states. Whenever a blockage occurs, the probability of transitioning to each of the states is the same. We evaluate the impact of four parameters, namely, the , Î¼, [formula], and v. Parameter v is the speed at which a person causing the blockage walks across the link. We use it to compute t, i.e., the amount of time that the link is physically blocked. To this end, we assume a beamwidth of Î± and that the person crosses the link at a distance d of the transmitter.

Link load

Figure [\ref=fig:anlyt_load] depicts our results for increasing link loads and average blockage intervals Î¼. As a starting point, we set the to infinity, that is, the device only switches to a different sector when a blockage occurs. While the average throughput increases with the link load, the improvement becomes very small as the load approaches one. As discussed in Section [\ref=sec:problem], this occurs because aggregation cannot mitigate the impact of lower values. Further, Figure [\ref=fig:anlyt_load] also shows that the throughput fluctuation increases significantly with the link load. For instance, while increasing the link load from 0.4 to 0.6 improves throughput by just 8% for Î¼  =  20, it worsens throughput fluctuations by 25%. Hence, increasing the link load would hardly pay off in this case. For comparison, we include the result for an of 100 ms. As expected, the average throughput is much higher since the link quickly switches back to the best sector after a blockage. Also, the variance decreases much faster with Î¼ because the transmitter is using the same sector most of the time.

In our second analysis, we study the impact of the . Figure [\ref=fig:anlyt_dti] depicts a trade-off regarding how often a device performs sector level sweeps. If the is very short, the resulting overhead limits the throughput significantly. Conversely, if it is too long, the blockages also reduce the average throughput. We achieve the best performance when the matches the average blockage interval Î¼. Hence, a meaningful strategy for 60 GHz devices would be to estimate how often significant drops occur in a given scenario, and set the to that value. Regarding throughput fluctuations, very short values are best since this ensures that the link is most of the time in the best state. As the increases, the variance becomes larger because the link is more often in suboptimal states. Beyond [formula], the variance increases again for large Î¼ since link state changes are mostly due to blockages. While sector sweeps ensure that the link recovers to the best state, blockages may lead to suboptimal states.

Speed

Next, we study how the speed of the person causing the blockage affects throughput. In Figure [\ref=fig:anlyt_speed], we observe that the higher the speed, the higher the throughput is. This is expected, since the person blocks the link for a shorter amount of time t. Regarding variance, fluctuations generally decrease with speed because the system stays less time in state [formula], which often only achieves very low or even zero throughput. Initially, the opposite occurs for low values of v. In this case, the system is most of the time in state B since blockages last long. Hence, increasing the time that the link operates in any of the other N states also increases fluctuations.

Practical evaluation

In this section, we present our results based on practical traces collected with our 60 GHz system as described in Section [\ref=subsec:appl_layer_effects]. We use the traces to compute empirically the number of states N as well as the probabilities pH and pSLi. Further, pC  =  1 since we do not observe periodic sector level sweeps in the traces. To control the link load, we adjust the . We configure our Markov model with the above practical parameters to obtain the throughput and the fluctuations for any value of Î¼. Figure [\ref=fig:res_pract_comb] depicts our result, which is the practical counterpart of our analysis in Figure [\ref=fig:anlyt_load]. We obtain equivalent results in both, which validates our theoretical approach. However, in Figure [\ref=fig:anlyt_load] fluctuations decrease with Î¼ while in Figure [\ref=fig:res_pract_comb] they are roughly stable. The underlying reason is that in Figure [\ref=fig:anlyt_load] larger Î¼ values imply that throughput is zero less often, thus decreasing fluctuations. However, in Figure [\ref=fig:res_pract_comb], iperf provides throughput values at most every [formula]. Since blockage often lasts less, we do not observe zero throughput but always the average of the blockage and the following milliseconds. Hence, larger Î¼ values have a much smaller impact on the dispersion of the throughput values. Further, in Figure [\ref=fig:res_pract_comb] we observe that beyond 100 kB barely provide additional throughput because aggregation cannot mitigate degradations. Still, the respective variance continues to increase significantly beyond that , i.e., link load. As an example, if we consider [formula], the throughput for 100 kB is the same as for 150 kB but the variance is 41% larger. This result confirms our hypothesis in Section [\ref=subsubsec:obs_high_load] regarding a link load trade-off.

Conclusion

We study the practical impact of transient link blockages on 60 GHz links. We observe that sector level sweeps during a blockage may cause a device to use a suboptimal sector. We analyze two methods to mitigate this. The first one introduces periodic sector level sweeps. To optimize throughput, we find that such sweeps should take place on average as frequently as blockages. However, to minimize throughput variance, sweeps should take place as often as possible. The second method optimizes the link load at the application layer. We find that moderate loads allow frame aggregation to compensate for low due to suboptimal sectors. In particular, we show that choosing a suitable link load can reduce throughput variance by 41% compared to a higher load with the same throughput.