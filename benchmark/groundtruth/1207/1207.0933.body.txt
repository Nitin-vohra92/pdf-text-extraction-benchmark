Optimal Cuts and Bisections on the Real Line in Polynomial Time

Andrzej Lingas

Dzmitry Sledneu

Introduction

The metric MAX-CUT, MAX-BISECTION, MIN-BISECTION and other Partitioning problems were all proved to have polynomial time approximation schemes (PTAS) [\cite=DK98] [\cite=FK98] [\cite=AFKK03] [\cite=FKK04] [\cite=FKKV05] [\cite=R10]. The above problems are known to be NP-hard in exact setting. The status of those problems for geometric (thus including Euclidean) metrics and this even for dimension one was widely open.

In this paper we resolve the status of those problems for just dimension one by giving a polynomial time algorithm. Our solution, somewhat surprisingly, involves certain new ideas for applying dynamic programming which could be also of independent interest.

Preliminaries and General Setting

We shall define our dynamic programming method in terms of generalized subproblems on finite multisets of reals generalizing slightly a geometric metric setting.

For a partition of a finite multiset P of reals into two multisets P1 and P2, the value of the cut is the total length of all intervals on the real line that have one endpoint in P1 and the other one in P2.

The MAX-CUT problem for P will be now to find a partition of P into two multisets that maximizes the value of the cut. If |P| = n and the two multisets are additionally required to be of cardinality k and n - k, respectively, then we obtain the (k,n - k) MAX-PARTITION problem for P. In particular, if n is even and k = n / 2 then we have the MAX-BISECTION problem. Next, if we replace the requirement of maximization with that of minimization then we obtain the (k,n - k) MIN-PARTITION and MIN-BISECTION problems for P, respectively.

In this paper we study geometric instances of the above problems in dimension one (the real line) which could be rephrased as the problems of partitioning arbitrary finite metric spaces of this dimension.

The Algorithm

The global idea behind our algorithm is as follows. We guess how many of the copies of the rightmost real are respectively in the first and second set and move them to the next to the rightmost real. We also guess how many copies of the reals in the remaining part of the multiset are in the first and second set respectively. Having this information, we can compute exactly the difference between the value of optimal solution for the whole input multiset and that for the multiset resulting from the movement under the guessed partition proportions. The difference can be easily evaluated due to the triangle equality that holds on the real line. Now, we solve the problem for the transformed multiset whose elements are copies of the shrunk set of reals recursively under the guessed partition proportions, after additionally guessing the proportions of the partition for the original copies of the next to the right real. Eventually, we end up with the trivial multiset where all elements are copies of the leftmost real. We eliminate guesses by an enumeration of all possibilities and choosing the best one. Next, we solve the resulting subproblems in bottom up fashion instead the top down to obtain a polynomial time solution.

Consider a finite multiset P of reals. We assume that |P| = n and that P consists of copies of l  ≤  n distinct reals. For i = 1,...,l, let xi denote the i-th smallest real whose copy is in P, and let Pi denote the sub-multiset of P consisting of all elements of P which are copies of reals in {x1,...,xi}. For convention, we assume [formula]

We shall consider a family of generalized subproblems Si(p,q,r,t), where i∈{1,...,l}, p,q,r,t are integers in {0,...,n} such that p + q = |Pi - 1| and r + t = n - |Pi - 1|. The subproblem Si(p,q,r,t) is to find for a multiset that is the union of Pi - 1 with r + t copies of xi a partition into two multisets such that p elements of Pi and r copies of xi form the first set and the value of the cut is maximized. The value of such a maximum cut is denoted by MAXCUT(Si(p,q,r,t)).

For i  ≥  2, MAXCUT(Si(p,q,r,t)) = (xi - xi - 1)(pt + qr) +  [formula]

For [formula] consider an optimal solution to Si - 1(p - r0,q - t0,r0 + r,t0 + t), where r0 + t0 = |Pi - 1| - |Pi - 2|. Let us move r copies of the real xi - 1 in the first set of the solution to the real xi and t copies of xi - 1 in the second set of the solution to the same real xi. We obtain a feasible solution to Si(p,q,r,t) whose cut value is (xi - xi - 1)(pt + qr) + MAXCUT(Si - 1(p - r0,q - t0,r0 + r,t0 + t)). It follows that MAXCUT(Si(p,q,r,t))  ≥  (xi - xi - 1)(pt + qr) +  [formula]

Contrary, consider an optimal solution to Si(p,q,r,t). Suppose that r0 copies of xi - 1 are in the first set of the solution and t0 copies of xi - 1 are in the second set of the solution. Note that r0 + t0 = |Pi - 1| - |Pi - 2| holds. Let us move r copies of xi in the first set of the solution to the real xi - 1 and t copies of xi in the second set of the solution to the same real xi - 1. We obtain a feasible solution to Si - 1(p - r0,q - t0,r0 + r,t0 + t) whose cut value is MAXCUT(Si(p,q,r,t)) - (xi - xi - 1)(pt + qr). It follows that MAXCUT(Si(p,q,r,t))  ≤  (xi - xi - 1)(pt + qr) +  [formula]

The geometric MAX-CUT problem on the real line as well as the geometric MAX-BISECTION problem on the real line are solvable in O(n4) time.

First, we shall show that the subproblems Si(p,q,r,t), where i∈{1,...,l}, p,q,r,t are integers in {0,...,n} such that p + q = |Pi - 1| and r + t = n - |Pi - 1| are solvable in O(n4) time.

Since p + q = |Pi - 1|, there are O(n) choices for the parameters p, q, and similarly since r + t = n - |Pi - 1|, there are O(n) choices for the parameters r, t. It follows that the total number of considered subproblems is O(n3).

We can compute the values of MAXCUT(Si(p,q,r,t)) in bottom up fashion in increasing i order. If i = 1, then p = 0 and q = 0 and MAXCUT(Si(p,q,r,t)) = 0 holds trivially. For i  ≥  2, we apply Lemma [\ref=lem:_rec] in order to compute the value of MAXCUT(Si(p,q,r,t)) in O(n) time by r0 + t0 = |Pi - 1| - |Pi - 2|. The corresponding optimal solutions can be obtained by backtracking. The upper bound O(n4) follows.

Let xl be the largest real whose copy is in P, and let m be the number of copies of xl in P. The optimal solution to the geometric MAX-CUT problem for P can be found among the optimal solutions to the O(n2) subproblems Sk(p,q,r,t), where p + q = |Pk - 1| and r + t = m. Furthermore, the optimal solution to the geometric (k,n - k) MIN-PARTITION problem for P can be found among the optimal solutions to the O(n) subproblems Sk(p,q,r,t), where p + q = |Pk - 1|, r + t = m, p + r = k and q + t = n - k.

To solve the (k,n - k) MIN-PARTITION problem on the real line, we consider an analogous family of generalized subproblems Ui(p,q,r,t), where i∈{1,...,l}, p,q,r,t are integers in {0,...,n} such that p + q = |Pi - 1| and r + t = n - |Pi - 1|. The subproblem Ui(p,q,r,t) is to find for a multiset that is the union of Pi - 1 with r + t copies of xi a partition into two multisets such that p elements of Pi and r copies of xi form the first set and the value of the cut is minimized. The value of such a minimum cut is denoted by MINCUT(Si(p,q,r,t)).

Analogously, we obtain the following counterparts of Lemma [\ref=lem:_rec] and Theorem [\ref=theo:_min] for (k,n - k) MIN-PARTITION and MIN-BISECTION.

For i  ≥  2, MINCUT(Ui(p,q,r,t)) =  [formula]

The geometric (k,n - k) MIN-PARTITION problem on the real line, in particular the geometric MIN-BISECTION problem on the real line, are analogously solvable by dynamic programming in O(n4) time.

Final Remarks

It remains an open problem whether our method can be generalized to higher dimensions or those problems turn out to be inherently hard. At stake is the exact computational status of other geometric problems for which our knowledge is very limited at the moment.

Acknowledgments

We thank Uri Feige, Ravi Kannan and Christos Levcopoulos for a number of interesting discussions on the subject of this paper.