Corollary Lemma Proposition Problem Definition Conjecture Question

The Erd os-Sós Conjecture for Geometric Graphs

Ruy Fabila-Monroy

Dolores Lara

Jesús Leaños

Cynthia Rodrguez

Gelasio Salazar

Francisco Zaragoza

Introduction

One of the most notorious problems in extremal graph theory is the Erd-Sós Conjecture, which states that every simple graph with average degree greater than k  -  2 contains every tree on k vertices as a subgraph. This conjecture was recently proved true for all sufficiently large k (unpublished work of Ajtai, Komlós, Simonovits, and Szemerédi).

In this paper we investigate a variation of this conjecture in the setting of geometric graphs. Recall that a geometric graph G consists of a set S of points in the plane (these are the vertices of G), plus a set of straight line segments, each of which joins two points in S (these are the edges of G). In particular, any set S of points in the plane in general position naturally induces a complete geometric graph. For brevity, we often refer to the edges of this graph simply as edges of S. If S is in convex position then G is a convex geometric graph. A geometric graph is planar if no two of its edges cross each other. An embedding of an abstract graph H into a geometric graph G is an isomorphism from H to a planar geometric subgraph of G. For r  ≥  0, an r-edge is an edge of G such that in one of the two open semi-planes defined by the line containing it, there are exactly r points of G.

In this paper all point sets are in general position and G is a complete geometric graph on n points. It is well known that for every integer 1  ≤  k  ≤  n, G contains every tree on k vertices as a planar subgraph [\cite=optimal]. Even more, it is possible to embed any such tree into G, when the image of a given vertex is prespecified [\cite=rooted].

Let F be a subset of edges of G, which we call forbidden edges. If T is a tree for which every embedding into G uses an edge of F, then we say that F forbids T. In this paper we study the question of what is the minimum size of F so that there is a tree on k vertices that is forbidden by F. Let f(n,k) be the minimum of this number taken over all complete geometric graphs on n points. As f(2,2) = 1, f(3,3) = 2, f(4,4) = 2 and [formula], we assume through out the paper that n  ≥  5 and k  ≥  3.

We show the following bounds on f(n,k).

[formula]

[formula]

In the case when G is a convex complete geometric graph, we show that the minimum number of edges needed to forbid a tree on n vertices is three.

An equivalent formulation of the problem studied in this paper is to ask how many edges must be removed from G so that it no longer contains some planar subtree on k vertices. A related problem is to ask how many edges must be removed from G so that it no longer contains any planar subtree on k vertices. For the case of k = n, in [\cite=ramseytype], it is proved that if any n - 2 edges are removed from G, it still contains a planar spanning subtree. Note that if the n - 1 edges incident to any vertex of G are removed, then G no longer contains a spanning subtree. In general, for 2  ≤  k  ≤  n - 1, in [\cite=edge-removal], it is proved that if any set of [formula] edges are removed from G, it still contains a planar subtree on k vertices. In the same paper it is also shown that this bound is tight--a geometric graph on n vertices and a subset of [formula] of its edges are shown, so that when these edges are removed, every planar subtree has at most k - 1 vertices. In [\cite=packing] the authors study the similingly unrelated problem of packing two trees into planar graphs. That is, given two trees on n vertices, the authors consider the question of when it is possible to find a planar graph having both of them as spanning trees and in which the trees are edge disjoint. However, although theirs is a combinatorial question rather than geometric, their Theorem 2.1 implies our Lemma [\ref=lem:few_0edges]. We provide a self contained proof of Lemma [\ref=lem:few_0edges] for completeness.

A previous version of this paper appeared in the conference proceedings of EUROCG'12 [\cite=eurocg].

Spanning Trees

In this section we consider the case when k = n. Let T be a tree on n vertices. Consider the following algorithm to embed T into G. Choose a vertex v of T and root T at v. For every vertex of T choose an arbitrary order of its children. Suppose that the neighbors of v are [formula], and let [formula] be the number of nodes in their corresponding subtrees. Choose a convex hull point p of G and embed v into p. Sort the remaining points of G counter-clockwise by angle around p. Choose m + 1 rays centered at p so that the wedge between two consecutive rays is convex and between the i-th ray and the (i + 1)-th ray there are exactly ni points of G. Let Si be this set of points. For each ui choose a convex hull vertex of Si visible from p and embed ui into this point. Recursively embed the subtrees rooted at each ui into Si. Note that this algorithm provides an embedding of T into G. We will use this embedding frequently throughout the paper. See Figure [\ref=fig:embedding].

For every integer n  ≥  2 we define a tree Tn as follows: If n = 2, then Tn consists of only one edge; if n is odd, then Tn is constructed by subdividing once every edge of a star on [formula] vertices; if n is even and greater than 2, then Tn is constructed by subdividing an edge of Tn - 1. These trees are particular cases of spider trees. See Figure [\ref=fig:matatenas].

We prove the lower bound of f(n,n)  ≥  2 of Theorem [\ref=thm:k=n].

If G has only one forbidden edge, then any tree on n vertices can be embedded into G, without using the forbidden edge.

Let e be the forbidden edge of G. Let T be a tree on n vertices. Choose a root for T. Sort the children of each node of T, by increasing size of their corresponding subtree. Embed T into G with the embedding algorithm, choosing at all times the rightmost point as the root of the next subtree. Suppose that e is used in this embedding. Let e: = (p,q) so that u is embedded into p and v is embedded into q (note that u and v are vertices of T).

Suppose that the subtree rooted at v has at least two nodes. In the algorithm, we embedded this subtree into a set of at least two points. We chose a convex hull point (q), of this set visible from p to embed v. In this case we may choose another convex hull point visible from p to embed v and continue with the algorithm. Note that (p,q) is no longer used in the final embedding.

Suppose that v is a leaf, and that v has a sibling v' whose subtree has at least two nodes. Then we may change the order of the children of u so that e is no longer used in the embedding, or if it is, then v' is embedded into q, but then we proceed as above.

Suppose that v is a leaf, and that all its siblings are leaves. The subtree rooted at u is a star. We choose a point distinct from p and q in the point set where this subtree is embedded, and embed u into this point. Afterwards we join it to the remaining points. This produces an embedding that avoids e.

Assume then, that v is a leaf and that it has no siblings. We distinguish the following cases:

u has no siblings. In this case, the subtree rooted at the parent of u is a path of length two. It is always possible to embed this subtree without using e. See Figure [\ref=fig:path].

u has a sibling u' whose subtree is not an edge. We may change the order of the siblings of u, with respect to their parent, so that the subtree rooted at u' will be embedded into the point set containing p and q. In the initial order--increasing by size of their corresponding subtrees--u' is after u. We may assume that in the new ordering, the order of the siblings of u before it, stays the same. Therefore p is the rightmost point of the set into which the subtree rooted at u' will be embedded. Embed u' into p. Either we find an embedding not using e, or this embedding falls into one of the cases considered before.

u has at least one sibling, all whose corresponding subtrees are edges

Suppose that u has no grandparent; then T is equal to Tn and n is odd. Let w be the parent of u. Embed w into p. Let [formula] be the points of G different from p sorted counter-clockwise by angle around p; choose p1 so that the angle between two consecutive points is less than π. Let [formula] be the neighbors of w. Embed each ui into p2i - 1 and its child into p2i. If q equals p2j - 1 for some j then embed uj into p2j and its child into p2j - 1. This embedding avoids e.

Suppose that w is the grandparent of u and let p' be the point into which w is embedded. Let S be the point set into which the subtree rooted at the parent of u is embedded. Note that S has an odd number of points. We replace the embedding as follows. Sort S counter-clockwise by angle around p'. Call a point even if it has an even number of points before it in this ordering. Call a point odd if it has an odd number of points before it in this ordering. If e is incident to an odd point, then we embed the parent of u into this point. The remaining subtree rooted at u can be embedded without using e. If the endpoints of e are both even, between them there is an odd point. We embed the parent of u into this point. The remaining vertices can be embedded without using e (see Figure [\ref=fig:evenodd]).

The upper bound of f(n,n)  ≤  3 of Theorem [\ref=thm:k=n] follows directly from Lemma [\ref=lem:conf3]. Now we prove in Lemma [\ref=lem:few_0edges] and Theorem [\ref=thm:2convex], that if G is a convex geometric graph, at least three edges are needed to forbid some tree on n vertices.

Let T be a tree on n vertices. If G is a convex geometric graph, then T can be embedded into G using less than [formula] convex hull edges of G.

If T is a star, then any embedding of T into G uses only two convex hull edges. If T is a path then it can be embedded into G using at most two convex hull edges. Therefore, we may assume that T is neither a star nor a path.

Since T is not a path, it has a vertex of degree at least three. Choose this vertex as the root. Since T is not a star, the root has a child whose subtree has at least two nodes. Sort the children of T so that this node is first. Embed T into G with the embedding algorithm.

Let u and v be vertices of T, so that u is the parent of v. Suppose that the subtree rooted at v has at least two nodes. Then in the embedding algorithm we have at least two choices to embed v once the ordering of the children of u has been chosen. At least one of which is such that (u,v) is not embedded into a convex hull edge. Therefore, we may assume that the embedding is such that all the convex hull edges used are incident to a leaf.

Since the first child of the root is not a leaf, there is at most one convex hull edge incident to the root in the embedding. Note that any vertex of T, other than the root, is incident to at most one convex hull edge in the embedding. If n / 2 or more convex hull edges are used, then there are at least n / 2 non-leaf vertices, each adjacent to a leaf. These vertices must be all the vertices in T and there are only n / 2 such pairs (n must also be even). Therefore every non-leaf vertex has at most one child which is a leaf. In particular the root has at most one child which is a leaf. Since the root was chosen of degree at least three it has a child which is not a leaf nor the first child; we place this vertex last in the ordering of the children of the root. The leaf adjacent to the root can no longer be a convex hull edge and the embedding uses less than n / 2 convex hull edges.

If G is a convex geometric graph and has at most two forbidden edges, then any tree on n vertices can be embedded into G, without using a forbidden edge.

Let f0 be an embedding given by Lemma [\ref=lem:few_0edges], of T into G. For 0  ≤  i  ≤  n, let fi be the embedding produced by rotating f0, i places to the right. Assume that in each of these rotations at least one forbidden edge is used, as otherwise we are done. Let [formula] be the edges of T that are mapped to a forbidden edge in some rotation. Assume that the two forbidden edges are an l-edge and an r-edge respectively.

Suppose that l  ≠  r. Then, each edge of T can be embedded into a forbidden edge at most once in all of the n rotations. Thus m  ≥  n. This is a contradiction, since T has n - 1 edges.

Suppose that l = r. Then, each of the ei is mapped twice to a forbidden edge. Thus m  ≥  n / 2. By Lemma [\ref=lem:few_0edges], f0 uses less than n / 2 convex hull edges. Therefore, l and r must be greater than 0. But a set of n / 2 or more r-edges, with r > 0, must contain a pair of edges that cross. And we are done, since f0 is an embedding.

Bounds on f(n,k)

In this section we prove Theorem 1. First we show the upper bound.

If G is a convex geometric graph, then forbidding three consecutive convex hull edges of G forbids the embedding of Tn.

Recall that Tn comes from subdividing a star, let v be the non leaf vertex of this star. Let (p1,p2),(p2,p3),(p3,p4) be the forbidden edges, in clockwise order around the convex hull of G. Note that in any embedding of Tn into G, an edge incident to a leaf of Tn, must be embedded into a convex hull edge. Thus, the leaves of Tn nor its neighbors can be embedded into p2 or p3, without using a forbidden edge. Thus, v must be embedded into p2 or p3. Without loss of generality assume that v is embedded into p2. But then, the embedding must use (p2,p3) or (p3,p4)

If G is a convex geometric graph, then forbidding any three pairs of consecutive convex hull edges of G forbids the embedding of Tn.

Let p1,p2 and p3 be the vertices in the middle of the three pairs of consecutive forbidden edges of G. Note that a leaf of Tn, nor its neighbor can be embedded into p1, p2 or p3, without using a forbidden edge. But at most two points do not fall into this category.

[formula]

Let G be a complete convex geometric graph. We forbid every r-edge of G for [formula]. Note that, in total we are forbidding at most [formula] edges. As every subset of points of G is in convex position, it suffices to show that every induced subgraph H of G on k vertices is in one of the two configurations of Lemma [\ref=lem:conf3] and [\ref=lem:conf2_2].

Assume then, that H does not contain three consecutive forbidden edges in its convex hull nor three pairs of consecutive forbidden edges in its convex hull. H has at most two (non-adjacent) pairs of consecutive forbidden edges in its convex hull. Therefore every forbidden edge of H in its convex hull--with the exception of at most two--must be preceded by an [formula]-edge (of G), with [formula]. H contains at least [formula] of these edges. The points separated by these edges amount to more than [formula] points of G. This is a contradiction, since together with the k points of H this is strictly more than n.

Now, we show the lower bound of Theorem [\ref=thm:main].

[formula]

Let F be a set of edges whose removal from G forbids some k-tree. Let [formula]. Note that H contains no complete Kk as a subgraph, otherwise any k-tree can be embedded in this subgraph [\cite=optimal]. By Turán's Theorem [\cite=turan], H cannot contain more than [formula] edges. Thus F must have size at least [formula].

Acknowledgments

Part of this work was done at the "First Workshop in Combinatorial Optimization at Cinvestav". It was continued during a visit of L.F. Barba, R. Fabila-Monroy, J. Leaños and G. Salazar to Abacus research center.