Autonomous Load Disaggregation Approach based on Active Power Measurements

Introduction

The power draw of a household can potentially reveal a lot of information regarding the used devices, their individual power draw and behavioral patterns of the user(s). While this can constitute a severe privacy problem [\cite=prokop:14], this information can be also used locally to analyze the usage and power consumption of devices in order to provide information for energy counseling, energy management applications, and increasing energy awareness to the user by providing detailed device-level feedback [\cite=monacchi2013Nov]. While we expect a raising number of smart appliances [\cite=elmenreich:wises12] in the future, a considerable number of household appliances will be legacy devices which are not able to directly report their operational data regarding time and consumption. Using a high number of dedicated meters to monitor these devices will be neither cost nor energy-effective. Non-intrusive load monitoring overcomes this problem by applying a single meter approach to acquire a time series of power measurements which are then processed in order to infer about the used appliances. However, many of such load disaggregation algorithms require previous knowledge about the devices employed in the system.

In this paper we present an unsupervised load disaggregation approach that is able to identify device operations based on the characteristic power changes when devices are switched on/off or switch to a different power state. Given, that power states of devices are distinguishable, the proposed algorithm does not need a priori information about the system and autonomously adapts to new or removed devices. The algorithm can be used online and is suitable for operation on low-cost embedded system hardware, for example as part of an energy management system.

The presented approach constitutes an important step towards an automatic disaggregation of electrical loads. The approach is especially suitable for household appliances, since these environments feature typically different power draws out of device pool that is also subject to change over a larger timescale by acquisition of new devices. By presenting a working approach for automatizing the detection of devices without supervision, i.e., without the need for querying the user every time the device pool has changed, this paper lays the ground for a broad application of load disaggregation.

The following section gives an overview on related work on load disaggregation, depicts the problem statement and describes our approach. The particular steps of the algorithm are explained in Section [\ref=sec:algorithm] in detail. The approach has been evaluated in a case study based on available household consumption datasets. Limitations and future work are discussed in Section [\ref=sec:limitations] before the paper is concluded in Section [\ref=sec:conclusion].

Background and Approach

Related Work

The first approach of was introduced by G.Hart [\cite=Hart1992]. He used active and reactive power readings to establish appliance models based on which he used to infer an appliance to be on or off. Current approaches solving the load disaggregation problem can be distinguished between supervised and unsupervised approaches. A good overview on supervised approaches are described in [\cite=Zeifman2011] and [\cite=Zoha2012]. In the following we are focusing on unsupervised load disaggregation approaches. Unsupervised classification approaches do not need any a priori information of the system. In particular, no labelled data is needed to learn models and to perform classification. Recent approaches are based on [\cite=Zia2011], on [\cite=Zoha2013], on different variations of [\cite=Zico2012] [\cite=Kim2011] and on temporal motif mining [\cite=Shao2013]. For these approaches the distinction between appliances is unsupervised whereas the labelling which model corresponds to which appliance is done not automatic. Approaches performing automatic labelling is conducted based on Bayesian inference [\cite=Johnson2013] and on an semi-supervised classification [\cite=Parson2014]. The most related approach to the presented work is presented in [\cite=pattem2012], which provides an unsupervised magnitude-based disaggregation approach based on s. Our work is different to this work in several aspects as the algorithm performs online, is autonomous and self-learning, considers all possible appliance states and needs no learning of appliance transitions which often is subject to erroneous observations. Furthermore, we tested our approach on aggregated data from known appliances which makes the comparison on appliance level power states with the detected power states and inferred power states possible. More information about the evaluation process is presented in [\ref=sec:evaluation].

Problem Statement

The problem to disaggregate appliance readings from the aggregated power draw is composed by overlapping appliance power draws, where each appliance has a power draw pi(t) and the aggregated power P(t) can be formulated as the sum of each appliance's power consumption:

[formula]

The variable N represents the number of used appliances. Current research approaches as presented in Section [\ref=subsec:relatedwork] are focusing on unsupervised load disaggregation approaches. The amount of a priori information should be minimized without a reduction of the information gain produced by load disaggregation. Without any a priori information several problems arise for an load disaggregator and have to be considered:

The number of used appliances has to be identified. Current clustering approaches need to know the number of used appliances

The appliance model has to be learned without any a priori information and in operation. New appliances should be added to the load disaggregation approach and rarely used appliances should be deleted from the set of appliances used by the load disaggregator.

Suitable appliance features should be extracted from noisy and low frequency active power readings. The detected features are used to generated meaningful appliance models. The load disaggregator should be working based on power magnitudes.

Furthermore, the algorithm should work online. This means on the one hand supporting model learning in operation and on the other hand being capable of making appliance state estimations based on the learned models in real time. Therefore, the computational effort of the approach should be bound (for a reasonable set of appliance models) and match the performance of state-of-the-art embedded hardware.

Basic Approach

The proposed load disaggregation approach considers the presented problems of Section [\ref=subsec:problemStatements] and is performing autonomously and in an unsupervised way. No a priori information as the number of appliances or appliances informations is needed. The load disaggregation approach is usable with a minimal amount of power reading informations. Our proposed approach can be divided into four processing stages which are visualized in Figure [\ref=fig:overview].

State Detection: Aims to detect significant power edges which can be assigned to appliance switching events. Data preprocessing as signal smoothing and de-noising takes place at this processing stage.

State Clustering: Power edges are formed to state clusters to identify the most important states or switching events. These states are used to create appliance models used by the load disaggregator.

Classification: With the appliance models generated, appliance states should be estimated by an online load disaggregation approach using low frequency active power readings.

Appliance Database Update: To add, to maintain and to delete appliance models in an autonomous way, this stages is responsible to find new power states, to improve the power states of existing appliance models and to delete appliance models which appeared only once or very rarely.

Autonomous Load Disaggregation

The presented load disaggregator is autonomous and unsupervised. No a priori knowledge about the number and power value of appliances in the system is needed. The used appliance models are created and updated in operation and are used by the load disaggregator to make estimates which detected appliance was used at which point in time. A system overview of all processing stages is presented in Figure [\ref=fig:overview] including state detection, State DB update, state clustering, and clustering. In the following each processing stage is described in detail.

Feature Detection

One of the major tasks of the proposed load disaggregation approach is to detect and to identify useful appliance features. According to our assumption we focus on smart metering readings of active power ratings with a measurements resolution of 1Hz. With the aggregated power readings we aim to extract appliance features based on appliance switching events. In detail, we concentrate on switching ON and switching OFF events where all power states of an appliance are taken under consideration. The task is to produce abrupt edges with a significant change without losing important appliance related information in which power transients can last several seconds in real. Due to the fact the measurement readings are affected by noise, the reading have to be preprocessed to get sufficient and satisfying data. Thus, we de-noise the power readings by median filtering with an appropriate window size of for example 30 readings at a measurement frequency of 1 Hz. The window size has to chosen carefully since a window chosen too wide could lead to information loss by wiping out important edges. Edge detection based on moving average and thresholding is applied on the filtered power readings to detect rising as well as falling edges. All rising and falling edges are checked for matching pairs to create a pool of possible appliance power states. This processing stage is performed on sliding time window of predefined size. We empirically identified one day as a suitable time window balancing a fair amount of switching events needed by processing stages.

State Clustering and Appliance Creation

The pool of occurred power edges is the basis for the following analysing process which aims to create appliance models used be the final classifier. To create appliance models, the first task is create a histogram of all edge pairs detected by the feature detectors. The created histogram counts the occurred power edges from 0 to 3000W each 5W. This task is followed by a segmentation stage. Segmentation is used as a form of clustering to combine similar occurred edges to one edge pair representing a possible appliance power state. The set of possible power states is used to create appliance models including their nominal power consumption in operation. The appliance models are saved in a simple database which is updated in use. In detail, new appliances according to newly occurred power states are included and appliance models and power states which occur rarely are removed from the appliance model database. We model each appliance as an described by an initial state, by its transition matrix, and by its observations matrix. The detected power states are assigned to the observation matrix of a representing the appliance power demand in operation. The off state (0W) is assigned to each appliance as second observation and as the initial state . The total power demand is modelled by an where the set of appliance s aggregate their power observations over time.

Online Classification

Our appliance classifier is based on Baysian inference. We use the online load disaggregator presented in [\cite=Egarter2014]. The approach is based on aiming to approximate the posterior density of the The approach disaggregates each appliance power demand and appliance state from the household demand, according to the current observed consumption and the given appliance models. The output estimates the household consumption and inputs this information and the appliance models to a simple decision maker based on thresholding. The use of a as load disaggregator is beneficial for three reasons. First, can handle non-linear problems presented by non-linear behaving loads such as a driller or a dimmer. Second, it can handle non-Gaussian noise influences resulting from uncertainty in power trends and consumption data. Third, and its performance can be adjusted by the number of used particles. The more particles the considers, the better the estimated posterior density. The number of particles is limited by the computational effort of the approximation process. We empirically identified 1000 particles as an appropriate number balancing the trade-off between the context of computational effort and detection performance. Exact knowledge of the transition matrix values is not necessary since the is independently estimating the appliance states by an appropriate number of used particles. In case of a two-state appliance represented by a two-state transition matrix, a clear trend which state is more probable than the other should be visible. This simplifies the appliance modelling stage and makes the approach of [\cite=Egarter2014] usable for the appliance models employed in this work. The disaggregation process is performed on each measurement sample (each second) and considers only the current power sample by the estimation process.

Appliance Database Update

In each time window power edges and appliances are generated. It is obvious that one time window is not representative for an set of appliances. Appliances are used in different times and days as wells as repetitions. Thus, the process to generate appliances has to be performed on each time window which rises the need to update saved appliance models. We implemented an updating process which is checking for new appliances and power states, for appliances or power states which are similar to existing appliances and for appliances which are only rarely used. We are tracking appliance usage meta data including power state, appearance per day, power estimates and operational time for each day. The parameters are used to update the saved appliance model database. Moreover, we use a threshold of 50W to distinguish between two appliances. Thus, appliances with a power draw indistinguishable from each other with respect to the measurement accuracy of the system are modeled both as the same virtual appliance with the respective power draw.

Evaluation

Implementation & Evaluation Settings

We implemented the presented unsupervised approach in Matlab. As input of the approach we used an aggregated consumption dataset based on measurements from real households. No further input is forwarded the approach. The presented tests and evaluations are simulation based and were run on a MacBook Pro, 2,8GHz with 8GB RAM. To test the approach according to its detection performance we used the disaggregation error on appliance level describing the of the estimated and ground truth power data. Due to the fact that the unsupervised approach is based on unlabelled data, the labelling of the power states and appliances was made empirically. Each detected appliance is mapped to a known power state of the ground truth or to the "unknown" appliance state container. The "unknown" appliance state container presents appliance states which were not previously identified by a human observer but were detected by the algorithm. Moreover, similar appliance of the ground truth data are combined as one virtual appliance since the algorithm has no possibility to distinguish between appliances with the same power demand.

Dataset

There exists several publicly available datasets which can be employed to the test our proposed approach such as the REDD dataset [\cite=kolter-kdd-2011], the GREEND dataset [\cite=Andrea2014], the ECO-dataset [\cite=Beckel2014], the AMPds dataset [\cite=makonin2013ampds], and the Smart* dataset [\cite=barker2012smart]. We chose the REDD dataset as reference because of the recording parameters and due to its wide application as a standard test set. This dataset offers active power readings on appliance level at approximately 1Hz resolution for 6 different houses. We took one house 1 of the dataset for evaluation using six appliances (oven, fridge, dishwasher, kitchen outlet, microwave, washing dryer) to generate the aggregated power load. The appliances were chosen based on to their contribution to the household power demand [\cite=Carlson2013132]. As time period we took 30 consecutive days.

Case Study

Number of Detected Power States per Day

The presented approch has no a priori information about the number of appliances either the number of power states. Thus, one big task is to detect power states and map this power states to states empirically identified as reference power states. To evaluate the performance we took for each day the reference power state and the estimated power states. Firstly, the power draw is de-noised and smoothed as presented in Figure [\ref=fig:smoothedSignal]. High frequency fluctuations are removed and a steady state of the power draw is reached by sharpening the edges. This stage is helpful and necessary for the edge detection.

After removing these power fluctuations, the power states are detected by edge detection and state clustering. We tried to map the detected power states to the real ones by a simple distance measure. As reference value we took a difference of 75W. The result are two numbers representing the number of appliance states able to mapped to reference power states and the number of power states which can not be mapped to reference power states. The reference power states are empirically identified and therefore, we claim that appliance power states in group of not assignable power states are not necessarily false detected, but means that they belong to appliance states that are rarely occurring. In total, the 9 following appliance states are possible: 100,200,390,800,1100,1500,1650,2600 and 2720 Watts.

Figure [\ref=fig:detectedStates] presents the results of detected and assignable/not assignable power states per day for 30 consecutive days of 6 different household appliances. The graph shows that the number of detected power states is getting better and stable over days in operation. The number of not assignable appliances stagnate since power states which are occurring frequently are not eliminated by the database update process. Figure [\ref=fig:detectedVsKnwon] illustrates the known appliance power states (gray area) against the detected power states (black bars) for a time duration of 30 days. Moreover, the power region between 1200W and 1500W indicates that the algorithm detects appliance state which were not identified empirically by hand.

Load Disaggregation error on appliance level and for the total power draw

The previous case study was evaluating how good the unsupervised state detection and appliance modelling process is working. In the second case study the generated appliance models are used by the presented load disaggregation classification approach. As described the appliance are modelled as s where the transition matrix is set a-priori. To make the ground-truth appliance data comparable with the results of the load disaggregator we treat appliances with sufficiently similar power demands as the same virtual appliances. Therefore, we empirically deployed three virtual appliances as representative for the evaluations of the used appliance set. In the case of the load disaggregator we tried to assign the detected appliance states to the virtual appliances. Power states not assignable are marked as unKnown.

In Figure [\ref=fig:estimatedEnergy] the power shares of the estimated energy per virtual appliance and not assignable power share are presented. As comparison the ground truth pie chart of the power shares is illustrated in Figure [\ref=fig:groundTruthEnergy].

The results show that the estimation error is satisfying in which the error between the estimated (100.728kWh) and the real consumed energy (101.51kWh) is around 1%. It is visible that most of the estimated appliance models and their power estimates can be assigned to the virtual appliances. Around 9% of the estimated energy can not be assigned to an virtual appliance. As reason we claim the process how we assigned power states to the virtual appliances in which we chose an distance error of 75W from the detected power state and the real power state.

Acknowledgement

This work was performed in the research cluster Lakeside Labs funded by the European Regional Development Fund, the Carinthian Economic Promotion Fund (KWF), and the state of Austria under grants 20214/22935/34445 (Smart Microgrid Lab) and 20214-23743-35469/35470 (Monergy). We would like to thank Andrea Monacchi for useful discussion.

Limitations & Future Work

The presented approach has several limitations which has to be improved by future research. For example, the approach is considering two-state appliance models in which the state detection stage is already detecting all possible power states. These power states can be part of an multi-state device. Thus, we aiming to define rules and algorithms how to combine power events to multi-state appliance models. Further, we want also to improve the state detection process concerning long lasting power transients of appliances. Some appliances and appliance types have transients which last for several seconds. This should be improved by advanced detection algorithms. Finally, the problem of automatic appliance labelling to the correct appliance type is not considered yet. Future work has to consider how to label detected appliances according to the detection history and general appliance type information as general operation duration or occurrence frequency per day.

Conclusion

In this paper an unsupervised approach to solve the problem to disaggregate appliance power draws from the aggregated power load was presented. The approach autonomously detects the power states of the used appliances. It improves the saved appliance models in operation and updates the appliance database by adding new appliance models and by removing rarely occurring appliance models. The detected appliance models can be used by the load disaggregator to estimate the appliance states. The estimation results are promising in particular because of the low amount on not assignable energies and the good overall estimation result.

The models for each appliance are learned in run-time of the algorithm. The algorithm contains a preprocessing stage to de-noise and smooth the aggregated power draw in a way to be able to detect sharp and significant power edges. Only with the knowledge of the power edges appliance models as on/off appliances are established used by the load disaggregator based on particle filtering. The approach is evaluated on real measurement data where our results emphasizes the proposed approach as a very promising approach.

The number of detected appliance states and the corresponding disaggregation result is sufficient and satisfying and had been achieved without appliance information from the user. Future work will aim at multiple appliance modelling and automatic appliance labelling.