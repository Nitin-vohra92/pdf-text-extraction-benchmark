Corollary

On a Cardinality-Constrained Transportation Problem With Market Choice

Introduction and Main Result

Transportation Problem with Market Choice

The transportation problem with market choice (TPMC), introduced in the paper [\cite=DDK14], is a transportation problem in which suppliers with limited capacities have a choice of which demands (markets) to satisfy. If a market is selected, then its demand must be satisfied fully through shipments from the suppliers. If a market is rejected, then the corresponding potential revenue is lost. The objective is to minimize the total cost of shipping and lost revenues. See [\cite=geunes] [\cite=levi] [\cite=vanDenHeuvel] for approximation algorithms and heuristics for several other supply chain planning and logistics problems with market choice.

Formally, we are given a set of supply and demand nodes that form a bipartite graph [formula]. The nodes in set V1 represent the supply nodes, where for i∈V1, [formula] represents the capacity of supplier i. The nodes in set V2 represent the potential markets, where for j∈V2, [formula] represents the demand of market j. The edges between supply and demand nodes have weights that represent shipping costs wij, where (i,j)∈E. For each j∈V2, rj is the revenue lost if the market j is rejected. Let xij be the amount of demand of market j satisfied by supplier i for (i,j)∈E, and let zj be an indicator variable taking a value 1 if market j is rejected and 0 otherwise. A mixed-integer programming (MIP) formulation of the problem is given where the objective is to minimize the transportation costs and the lost revenues due to unchosen markets:

[formula]

We refer to the formulation [\eqref=TPSL:objective]-[\eqref=TPSL:supplycons] as TPMC. The first set of constraints [\eqref=TPSL:demandcons] ensures that if market j∈V2 is selected (i.e., zj = 0), then its demand must be fully satisfied. The second set of constraints [\eqref=TPSL:supplycons] model the supply restrictions.

TPMC is strongly NP-complete in general [\cite=DDK14]. The paper [\cite=AB14] give polynomial-time reductions from this problem to the capacitated facility location problem [\cite=KH63], thereby establishing approximation algorithms with constant factors for the metric case and a logarithmic factor for the general case.

TMPC with dj∈{1,2} for all j∈V2 and the Matching Polytope

When dj∈{1,2} for each demand node j∈V2, TPMC is polynomially solvable [\cite=DDK14]. This is proven through a reduction to a minimum weight perfect matching problem on a general (non-bipartite) graph G' = (V',E'); see [\cite=DDK14]. We call this special class of the problem, the simple TPMC problem in the rest of this note.

The matching problem can be seen as a special case of the simple TPMC problem. Let G(V,E) be a graph with n vertices and m edges. We construct a bipartite graph [formula] as follows: V̂1 is a set of n vertices corresponding to the n vertices in G, and V̂2 corresponds to the set of edges of G, i.e., V̂2 contains m vertices. We use (i,j) to refer to the vertex in V̂2 corresponding to the edge (i,j) in E. The set of edges in Ê are of the form (i,(i,j)) and (j,(i,j)) for every i,j∈V such that (i,j)∈E. Now we can construct (the feasible region of) an instance of TPMC with respect to [formula] as follows:

[formula]

Clearly there is a bijection between the set of matchings in G(V,E) and the set of solutions in Q. Moreover, let

[formula]

where e is the all ones vector in [formula]. Then we have that the incidence vector of all the matchings in G(V,E) is precisely the set y(H).

Note that the instances of the form of ([\ref=match1])-([\ref=match3]) are special cases of simple TPMC instances, since in these instances all si's are restricted to be exactly 1 and all dj's are restricted to be exactly 2.

Simple TPMC with Cardinality Constraint: Main Result

An important and natural constraint that one may add to the TPMC problem is that of a service level, that is the number of rejected markets is restricted to be at most k. This restriction can be modelled using a cardinality constraint, [formula], appended to [\eqref=TPSL:objective]-[\eqref=TPSL:supplycons]. We call the resulting problem cardinality-constrained TPMC (CCTPMC). If we are able to solve CCTPMC in polynomial-time, then we can solve TPMC in polynomial time by solving CCTPMC for all [formula]. Since TPMC is NP-hard, CCTPMC is NP-hard in general.

In this note, we examine the effect of appending a cardinality constraint to the simple TPMC problem.

Given an instance of TPMC with V2, the set of demand nodes, and E, the set of edges, let [formula] be the set of feasible solutions of this instance of TPMC. Let [formula] and k  ≤  |V2|. Let [formula] If [formula] for all j∈V2, then [formula]

Our proof of Theorem [\ref=conjectureintproperty] is presented in Section 2. We note that the result of Theorem [\ref=conjectureintproperty] holds even when Xk is defined as [formula] or [formula].

By invoking the ellipsoid algorithm and the use of Theorem [\ref=conjectureintproperty] we obtain the following corollary.

Cardinality constrained simple TPMC is polynomially solvable.

We note two other consequences of Theorem [\ref=conjectureintproperty]:

Special class of minimum weight perfect matching problem with a cardinality constraint on a subset of edges can be solved in polynomial time: As discussed in the previous section, simple TPMC can be reduced to a minimum weight perfect matching problem on a general (non-bipartite) graph G' = (V',E') [\cite=DDK14]. Therefore, it is possible to reduce CCTPMC with dj  ≤  2 for all j∈V2 to a minimum weight perfect matching problem with a cardinality constraint on a subset of edges. Hence, Corollary [\ref=corrolary1] implies that a special class of minimum weight perfect matching problem with a cardinality constraint on a subset of edges can be solved in polynomial time.

Note that the intersection of the perfect matching polytope with a cardinality constraint on a strict subset of edges is not always integral.

Consider the bipartite graph [formula] with V1  =  {1,2,3},V2  =  {4,5,6}, E  =  {(1,4),(1,5), (2,4),(2,5),(2,6),(3,5),(3,6)}, and the cardinality constraint x14  +  x25  ≤  1. It is straightforward to show that x14  =  x15 = x24 = x25 = 0.5,x26  =  x35 = 0,x36  =  1 is a fractional extreme point of the intersection of the perfect matching polytope with the cardinality constraint.

To the best of our knowledge, the complexity status of minimum weight perfect matching problem on a general graph with a cardinality constraint on a subset of edges is open. This can be seen by observing that if one can solve minimum weight perfect matching problem with a cardinality constraint on a subset of edges in polynomial time, then one can solve the exact perfect matching problem in polynomial time; see discussion in the last section in [\cite=bergerbogrsc2011].

Generalization of the matching cardinality result: A well-known result is that the intersection of the matching polytope with a cardinality constraint is integral [\cite=schrijver]. It is straightforward to verify that this result follows from Theorem [\ref=conjectureintproperty] applied to instances of TPMC constructed in Observation [\ref=mathobs] (See Appendix A). However as mentioned in Observation [\ref=mathobs], the instances ([\ref=match1])-([\ref=match3]) are special cases of simple TPMC instances. Therefore, Theorem [\ref=conjectureintproperty] represents a generalization of the classical result of integrality of the intersection of matching polytope and a cardinality constraint.

Finally we ask the natural question: Does the statement of Theorem 1 hold when dj  ≤  2 does not hold for every j? The next example illustrates that the statement of Theorem 1 does not hold in such case.

Consider an instance of TPMC where [formula] is a bipartite graph with [formula], V2  =  {1,2,3,4}, E = {(1,1),(2,2),(3,3),(4,1), (4,4),(5,2),(5,4),(6,3),(6,4)}, si = 1, i∈V1, dj = 2, j  =  {1,2,3}, d4 = 3. For k = 2 we it can be verified that we obtain a non-integer extreme point of [formula], given by [formula]. Therefore, [formula] in this example.

Proof of Theorem [\ref=conjectureintproperty]

To prove Theorem [\ref=conjectureintproperty], one approach could be to appeal to the reduction to minimum weight perfect matching problem and then use the well-known adjacency properties of the vertices of the perfect matching polytope. However, as illustrated in Example [\ref=example:pefectmatch], the integrality result does not hold for the perfect matching polytope on a general graph with a cardinality constraint on any subset of edges. Therefore a generic approach considering the perfect matching polytope appears to be less fruitful. We use an alternative approach to prove this result. In particular, we apply a technique similar to that used in [\cite=aghezzaf]. Consider the following property:

Let [formula] be some mixed integer set. We say that T satisfies the edge property if for all [formula] such that [formula] is bounded and has at least two optimal solutions, (x1,z1) and (x2,z2) where [formula], [formula] and k1  ≤  k2  -  2, then there is an optimal solution (x3,z3) such that [formula] and k1  <  k3  <  k2.

Let [formula] be a mixed integer set such that (T) is a pointed polyhedron and let [formula] If T satisfies the edge property, then [formula].

We present the proof of the Proposition [\ref=edgproperty-convexhull] for completeness. See also [\cite=aghezzaf].

Assume by contradiction that

[formula]

for some [formula]. By definition [formula] so [formula] holds for all [formula]. By assumption we obtain [formula]. Since (T) is pointed this implies that there exists a vertex (x',z') of [formula] such that [formula]. Therefore z' is fractional and [formula] (if [formula], then this point is also a vertex of (T), therefore integral and belonging to Tk' - a contradiction).

Since (x',z') is not a vertex of (T), there exists (w,r) such that the vertex (x',z') is the intersection of the face defined by [formula] and an edge of (T) defined as:

[formula]

where [formula]. Let (x1,z1) and (x2,z2) be two feasible points of T that belong to the edge ([\ref=eqn:theedge]) such that (x',z') is a convex combination of (x1,z1) and (x2,z2). Note that [formula]. Hence, (x1,z1) and (x2,z2) are two optimal solutions corresponding to the objective function (w,r). Furthermore, due to our selection of γ, [formula]. The edge property ensures that there exists an integral optimal solution (x3,z3) with [formula] such that [formula]. However, this implies that (x3,z3) belongs to the edge defined by ([\ref=eqn:theedge]). Thus, (x3,z3) must be a convex combination of (x1,z1) and (x2,z2) or equivalently, we must have (x3,z3) = (x',z') with z' integral, a contradiction.

Next we will verify that the edge property holds for the polytope corresponding to the instances of simple TPMC. If si  >  1 for some i∈V1, we can construct a new instance of simple TPMC where we replace the node with si identical nodes each with a capacity of 1. Note that this is a polynomial construction, because the supply, si, is at most 2|V2| for any i∈V1. It is straightforward to show that the edge property holds for the polytope corresponding to the first instance of simple TPMC if and only if the edge property holds for the polytope corresponding to new instance of simple TPMC. Therefore, in order to prove Theorem [\ref=conjectureintproperty] it is sufficient to verify the following result.

The edge property holds for simple TPMC instances with si  =  1 for all i∈V1.

The rest of this note is a proof of Proposition [\ref=keyprop].

then the edge property holds.

Since ρ is the optimal objective function value, we obtain that δ  =  0 since otherwise the objective function value of either (x3,z3) or (x4,z4) is better than that of (x1,z1). Therefore (x3,z3) is an optimal solution with [formula].

In what follows we assume that if (x1,z1) is an optimal solution to [formula], then x1 is integral. Otherwise, we can solve a simple transportation problem with the set of demand nodes j such that z1j  =  0. Since all data are integral, there exists an optimal solution with integral flows. Therefore, we may assume that x1 is integral.

Given an integral point (,) of X, let S(): = {j∈V2  |  j  =  0} be the set of nodes in V2 whose demands are met. For j∈S(), let Ij(,)  =  {i∈V1  |  ij  >  0}  =  {i∈V1  |  ij  =  1} be the set of suppliers that sends one unit to j.

Given the optimal solutions (x1,z1) and (x2,z2), let [formula], [formula] and [formula]. For j∈F, observe that only the set Ij(x1,z1) or the set Ij(x2,z2) is defined. So for j∈F, we define Ij as:

[formula]

As a first step towards constructing (x3,z3) and (x4,z4) required in Claim [\ref=claim0], we construct a bipartite (conflict) graph [formula]. The set of nodes is constructed as follows:

If [formula], then j∈U1 and j is called a full node. Let [formula] be the set of full nodes of U1.

Similarly, if [formula], then j∈U2 and j is called a full node. Let [formula] be the set of full nodes of U2.

If [formula] and dj = 2, then we place two copies of node j in U1 (call these j1 and j2) and two copies of j in U2 (call these j3 and j4). These nodes are called partial nodes of j. Each partial node of j is distinct: If Ij(x1,z1)  =  {t1,t2}, then associate (WLOG) t1 with j1 and t2 with j2, that is define Ij1:  =  {t1} and Ij2:  =  {t2}. Similarly if Ij(x2,z2)  =  {t3,t4}, then associate (WLOG) t3 with j3 and t4 with j4, that is define Ij3: = {t3} and Ij4: = {t4}. If [formula] and dj = 1, then we place one copy of node j in U1 (call this j1) and one copy of j in U2 (call this j3). Similar to the dj = 2 case these nodes are called partial nodes of j. If Ij(x1,z1)  =  {t1} and Ij(x2,z2)  =  {t3}, then set Ij1  =  {t1} and Ij3  =  {t3}. Let [formula], where P1  =  {j∈P:dj  =  1} and P2  =  {j∈P:dj  =  2}.

Thus, [formula] and for each element a∈U1 the set Ia is well-defined and non-empty. Similarly, [formula] and for each element b∈U2 the set Ib is well-defined and non-empty. Now we construct the edges E as follows: For all a∈U1 and b∈U2, there is an edge (a,b)∈E if and only if a and b have at least one common supplier, i.e.,

[formula]

Let G'(V',E') be a subgraph of [formula]. Since the elements in [formula] correspond to unique elements in V2, whenever required we will (with slight abuse of notation) treat [formula].

Now construct

[formula]

and

[formula]

Then (x3,z3) and (x4,z4) are feasible solutions of X that satisfy the requirements of Claim [\ref=claim0].

We verify that (x3,z3) is a valid solution to X. A similar proof can be given for the validity of (x4,z4). Clearly x3 and z3 satisfy the variable restrictions. We verify that the constraint [formula] is satisfied for all j∈V2. If j∈R, then z3j  =  z1j  =  1 and x3ij  =  0 for all (i,j)∈E; therefore the constraint is satisfied. If j∈F, then using the first and last entry in ([\ref=swapdemandx]), we have [formula]. If j∈P, then [formula]. Therefore z3j  =  z1j  =  0. Now it is straightforward to verify that [formula] for each j∈P2 since [formula] and by the use of the second, third, fourth and fifth entries in ([\ref=swapdemandx]). For j∈P1 we have [formula] since [formula] and by the use of the second and fourth entries in ([\ref=swapdemandx]).

Now we verify that the constraint [formula] is satisfied for all i∈V1. Given i∈V1, assume for contradiction that x3ig  =  x3ih  =  1 for some g,h∈V2 and g  ≠  h. By construction of (x3,z3), x3ij  =  0 for all j∈R. Thus, g,h∉R. Moreover since [formula] is satisfied for all j∈V2, we have z3g  =  z3h  =  0. Now, there are three cases to consider:

g,h∈F. By construction of x3 we have [formula]. Now if g∉V' and h∉V', then by construction of z3 (first entry in ([\ref=swapdemand])) we have z1g  =  z3g  =  0  =  z3h  =  z1h and thus g,h∈S(z1). Therefore by the validity of (x1,z1) we have [formula]. This contradicts [formula]. Now consider the case where g∈V' and h∈V'. Since [formula] by ([\ref=sanegraph]) there is an edge between g and h in [formula]. Thus we may assume without loss of generality that [formula] and [formula]. However, this implies that z3g = 1, a contradiction. Now, without loss of generality, assume that g∈V' and h∉V'. Since [formula] by ([\ref=sanegraph]) there is an edge between g and h in [formula]. On the other hand, by assumption there is no edge between nodes in V' and those not in V', which is the required contradiction.

g∈F and h∈P. We assume that g∈W1 (the proof when g∈W2 is similar). If g∈V', then z3g  =  1, a contradiction. Therefore, we have g∉V'. Thus z1g  =  z3g  =  0. Therefore by validity of (x1,z1) we have i∉Ih(x1,z1) or equivalently i∈Ih(x2,z2). Without loss of generality, we may assume that i∈Ih3. Note that h3 belongs to V' (by the construction of x3 and the fact that x3ih  =  1 and i∈Ih3). Since i∈Ig, there exists an edge between g and h3. However, since g∉V' and h3∈V', we get a contradiction to the fact that there are no edges between the nodes in V' and the nodes in [formula].

g,h∈P. In this case, we may assume without loss of generality that i∈Ig(x1,z1) and i∈Ih(x2,z2). Therefore without loss of generality, we may assume that i∈Ig1 and i∈Ih3. Since x3ig  =  x3ih  =  1, we have g1∉V' and h3∈V'. By assumption on G', this implies that there is no edge between g1 and h3. On the other hand, since [formula] by ([\ref=sanegraph]) we have an edge (g1,h3)∈E, a contradiction.

Next we verify that the objective function value of (x3,z3) is ρ  -  δ and that of (x4,z4) is ρ  +  δ where ρ is the objective function value of the solution (x1,z1) and [formula]. This result is verified by showing that (x3,z3) and (x4,z4) are obtained by 'symmetrically' updating demands from (x1,z1) and (x2,z2) respectively. In particular, we examine each demand node and examine the cost of either satisfying it or not satisfying it in each solution. We consider the different cases next:

j∈R. Then z4j  =  z3j  =  z1j  =  z2j  =  1.

[formula]. Then z1j  =  0 and z3j = 1. On the other hand z2j = 1 and z4j = 0. Notice that in each solution where dj is satisfied, this is done by using the same set of input nodes (and thus using the same arcs). Therefore the difference in objective function value between (x1,z1) and (x3,z3) due to demand node j is [formula] and the difference in objective function value between the solutions (x2,z2) and (x4,z4) due to demand node j is [formula].

[formula]. Similar to the above case the difference in objective function value between (x1,z1) and (x3,z3) due to demand node j is [formula] and the difference in objective function value between (x2,z2) and (x4,z4) due to demand node j is [formula].

[formula], then z1j  =  z3j and x1ij  =  x3ij for all (i,j)∈E. Similarly z2j  =  z4j and x2ij  =  x4ij for all (i,j)∈E.

j∈P2 such that [formula] and [formula]. Then the demand dj is satisfied by the nodes in Ij(x1,z1) in (x1,z1) and (x3,z3). Therefore there is no difference in objective function value between (x1,z1) and (x3,z3) with respect to demand node j. Similarly, the demand dj is satisfied by the nodes in Ij(x2,z2) in (x2,z2) and (x4,z4) and there is no difference in objective function value between (x2,z2) and (x4,z4) with respect to demand node j. We can make a similar argument for j∈P1 such that [formula] and [formula].

j∈P2 such that j1∈V', [formula], [formula], j4∈V' without loss of generality. Then the demand dj is satisfied by the nodes in [formula] in (x1,z1) and by nodes [formula] in (x3,z3). Therefore the difference in objective function value between (x1,z1) and (x3,z3) with respect to demand node dj is [formula]. The demand dj is satisfied by the nodes in [formula] in (x2,z2) and by the nodes in [formula] in (x4,z4). Therefore the difference in objective function value between (x2,z2) and (x4,z4) with respect to demand node j is [formula]. We can make a similar argument for the cases: [formula], j2∈V', j3∈V', [formula]; j1∈V', [formula], j3∈V', [formula] and [formula], j2∈V', [formula], j4∈V'.

j∈P2 such that j1∈V', j2∈V', j3∈V', j4∈V'. Then the demand dj is satisfied by the nodes in [formula] in (x1,z1) and by the nodes in [formula] in (x3,z3). Therefore, the difference in the objective function value between (x1,z1) and (x3,z3) with respect to satisfying demand dj is [formula]. The demand dj is satisfied by the nodes in [formula] in (x2,z2) and by the nodes in [formula] in (x4,z4). Therefore, the difference in the objective function value between (x2,z2) and (x4,z4) with regards to satisfying demand dj is [formula]. For j∈P1, we can similarly consider j1 and j3 with j1∈V', j3∈V'.

Therefore, the objective function value of (x3,z3) is ρ  -  δ and that of (x4,z4) is ρ  +  δ where ρ is the objective function value of the solution (x1,z1) and (x2,z2) and [formula].

Finally we verify that [formula] and [formula]. We prove this for (x3,z3). The proof is similar for the case of (x4,z4). Observe that if j∈R, then z1j  =  z3j  =  1. If j∈P, then z1j  =  z3j  =  0. If [formula], then z1j  =  z3j. If [formula], then z1j  =  0 and z3j  =  1 and if [formula], then z1j  =  1 and z3j  =  0. Thus [formula], where the last equality is by assumption ([\ref=property3]) of G'. Thus, [formula].

Now the proof of Theorem [\ref=conjectureintproperty] is complete by showing that a subgraph G'(V',E') of [formula] always exists that satisfies the conditions of Claim [\ref=claim1]. In order to prove this, we verify a few results.

This is evident from the fact that G* is bipartite and degree of [formula] is bounded from above by |Ia|.

We associate a value vj to each node [formula]. In particular:

If j∈W1, then vj  =  1.

If j∈U1 and j is a partial node, then [formula].

If j∈U2 and j is a partial node, then [formula].

If j∈W2, then vj  =   - 1.

For a subgraph (ṽ,Ẽ) of G* we call [formula] the value of the path.

[formula].

By Claim [\ref=claim2], a cycle has only full nodes. Moreover, since a cycle is of even length, it contains equal number of nodes from W1 and W2.

In the rest of this note, when we refer to a path in G*, we refer to a connected component of G* which is a path (that is any node not belonging to the path does not share an edge with any node of the path).

Note that a partial node must be a leaf node in a path. Using this observation and by some simple case analysis the following three claims can be verified. For the subgraph (ṽ,Ẽ), consider a [formula] such that k  =  jt where t∈{1,2,3,4} and j∈P2. Suppose k  =  j1 or j2, then we say that a path [formula] is a mirror path for j, if [formula] contains either j3 or j4. Moreover we call one of j3 or j4 (whichever belongs to [formula] or arbitrarily select one of these if both belong to [formula]) as the mirror node. Similarly if k  =  j3 or j4, then we say that a path [formula] is a mirror path for j, if [formula] contains either j1 or j2. Mirror node is similarly defined in this case. For j∈P1 we consider k = j1 and k = j3. Suppose k = j1, then we say that a path [formula] is a mirror path for j, if [formula] contains j3 and we call j3 the mirror node. Similarly if k = j3, then we say that a path [formula] is a mirror path for j, if [formula] contains j1 and we call j1 the mirror node.

Algorithm [\ref=algotable] constructs G'(V',E') that satisfies all the properties of Claim [\ref=claim1]. We next verify that Algorithm [\ref=algotable] is well-defined, that is all the steps can be carried out. Moreover, we show that the algorithm generates a subgraph G'(V',E') that satisfies the conditions of Claim [\ref=claim1].

We prove Claim [\ref=claim8] by induction on the iteration number (n) of the algorithm visiting Step ([\ref=decision]). When n  =  0:

At the beginning of Step ([\ref=atzero]) there are no 'marked' paths and therefore the total value of all marked paths is 0.

[formula].

By Step ([\ref=cleansol]), we know that there exists no path containing only full nodes with v(ṽ)  =  1. Moreover by Claim [\ref=claim3] we have [formula]. Since by Claim [\ref=claim4] all cycles have a value of 0, there must exist at least one path with partial nodes with positive value. Since this is only possible (Claim [\ref=claim5], Claim [\ref=claim6] and Claim [\ref=claim7]) if there exists exactly one partial node in the path, we see that Step ([\ref=atzero]) is well-defined.

At Step ([\ref=atzero]) one path is marked which has a value of half.

Since one path is tagged as marked in Step ([\ref=atzero]), it contains exactly one partial node, j*∈P. Suppose that j*∈P2 and j*  =  j * i for some [formula]. Then there exists paths (at least two) which contain the other three partial nodes corresponding to j*. If j*∈P1 then there exists one path which contains the other partial node. Therefore this step is well-defined.

Now for any [formula], assuming by the induction hypothesis that the result is true for [formula]:

Step ([\ref=atzero]) is arrived at via Step ([\ref=decision]b). Let n'  <  n be the last iteration when Step ([\ref=atzero]) is invoked. By the induction hypothesis, the total value of all the marked paths at the end of Step ([\ref=atzero]) in iteration n' is [formula]. From iterations [formula], the algorithm alternates between Step ([\ref=athalf]) and Step ([\ref=decision]c). The total value of all the marked paths here is 0. Finally, the value of the last path tagged as marked in Step ([\ref=athalf]) is [formula] (since the algorithm invokes Step ([\ref=decision]b)). Hence, the total value of all the marked paths is 0 at the beginning of Step ([\ref=atzero]) in iteration n.

Let n'  <  n be the last iteration when Step ([\ref=atzero]) is invoked. By the induction hypothesis [formula] for all j∈P2 and [formula] for all j∈P1 where [formula]. From iterations [formula], the algorithm alternates between Step ([\ref=athalf]) and Step ([\ref=decision]c). Since in iteration n - 1 at Step ([\ref=athalf]), we add one path that contains only the mirror node to j* (the unique partial node from the previous iteration), we arrive at this result.

Proof is the same as that in the case where n  =  0.

The total value of paths at the end of Step ([\ref=atzero]) = value of marked path + total value of previously marked path [formula].

Step ([\ref=athalf]) is invoked after either Step ([\ref=atzero]) or Step ([\ref=decision]c). In case we arrive via Step ([\ref=atzero]), by the induction hypothesis, [formula] for all j∈P2 and [formula] for all j∈P1 where [formula]. Moreover the path marked in Step ([\ref=atzero]) contains exactly a unique partial node j*, then there must exist an unmarked path containing a mirror node to j*. In case of we arrive via Step ([\ref=decision]c), again the proof is essentially the same by observing that at the start of Step ([\ref=athalf]), there is a unique partial node j* that is not paired with a mirror partial node.

This is true since there are a finite number of edges and at each iteration of the algorithm at least one unmarked path is tagged as marked.

First observe that since the output G'(V',E') of the algorithm is a disjoint union of paths, there exists no edge between V' and [formula] in E, so property [\ref=property1] is satisfied.

By Claim [\ref=claim8], 2. we have [formula] for all j∈P2 and [formula] for all j∈P1 where

[formula]

Therefore, it is easily verified that in the last iteration before termination, a path with a unique partial node, which is a mirror node to j*, is marked in Step ([\ref=athalf]). This is because before termination we arrive at Step ([\ref=decision]a) implying that the value of the path marked in Step ([\ref=athalf]) is [formula]. Hence Claim [\ref=claim5] and Claim [\ref=claim6] imply that there is a unique partial node in this path. Thus, [formula] for all j∈P2 and [formula] for all j∈P1, so property [\ref=property2] is satisfied.

Finally, since v(V')  =  1 and [formula] for all j∈P2 and [formula] for all j∈P1 we have

[formula]

As a result, [formula], so property [\ref=property3] is satisfied.

We showed that the set of solutions to TPMC satisfies the edge property. Theorem [\ref=conjectureintproperty] then follows from Proposition [\ref=edgproperty-convexhull].

Acknowledgements.

Pelin Damcı-Kurt and Simge Küükyavuz are supported, in part, by NSF-CMMI grant 1055668. Santanu S. Dey gratefully acknowledges the support of the AIR Force Office of Scientific Research grant FA9550-12-1-0154.

Appendix A

Theorem [\ref=conjectureintproperty] implies the result that the matching polytope intersected with a cardinality constraint is integral.

We use the notation introduced in Observation [\ref=mathobs]. Let e be the all ones vector in [formula]. Therefore we need to prove that the matching polytope intersected with a cardinality constraint is integral, i.e.,

[formula]

using Theorem [\ref=conjectureintproperty].

By Theorem [\ref=conjectureintproperty], we have

[formula]

By appending the constraints y  =  e - z on both sides of ([\ref=thmagain]), we obtain

[formula]

Since y  =  e  -  z in the definition of H, ([\ref=thmagain1]) is equivalent to

[formula]

Now note that

[formula]

where the second equality follows from the fact that the constraint [formula] is independent of x and z.

Also note that

[formula]

where again the first equality follows from the fact that the constraint [formula] is independent of x and z. Equations ([\ref=preproj])-([\ref=projright]) complete the proof.