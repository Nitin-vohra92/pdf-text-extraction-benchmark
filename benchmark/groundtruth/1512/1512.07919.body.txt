Improving Software Citation and Credit

Introduction

Providing credit to code authors through citation has been a recurring topic in previous Birds of a Feather (BoF) sessions sponsored by the Astrophysics Source Code Library (ASCL) at ADASS meetings: (Bring out your codes! Bring out your codes! [\citep=2013ASPC..475..383A] and Ideas for advancing code sharing [\citep=2014ASPC..485....3T]. This BoF continued the work started at previous BoFs on that topic, and represents a topic being addressed by the ASCL at astronomy software sessions and topical meetings.

The BoF opened with a short presentation by Bruce Berriman and Alice Allen. Berriman described a Software Publishing Special Interest Group (SPSIG) meeting held by the ASCL at the American Astronomical Society (AAS) meeting in January 2015 to discuss software citation; the SPSIG was formed at the request of the AAS's Working Group on Astronomical Software (WGAS). The meeting was attended by publishers and editors from AAS journals, Springer, IOP, Cambridge University Press and Oxford University Press, software authors, representatives from the Astrophysics Data System (ADS), GitHub and projects such as the Large Synoptic Survey Telescope (LSST), researchers, and others. Berriman summarized a working Google document that captured the deliberations at that meeting (essentially, a summary of the current state of software citation in astronomy). He also presented opinions on what constitutes a citable work, the difference between attribution and citation, and a restatement of the distinction between citation and attribution by Christine Borgman.

Allen reported on recent efforts by software citation workgroups formed at the 3rd Workshop on Sustainable Software for Science: Practice and Experiences (WSSSPE3) and Force11; as these efforts are very similar, the WSSSPE group has now joined the Force11 efforts. She also reported on the Center for Open Science's Transparency and Openness Promotion (TOP) Guidelines and a Sloan-sponsored meeting at GitHub in San Francisco to begin work on a cohesive research software citation-enabling platform. The slides from Berriman's and Allen's presentation are available online, as are other resources and links.

Group Discussion

The very lively discussion among the 40 attendees was moderated by Keith Shortridge; a Google document captured some of the discussion and was later shared and augmented by some of the attendees. Different citation methods mentioned in Berriman's presentation were discussed; a software description paper has been the most common way to cite software that has been used in a research project. Even with a software description paper available to use for citation, many codes used in research do not receive a formal citation in research papers. Alberto Accomazzi pointed this out by pulling some quick statistics from ADS for the DAOPHOT package, and reported that the DAOPHOT code description paper has over 3,000 citations to it, yet the software is mentioned in more than 6,000 papers. Accomazzi supplied more exact numbers after the meeting: as of November 11, the DAOPHOT code description paper had 4,035 formal citations and the software was mentioned in 3,061 papers that did not cite it formally. It has been previously noted that quantitative measures of the impact of software on the astronomy community are hard to derive in the absence of a culture of citation: e.g., "... although some 22,000 peer-reviewed papers mention the VLA radio telescope, only 68 formally acknowledge the use of AIPS and only 59 acknowledge use of CASA, the two dominant reduction and analysis packages for radio interferometry data."[\citep=2015A&C....11..190H]

A recent experiment among some journals to request code with papers, requiring a code author to provide a tarball of the software and turn over copyright of it to a publisher, was discussed with vigor. This practice did not receive any support among those assembled, and later (and ongoing) discussion made clear how concerned software authors are about this path. Indeed, this practice was unanimously condemned.

The need to make a distinction between publishing software and making it available - releasing it - was discussed and then a request for the group to start focusing on possible recommendations and actionable suggestions was made and followed.

Ideas from the Collected Masses

Some of the suggestions made for improving software citation and credit were directed to specific parts of the community to do or to use, whereas others were more general or assumed to be for the ASCL or other entities involved in software, and included:

For authors: Provide information as to what software should be cited. Cite the first-level software; a manuscript author is not responsible for citing software dependencies unless there are specific instructions from first-level software author for citing them.

For authors: Do not cite GitHub directly. Use Internet Archive, ASCL, Zenodo, Figshare, etc.

For publishers: Do not count references against the word count.

For ADS: Include software in categorization of entries.

For the community: Encourage your university to ask about software on the annual research activity report.

For the community: Write a wiki article for AstroBetter and the AAS newsletter and other places on how to release software for citation, and how to cite software.

For the community: Create and award a prize for software contributions.

For the community: Create a video on how to release and cite software effectively.

For the community: Collect and publish stories from people who have released their software and what their views are on releasing software.

Conclusions

Clearly there is a role for each person in the community to contribute to the goal of improving software citation and credit. Software authors can release their codes, follow one of several paths for making their code easily citable, and specify clearly and obviously how they want their software cited. Researchers using software in their work can cite computational methods as their authors specify, and journal editors can insist that codes be cited properly in the manuscripts they accept. Publishers can require software citations that are properly formatted so indexers can pick up and track the citations, and can remove length restrictions that prohibit methods citations. Those serving the community, such as ADS and ASCL, can promote better software citation by sharing information about citations and encouraging the community to improve, and individuals can push for inclusion of software activities in consideration for promotions and tenure.