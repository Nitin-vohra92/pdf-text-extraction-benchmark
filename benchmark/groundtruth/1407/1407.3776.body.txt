Navier-Stokes solver using Green's functions II: spectral integration of channel flow and plane Couette flow

Introduction

The incompressible Navier-Stokes equation [formula], where [formula] is the velocity field and the pressure p a Lagrange multiplier for enforcing the incompressibility constraint [formula], is an adequate physical model for a very great variety of phenomena pertaining to fluid flows. The velocity field [formula] is represented as

[formula]

with [formula]. If either L or N is even, the ±  L / 2 and ±  N / 2 terms are collapsed into a single cosine (or set to zero for convenience). The three components of l,n are represented using Chebyshev polynomials Tn(y) as [formula] (it is typical to set cM to zero for convenience). The number of grid points in the y direction is always denoted by M + 1. This type of representation of velocity fields was first employed by Orszag [\cite=Orszag1971] in 1971.

The first computer simulation of fully developed turbulence in wall bounded flows was reported in a paper by Kim, Moin, and Moser [\cite=KimMoinMoser1987]. Another effective and widely used algorithm for channel and plane Couette geometries is due to Kleiser and Schumann [\cite=KleiserSchumann1980]. In this note, we give a reformulation of the Kleiser-Schumann algorithm. This reformulation uses perfectly triangular matrices instead of triangular matrices with a dense row.

One of the largest Reτ attained appears to be due to Hoyas and Jim�nez [\cite=HoyasJimenez2006] [\cite=HoyasJimenez2008], who have reported simulations at Reτ = 2003. Hoyas and Jim�nez use compact finite differences to discretize derivatives in the y direction. Unlike the Chebyshev grid which is quadratically clustered at the endpoints [formula], the Hoyas-Jim�nez grid is clustered like the 1.5-th power at [formula]. We report a turbulence simulation at Reτ = 2400.

A boundary value solver for [formula]

In this section, we describe a boundary value solver for the linear equation

[formula]

The boundary value problem ([\ref=eq:secn2-bvp]) is integrated once with respect to y to get the following equation.

[formula]

The solution derivative Du is expanded in a truncated Chebyshev series as [formula]. We use Tj(u) to denote the coefficient αj in the Chebyshev series expansion of u(y). For convenience, TM(u) = αM is assumed to be zero.

The first step is to find the particular solution of ([\ref=eq:secn2-bvp-integrated]) subject to the integral conditions T0(u) = T0(Du) = 0. Because T0(u) = 0, there is no indeterminate constant in the Chebyshev series of u obtained by integrating Du:

[formula]

where α0  =  αM = 0. This equation is integrated once more, once again using [formula] for n > 1, [formula], and [formula], to get

[formula]

where α0  =  αM  =  αM + 1 = 0. Here C is an indeterminate constant.

Similarly, if Tj(f) = fj and Tj(g) = gj in the truncated Chebyshev series of the functions f and g, the expansion of [formula] is given by

[formula]

where C is another indeterminate constant and it is assumed that fM = gM = 0. Equating the Chebyshev coefficients on either of side of ([\ref=eq:secn2-bvp-integrated]) for [formula] we have

[formula]

for [formula]. These M - 1 equations decouple into two tridiagonal systems of dimensions [formula] and [formula] for the even and odd modes, respectively. The equations are solved for [formula] to find the Chebyshev series of Du. The Chebyshev series of u is found using that of Du ([\ref=eq:secn-chebseries-Du2u]). This particular solution u satisfies the integral conditions T0(Du) = T0(u) = 0.

The particular solution found in this way is quite inaccurate when a is large, which is the typical situation when the Reynolds number Re is large. However, the boundary value problem ([\ref=eq:secn2-bvp]) can still be solved accurately. To do so, the homogeneous solutions of ([\ref=eq:secn2-bvp]) must be found in a peculiar way. For reasons explained in [\cite=Viswanath2014], this peculiar way of finding homogeneous solutions leads to a cancellation of discretization error and an accurate solution of the original boundary value problem.

One of the homogeneous solutions is taken to be of the form [formula] with u satisfying T0(Du) = T0(u) = 0. Then u satisfies [formula]. Thus Duh1 and uh1 may be found by solving ([\ref=eq:secn2-eqn-for-alphas]) with [formula] and [formula].

The other homogeneous solution is taken to be of the form uh2 = T1 / 2 + u with T0(Du) = T0(u) = 0 as before. This time [formula] and ([\ref=eq:secn2-eqn-for-alphas]) must be solved using f1 = a2 / 2 and [formula].

Finding the particular solution u and the homogeneous solutions uh1,  uh2 involves solving a total of 6 tridiagonal systems each of dimension approximately M / 2. In the linear combination u + c1uh1 + c2uh2 the coefficients c1 and c2 are calculated by setting the boundary values at [formula] to A and B as in ([\ref=eq:secn2-bvp]). The solution derivative is given by Du + c1Duh1 + c2Duh2. Here the derivatives Du,  Duh1,  Duh2 are from solving the tridiagonal systems and not from numerical differentiation. The function g(y) on the right hand side of ([\ref=eq:secn2-bvp]) is not differentiated numerically either.

The Kleiser-Schumann algorithm

Here we use the boundary value solver of Section 2 to derive a version of the Kleiser-Schumann algorithm [\cite=KleiserSchumann1980], which does not use numerical differentiation.

In the Fourier decomposition of the velocity field ([\ref=eq:secn1-fourier-of-u]), denote the Fourier mode l,n by (u,v,w), after dropping the subscripts l,n. The Fourier mode at the end of time step q is denoted by [formula]. Similarly, if [formula] is the nonlinear term, denote its l,n-th Fourier mode by [formula]. Similarly, p denotes the l,n-th Fourier mode of pressure (more precisely, pressure plus [formula]) and pq denotes that Fourier mode at the end of time step q.

The Navier-Stokes equation for the l,n-th mode takes the following form:

[formula]

where α2 = l2  /  Λ2x + n2  /  Λ2z. The incompressibility condition is (il / Λx)u + ∂v / ∂y + (in / Λz)w = 0. Using the incompressibility condition, we get

[formula]

Each of these equations is of the form [formula], with [formula]. The time discretizations we consider are of the following form [\cite=ViswanathTobasco2013]:

[formula]

The method applies to other discretizations such as Runge-Kutta with little change. Low storage Runge-Kutta schemes, which use only slightly more memory than the Euler method, are more commonly used. The low-storage scheme in [\cite=SpalartMoserRogers1991] uses three sub-steps, is 2nd order in viscous terms and 3rd order in convection terms. The theoretical CFL limit is [formula] [\cite=SpalartMoserRogers1991] or [formula] per sub-step. In comparison, the 3rd order 3 step scheme of the form above has 0.63 as its theoretical CFL limit. There appears to be room for a little progress here, which is why we are opting for multistep methods.

If the equations for the l,n-th mode are time-discretized, we get

[formula]

where β2  =  α2  +  γRe / Δt. Here (u,v,w) is the l,n-th mode of the velocity field (compare ([\ref=eq:secn1-fourier-of-u])) at the end of time step q + 1 and likewise with p. Here [formula] for i = 1,2,3 and [formula]. The coefficients aj and bj are from the time discretization ([\ref=eq:secn3-time-disc]). The quantities V and W are defined in the same manner as U. The pressure Poisson equation takes the form

[formula]

We will show how to solve ([\ref=eq:secn3-pressure-poisson]) and ([\ref=eq:secn3-ks-eqns]) without numerical differentiation in the y direction. The quantities

[formula]

are assumed to be available at the end of time steps [formula]. They are used to compute H̃i and U,V,W. The first step, described at greater length below, is to solve for u,du / dy,v,dv / dy,w,dw / dy at the end of time step q + 1 using ([\ref=eq:secn3-pressure-poisson]) and ([\ref=eq:secn3-ks-eqns]). Once these quantities are available the vorticity component l,n may be formed using arithmetic operations and [formula] is available for the next time step.

The equations ([\ref=eq:secn3-pressure-poisson]) and ([\ref=eq:secn3-ks-eqns]) are solved for u,du / dy,v,dv / dy,w,dw / dy as follows.

Find a particular solution [formula] of the pressure Poisson equation ([\ref=eq:secn3-pressure-poisson]) using the boundary value solver of Section 2. Note that g =  - H̃2 when that solver is applied and H̃2 is not differentiated numerically.

Find two solutions p1 and p2 of the homogeneous part of ([\ref=eq:secn3-pressure-poisson]), which is [formula] as described in Section 2. These two solutions can be precomputed and reused at every time step.

Assume [formula] and solve the v equation of ([\ref=eq:secn3-ks-eqns]) with the boundary conditions [formula] using the boundary value solver of Section 2. Since c1 and c2 are undetermined constants, we may take the solution to be [formula], where all of [formula] are zero at the walls. Note that [formula] are not differentiated numerically because the boundary value solver which produces those quantities also produces their derivatives. Alternatively, numerical differentiation can be avoided by using p * ,p1,p2 multiplied by Re in place of g in the boundary value solver of Section 2.1. As long as the time step Δt does not change, we may precompute and reuse v1 and v2. The indeterminate quantities c1 and c2 are calculated using the zero divergence condition (il / Λx)u + ∂v / ∂y + (in / Λz)w = 0. More specifically, we must have dv / dy = 0 at [formula] since the no-slip boundary requires u = v = w = 0 at the walls for all but the mean mode. Note that [formula] are not differentiated numerically to enforce dv / dy = 0 at the walls. The boundary value solver that produces those quantities also produces their derivatives.

Once we have p, we may solve the u and w equations of ([\ref=eq:secn3-ks-eqns]) to produce u,du / dy as well as w,dw / dy.

To complete the description of this method, we show how the mean modes are handled. The mean Fourier components are denoted using an over-bar. The equations for the mean modes at the end of time step q + 1 are as follows:

[formula]

Here [formula], [formula], and likewise for W. The contribution of the pressure gradient is P, which is set to zero for plane Couette flow. For channel flow the pressure gradient may be fixed at - 2 / Re, but turbulence is better sustained by fixing the mass flux [formula] at 2 / 3. The mass flux is maintained by choosing

[formula]

In either case the laminar solution is [formula]. In the equations above, [formula]. The boundary condition for ū is [formula] for channel flow and [formula] for plane Couette flow. These three equations for the mean mode are uncoupled. The second equation is solved for [formula]. From the other two equations, ū, as well as their derivatives are obtained using the boundary value solver of Section 2.1. The mean component [formula] is zero as a consequence of incompressibility of the fluid and the no-slip boundary.

Numerical results

The computations described in this section were run on 10 compute nodes, each a 2.67 GHZ Xeon 5650 with 12 processor cores, connected over QDR Infiniband network. The peak memory bandwidth (for reading data) on a single node is more than 30 GB/s. The peak bidirectional network bandwidth on a single node approaches 5 GB/s. Each node has 48 GB of memory. The largest computation carried out used 109 grid points to reach Reτ = 2380.

Moser, Kim, and Mansour (MKM) [\cite=MoserKimMansour1999] carried out direct numerical simulations of channel flow at Reτ = 587. The run parameters of Table [\ref=tab:secn5.1-validation] are the same as that of MKM with minor differences. The Reynolds number Reτ = 601 is slightly higher and the grid in the wall-normal direction is finer using M = 320 instead of M = 256. For second order statistics, the grid resolutions are required to be [formula], [formula], and [formula]. The initial run to eliminate transients and achieve a statistically steady turbulent state satisfies [formula]. Thirty eddy turnover times is quite a long integration and we may be sure that transients are thoroughly eliminated.

Figure [\ref=fig:secn5-validation-1] shows excellent agreement of mean streamwise velocity, turbulence intensities, and vorticity fluctuations. The slight discrepancy in streamwise turbulence intensity [formula] visible near [formula] is most likely because the MKM run was not as long as that of Table [\ref=tab:secn5.1-validation]. A run with T > 40τeddy is affordable on even a small cluster purchased in 2010, thanks to 15 +  years of exponential increase in computing power, but would not have been affordable to MKM. The slight discrepancy in streamwise turbulence intensity near [formula] is probably because the Reτ in Table [\ref=tab:secn5.1-validation] is slightly higher than that of MKM.

The correlations shown in Figure [\ref=fig:secn5-validation-2] are another validation check. The correlations converge quite slowly, with errors inversely proportional to the time of integration or worse. Here too the agreement is quite good. In general, MKM data seems to have slightly stronger nearby correlations compared to that of Table [\ref=tab:secn5.1-validation]. The longer time of integration employed here has eliminated the slight artifact from nearby correlations.

The purpose of the runs of Table [\ref=tab:secn5.2-transients] is to assess how short a Tinit for eliminating transients suffices at the highest Reynolds number and the finest mesh. In those two runs, it takes approximately 105 time steps to integrate for a single eddy turnover time τeddy and each step takes 16 seconds. Thus a reduction in Tinit is of much value.

Both runs began with an initial state that was generated at the coarser 5123 resolution. In the first run, Tinit = 0.1τeddy and in the second run Tinit = 2.88τeddy. The times T used to gather statistics were 2.78τeddy and 2.06τeddy, respectively. Typically, [formula] is needed for reliable statistics [\cite=HoyasJimenez2006] [\cite=HoyasJimenez2008], but here we settle for smaller T to better assess the effect of Tinit.

The first two plots of Figure [\ref=fig:secn5.2-transients] show that larger Tinit in the second run does not lead to statistics of better quality. In fact, the turbulence intensities, especially [formula], are better converged for the first run most probably because it is gathering statistics using a larger T.

The third plot of the same figure compares the shear at the wall as a function of time for the two runs. In the first run, the magnitude of the shear is greater than 75 but begins to decay right away. That is a telltale sign of the coarser grid origin of the initial state. Coarser grid simulations are more turbulent and have greater shear because there is less viscosity to smooth the flow in a coarser simulation. But already at [formula] the first run seems to have reached a statistically steady turbulent state (or more precisely, a sample from a statistically steady turbulent ensemble). It appears that Tinit∈[0.5τeddy,1.0τeddy] suffices to eliminate transients from an initial state computed at lower resolution.

Acknowledgments

The author thanks Hans Johnston, Benson Muite, and Fabian Waleffe for discussions and suggestions. This research was partially supported by NSF grants DMS-1115277 and SCREMS-1026317.