Imparo is complete by inverse subsumption

Lemma

Conjecture

Definition Notation

Example

Remark

Note

Problem

Proposition

Abstract

In Inverse subsumption for complete explanatory induction{[\cite=yamamoto2012inverse] Yamamoto et al. investigate which inductive logic programming systems can learn a correct hypothesis H by using the inverse subsumption instead of inverse entailment. We prove that inductive logic programming system Imparo is complete by inverse subsumption for learning a correct definite hypothesis H wrt the definite background theory B and ground atomic examples E, by establishing that there exists a connected theory T for B and E such that H subsumes T.

Keywords. Imparo. Inverse subsumption. Inductive Logic Programming.

Introduction

A task in Inductive Logic Programming (ILP) is given logic theories background knowledge B, and examples E to find a logic theory H that explains the examples E from the background knowledge and is consistent with the background knowledge, i.e. [formula] and [formula]. Such a logic theory H is called a correct hypothesis wrt B and E and a system that takes as an input theories B and E and returns a correct hypothesis H is called an ILP system.

ILP systems find a hypothesis H using the principle of the inverse entailment[\cite=muggleton1995inverse] for theories B, E, H: [formula]. First they construct an intermediate theory F called a bridge theory satisfying the conditions [formula] and [formula]. Then as [formula], they generalize the negation of the bridge theory F with the anti-entailment. However, the operation of the anti-entailment since being less deterministic may be computationally more expensive than the operation of the inverse subsumption (anti-subsumption). Therefore Yamamoto et al. {[\cite=yamamoto2012inverse] investigate how the procedure of the inverse subsumption can be realized in ILP systems in a complete way.

The negation of Imparo's bridge theory is called a connected theory. While Kimber proves that for every hypothesis H there exists a connected theory T such that H entails T ([formula]), we prove that for every hypothesis H there exists a connected theory T such that H (theory-)subsumes T ([formula]) and hence extend Imparo's procedure for finding a hypothesis from anti-entailment to anti-subsumption preserving its completeness.

Background

[\cite=yamamoto2012inverse]Let S and T be two clausal theories. Then, S theory-subsumes T, denoted by [formula], if for any clause D∈T, there is a clause C∈S such that [formula]. The inverse relation of the (theory-)subsumption is called anti-subsumption.

(Definition 2.83 in [\cite=kimber2012learning]) An open program is a triple 〈B,U,I〉 where B is a program, U is a set of predicates called undefined or abducible, and I is a set of first-order axioms. If B is a definite program and I is a set of definite goals, then P is a definite open program.

(Correct hypothesis) Let P  =  〈B,U,I〉 be a definite open program, E a logic theory theory called examples, H is an inductive solution for P,E iff [formula] and [formula].

(Definition 4.1. in [\cite=kimber2012learning] Let C be a program clause A←{L1,...,Ln}. The atom A is denoted by C+ and the set {L1,...,Ln} is denoted by C-.

(Definition 4.2 in [\cite=kimber2012learning]). Let Σ be a set of m program clauses {C1,...,Cm}. The set {C+1,...,C+m} is denoted by Σ+ and the set [formula] is denoted by Σ-.

(Definition 4.3 in [\cite=kimber2012learning]) Let 〈P  =  B,U,I〉 be a definite open program, and let E be a ground atom. Let T1,...,Tn be n disjoint sets of ground definite clauses defining only predicates in U. [formula] is an n-layered Connected Theory for P and E if and only if the following conditions are satisfied:

[formula],

[formula], for all i(1  ≤  i  <  n),

[formula], and

[formula] is consistent.

(Definition 4.4 in [\cite=kimber2012learning]). Let P  =  〈B,U,I〉 be a definite open program, and let E be a ground atom. A Connected Theory for P and E is an n-layered Connected Theory for P and E, for some n  ≥  1.

[\cite=kimber2012learning] Let P = 〈B,U,I〉 be an open definite program, let E be a ground atom. A set H of definite clauses is derivable from P and E by Connected Theory Generalisation, denoted [formula], iff there is a T such that T is a Connected Theory for P and E, and [formula] , and [formula] is consistent.

(Implication by Ground Clauses [\cite=nienhuys1997foundations]). Let Σ be a non-empty set of clauses, and C be a ground clause. Then [formula] if and only if there is a finite set Σg of ground instances of clauses from Σ, such that [formula].

Completeness of connected theory generalization(Theorem4.6 in [\cite=kimber2012learning]) Let 〈B,U,I〉 be a definite open program, let H be a definite program, and let e be an atom. If H is an inductive solution for P and E  =  {e}, then H is derivable from P and E by connected theory generalisation.

[\cite=kimber2012learning] The full proof is in Kimber's PhD thesis [\cite=kimber2012learning]. Since H is a correct hypothesis for P and E, then [formula] by definition. Therefore, by [\ref=implicationByGroundClauses], there is a finite set S of ground instances of clauses in [formula], such that [formula]. Let [formula]. Since T  ⊆  S, then T is ground and finite, and since T  ⊆  ground(H) then [formula]. Then Kimber proves that T is a connected theory for P and E.

Imparo's extension[\cite=toth2014classification]

We define a derivability of the hypothesis by the inverse subsumption.

Let P = 〈B,U,I〉 be an open definite program, H be a correct hypothesis wrt P and a ground example E, then H is derivable by connected theory inverse subsumption iff there exists a connected theory T for P and E such that [formula]. We denote the statement by [formula].

The result of this paper is:

Completeness of connected theory inverse subsumption. Let 〈B,U,I〉 be a definite open program, let H be a definite program, and let e be an atom. If H is an inductive solution for P and E  =  {e}, then H is derivable from P and E by connected theory inverse subsumption.

Construct a connected theory [formula] for P and E as in the proof of [\ref=completeness_ctg]. Then [formula], hence [formula] by transitivity as required.

Acknowledgements

We thank Dr. Krysia Broda, Dr. Timothy Kimber, Prof. Yoshitaka Yamamoto for checking the contents of drafts of this paper.