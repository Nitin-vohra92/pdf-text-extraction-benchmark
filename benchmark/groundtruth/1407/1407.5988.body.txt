Linear logic with idempotent exponential modalities: a note

Introduction

It is well known that the exponential modality in linear logic is "not canonical", in the sense that it is not uniquely determined by the logic rules. In concrete words, we can introduce several different copies of exponential connectives, obeying the same rules, but nothing implies that the connectives are equivalent. On the semantic side, this means that a model of multiplicative-additive linear logic (i.e. a *  -autonomous category with products) may possess several non-equivalent structures, modeling the exponential fragment.

In general, we may say that the exponential fragment is understood somewhat worse, at least on the semantic side, than the multiplicative-additive linear logic. Indeed, we know so many models of [formula] and [formula]; we know concrete and abstract models, some complete ones, some intuitive ones. We also know some abstract construction for producing these models. On the other hand, models of exponentials are rare, sometimes incorrect (this is often the case for interpretations based on the linear algebra and functional analysis setting), and arguably we have little understanding of how do these models arise.

Finally, some alternative exponentials are considered in literature, for example in bounded linear logic.

These lengthy remarks were to give some motivation for the topic of this paper, that is, to try convincing the reader that studying some non-standard exponentials might be of interest. Specifically, we are considering linear logic with idempotent exponentials. This idea came to the author mainly from semantic considerations of relational models; it seems that in this setting a possibility of such an idempotent version is suggested rather naturally. On the other hand, highly informal and partial "quantum-mechanical" interpretations of [formula], discussed sometimes in literature, also may suggest idempotent exponentials; exponential modality may be tentatively understood as denoting some sort of a "classical limit" or a "classicality property". This point of view is taken in the work of Peter Selinger and Benot Valiron on quantum lambda calculus [\cite=Selinger], where the typing system is based on linear logic.

Despite these considerations, as far as standard linear logic is concerned, models with idempotent exponentials are extremely degenerate and seem rather marginal. It may be interesting, thus, to search for a non-standard variant of [formula], where this idempotency is required by the structure; a version of linear logic where iterated exponentials are equivalent. This is the matter we deal with in this paper. We propose the system of idempotent linear logic ([formula]) and discuss its semantics.

A subtle point, here, is that, on the level of provability, already the standard [formula] proves that the formulas !A and !!A are equivalent. Accordingly, our system of [formula] coincides with [formula] on this level; it has the same set of provable formulas. The difference between the two systems is on the level of proofs. This feature seems to us rather amusing.

Linear Logic, comonads etc

We assume that the reader is familiar with linear logic ([formula]) as well as with its categorical interpretation. For an introduction to the subject see, for example, [\cite=Girard] and [\cite=Mellies].

In order to fix the terminology we recall that, semantically, linear logic describes a *  -autonomous category, the *  -autonomous structure being given by multiplicative connectives and the operations of linear negation and linear implication. The *  -autonomous structure corresponding to the full linear logic carries also products and coproducts, given by the additive connectives.

In the following we agree that a *  -autonomous structure on the category [formula] is specified by the monoidal ("tensor") product [formula], with the monoidal unit [formula], the internal homs functor [formula], and the dualizing object [formula]. Other relevant constructions, such as duality (.)*, we understand as derived. In particular, [formula]. (We choose a star to denote duality in the models, because it seems to us more consistent with the general mathematical practice. However, for duality of [formula] formulas, we preserve the traditional notation [formula].)

To keep with linear logic notation, we denote product on a *  -autonomous category as & and the corresponding neutral object as [formula]. The coproduct structure, then, is derived from duality.

As for the exponential fragment, which interests us most in the current paper, its categorical formalization has some variations, which have been discussed in literature; see [\cite=Mellies] for a survey. Basically, the !-modality corresponds to a monoidal comonad, that is to say a comonad ! satisfying

[formula]

(See [\cite=MacLane] for a text-book definition and discussion of comonads.)

We take a popular view that linear logic !-modality is a monoidal comonad coming from the following construction.

Let [formula] be a *  -autonomous category with products, and [formula] be a category with products and the neutral object *   . Let [formula] and [formula] be adjoint functors with the property that [formula], [formula] and [formula], [formula]. Then the composite functor [formula] is a monoidal comonad on [formula]. The exponential !-modality is usually interpreted as a comonad of this form.

(That the composition of two adjoint functors is a comonad is well known; see [\cite=MacLane], 6.1. Since the functor F preserves products, and the functor G takes products to tensor products, it follows that this comonad is monoidal.) Constructions of this sort are known in the current literature on the subject as linear-nonlinear models, these were introduced in [\cite=Benton].

We are going to discuss the special setting when the above monoidal comonad is idempotent. That is, we have a *  -autonomous category [formula] with products [formula] and a monoidal comonad [formula] as above, with the corresponding comonadic natural transformations δ:!  →  !!,ε:!  →  Id, such that the natural transformation δ:!  →  !! is an isomorphism.

As far as linear logic is concerned, this setting is, indeed, special. Usually, models of [formula] discussed in literature are not idempotent. And, of course, the system [formula] itself, seen as a category, does not belong to this setting. However, as we are trying to show below, this special structure can be captured in a self-consistent proof-system, which we call idempotent linear logic ([formula]). It turns out also that this system has a very simple concrete model in the setting of totality spaces. We think therefore that the structure of idempotent comonad on a *  -autonomous category might be of some interest.

Sequent calculus [formula]

The language of idempotent linear logic ([formula]) coincides with that of linear logic. Formulas are built from positive and negative literals, respectively, [formula] and [formula], by means of the multiplicative and additive connectives [formula], [formula], &, [formula] and the exponential modalities ! and ?. Linear negation [formula] of the formula A is defined inductively by

[formula]

[formula]

[formula]

Linear implication is defined by

[formula]

Notation !nA and ?nA, as usual, stands for iterated modalities, that is for the formula A preceded by n !'s or ?'s.

The sequent calculus for [formula] coincides with that of [formula] on the level of multiplicative-additive connectives:

[formula]

[formula]

[formula]

[formula]

but somewhat differs for the exponential fragment. The rules are:

[formula]

and

[formula]

[formula]

Thus [formula] differs from [formula] only in the rules of Dereliction and Promotion for introducing exponential connectives. Recall that for [formula] we have the rules

[formula]

[formula]

Furthermore, it can be seen very easily that, on the level of provability, the two systems simply coincide, i.e. [formula] and [formula] have the same sets of provable sequents.

Indeed, n-Promotion and n-Dereliction are admissible in [formula] as iterations of Promotion and Dereliction, respectively. On the other hand, [formula] obviously derives the sequents [formula] for all n,m > 0, and, with the use of Cut, this allows us to emulate Promotion and Dereliction in this system. Typically, if A = ?nA' is a formula, having ? as its main connective, where A' does not start with ?, and we have an [formula]-derivation of [formula], i.e. of [formula], then by cutting this sequent with [formula] we derive [formula], i.e. [formula], as if we had Promotion. The case of Dereliction is treated identically. Let us write down this simple conclusion as a theorem.

The next observation is that [formula] is cut-free. Essentially, cut-elimination algorithm for [formula] is the same as for [formula]. When the cut formulas are of the form A = ?nA', [formula], with A' not starting with ?, we should treat the initial segment of ?'s (!'s) as a single main connective. Proof The cut-elimination algorithm and its correctness proof can be taken verbatim from [\cite=CutElim], with words Dereliction and Promotion replaced with n-Dereliction and n-Promotion, respectively, and, accordingly, ? and ! replaced with ?n and !n.

Now, having established the cut-elimination property, we can compare [formula] with [formula] not only on the level of provability, but on the level of proofs. In fact it is easy to see that [formula] has strictly fewer cut-free proofs: for the literal p there is only one way to derive [formula] without Cut in [formula] (n-Dereliction followed by n-Promotion), which is not at all the case for [formula].

Concretely, now we can say in some precise sense that [formula] treats formulas ??A and ?A as isomorphic, and similarly with !. (This justifies the title idempotent.)

Let π1 and π2 be [formula] proofs of the sequents [formula] and [formula]; the first proof is obtained from the Identity axiom by 2-Dereliction followed by 1-Promotion, the second one, by 1-Dereliction followed by 2-Promotion. We can put the two proofs together and then apply the Cut-rule to their conclusions in two ways: the pair of cut-formulas being either [formula] or [formula]. Thus we obtain a proof of [formula] and a proof of [formula]. However it is immediate that, after cut-elimination, both proofs normalize to corresponding Identity axioms. In other words, from the categorical point of view, when proofs are seen as morphisms, it turns out that the above proofs π1 and π2 are mutually inverse and establish an isomorphism [formula]. Thus we can claim that the system [formula] gives an accurate sequent calculus axiomatization for the above defined structure of *  -autonomous category with an idempotent comonad.

Idempotent comonad on totality spaces

In this Section we discuss Loader's totality spaces (see [\cite=Loader]), a very well known and, in some sense, very natural model of linear logic, similar to Girard's coherence spaces. It turns out that totality spaces provide a concrete model of idempotent comonadic structure.

We use the following definitions. A pre-totality space A is a pair A = (|A|,Atot), where |A| (base of A) is a set, and Atot  ⊆  2|A|. The elements of Atot are called total sets of A.

The dual A* of A is the pre-totality space A* = (|A|,A*tot), where A*tot  ⊆  2|A| consists of all subsets r  ⊆  |A|, satisfying the condition: [formula] the set [formula] is a singleton.

A totality space A as a pre-totality space coinciding with its bidual (i.e., having the same total sets), A = A*  *. A standard observation is that the dual of a pre-totality space is a totality space. The total sets for A* are called cototal for A.

We define the following operations on totality spaces, corresponding to multiplicative and additive connectives of [formula] (i.e. to the *  -autonomous structure).

The tensor product [formula] of two totality spaces A and B has the set |A|  ×  |B| as its base, and total sets of the form r  ×  s, where r∈Atot, s∈Btot. It can be shown (see [\cite=Loader]) that the totality space [formula] is well-defined, i.e [formula]. Note that

[formula]

The cotensor product [formula] of two totality spaces A and B is defined simply as the dual [formula].

The additive operations (product and coproduct) of A and B have the disjoint union of |A| and |B| as their bases. Total sets of A&B are disjoint unions of total sets of A and B, whereas total sets of [formula] are total sets of A and total sets of B. It is easy to see that the two operations are dual: [formula] and [formula]. Note also that

[formula]

The category [formula] has totality spaces as its objects, and total sets of [formula] as morphisms between A and B, the composition being that of relations. The category [formula] is known to be *  -autonomous (with monoidal units [formula]).

Finally let us define idempotent exponentials on [formula].

For a totality space A let !A be the totality space with the base Atot, whose total sets are all singletons.

It is straightforward that the dual (!A)* is the pair ((Atot,{Atot})), and !A = !A*  *, so this is indeed a totality space.

Note that it immediately follows from ([\ref=tensor]) and ([\ref=prod]) that

[formula]

The operation is clearly idempotent: [formula]. Let us show that it is indeed a comonad.

We have the (cartesian closed) category [formula] of sets and functions. To every set S we can associate a discrete totality space Dis(S) with base S and all singletons as total sets. For any function f:S  →  T, its graph grapf(f) is a relation in S  ×  T. Moreover, for any x∈S, this relation has exactly one point in the intersection with the set {x}  ×  T (this is a fancy way to say that f is total and single-valued). Since the above {x}  ×  T is the most general form of a total set in [formula], it follows that graph(f) is total in [formula], i.e. a morphism between corresponding objects in [formula]. In other words, we have the functor [formula] (since composition, obviously, is preserved). Note also that the functor preserves monoidal structure: [formula], [formula].

We have another functor in the opposite direction. It associates to each object A of [formula] the set of total sets of A, and to each morphism φ between totality spaces A and B the obvious function between Atot and Btot, induced by composition with φ. (In fact, this functor is just the Yoneda embedding [formula].) Let us call this functor [formula]. Note that the functor preserves the product structure: [formula], [formula].

Now we claim that the functors Dis and [formula] are adjoint. Since our exponential ! is just their composition, this implies that it is a comonad.

Indeed, let A be a totality space and S be a set. Any morphism φ:Dis(S)  →  A in [formula] determines a (total, single-valued) function from Dis(S)tot to Atot. However, total sets of Dis(S) are just elements of S, i.e. Dis(S)tot naturally identifies with S, whereas the set Atot is [formula]. Thus the [formula]-morphism φ determines a function, i.e. a [formula]-morphism [formula], and we have the map [formula].

On the other hand, for a function f:S  →  Atot, consider the relation   =  {(s,a)|s∈S,a∈|A|,a∈f(s)}. This relation is total in [formula]. Indeed, any cototal set α in [formula] is of the form α  =  {s}  ×  τ, where s∈S and τ  ⊆  |A| is cototal in A. Then the intersection [formula] is a singleton because f(s) is total in A. Thus [formula] is a morphism in [formula], and we have the map [formula]. It is immediate that this map is inverse to the one defined in the preceding paragraph.

Thus, the functors [formula] and Dis are adjoint, hence [formula] is a comonad. Moreover, the functor [formula] sends product in [formula] to product in [formula], and Dis sends product in [formula] to tensor product in [formula]. Thus ! sends product in [formula] to tensor product, hence it equips each object !A with the comonoid structure with respect to tensor product induced by the comonoid structure of A with respect to the product. In other words, we can conclude with the theorem: