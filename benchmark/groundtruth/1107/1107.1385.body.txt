=1

New Development of Monte Carlo Techniques for Studying Bottle-brush Polymers

Introduction

The so-called "Bottle-Brush" polymers consist of a long molecule serving as a "backbone" on which many side chains are densely grafted. The conformational change of bottle-brush polymers is mainly caused by the following factors: backbone length, side chain length, grafting density, type of monomers (chemical compound), and solvent quality which can be adjusted by changing the temperature, pH value, etc. In the previous Monte Carlo studies of bottle-brush polymers, both coarse-grained models on lattice [\cite=Rouault1996] [\cite=Rouault1998] [\cite=Shiokawa1999] and on off-lattice [\cite=Saariaho1997] [\cite=Elli2004] [\cite=Yethiraj2006], show that it is difficult to obtain high accuracy results for simulating large bottle-brush polymers with high grafting densities.

On a coarse-grained scale, the bottle-brush polymer with densely grafted side chains may resemble a flexible long sphero-cylinder [\cite=Hsu2010a] [\cite=Hsu2010b]. The complicated structure of bottle-brush polymers is therefore described in terms of multi-length scales such as the contour length Lcc, the end-to-end distance of the backbone, Reb, and of the side chain, Re, the cross sectional radius Rcs, and also the persistence length [formula] which describes the intrinsic stiffness of the backbone, i.e., within the distance [formula], the cylinder is approximately straight. With computer simulations, one can estimate not only all these length scales but also those physical quantities measured by experiments such as the structure factors S(q) which describe the scattering function from any part of the bottle-brush polymers, and the radial monomer density profile ρ(r). Therefore, it is necessary to develop an efficient algorithm for a deeper understanding of the complicated structures of bottle-brush polymers with larger size and higher grafting densities in order to control their functions for the applications in industry.

In this article, we first explain the models and the algorithms for simulating bottle-brush polymers with a straight rigid backbone, and with a flexible backbone in Sec. [\ref=Model]. For simplicity, here we only focus on the case that the bottle-brush polymers are under good solvent conditions. In Sec. [\ref=Results] we present our results and explain the connections between these estimates obtained by computer simulations, the theoretical predictions, and the experimental data, respectively. Finally we give some conclusions in Sec. [\ref=Conclusions].

Models and algorithms

For studying bottle-brush polymers under a good solvent condition, we first consider that bottle-brush polymers consist of a rigid backbone and flexible side chains. A simple coarse-grained model on a simple cubic lattice is used, where the backbone is simply a rigid rod and flexible side chains are described by self-avoiding walks (SAWs) so that no multi-occupation of monomers on the same site is allowed. We apply a biased chain growth algorithm with resampling which is a variant of the pruned-enriched Rosenbluth method (PERM) [\cite=g97] [\cite=Hsu2004] [\cite=Hsu2007] for the simulations. For the comparison between experimental data and Monte Carlo simulations of bottle-brush polymers, we need to consider a more complicated case that the backbone is also flexible. The bond fluctuation model [\cite=Carmesin1988] [\cite=Deutsch1991] [\cite=Paul1991] [\cite=Binder1995] is used, where the backbone and all side chains are described by SAWs on a simple cubic lattice but with some constraints (see sec. [\ref=bondfluctuation]). We propose an algorithm which combines the local 26 moves, the pivot moves and an adjustable simulation lattice box (LPB) for the simulations [\cite=Hsu2010a] [\cite=Hsu2010b] [\cite=HsuPRL]

Simple coarse-grained lattice model with PERM

In the simple coarse-grained model, the backbone is fixed on the simple cubic lattice in the direction along the z-axis. Nb monomers of the backbone are located on the lattice sites as shown in Fig. [\ref=fig-conf-PERM]. nc side chains consisting of N monomers each are grafted to the backbone monomers with equal distance 1 / σ between two successive grafting sites on the backbone, where σ is the grafting density defined by σ = nc / Nb. Since mainly we want to check the scaling laws for very long side chains, the periodic boundary condition is introduced in the direction along the backbone to avoid the end-effects associated with a finite backbone length. Differently from the conventional MC method where an initial configuration is set up as a starter for the simulation, the conformation of a bottle-brush polymer is built by growing all side chains simultaneously with PERM. The partition sum of bottle-brush polymers of nc side chains of length N each,

[formula]

is therefore the total number of all possible configurations of nc interactive self-avoiding random walks of steps N. Only the excluded volume effect is considered here.

It is straight forward to apply the similar method for growing a star polymer [\cite=Hsu2004] to the simulations for growing a bottle-brush polymer [\cite=Hsu2007]. Only in the latter case, side chains can either be attached to the same site or the different sites on the backbone depending on the grafting densities. In the process of growing a bottle-brush polymer, one has to be aware that both the interactions between monomers in the same side chain, and the interactions between monomers on different side chains have to be taken into account. If one side chain is grown entirely before the next side chain is started, it will lead to a completely "wrong" direction of generating the configurations of a bottle-brush. Therefore, one has to use the strategy that all side chains are grown simultaneously. Namely, a monomer is added to each side chain step by step until all side chains having the same length, then that the next round of monomers is added. After we labelled all monomers by numbers, it goes back to the problem of growing a linear chains from the first monomer to the (ncN)th monomer  [\cite=g97]. Using PERM, the configurations of bottle-brush polymers are built by adding one monomer at each step, and each configuration carries its own weight. A wide range of probability distributions can be used for selecting one of the nearest neighbor free sites of each side chain end at the next step, but the efficiency of the algorithm depends on the choice of the distribution. For the current problem, the bias of growing side chains is used by giving higher probabilities in the direction where there are more free next neighbor sites and in the outward directions perpendicular to the backbone, where the second part of bias decreases with the length of side chains and increases with the grafting density. The total weight Wm (m = nnc) for a bottle-brush polymer of all side chains having the length n with an unbiased sampling is determined recursively by [formula]. As the weight Wm is gained at the [formula]-step with a probability pm, one has to use wm / pm instead of wm. By taking the average of all possible configurations, the partition sum

[formula]

can be estimated directly, where Mm is the total number of configurations {α}. This is the main advantage of using PERM. For any observable Am, the mean value is therefore,

[formula]

.

In order to suppress the huge fluctuation of the probability distribution and enrich those configurations with high weight the population control is made in the way of pruning low weight configurations and cloning those configurations with high weight. Two thresholds W+m and W-m are introduced,

[formula]

where Ẑm is the current estimate of the partition sum {Eq. ([\ref=eq-Z])}, and C+ and C- are constants of order unity. The optimal ratio between C+ and C- is found to be C+ / C-  ~  10 in general. For our simulations, we use W+m  =    ∞   and W-m = 0 for the first configuration hitting all side chains of length n. For the following configurations, we use W+m = CẐm(cm / c0) and W-m = 0.15W+m, here C = 3.0, and cm is the total number of configurations of all side chains having length n. If the current weight Wm(α) > W+m for the configuration α, one produces two identical copies of this configuration, replaces their weight Wm(α) by Wm(α) / 2. If Wm(α) < W-m, one calls a random number r where r∈[0,1]. If r  ≥  1 / 2, the configuration is kept but the weight is replaced by 2Wm(α), while the configuration is killed if r < 1 / 2. Otherwise, the configuration is kept with the weight Wm(α).

A typical configuration of bottle-brush polymers under a good solvent condition generated by PERM is shown in Fig. [\ref=fig-conf-PERM](b). It consists of Nb = 128 backbone monomers, N = 2000 side chain monomers in each side chain, and the grafting density is 1 / 4. The total number of monomers is Ntot = Nb + NσNb = 64128. So far, it is the largest bottle-brush polymers in the equilibrium state, generated by MC simulations [\cite=Hsu2007].

Bond fluctuation model with LPB

For studying bottle-brush polymers with a flexible backbone and flexible side chains, we generalize the bond fluctuation model for a linear polymer chain to that for a bottle-brush polymer. In the standard bond fluctuation model [\cite=Carmesin1988] [\cite=Deutsch1991] [\cite=Paul1991] [\cite=Binder1995], a flexible polymer chain is described by a SAW on a simple cubic lattice with bond constraints. Each effective monomer blocks all 8 corners of an elementary cube of the lattice from further occupation. Two successive monomers along a chain are connected by a bond vector chosen from the set {(  ±  2,0,0), (  ±  2,  ±  1,0), (  ±  2,  ±  1,  ±  1), (  ±  2,  ±  2,  ±  1), (  ±  3,0,0), (  ±  3,  ±  1,0)}, including also all permutations. The geometry of a bottle-brush polymer with Nb backbone monomers, and with nc side chains of length N is arranged in the way that side chains are added to the backbone chain at regular spacing 1 / σ = Nb / nc, and two additional monomers are added to each chain end of the backbone. Thus, the total number of monomers is [formula]. For our simulations, one of the simplest ways to set up the initial configuration is to assume that the backbone and side chains all have rod-like structures. Placing the backbone along the z-direction and fixing the bond length between two successive backbone monomers to be 3, and randomly choosing the bond vector of each side chain from one of the allowed bond vectors including all permutation in the xy-plane but keeping the bond vectors within each side chain fixed, the required condition of bond constraints is satisfied and no further check is needed. In our algorithm, instead of trying to move a chosen monomer to the nearest neighbor sites named by the local 6 ("L6") moves for the standard bond fluctuation model, we use the local 26 ("L26") moves [\cite=Wittmer] where it is tried to move to the 26 neighbor sites as shown in Fig. [\ref=fig-Lpb](a). The local move is only accepted if the selected site is empty and the bond length constraints are satisfied. In addition, two types of pivot moves are attempted. One is that a monomer is chosen randomly on the backbone and the short part of the bottle-brush polymer is transformed by randomly applying one of the 48 symmetry operations (no change; rotations by 90o and 180o; reflections and inversions). The other is that a monomer is chosen randomly from all side chain monomers, and the part of side chain from the selected monomer to the free end of the side chain is transformed by one of the 48 symmetry operations.

We first make some test runs for a small bottle-brush polymers with Nb = 32, N = 6, 12, 24, and 48, and σ = 1 in order to compare the efficiency between the "L26" moves and the "L26" moves + pivot moves. For any observable A, the performance of the algorithm is determined by the autocorrelation function c(A,t),

[formula]

Results of c(A,t) for the mean square gyration radius of the backbone, A = R2gb, and of the side chains, A = R2gc (taking the average of all side chains at the same MC step t) plotted against the number of MC steps t show that the "L26" + pivot algorithm is two orders of magnitude faster than the "L26" algorithm for fixed side chain length N (figures are not shown here). In the "L26" algorithm, one MC step consists of Ntot "L26" moves, i.e., each monomer is selected once for the local move. In the "L26" + pivot algorithm, one MC step consists of Ntot "L26" moves, kb times pivot moves of the backbone and kc times pivot moves of side chains. kb is chosen such that the acceptance ratio is about 40% or even larger, while kc is nc / 4.

Two observables chosen for monitoring the equilibrating process as shown in Fig. [\ref=fig-delta] are the radius of gyration of the backbone monomers, Rgb(t), and the space occupation of the bottle-brush polymer in the Cartesian coordinates, (Δx(t),Δy(t),Δz(t)), since the average conformations of bottle-brush polymers in equilibrium must be isotropic. For simulating small bottle-brush polymers, we can simply set the three orthogonal length scales in the Cartesian coordinates having equal length, e.g. Lx = Ly = Lz = 3Nb in the equilibrating process. As the size of bottle-brush polymer increases, we will meet the problem of setting the simulation lattice box in our simulations due to the limitation of the computer memory. The maximum volume of the box is V = LxLyLz = 228 for those computers we can access. The solution for it is to adjust the simulation lattice box during the equilibrating process and separate the process into several stages. Let's take a bottle-brush polymer with Nb = 515, N = 12, and σ = 1 as an example. The equilibrating process is separated into four stages as follows,

Here Npb is the pivot point selected from the backbone monomers. One has to be aware that the pivot points which can be selected for applying the pivot moves are also limited due to the current set up of the simulation lattice box. However, once the system is in equilibrium one has to allow all possible moves, i.e. (1  ≤  Npb  ≤  (Nb - 2)). At every new stage k, the initial configuration is taken from the last stage, and the size of the simulation lattice box is decided by the final space occupation of the bottle-brush polymers at the last stage, i.e. L(k)z  ≥  Δz(t), L(k)y = L(k)x  ≈   max (Δy(t),Δx(t)), with [formula], and L(k)zL(k)yL(k)x  ≤  228. Time series of Rgb(t) and (Δx(t),Δy(t),Δz(t)) are shown in Fig. [\ref=fig-515-t]. The four stages are separated by the vertical green curves. Taking some snapshots of the conformations of the bottle-brush polymers at the Monte Carlo steps indicated by the arrows in Fig. [\ref=fig-515-t](b) one can see how the conformations of bottle-brush polymers change during the equilibrating process as shown in Fig. [\ref=fig-ie]. At the beginning, backbone and side chains are in rod-like structures. At the end of the first stage, only a small part of the backbone is flexible. As more backbone monomers are relaxed, we see that the backbone and the side chains become more and more flexible step by step. Finally an equilibrium state is reached. It takes about 1.25 hours CPU time on an Intel 2.8 GHZ PC for such a bottle-brush polymer to reach the equilibrium state by choosing kb = 40 and kc = 128.

It is more time consuming when pivot moves are applied to the simulations for larger bottle-brush polymers. In order to know how much the efficiency is slowing down as the backbone length increases, we compare the autocorrelation functions c(R2gc,t) and c(R2gb,t) for bottle-brush polymers with Nb = 35 and Nb = 515 for three different side chain lengths N = 6, 12, and 24. For both cases in Fig. [\ref=fig-c-515](a), we see that the decay of the autocorrelation function for the side chain structure occurs on the same time scale. It is also true for the backbone as shown in Fig. [\ref=fig-c-515](b) that the autocorrelation functions are plotted against the number of pivot moves tkb. Clearly, the structural relaxation time is longer as the side chain length N increases [\cite=Hsu2011].

Results

According to the cylindrical geometry of bottle-brush polymers with a rigid backbone, we extend the Daoud-Cotton blob picture for a star polymer to that for a bottle-brush polymer. The space is partitioned into blobs of non-uniform size and shape. The blobs are not spheres but rather ellipsoids. Based on this theory, the scaling law for side chains in the radial direction (height of the bottle-brush) is given by,

[formula]

where ν is the Flory exponent for 3D SAWs (ν  ≈  0.588). With the first part of simulations by using PERM, results of the mean square height of bottle-brush polymers for three choices of backbone length Nb = 32, 64, and 128, and several choices of the grafting density σ from 1 / 128 to 1 are shown in Fig. [\ref=fig-Reexy](a). We see that those curves of the same grafting density σ coincide with each other. Increasing the grafting density σ enhances the stretching of side chains. Considering that in the mushroom regime (σ  →  0), the height of bottle-brush polymers should behavior as 3D SAWs, i.e. Rh(N,σ  →  0)  ~  Nν, one can write down the scaling ansatz in the thermodynamic limit as N  →    ∞   [\cite=Hsu2007],

[formula]

with

[formula]

For checking this cross-over scaling ansatz, we plot the same data as shown in Fig. [\ref=fig-Reexy](a), but rescale the x-axis from N to η. We see the nice data collapse. As η increases, a cross-over from a 3D SAWs to a stretched side chain regime is indeed seen, but only rather weak stretching of side chains is realized, which is different from the scaling prediction {Eq. ([\ref=eq-height])}. In this log-log plot, the straight line gives the asymptotic behavior of the scaling prediction for very large η. However, this is the first time we can see the cross-over behavior by computer simulations. This cross-over regime is far from reachable by experiments. On the other hand, it requires a lot of effort to reach the regime where the theoretical prediction would apply, either the grafting density σ has to be much higher or the side chain length N has to be much longer.

The same situation is also observed as we check the scaling prediction for the radial distribution function [\cite=Hsu2007]

[formula]

Results are shown in Fig. [\ref=fig-rho] for bottle-brush polymers with side chain length N = 500 and N = 1500. As we keep all the grafting densities σ fixed but increase the side chain length N, one can see only in a rather tiny regime, the data seem to follow the same slope as predicted by the theory. Therefore, one might expect that finally the radial distribution function would follow the predicted scaling law as both σ and N are very large.

For the second part of the simulations, let's first look at the snapshots of bottle-brush polymers under a good solvent condition, which contain Nb = 515 backbone monomers, N = 0 (linear polymer), 6, 12, and 24 monomers on each side chain, and the grafting density σ = 1. As N increases, one sees that the corresponding conformations of bottle-brush polymers are rather different. The backbone becomes stiffer as the side chain length increases. This local intrinsic stiffness of the backbone is quantitatively described by the persistence length [formula]. According to the scaling law of the mean square end-to-end distance of the backbone [\cite=Hsu2010a] [\cite=Hsu2010b],

[formula]

where [formula] is the average bond lengths for the bond fluctuation model. Results of the rescaled mean square end-to-end distance of the backbone for N = 0, 6, 12, 18, and 24 and for various numbers of backbone monomers Nb are shown in Fig. [\ref=fig-lp](a). The persistence length [formula] for fixed side chain length N is determined by the plateau for large Nb since finally those curves of [formula] all show a smooth cross-over from a rod-like chain to a 3D SAW. [formula] increases as N increases.

The most common quantity to describe the structure of macromolecules is the structure factor S(q) for the whole bottle-brush polymer, which is estimated by taking the average of all independent configurations obtained from MC simulations, i.e.

[formula]

where [formula] if [formula] is occupied, otherwise [formula]. In experiments, S(q) can be measured by using static light scattering, small angle neutron scattering, and x-ray scattering, e.g. Ref. [\cite=Rath]. By choosing the accessible size of bottle-brush polymers for experiments, we have found the connections between our MC simulation results and the experimental data [\cite=Hsu2010a]. One example is shown in Fig. [\ref=fig-lp](b). As we normalize the structure factor S(q)  →  1 as q  →  0, and rescale the wave factor q to qRg where Rg is the radius of gyration of the whole bottle-brush polymer, we see that the backbone length N( exp)b = 400 in the experiment corresponds to the backbone length Nb = 259 in the simulation, and side chain length N( exp) = 62 in the experiment corresponds to the side chain length N = 48 in the simulation. The grafting density σ  ≈  1 for both cases. Immediately, we can translate that 1nm ≈  3.79 lattice spacings.

Conclusions

In this paper, we study the bottle-brush polymers under good solvent conditions by using two kinds of lattice models, a simple coarse-grained model on the simple cubic lattice and the bond fluctuation model. Due to the complex characteristics of bottle-brush polymers, we have proposed two algorithms, a variant of PERM and LPB depending on the interesting regime of length scales. With our extensive MC simulations, we show that the stretching of side chains in the interior of the bottle-brush polymer is weaker than the theoretical prediction. A convincing estimate of the persistence length [formula] which describes the intrinsic stiffness of bottle-brush polymers depending on the side chain length is given. We also give a direct comparison of the structure factors between our simulation results and the experimental data. The newly developed algorithm LPB has also been employed successfully to study the conformational change of bottle-brush polymers as they are adsorbed on a flat solid surface by varying the attractive interaction between the monomers and the surface [\cite=Hsu2010c].

Acknowledgement

H.-P. H. received funding from the Deutsche Forschungsgemeinschaft (DFG), grant No SFB 625/A3. We are grateful for extensive grants of computer time at the JUROPA under the project No HMZ03 and SOFTCOMP computers at the Jülich Supercomputing Centre (JSC), and PC clusters at ZDV, university of Mainz. H.-P. H. thanks K. Binder and W. Paul for their kind support and collaboration.

References