Manipulation and gender neutrality in stable marriage procedures

Introduction

The stable marriage problem (SMP) [\cite=sm-book] is a well-known problem of matching the elements of two sets. Given n men and n women, where each person expresses a strict ordering over the members of the opposite sex, the problem is to match the men to the women so that there are no two people of opposite sex who would both rather be matched with each other than their current partners. If there are no such people, all the marriages are said to be stable. Gale and Shapley [\cite=gs] proved that it is always possible to solve the SMP and make all marriages stable, and provided a quadratic time algorithm which can be used to find one of two particular but extreme stable marriages, the so-called male optimal or female optimal solution. The Gale-Shapley algorithm has been used in many real-life applications, such as in systems for matching hospitals to resident doctors [\cite=roth-H] and the assignment of primary school students in Singapore to secondary schools [\cite=revisited]. Variants of the stable marriage problem turn up in many domains. For example, the US Navy has a web-based multi-agent system for assigning sailors to ships [\cite=liebowitz].

One important issue is whether agents have an incentive to tell the truth or can manipulate the result by mis-reporting their preferences. Unfortunately, Roth [\cite=roth-manip] has proved that all stable marriage procedures can be manipulated. He demonstrated a stable marriage problem with 3 men and 3 women which can be manipulated whatever stable marriage procedure we use. This result is in some sense analogous to the classical Gibbard Satterthwaite [\cite=gibbard] [\cite=gibbard2] theorem for voting theory, which states that all voting procedures are manipulable under modest assumptions provided we have 3 or more voters. For voting theory, Bartholdi, Tovey and Trick [\cite=bartholdi] proposed that computational complexity might be an escape: whilst manipulation is always possible, there are voting rules where it is NP-hard to find a manipulation. We might hope that computational complexity might also be a barrier to manipulate stable marriage procedures. Unfortunately, the Gale-Shapley algorithm is computationally easy to manipulate [\cite=revisited]. We identify here stable marriage procedures that are NP-hard to manipulate. This can be considered a first step to understanding if computational complexity might be a barrier to manipulations. Many questions remain to be answered. For example, the preferences met in practice may be highly correlated. Men may have similar preferences for many of the women. Are such profiles computationally difficult to manipulate? As a second example, it has been recently recognised (see, for example, [\cite=average1] [\cite=average2]) that worst-case results may represent an insufficient barrier against manipulation since they may only apply to problems that are rare. Are there stable marriage procedures which are difficult to manipulate on average?

Another drawback of many stable marriage procedures such as the one proposed by Gale-Shapley is their bias towards one of the two genders. The stable matching returned by the Gale-Shapley algorithm is either male optimal (and the best possible for every man) but female pessimal (that is, the worst possible for every woman), or female optimal but male pessimal. It is often desirable to use stable marriage procedures that are gender neutral [\cite=masarani]. Such procedures return a stable matching that is not affected by swapping the men with the women. The goal of this paper is to study both the complexity of manipulation and gender neutrality in stable marriage procedures, and to design gender neutral procedures that are difficult to manipulate.

It is known that the Gale-Shapley algorithm is computationally easy to manipulate [\cite=revisited]. Our first contribution is to prove that if the male and female preferences have a certain form, it is computationally easy to manipulate any stable marriage procedure. We provide a universal polynomial time manipulation scheme that, under certain conditions on the preferences, guarantees that the manipulator marries his optimal stable partner irrespective of the stable marriage procedure used. On the other hand, our second contribution is to prove that, when the preferences of the men and women are unrestricted, there exist stable marriage procedures which are NP-hard to manipulate.

Our third contribution is to show that any stable marriage procedure can be made gender neutral by means of a simple pre-processing step which may swap the men with the women. This swap can, for instance, be decided by a voting rule. However, this may give a gender neutral stable matching procedure which is easy to manipulate.

Our final contribution is a stable matching procedure which is both gender neutral and NP-hard to manipulate. This procedure uses a voting rule that, considering the male and female preferences, helps to choose between stable matchings. In fact, it picks the stable matching that is most preferred by the most popular men and women. We prove that, if the voting rule used is Single Transferable Vote (STV) [\cite=handbook-sc], which is NP-hard to manipulate, then the resulting stable matching procedure is both gender neutral and NP-hard to manipulate. We conjecture that other voting rules which are NP-hard to manipulate will give rise to stable matching procedures which are also gender neutral and NP-hard to manipulate. Thus, our approach shows how combining voting rules and stable matching procedures can be beneficial in two ways: by using preferences to discriminate among stable matchings and by providing a possible computational shield against manipulation.

Background

The stable marriage problem (SMP) is the problem of finding a a matching between the elements of two sets. More precisely, given n men and n women, where each person strictly orders all members of the opposite gender, we wish to marry the men to the women such that there are no two people of opposite sex who would both rather be married to each other than their current partners. If there are no such people, all the marriages are stable.

The Gale-Shapley algorithm

The Gale-Shapley algorithm [\cite=gs] is a well-known algorithm to solve the SMP problem. It involves a number of rounds where each un-engaged man "proposes" to his most-preferred woman to whom he has not yet proposed. Each woman then considers all her suitors and tells the one she most prefers "maybe" and all the rest of them "No". She is then provisionally "engaged". In each subsequent round, each un-engaged man proposes to one woman to whom he has not yet proposed (the woman may or may not already be engaged), and the women once again reply with one "maybe" and reject the rest. This may mean that already-engaged women can "trade up", and already-engaged men can be "jilted".

This algorithm needs a number of steps that is quadratic in n, and it guarantees that:

If the number of men and women coincide, and all participants express a linear order over all the members of the other group, everyone gets married. Once a woman becomes engaged, she is always engaged to someone. So, at the end, there cannot be a man and a woman both un-engaged, as he must have proposed to her at some point (since a man will eventually propose to every woman, if necessary) and, being un-engaged, she would have to have said yes.

The marriages are stable. Let Alice be a woman and Bob be a man. Suppose they are each married, but not to each other. Upon completion of the algorithm, it is not possible for both Alice and Bob to prefer each other over their current partners. If Bob prefers Alice to his current partner, he must have proposed to Alice before he proposed to his current partner. If Alice accepted his proposal, yet is not married to him at the end, she must have dumped him for someone she likes more, and therefore doesn't like Bob more than her current partner. If Alice rejected his proposal, she was already with someone she liked more than Bob.

Note that the pairing generated by the Gale-Shapley algorithm is male optimal, i.e., every man is paired with his highest ranked feasible partner, and female-pessimal, i.e., each female is paired with her lowest ranked feasible partner. It would be the reverse, of course, if the roles of male and female participants in the algorithm were interchanged.

Given n men and n women, a profile is a sequence of 2n strict total orders, n over the men and n over the women. In a profile, every woman ranks all the men, and every man ranks all the women.

Assume n = 3. Let W = {w1,w2,w3} and M = {m1,m2,m3} be respectively the set of women and men. The following sequence of strict total orders defines a profile:

m1:w1 > w2 > w3 (i.e., the man m1 prefers the woman w1 to w2 to w3),

m2:w2 > w1 > w3,

m3:w3 > w2 > w1,

w1:m1 > m2 > m3,

w2:m3 > m1 > m2,

w3:m2 > m1 > m3

For this profile, the Gale-Shapley algorithm returns the male optimal solution {(m1,w1),(m2,w2),(m3,w3)}. On the other hand, the female optimal solution is {(w1,m1),(w2,m3),(w3, m2)}.

Gender neutrality and non-manipulability

A desirable property of a stable marriage procedure is gender neutrality. A stable marriage procedure is gender neutral [\cite=masarani] if and only if when we swap the men with the women, we get the same result. A related property, called peer indifference [\cite=masarani], holds if the result is not affected by the order in which the members of the same sex are considered. The Gale-Shapley procedure is peer indifferent but it is not gender neutral. In fact, if we swap men and women in Example [\ref=ex1], we obtain the female optimal solution rather than the male optimal one.

Another useful property of a stable marriage procedure is its resistance to manipulation. In fact, it would be desirable that lying would not lead to better results for the lier. A stable marriage procedure is manipulable if there is a way for one person to mis-report their preferences and obtain a result which is better than the one they would have obtained with their true preferences.

Roth [\cite=roth-manip] has proven that stable marriage procedures can always be manipulated, i.e, that no stable marriage procedures exist which always yields a stable outcome and give agents the incentive to reveal their true preferences. He demonstrated a 3 men, 3 women profile which can be manipulated whatever stable marriage procedure we use. A similar result in a different context is the one by Gibbard and Satterthwaite [\cite=gibbard] [\cite=gibbard2], that proves that all voting procedures [\cite=handbook-sc] are manipulable under some modest assumptions. In this context, Bartholdi, Tovey and Trick [\cite=bartholdi] proposed that computational complexity might be an escape: whilst manipulation is always possible, there are rules like Single Transferable Vote (STV) where it is NP-hard to find a manipulation [\cite=stvhard]. This resistance to manipulation arises from the difficulty of inverting the voting rule and does not depend on other assumptions like the difficulty of discovering the preferences of the other voters. In this paper, we study whether computational complexity may also be an escape from the manipulability of stable marriage procedures. Our results are only initial steps to a more complete understanding of the computational complexity of manipulating stable matching procedures. As mentioned before, NP-hardness results only address the worst case and may not apply to preferences met in practice.

Manipulating stable marriage procedures

A manipulation attempt by a participant p is the mis-reporting of p's preferences. A manipulation attempt is unsuccessful if the resulting marriage for p is strictly worse than the marriage obtained telling the truth. Otherwise, it is said to be successful. A stable marriage procedure is manipulable if there is a profile with a successful manipulation attempt from a participant.

The Gale-Shapley procedure, which depending on how it is defined returns either the male optimal or the female optimal solutions, is computationally easy to manipulate [\cite=revisited]. However, besides these two extreme solutions, there may be many other stable matchings. Several procedures have been defined to return some of these other stable matchings [\cite=gusfield]. Our first contribution is to show that, under certain conditions on the shape of the male and female preferences, any stable marriage procedure is computationally easy to manipulate.

Consider a profile p and a woman w in such a profile. Let m be the male optimal partner for w in p, and n be the female optimal partner for w in p. Profile p is said to be universally manipulable by w if the following conditions hold:

in the men-proposing Gale-Shapley algorithm, w receives more than one proposal;

there exists a woman v such that n is the male optimal partner for v in p;

v prefers m to n;

n's preferences are [formula];

m's preferences [formula].

Consider any stable marriage procedure and any woman w. There is a polynomial manipulation scheme that, for any profile which is universally manipulable by w, produces the female optimal partner for w. Otherwise, it produces the same partner.

In a setting with 3 men and 3 women, consider the profile {m1:w1 > w2 > w3;m2:w2 > w1 > w3;m3:w1 > w2 > w3;} {w1:m2 > m1 > m3;w2:m1 > m2 > m3;w3:m1 > m2 > m3;} In this profile, the male optimal solution is {(m1,w1),(m2, w2),(m3,w3)}. This profile is universally manipulable by w1. In fact, woman w1 can successfully manipulate by moving m1 after m3, and obtaining the marriage (m2,w1), thus getting her female optimal partner. Notice that this holds no matter what stable marriage procedure is used. This same profile is not universally manipulable by w2 or w3, since they receive just one proposal in the men-proposing Gale-Shapley algorithm. In fact, woman w2 cannot manipulate: trying to move m2 after m3 gets a worse result. Also, woman w3 cannot manipulate since her male optimal partner is her least preferred man.

Restricting to universally manipulable profiles makes manipulation computationally easy. On the other hand, if we allow all possible profiles, there are stable marriage procedures that are NP-hard to manipulate. The intuition is simple. We construct a stable marriage procedure that is computationally easy to compute but NP-hard to invert. To manipulate, a man or a woman will essentially need to be able to invert the procedure to choose between the exponential number of possible preference orderings. Hence, the constructed stable marriage procedure will be NP-hard to manipulate. The stable marriage procedure used in this proof is somewhat "artificial". However, we will later propose a stable marriage procedure which is more natural while remaining NP-hard to manipulate. This procedure selects the stable matching that is most preferred by the most popular men and women. It is an interesting open question to devise other stable marriage procedures which are "natural" and computationally difficult to manipulate.

There exist stable marriage procedures for which deciding the existence of a successful manipulation is NP-complete.

Note that we can modify the proof by introducing O(n2) men so that the graph is encoded in the tail of the preferences of woman w2. This means that it remains NP-hard to manipulate a stable marriage procedure even if we collude with all but one of the women. It also means that it is NP-hard to manipulate a stable marriage procedure when the problem is imbalanced and there are just 2 women but an arbitrary number of men. Notice that this procedure is not peer indifferent, since it gives special roles to different men and women. However, it is possible to make it peer indifferent, so that it computes the same result if we rename the men and women. For instance, we just take the men's preferences and compute from them a total ordering of the women (e.g. by running an election with these preferences). Similarly, we take the women's preferences and compute from them a total ordering of the men. We can then use these orderings to assign indices to men and women. Notice also this procedure is not gender neutral. If we swap men and women, we may get a different result. We can, however, use the simple procedure proposed in the next section to make it gender neutral.

Gender neutrality

As mentioned before, a weakness of many stable marriage procedures like the Gale-Shapley procedure and the procedure presented in the previous section, is that they are not gender neutral. They may greatly favour one sex over the other. We now present a simple and universal technique for taking any stable marriage procedure and making it gender neutral. We will assume that the men and the women are named from 1 to n. We will also say that the men's preferences are isomorphic to the women's preferences iff there is a bijection between the men and women that preserves both the men's and women's preferences. In this case, it is easy to see that there is only one stable matching.

We can convert any stable marriage procedure into one that is gender neutral by adding a pre-round in which we choose if we swap the men with the women. The idea of using pre-rounds for enforcing certain properties is not new and has been used for example in [\cite=preround] to make manipulation of voting rules NP-hard. The goal of our pre-round is, instead, to ensure gender-neutrality. More precisely, for each gender we compute its signature: a vector of numbers constructed by concatenating together each of the individual preference lists. Among all such vectors, the signature is the lexicographically smallest vector under reordering of the members of the chosen gender and renumbering of the members of the other gender.

Consider the following profile with 3 men and 3 women. {m1:w2 > w1 > w3;m2:w3 > w2 > w1;m3:w2 > w1 > w3} {w1:m1 > m2 > m3;w2:m3 > m1 > m2;w3:m2 > m1 > m3}. The signature of the men is 123123312: each group of three digits represents the preference ordering of a man; men m2 and m3 and women w1 and w2 have been swapped with each other to obtain the lexicographically smallest vector. The signature of the women is instead 123213312.

Note that this vector can be computed in O(n2) time. For each man, we put his preference list first, then reorder the women so that this man's preference list reads 1 to n. Finally, we concatenate the other men's preference lists in lexicographical order. We define the signature as the smallest such vector.

Before applying any stable marriage procedure, we propose to pre-process the profile according to the following rule, that we will call gn-rule (for gender neutral): If the male signature is smaller than the female signature, then we swap the men with the women before calling the stable marriage procedure. On the other hand, if the male signature is equal or greater than the female signature, we will not swap the men with the women before calling the stable marriage procedure. In the example above, the male signature is smaller than the female signature, thus men and women must be swapped before using the stable marriage procedure.

Consider any stable marriage procedure, say μ. Given a profile p, consider the new procedure μ' obtained by applying μ to gn-rule(p). This new procedure returns a stable marriage and it is gender neutral. Moreover, if μ is peer indifferent, then μ' is peer indifferent as well.

If we are not concerned about preserving peer indifference, or if we start from a non-peer indifferent matching procedure, we can use a much simpler version of the gn-rule, where the signatures are obtained directly from the profile without considering any reordering/renaming of men or women. This simpler approach is still sufficient to guarantee gender neutrality, but might produce a procedure which is not peer indifferent.

Voting Rules and Stable Marriage Procedures

We will now see how we can exploit results about voting rules to build stable marriage procedures which are both gender neutral and difficult to manipulate.

A score-based matching procedure: gender neutral but easy to manipulate

Given a profile, consider a set of its stable matchings. For simplicity, consider the set containing only the male and female optimal stable matchings. However, there is no reason why we could not consider a larger polynomial size set. For example, we might consider all stable matchings found on a path through the stable marriage lattice [\cite=lattice] between the male and female optimal, or we may simply run twice any procedure computing a set of stable marriages, swapping genders the second time. We can now use the men and women's preferences to rank stable matchings in the considered set. For example, as in [\cite=ilgjacm87], we can score a matching as the sum of the men's ranks of their partners and of the women's ranks of their partners.

We then choose between the stable matchings in our given set according to which has the smallest score. Since our set contains only the male and the female optimal matches, we choose between the male and female optimal stable matchings according to which has the lowest score. If the male optimal and the female optimal stable matching have the same score, we use the signature of men and women, as defined in the previous section, to tie-break. It is possible to show that the resulting matching procedure, which returns the male optimal or the female optimal stable matching according to the scoring rule (or, if they have the same score, according to the signature) is gender neutral.

Unfortunately, this procedure is easy to manipulate. For a man, it is sufficient to place his male optimal partner in first place in his preference list, and his female optimal partner in last place. If this manipulation does not give the man his male optimal partner, then there is no manipulation that will. A woman manipulates the result in a symmetric way.

Lexicographical minimal regret

Let us now consider a more complex score-based matching procedure to choose between two (or more) stable matchings which will be computationally difficult to manipulate. The intuition behind the procedure is to choose between stable matchings according to the preferences of the most preferred men or women. In particular, we will pick the stable matching that is most preferred by the most popular men and women. Given a voting rule, we order the men using the women's preferences and order the women using the men's preferences. We then construct a male score vector for a matching using this ordering of the men (where a more preferred man is before a less preferred one). The ith element of the male score vector is the integer j iff the ith man in this order is married to his jth most preferred woman. A large male score vector is a measure of dissatisfaction with the matching from the perspective of the more preferred men. A female score vector is computed in an analogous manner.

The overall score for a matching is the lexicographically largest of its male and female score vectors. A large overall score corresponds to dissatisfaction with the matching from the perspective of the more preferred men or women. We then choose the stable matching from our given set which has the lexicographically least overall score. That is, we choose the stable matching which carries less regret for the more preferred men and women.

In the event of a tie, we can use any gender neutral tie-breaking procedure, such as the one based on signatures described above. Let us call this procedure the lexicographical minimal regret stable marriage procedure. In particular, when voting rule v is used to order the men and women we will call it a v-based lexicographical minimal regret stable marriage procedure. It is easy to see that this procedure is gender neutral. In addition, it is computationally hard to manipulate. Here we consider using STV [\cite=handbook-sc] to order the men and women. However, we conjecture that similar results will hold for stable matching procedures which are derived from other voting rules which are NP-hard to manipulate.

In the STV rule each voter provides a total order on candidates and, initially, an individual's vote is allocated to his most preferred candidate. The quota of the election is the minimum number of votes necessary to get elected. If no candidate exceeds the quota, then, the candidate with the fewest votes is eliminated, and his votes are equally distributed among the second choices of the voters who had selected him as first choice. This step is repeated until some candidate exceeds the quota. In the following theorem we assume a quota of at least half of the number of voters.

It is NP-complete to decide if an agent can manipulate the STV-based lexicographical minimal regret stable marriage procedure.

We can thus see how the proposed matching procedure is reasonable and appealing. In fact, it allows to discriminate among stable matchings according to the men and women's preferences and it is difficult to manipulate while ensuring gender neutrality.

Related work

In [\cite=masarani] fairness of a matching procedure is defined in terms of four axioms, two of which are gender neutrality and peer indifference. Then, the existence of a matching procedures satisfying all or a subset of the axioms is considered in terms of restrictions on preference orderings. Here, instead, we propose a preprocessing step that allows to obtain a gender neutral matching procedure from any matching procedure without imposing any restrictions on the preferences in the input.

A detailed description of results about manipulation of stable marriage procedures can be found in [\cite=huang]. In particular, several early results [\cite=demange] [\cite=dubins] [\cite=gale] [\cite=roth-manip] indicated the futility of men lying, focusing later work mostly on strategies in which the women lie. Gale and Sotomayor [\cite=gale2] presented the manipulation strategy in which women truncate their preference lists. Roth and Vate [\cite=roth3] discussed strategic issues when the stable matching is chosen at random, proposed a truncation strategy and showed that every stable matching can be achieved as an equilibrium in truncation strategies. We instead do not allow the elimination of men from a woman's preference ordering, but permit reordering of the preference lists.

Teo et al. [\cite=revisited] suggested lying strategies for an individual woman, and proposed an algorithm to find the best partner with the male optimal procedure. We instead focus on the complexity of determining if the procedure can be manipulated to obtain a better result. Moreover, we also provide a universal manipulation scheme that, under certain conditions on the profile, assures that the female optimal partner is returned.

Coalition manipulation is considered in [\cite=huang]. Huang shows how a coalition of men can get a better result in the men-proposing Gale-Shapley algorithm. By contrast, we do not consider a coalition but just a single manipulator, and do not consider just the Gale-Shapley algorithm.

Conclusions

We have studied the manipulability and gender neutrality of stable marriage procedures. We first looked at whether, as with voting rules, computationally complexity might be a barrier to manipulation. It was known already that one prominent stable marriage procedure, the Gale-Shapley algorithm, is computationally easy to manipulate. We proved that, under some simple restrictions on agents' preferences, all stable marriage procedures are in fact easy to manipulate. Our proof provides an universal manipulation which an agent can use to improve his result. On the other hand, when preferences are unrestricted, we proved that there exist stable marriage procedures which are NP-hard to manipulate. We also showed how to use a voting rule to choose between stable matchings. In particular, we gave a stable marriage procedure which picks the stable matching that is most preferred by the most popular men and women. This procedure inherits the computational complexity of the underlying voting rule. Thus, when the STV voting rule (which is NP-hard to manipulate) is used to compute the most popular men and women, the corresponding stable marriage procedure is NP-hard to manipulate. Another desirable property of stable marriage procedures is gender neutrality. Our procedure of turning a voting rule into a stable marriage procedure is gender neutral.

This study of stable marriage procedures is only an initial step to understanding if computational complexity might be a barrier to manipulation. Many questions remain to be answered. For example, if preferences are correlated, are stable marriage procedures still computationally hard to manipulate? As a second example, are there stable marriage procedures which are difficult to manipulate on average? There are also many interesting and related questions connected with privacy and mechanism design. For instance, how do we design a decentralised stable marriage procedure which is resistant to manipulation and in which the agents do not share their preference lists? As a second example, how can side payments be used in stable marriage procedures to prevent manipulation?