.

.

40pt 10pt

Minimum congestion spanning trees in planar graphs

Abstract: The main purpose of the paper is to develop an approach to evaluation or estimation of the spanning tree congestion of planar graphs. This approach is used to evaluate the spanning tree congestion of triangular grids.

Keywords: Dual graph; minimum congestion spanning tree; planar graph; spanning tree congestion

Introduction

Let G be a graph and let T be a spanning tree in G (saying this we mean that T is a subgraph of G). We follow the terminology and notation of [\cite=CH91]. For each edge e of T let Ae and Be be the vertex sets of the components of T - e. By eG(Ae,Be) we denote the number of edges in G with one end vertex in Ae and the other end vertex in Be. We define the edge congestion of G in T by

[formula]

The number eG(Ae,Be) is called the congestion in e. The name comes from the following analogy. Imagine that edges of G are roads, and edges of T are those roads which are cleaned from snow after snowstorms. If we assume that each edge in G bears the same amount of traffic, and that after a snowstorm each driver takes the corresponding (unique) detour in T, then ec describes the traffic congestion at the most congested road of T. It is clear that for applications it is interesting to find a spanning tree which minimizes the congestion.

We define the spanning tree congestion of G by

[formula]

Each spanning tree T in G satisfying ec is called a minimum congestion spanning tree. The parameters ec and s(G) were introduced and studied in [\cite=Ost04]. This study was continued in [\cite=Car05] [\cite=CCV07] [\cite=CO09] [\cite=Cox07] [\cite=Hru08] [\cite=Hun07] [\cite=KOY09] [\cite=LRR09] [\cite=Tan07], where many interesting results were obtained.

The spanning tree congestion is of interest in the study of Banach-space-theoretical properties of Sobolev spaces on graphs, see [\cite=Ost05]. Many known results and algorithms related to spanning trees are collected in the monograph [\cite=WC04], but this monograph does not contain any results on the spanning tree congestion. Many related parameters have been introduced in the literature, see [\cite=BCHRS00] [\cite=KRY94] and references therein, the paper [\cite=KRY94] introduced parameters which are more general than the spanning tree congestion.

One of the interesting problems about the spanning tree congestion is to evaluate it for some natural families of graphs. The purpose of this paper is to develop techniques which can be used to evaluate or estimate the spanning tree congestion of planar graphs. The techniques uses duality for planar graphs which goes back to Poincarè and Whitney (see [\cite=Ros99] and [\cite=Whi32] [\cite=Whi33]) and the notion of a dual tree which is implicitly present in the work of Whitney (see [\cite=Lov79]). Dual trees were introduced to this area by Hruska [\cite=Hru08] who used them to evaluate the spanning tree congestion for rectangular planar grids.

In conclusion we would like to mention that another techniques used to estimate the spanning tree congestion is based on the notion of a centroid of a tree (see [\cite=WC04] or [\cite=Ost04] for the definition) and edge-isoperimetric inequalities. This techniques was initiated in [\cite=Ost04] and developed in [\cite=CO09] and [\cite=KOY09]. It would be interesting to obtain the results for triangular grid (Theorem [\ref=T:triang]) using isoperimetry.

Dual graphs and spanning tree congestion estimates

Let G be a connected plane graph, that is, a planar graph with a fixed drawing in the plane.

The dual graph G* of G is defined as the graph whose vertices are faces of G, including the exterior (unbounded) face, and whose edges are in a bijective correspondence with edges of G. The edge e*∈E(G*) corresponding to e∈E(G) joins the faces which are on different sides of the edge e.

Let T be a spanning tree of G. The dual tree [formula] is defined as a spanning subgraph of G* whose edge set [formula] is determined by the condition: [formula] if and only if e∉E(T).

The graph G* does not have to be a simple graph even when G is simple. It is easy to verify that [formula] is a spanning tree in G* (see [\cite=Lov79]). See [\cite=CH91] and [\cite=Whi32] [\cite=Whi33] [\cite=Lov79] for information about dual graphs.

A center-tail system S in the dual graph G* of a plane graph G consists of

A set C of vertices of G* spanning a connected subgraph of G*, the set C is called a center.

A set of paths in G* joining some vertices of the center with the exterior face O. Each such path is called a tail. The tip of a tail is the last vertex of the corresponding path before it reaches the exterior face.

An assignment of opposite tails for outer edges of G. This means: For each outer edge e of the graph G one of the tails is assigned to be the opposite tail of e, it is denoted N(e) and its tip is denoted by t(e).

See Section [\ref=S:triang] for examples of center-tail systems.

The result below is true for an arbitrary system S satisfying the relations described above, but to be useful for estimates of the spanning tree congestion, a center should consist of vertices which are far from the exterior face in G* and opposite tails should be tails which are in some natural metric sense go in the directions which are opposite to the corresponding edges.

The congestion indicator CIS) of a center-tail system S is defined as the minimum of the following three numbers:

min F,H,f,h(i(F,f) + i(H,h) + 1), where the minimum is taken over all pairs F,H of adjacent vertices in the center C and over all pairs f,h of outer edges with f  ≠  h. In the cases where the center contains just one face we assume that this minimum is ∞  .

min ei(t(e),e) + 1, where the minimum is taken over all outer edges of G.

[formula], where the first minimum is taken over all outer edges of G; the second minimum is over vertices F from the path N(e), [formula] is the vertex in N(e) which follows immediately after F if one moves along N(e) from F to t(e); and the third minimum is over all outer edges different from e,

Let S be any center-tail system in a connected planar graph G. Then s(G)  ≥  CIS).

Let T be a spanning tree in G and [formula] be its dual tree. We split the set of interior faces of G into branches corresponding to outer edges (many of the branches can be empty): the branch corresponding to an outer edge e is the set of faces which are separated from the exterior face O if we delete e* from [formula], we assume that the branch is empty if e* is not an edge of [formula]. The edge e (corresponding to e*) is called the entrance of the branch.

Observation 1. If faces of the center C belong to different branches, then ec  ≥   the minimum in item (1) of Definition [\ref=D:CongInd].

In fact, let F and H be faces which are adjacent in G* and belong to two different branches with entrances at f and h, respectively. Let g be an edge which occurs in the boundaries of the faces F and H. It is clear that g∈E(T) (otherwise T would be disconnected). It suffices to show that eG(Ag,Bg)  ≥  i(F,f) + i(H,h) + 1.

Let [formula] be the OF-path in [formula] and [formula] be the OH-path in [formula]. It is clear that k  ≥  i(F,f) and m  ≥  i(H,h). To complete the proof we show that g is used in detours for [formula], and itself. In fact, the edges [formula] form a cycle in G*. Hence the edges [formula] form a cut in G, and g is the only edge in T connecting the vertex sets separated by the cut. This completes our proof of Observation 1.

Observation 2. Suppose that all faces of the center belong to the same branch with entrance e. Then:

(a) If all faces from the tail N(e) also belong to the same branch (with entrance e), then ec  ≥   the minimum in item (2) of Definition [\ref=D:CongInd].

(b) If some faces from the tail N(e) belong to another branch, then ec  ≥   the minimum in item (3) of Definition [\ref=D:CongInd].

In fact, in the case (a) let g be an edge which occurs in the boundaries of the the tip t(e) and the outer face O. As in Observation 1 we get that g∈E(T) (otherwise T would be disconnected) and that eG(Ag,Bg)  ≥  i(t(e),e) + 1.

In the case (b) let [formula] be the first face on the path N(e) (we assume that the path starts at a vertex of the center) which belongs to a different branch and let F be the previous edge of the path. Let g∈E(G) be the edge corresponding to the edge of g*∈E(G*) joining F and [formula]. Let ẽ be the entrance of the branch to which [formula] belongs. As in the previous observations we show that [formula]; and we are done.

It is clear that together Observations 1 and 2 imply the statement of the theorem.

In our estimates of s(G) from above we use the following definition.

For each connected planar graph G we have

[formula]

where the maximum is over all pairs [formula] of faces which have a common edge in their boundaries.

We let [formula] be a so-called breadth-first-search (BFS) tree in G* rooted at the external face O. See [\cite=Ros99] for a definition of a breadth-first-search tree. The definition in [\cite=Ros99] explains the name. We need only the following defining property of a BFS tree in a connected graph H: it is a spanning tree in H for which the distance between any vertex and the root in the tree is the same as in H. It is easy to see that BFS trees exist in an arbitrary connected graph.

So let [formula] be a rooted at O BFS tree in G* and [formula] be the edge set of [formula]. We delete from E(G) the set [formula]. It is easy to check that we get a spanning tree (see [\cite=Lov79] for detailed explanation). We denote it by T because [formula] is its dual tree.

Consider any edge f∈E(T). Suppose that it occurs in the boundaries of faces of F1 and F2.

Observe that the number of edges detours for which use f is equal to the number of edges in the cycle contained in [formula]. The length of the cycle is ≤  i(F1) + i(F2) + 1 because the cycle is a part of the closed walk which starts at O, uses an OF1-path in [formula], then f*, and then an F2O-path in [formula].

The proof of Proposition [\ref=P:above] explains why we do not have the equality in [\eqref=E:above]: in some cases the cycles contained in [formula], where f* is an edge joining faces F and [formula] maximizing [formula] do not pass through O. To illustrate this remark we consider the following planar graph H: It is obtained if we consider n concentric circles and k radial line segments, n  ≫  k. Each intersection of a circle and a line segment is regarded as a vertex. (See Figure 1, where n = 3, k = 4, and "circles" are sketched as squares. We do not have n  ≫  k in this picture, but it shows how we construct the spanning tree (drawn using "fat" edges), also it shows values of absolute indices of different faces.)

Figure 1

For such graph the absolute indices i(F) of faces F contained in the smallest circle are equal to n. On the other hand, it is easy to check that the spanning tree T in H consisting of all edges from one of the line segments and all edges from circles with one edge per circle removed satisfies ec  ≤  2k (actually, if we remove edges from circles in an optimal way, it will satisfy ec  ≤  k + 2, see Figure 1).

Triangular grids

Now we are going to use center-tail systems to find the spanning tree congestion for triangular grids {Tk}nk = 2. The graph Tk is defined as the graph which we obtain if we divide each side of a triangle into k - 1 equal pieces and join the corresponding subdivision points of different sides of the triangle. To make this definition clear we sketch T2, T3, and T4 (see Figure 2). In these graphs all intersections of line segments are regarded as vertices, and there are no other vertices.

Figure 2

s(T3n) = 4n, s(T3n + 1) = 4n, s(T3n + 2) = 4n + 2, [formula].

To estimate the spanning tree congestion from below we use center-tail systems. Our descriptions of center-tail systems Sn for Tn are somewhat different in the cases when n = 3k, n = 3k + 1, and n = 3k + 2.

We shall give a detailed argument for n = 5,6,7 and use the induction to derive the formula from the statement of the theorem.

The case n = 5. The center-tail system S5 is described in the following way. The triangle containing the letter C (see Figure 3) is the only element of the center. There are three tails, shown in Figure 3 using "fat" lines; we do not show edges joining tips of tails and O. The tail going in the upward-right direction is assigned to be the opposite tail for all outer edges contained in the bottom side of the triangle. Assignment of the opposite tails to edges from other sides of the triangle is made in order to make the assignment rotationally invariant for angles of [formula] and [formula].

Figure 3

Now we evaluate for S5 all of the minima from the definition of the CI. The first minimum is ∞   by the definition because the center contains just one face.

Because of the symmetry in the second and the third minimum it suffices to consider the minima over the edges of the bottom side only. To do this it is convenient to introduce ibot(F) =  min i(F,e), where F is a face of the triangle and the minimum is over e from the bottom side of the triangle. The values of ibot are shown in Figure 4. It is clear from Figure 4 that for each e from the bottom side of the triangle we have i(t(e),e) + 1  ≥  6.

Figure 4

The values of the absolute index i(F) for faces of T5 are shown in Figure 5. Comparing Figures 4 and 5 we see that for each face F from N(e) for e from the bottom side, and the following face [formula] the sum [formula] is at least 6.

Figure 5

By Theorem [\ref=T:ICvsS] we get s(T5)  ≥  6.

Applying Proposition [\ref=P:above] to the values of i(F) in Figure 5 we get s(T5)  ≤  6.

Observe that if we add one row on each side of T5 we get T8, the index of each triangle from T5 increases by 2. If we construct S8 in a similar way (that is, letting C to be the central face and extending each of the tails by two edges), we get CIS8) = 10. Applying Proposition [\ref=P:above] we get s(T8) = 10.

It is easy to see that the same pattern repeats. Each time when we add a row from each side, the index of the central square increases by 2 and the spanning tree congestion increases by 4. By induction, this implies s(T3n + 2) = 4n + 2.

Figure 6

For T3n the argument is almost the same. Figure 6 shows the suggested center-tail systems in T6. The argument in this case is a repetition of the argument for T3n + 2.

For T3n + 1 n  ≥  1 we suggest somewhat different center-tail systems (because there is no central triangle). In this case the center consists of 6 faces (we mark all of them using C on Figure 7), but there are still three tails, and the assignment of tails is similar to the previous cases: all edges from the bottom side of the triangle are assigned the tail which goes in the upward-right direction. Figure 7 shows the center and the tails for T7. The argument is quite similar to the argument for previous cases, but now we have to compute the first minimum, which is equal to 8 for T7 and is equal to 4n for T3n + 1. The second and the third minima are equal to 10 for T7 and to 4n + 2 for T3n + 1.

Figure 7

The values of the spanning tree congestion for the graphs {Tk} were studied in [\cite=CCV07]. Unfortunately one of the formulas in [\cite=CCV07] is erroneous (our Theorem [\ref=T:triang] implies that the formula [formula] (m  ≥  4) in [\cite=CCV07] does not hold for m = 3n + 2). Also it is not clear whether the authors of [\cite=CCV07] had proofs of the corresponding estimates from below. The reason for this doubt: the proof of the estimate from below for square grids contains gaps (one error is at the top of page 82: there can be several edges connecting Me and P; the second error is in item (b) on page 82: one can construct examples which show that the congestion with respect to trees with added edges is not related with the congestion in the original tree in the stated way), and for triangular grids no proof of the estimate from below is given in [\cite=CCV07], the authors just say that the proof is identical with the case of square grids.

It is not difficult to verify that center-tail systems can be used to prove the results of [\cite=CO09] and [\cite=Hru08] on rectangular planar grids and the result of [\cite=CCV07] on hexagonal grids. However, it is far from being clear whether it is possible to use center-tail systems to develop an algorithm for finding the spanning tree congestion for general planar graphs.