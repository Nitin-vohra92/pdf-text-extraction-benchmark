Corollary Lemma Proposition Definition Remark

Symmetric Ternary Quantum Homomorphic Encryption Schemes Based on the Ternary Quantum One-Time Pad

Introduction

In a distributed computing environment, customers have a large amount of data stored in the remote server. These data may include personal bank account information, online shopping records, credit card consumption records, etc., and this information belongs to customers’ private encrypted data which is indistinguishable for a remote server. Suppose we intend to compute on the encrypted data without a decryption process, or delegate it to a trusted third party without leaking information of the input data: is it possible to do so? Fortunately, blind computation[\cite=G10] or homomorphic encryption[\cite=G09] [\cite=BV14] [\cite=BGV14] [\cite=DGHV10] can achieve it perfectly without a decryption process and leaking private information of the encrypted input data.

From the perspective of quantum information processing, performing operations on encrypted data without a decryption process is relative to blind quantum computation[\cite=BFKW13] [\cite=GMMR13] [\cite=MPF13] [\cite=FK14] [\cite=MF13] [\cite=FBSYLPJR14]and quantum homomorphic encryption (QHE). This paper will study this problem by the QHE technique that can not only protect the privacy of users’ data, but also accomplish secure computatiom on a remote server.

Rohde et al.[\cite=RFG12] firstly studied quantum walks with encrypted data, and then they proposed a limited QHE scheme using the Boson sampling and multi-walker quantum walk models on Linear Optics Quantum Computation. However, QHE has still not been defined, and a quantum fully homomorphic encryption (QFHE) scheme has not yet been constructed.

Liang[\cite=L13] firstly presented the definitions of the QHE and QFHE, and then, based on the Quantum One-Time Pad (QOTP) protocol, he constructed the symmetric QHE and QFHE scheme with perfect security, where evaluation function depends on the encryption keys. Subsequently, learning from the Universal Quantum Circuit (UQC), he proposed a QFHE scheme[\cite=L14]. In the scheme, the encryption key is different from the decryption key, and cannot be public. Moreover, evaluation algorithm is independent of the encryption key, and the decryption key can be computed from the encryption key by an interactive update process. Recently, Liang[\cite=LY15] again presented two QFHE schemes, which are constructed based on quantum fault-tolerant construction. The characteristics are using quantum CSS code as the secret key and containing the periodical interaction between Client and Server.

Armknecht et al.[\cite=AGKP14] proved the general impossibility of (Abelian) group homomorphic encryption in the presence of quantum adversaries, when assuming the IND-CPA security notion as the minimal security requirement. And they provided a sufficient condition and discussed its satisfiability in non-group homomorphic cases. Tan et al.[\cite=TKOCF15] presented a private-key QHE scheme that hides arbitrary quantum computations. A particular instance of their encoding hides information at least proportional to m log m bits when m bits are encrypted. Recently, Broadbent et al.[\cite=BJ15] presented QHE schemes for circuits of low T-gate complexity. These schemes allow for arbitrary Clifford group gates, but they become inefficient for circuits with a large degree of complexity, measured in terms of the non-Clifford portion of the circuit.

Currently, QHE research is limited and mainly focused on the quantum bits (qubits). According to present research, this article presented four Ternary QHE (TQHE) schemes based on the Ternary QOTP (TQOTP) for the first time. The rest of the paper is organized as follows. Section 2 provides a brief introduction to ternary quantum gates and QHE, and a TQOTP scheme is presented. In section 3, the first TQHE scheme, based on one-qutrit rotation gatesR(ij)∂(θ), is constructed, and it is generalized to a general ternary quantum gate with synthesis idea. Then the third TQHE scheme about a GCX gate is constructed, and extended to n-qutrit gate in theory. These schemes are analyzed by synthesizing concepts from ternary quantum gates, secret key security and user data privacy in section 4. Conclusions and future research ideas are presented in section 5.

Preliminaries

Universal Quantum Circuits

Definition 1. (Universal Quantum Circuit (UQC)[\cite=BFGH10]) Fix n > 0 and let C be a collection of quantum circuits on n qubits. A quantum circuit U on (n + m) qubits is universal for C if, for every circuit CU∈C, there is a string x∈{0,1}m(the encoding) such that, for all strings,y∈{0,1}n (the data),

[formula]

The definition of the UQC tells us two things: one is that an arbitrary U transformation can be synthesized by a finite number of logic gates of the C set. Another is that blind quantum computation or homomorphic encryption scheme can be constructed, which will be discussed later. In the UQC, given a n-qubit [formula] as the input data, while a m-qubit [formula] is input as the encoding of a quantum transformation CU∈C, the UQC would output (n + m) qubits (shown in Eq.[\ref=e1]). Here,n-qubit [formula] is called the encoding of the quantum transformation CU∈C with regard to the UQC C. [formula] as input data can not only hide the data [formula] but also protect the operation CU. Furthermore, Eq.[\ref=e1] gives a transformation between U and CU quantum circuit, which means it is possible to construct a homomorphism operator between U and CU.

Ternary Quantum Circuit

A qutrit is represented as a unit vector in state space, which is a complex three-dimensional vector space 3. In the computational basis, the basis vectors (or basis states) of 3 are written in Dirac notation as [formula], and [formula], where [formula], [formula] , and [formula] . An arbitrary vector [formula] in 3 can be expressed as a linear combination [formula], where ai∈ and [formula]. The real number |ai|2 is the probability that the state vector will be in the ith basis state upon measurement.

A qudit is represented as a unit vector in the state space, which is a complex projective d dimensional Hilbert space d. In the computational basis, the basis vectors of d are written in Dirac notation as [formula], where [formula] =(0,0,...,1,...,0)T with a 1 in the (i+1)st coordinate, for 0  ≤  i  ≤  d  -  1. Its linear combination is similar with that of the qutrit. Note that the basis vectors in the computational basis are ordered by natural numbers.

Common one-qutrit circuits

1)Ternary X(ij) (TX) gates

The operators X(ij) are defined as follows,

[formula]

The X(ij) gates acting on [formula] can be represented as [formula]. Because X(ij)  =  X(ji) and X(ij)i  =  j  =  I3,TX gates have three valid forms and are defined as follows:

[formula]

2)Ternary H(ij) gates

The ternary extension of Hadamard gate can be expressed as

[formula]

The H(ij) gates acting on [formula] can be expressed as

[formula]

3)Ternary Z(i) gates

The Z(i) gates can be denoted as follows,

[formula]

The Zij gates applied to [formula] can be expressed as [formula]. 4)Ternary shift gates

The ternary shift gates are listed in Table 1, in which the addition is mode 3 addition. 5)Ternary rotation gates

The definition of a one-qutrit rotation gate is listed in Eq.[\ref=e6].

[formula]

where ∂∈{x,y,z}, 0  ≤  i  <  j  ≤  2, [formula], [formula], [formula]. Based on exponent mapping[\cite=DZW08], the following four equations are obvious,[formula], [formula] and [formula].

A one-qutrit gate is essentially a 3  ×  3 unitary matrix. According to the Cartan Decomposition of Lie algebra, the unitary matrix U has the following form[\cite=DW14],

[formula]

where α,β,γ,δ,θ,φ,β',γ' and δ' are all real numbers. The four basic one-qutrit rotation gates, R(01)y(β),R(02)y(γ),R(01)z(θ), and R(02)z(φ), constitute a set of one-qutrit elementary gates[\cite=DZW08].

Common two-qutrit circuits

1)Ternary NOT gate

A Ternary NOT gate Nj(Ai) is defined as [formula], where [formula] stands for addition modulo 3. 2)Feynman gate

It is defined as [formula], where [formula] stands for addition modulo 3, and [formula]. 3)Ternary K-Controlled X (TKCX) Gate

For a TKCXi1,i2   ·      ·      ·   ,ik;j(B) gate, when Bi1  =  Bi2  =    ·    ·    ·    =  Bik  =  2,X(ij) will be acted on target bit Bj, therein Bi1,Bi2,  ·    ·    ·  ,Bik are control bits. When K=1, the TKCX gate will evolve into the TCX gate. 4)Ternary K-Controlled-NOT (TKCNOT) gate

A TKCNOT gate Ci1,i2,   ·      ·      ·   ,ik;j(Al) is defined as follows

[formula]

5)Generalized Controlled X(GCX) Gate

For a GCX(m') gate and a two-qutrit [formula], When m' is fixed as a special control bit and m'  =  m, X(ij) will be acted on target bit A; Otherwise GCX(m') gate will not affect the state [formula],for m',m∈{0,1,2}.

TQOTP scheme

By referring to QOTP[\cite=BR03] and combining it with ternary quantum information technology, we design a TQOTP scheme. Suppose an n-qutrit encryption operator is denoted as

[formula]

Where X, H, and Z all represent ternary quantum gates, and [formula], [formula], [formula]. Obviously, we can use 3n random natural numbers and patulous bit-wise XHZ gates to encrypt an n-qutrit quantum state. The encryption operator Uk satisfies a uniform distribution of 33n unitary matrices. Thus, the probability pk, which means the probability of choosing Uk, is defined as [formula]. Actually Uk is a 3n  ×  3n unitary matrix. The encryption procedure is [formula], and the decryption procedure is [formula]. Remark 1. With respect to our TQOTP scheme, there are some improvements which we can do. These improvements include determining how to combine the TQOTP scheme with quantum key distribution, and construct the encryption operator Uk, and so on. By improving the TQOTP scheme, we can obtain an information-theoretically-secure scheme. These interesting problems will be discussed in future work.

QHE scheme

Definition 2. A QHE scheme is composed of four algorithms[\cite=L13]: a key generation algorithm, an encryption algorithm, a decryption algorithm and an evaluation algorithm.

Compared with the usual quantum encryption scheme, the QHE scheme has a fourth evaluation algorithm, which is used to process the quantum ciphertext without decrypting it. The purpose of the evaluation algorithm is mainly to construct a homomorphic unitary operation, which can be acted on given quantum ciphertext, according to a given unitary operation. After a user has decrypted the result of the evaluation algorithm, he will obtain the same result of the corresponding operation in plaintext. So how to construct a homomorphism operation on given quantum ciphertext is the key issue in constructing the QHE scheme. Remark 2. Suppose ρc and σm are the forms of density matrices for quantum states. TΔ is a set of permitted quantum operators. The evaluation algorithm can be described as follows: according to the key and the given operator T∈TΔ, it generates another quantum operator T' and performs it on the ciphertext ρc. In this case, the operator T' is related to the operator T and the key. The operator T can be regarded as a desired operation on the plaintext σm. The operation T' corresponding to T is performed on the ciphertext ρc, and can implement the desired operation on the plaintext σm.

TQHE scheme

One-qutrit TQHE scheme

1)One-qutrit rotation gates

For a set of permitted quantum operators [formula], we only consider four forms, R(01)y(θ),R(02)y(θ),R(01)z(θ) and R(02)z(θ), in the first TQHE scheme. The evaluation algorithm will construct the corresponding homomorphic operator [formula], such that

[formula]

It is deduced that [formula]. The first TQHE scheme is shown as follows.

KeyGenAlgorithm:Randomly generate three key numbers [formula];

EncryptAlgorithm:ρc  =  XαHβZδσmZδHβXα;

DecryptAlgorithm:σm  =  ZδHβXαρcXαHβZδ;

EvaluateAlgorithm:According to α,β,δ and R(ij)∂(θ), it performs homomorphic operator [formula] on the given ciphertext ρc without a decryption process. The output state of EvaluateAlgorithm is

[formula]

For Eq.[\ref=e11], a brief verification is given as follows,

[formula]

So Eq.[\ref=e11] holds. After the user decrypts the state of Eq.[\ref=e11], he will obtain the desired-state as follows

[formula]

Obviously, according to Eq.[\ref=e13] the output state of EvaluateAlgorithm is just the result of the operator R(ij)∂(θ) acting on the plaintext σm after the user decrypts it.

For a instance, suppose the user plaintext state is [formula], the user-desired operator on the plaintext is [formula], and the encryption operator Uk is [formula]. Thus the homomorphic operator [formula] is [formula]. The output state of EvaluateAlgorithm is [formula], which is exactly the output of the user-desired operator R(01)y(π) acting on the plaintext [formula]. Moreover, no decryption is performed during the computing of EvaluateAlgorithm. Thus, the scheme satisfies the definition in section 2.4, and the result of the homomorphism operator is precisely the user-desired output state. 2)General one-qutrit gates

An arbitrary 3  ×  3 unitary matrix U can be decomposed into some R(ij)∂ terms (see Eq.[\ref=e7]). Accordance to Eq.[\ref=e10], we can obtain the homomorphism operator [formula] corresponding to R(ij)∂ acting on the quantum plaintext state. Thus the homomorphic operator [formula] corresponding to the unitary matrix U can synthesized by eight [formula]. Referring to the first TQHE scheme, we can propose the second TQHE scheme for an arbitrary 3  ×  3 unitary matrix U. It can be seen that the operator [formula] is a little complicated. As a result it will influence the execution efficiency of EvaluateAlgorithm.

TQHE scheme for GCX gate

The Cartan Decomposition of one-qutrit gate is not unique, so the choice of one-qutrit elementary gates is not unique either. Refs.23 and 24 regard GCX gate and extended rotation gate as a two-qutrit elementary gate, respectively. In this paper, we choose the GCX gate as a ternary quantum elementary gate, which is universal for n-qutrit quantum computing, when it is assisted by arbitrary one-qutrit gates. The common two-qutrit gates: TCX, TSWAP, TSUM (TFeynman), TXOR, and TShift gate can be synthesized by some GCX gates without auxiliary one-qutrit gates. For example, the TSUM (TFeynman) gate is synthesized by four GCX gates, as shown in Fig.[\ref=f1]. Likewise, the TSWAP gate is synthesized by nine GCX gates (see Fig.[\ref=f2]) and the TXOR gate synthesized by three GCX gates (see Fig.[\ref=f3]).

When the control bit m' is set to [formula] state (or [formula] or [formula] ) and m'  =  m, the effect of the GCX(m' ) gate is that the operator X(ij) will be applied to the target bit A. Namely,

[formula]

If m'  ≠  m, then the operator X(ij) will be equivalent to I3 without affecting the target bit A. Therefore the homomorphism operator of the GCX(m') gate is exactly the similar with the operators [formula] (equivalent to [formula]). In order to better describe the performance of the GCX(m') gate acting on the two-qutrit [formula], the function of f(m',m) is defined as follows

[formula]

So the third TQHE scheme associated with the GCX gate is described as follows.

KeyGenAlgorithm:Randomly generate three numbers [formula];

EncryptAlgorithm:ρc  =  XαHβZδσmZδHβXα;

DecryptAlgorithm:σm  =  ZδHβXαρcXαHβZδ;

EvaluateAlgorithm:According to α,β,δ,i and j, it computes the homomorphic operator [formula]. Then the corresponding operator X(ij) will be acted on the given ciphertext ρc without performing DecryptAlgorithm. The output state of EvaluateAlgorithm is

[formula]

Obviously it is just the same as the operator [formula] acting on the plaintext σm. The scheme based on the GCX gate satisfies the QHE scheme’ demand.

For example, suppose that the user's plaintext state is [formula]. For the user-desired GCX(m'), the control bit m' is set to 0 and operator X is specified as X(02)τ (equivalent to [formula]). The encryption operator is denoted as [formula], that is:[formula]. Thus, the homomorphic operator X(ij) is [formula], where [formula] and τ  =  I3. The output state is [formula] After a user has decrypted the result of EvaluateAlgorithm, he will obtain the same result as the user-desired operator X(02)τ acting on the plaintext σm. The scheme is in accord with the definition in section 2.4.

n-qutrit TQHE scheme

Any n-qutrit quantum gate can be expressed as a 3n  ×  3n unitary matrix. Based on one/two-qutrit quantum gates, there are plenty of research opportunities for n-qutrit quantum gates by using permutation group theory and Cosine-Sine Decomposition (CSD). According to permutation group theory, all n-qutrit((n  ≥  2)) quantum circuits can be generated by a group of two-qutrit gates: SWAP, NOT and 1-controlled-NOT gates without ancillary qutrits[\cite=YXSP06] [\cite=YHSP10]. Obviously, it is only a construction-based algorithm. In terms of CSD, a 3n  ×  3n unitary matrix can be synthesized by 12 controlled-U gates, 12 Dual-Shift gates, 3n (N-1)-controlled rotation gates and 2  ·  (n  -  1)  ·  3n   -   1 TX gates[\cite=KP06]. The (N-1)-controlled rotation gate is defined as follows

[formula]

For [formula], [formula] or [formula]. No matter which method is used to synthesize a 3n  ×  3n unitary matrix, there always exists extremely complex process, a giant number gates and very low efficiency. At present, this is a difficulty and hot issue of synthesis of multivalue quantum gate.

According to Ref.25 and section 3.2, we describe a process of how to construct an n-qutrit TQHE scheme. TNOT gate and Ternary 1-controlled gate are in fact two single-shift gates with conditions (see Table [\ref=t1]). The difference is the latter requires the control bit to be 2 on base of the former’s condition (see Figs.[\ref=f4] and [\ref=f5]). Obviously, a TNOT gate can be synthesized by two GCX gates (see Fig.[\ref=f4]). And a ternary 1-comtrolled gate can be synthesized by two conditional GCX gates (see Fig.[\ref=f5]). Therefore, we can conclude that any n-qutrit (n  ≥  2) logic circuits can be synthesized by some GCX gates.

Suppose the user will perform the quantum circuit C3n   ×   3n on the given quantum plaintext. In principle we can get the homomorphism operator C'3n   ×   3n, which is synthesized by a large number of GCX gates' homomorphic operators, such that

[formula]

Where [formula]. So far we can present n-qutrit QHE scheme in theory. However, the form of the operator C3n  ×  3n synthesized by a great deal of GCX gates is so complex that performing EvaluateAlgorithm is very bad in execution efficiency and energy consumption. Thus the n-qutrit QHE scheme does need many improvements in multivalue quantum circuit synthesis and homomorphic EvaluateAlgorithm design.

Analysis

Circuit synthesis

Currently, the synthesis of multivalue quantum logic circuit mainly focuses on the simplest ternary quantum logic circuits. Although there are some research achievements, they are not very mature themselves. How to choose universal ternary quantum gate has not been well solved so far. And there are no uniform criteria for the performance analysis, complexity, cost, energy consumption, and so on, after the ternary quantum gates being synthesized by a number of GCX gates. In short, it is feasible to construct an n-qutrit QHE scheme in theorem, but it is too difficult to construct in practice. Therefore, this paper does not actually construct such a scheme and we only describe a general construction process by the synthesis method.

In view of the current state of research on the synthesis of an n-qutrit quantum gate (actually a 3n  ×  3n unitary matrix), synthesis methods of quantum circuit require further optimization and refinement. Based on quantum circuit synthesis, construction of an n-qutrit QHE scheme is premature. The key reasons are very low performance efficiency and difficulties in constructing the homomorphic operator while executing EvaluateAlgorithm. Therefore, the TQHE scheme presented in the paper is limited to one-qutrit rotation gates, one-qutrit quantum gates and two-qutrit gates synthesized by some GCX gates. Theoretically, we can generalize the TQHE scheme to the n-qutrit (n  ≥  2) quantum gates case.

Security

Our TQHE schemes, which are based on the TQOTP scheme, all assume that the delegation party is honesty. There are two aspects of this representation. One is that it will not leak or snoop users’ private data in the process of performing EvaluateAlgorithm in the case of knowing the decryption key. The other is that it will right execute the commissioned unitary operators without decryption. The delegation party must know the user-given operators and the secret key. Otherwise he cannot correctly construct the homomorphic operator. It should be noted that the EvaluateAlgorithm is dependent on the secret key. Thus, the delegation party can decrypt it and obtain the original qutrit. This will restrict the application of these schemes. Meanwhile these schemes cannot be used in blind quantum computation. However, we can delegate the computation to the trusted party by using the TQHE schemes, which can prevent the malicious parties from obtaining the data and the result of the computation. Of course, these schemes can be also used in secure multiparty quantum computation.

In addition to the legal user and trusted delegation party, there is no party (including the eavesdropper, etc.) that is able to get the complete user data. According to our TQOTP scheme, which is used to encrypt the user’s original data, the eavesdropper correctly guesses the secret key with the probability [formula]. In the case of one-qutrit (n = 1), the probability pk is [formula] . Similarly, in the case of two-qutrit (n = 2), the probability pk is [formula] and, with three-qutrit (n = 3), the probability pk is [formula]. With the increase of original data’s length, the secret key’s length will be longer. So the probability pk will become smaller and smaller, and eventually it will tend to zero. It is extremely difficult for the eavesdropper to correctly guess the secret key. Additionally, the quantum key distribution protocols, such as the BB84 protocol, can be used to generate and transmit the secret key between user and delegation party, which must make our secret key unconditional secure. As a result, our schemes will be more secure.

The eavesdropper cannot obtain effective and complete information for the user encrypted data and the output state of the EvaluateAlgorithm. Suppose forcing to measure the intercepted data, the eavesdropper will obtain the random information about these encrypted data. Due to the quantum No-Cloning Theorem and Heisenberg Uncertainty Principle, along with the TQOTP scheme, the eavesdropper knows nothing about the mutual information of the unknown cipher states, namely I(ρc:Eve)  ≈  0. There is only one round of information exchange between the user and the delegation party in our TQHE schemes, rather than several rounds of information exchange in blind quantum computation. The benefits of our schemes are the high level of user’s data privacy and the reduction of the times for which sensitive data is exposed. By performing EvaluateAlgorithm, the delegation party will execute the corresponding homomorphic operator in the user-given cipher states. The homomorphic operator is equivalent to a new encryption operator, which acts on the user-given ciphertext. The homomorphic operator is only known by the delegation party, and the eavesdropper knows nothing about it. Without knowing the secret key and homomorphic operator, the eavesdropper does not know the secondary encrypted quantum states, i.e.,I(ρc:Eve)  ≈  0.

The binary QHE schemes presented in Ref.13 are efficient and perfectly secure, i.e., I(ρc:σm)  =  H(ρc)  -  H(ρc|σm)  =  0. It shows that the ciphertext is independent of the plaintext. However, a deterministic QHFE scheme necessarily incurs exponential overhead if perfect security is required[\cite=YPF14]. This is very difficult to implement in practice. The TQHE schemes in this paper are not perfectly secure because of the encryption operator Uk, which is not a complete orthogonal basis in n-qutrit Hilbert Space. As a result, both of the output quantum states of the EvaluateAlgorithm and EncryptionAlgorithm are not the totally mixed states. According to definition 1 in Ref.11, our TQHE schemes are all ε-security.

Conclusion

At present, there exist few researches in QHE. According to present research, it is the very first time to present these TQHE schemes based on TQOTP in this paper. First, we proposed a TQOTP protocol and these TQHE schemes are based on it. Second, in allusion to the ternary quantum rotation gate R(ij)∂, we had constructed the homomorphic operator [formula] and the first TQHE scheme. Then according to general one-qutrit gate synthesized by eight [formula] gates, we presented the second TQHE scheme. Third, on the basis of Ref.23 and the GCX(m') gate which can be as a two-qutrit universal gate, we constructed the third TQHE scheme for the GCX(m') gate. Referring to Refs.25-26 and the third TQHE scheme, we generalized to n-qutrit case and theoretically presented the fourth TQHE scheme. Finally, we discussed two components of these schemes’ security. One is that there exists an extremely low probability that the attacker correctly guesses the secret key. Another is that the attacker knows almost nothing about two kinds of cipher quantum states, i.e., the output encrypted quantum states of the EvaluateAlgorithm and EncryptionAlgorithm. Meanwhile, future research ideas are to find a TQOTP scheme with perfect security and to construct an asymmetric TQHE scheme, where the EvaluateAlgorithm only depends on the public key but not the private key. The latter is an open problem. Maybe one can consider how to modify the quantum public-key encryption scheme in Refs.29-30, such that it becomes an asymmetric QHE scheme. If this goal were achieved, the computing on the quantum cipher state could be securely outsourced, and then blind quantum computation would be implemented in this way.

Acknowledgments

We are grateful to Prof. Yang for warm and useful discussions and suggestions. We acknowledge supports from the project of National Natural Science Foundation of China (Grant No.61272175) and the research project of Minnan Normal University (Grant No.sk09002).