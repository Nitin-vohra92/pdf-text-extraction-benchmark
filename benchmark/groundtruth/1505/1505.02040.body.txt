The field line map approach for simulations of magnetically confined plasmas

Introduction

The modelling of the edge and scrape-off layer of tokamaks is in many ways more difficult than the core [\cite=dendy_obrien:tokamak93]. However, this region is of high importance since it may have a significant influence also on the core region, e.g. plasma and impurity densities are often largely set by edge conditions and in important operating conditions the edge plays a key role in the improvement of confinement [\cite=stangeby:boundaryplasma90]. Moreover, a prediction of heat fluxes on the divertor plates for future tokamaks is of high importance from the engineering point of view [\cite=dietz:diviter93] [\cite=dietz:divheatflux95].

A major complexity at the modelling is introduced by the complex geometry of diverted machines. Field-aligned coordinates are often employed in simulations, since they allow for a convenient way to computationally exploit the characteristic flute mode property [formula] of the structures. However, field-aligned coordinates become singular on the separatrix and simulations cannot span a domain across it. Any set of poloidal [formula] and toroidal [formula] straight field line angles has to satisfy along magnetic field lines the condition [\cite=haseleer:ccord90]:

[formula]

At the X-point the poloidal magnetic field vanishes and therefore on the separatrix the safety factor q diverges. The straight field line angles, which have to satisfy condition ([\ref=straight_angles]), cannot span the whole separatrix. As exemplified in fig. [\ref=fig_contours_straight]a the contours of θs are sucked into the X-point (see also [\cite=strumberger:coordexample04]).

Also often employed are coordinates, where the field-alignment property is given up, but which is still aligned with flux surfaces, i.e. ρ(ψ) is retained as a radial coordinate. However, flux-aligned coordinate systems are still singular on points, where [formula], i.e. at O-points and X-points [\cite=mattor:xcoord95]. Although these singularities can be cured numerically, O- and X-points remain somewhat exceptional points of the numerical grid (see fig. [\ref=fig_contours_straight]b). This could in the worst case even lead to numerical artefacts. Moreover, structured flux-aligned meshes have a huge resolution imbalance within the poloidal plane due to the flux expansion near the X-point [\cite=strauss:xsim96] [\cite=dudson:bout++15]. Simulations might suffer from this as perpendicular operators arising in practically any plasma model (e.g. [formula] act approximately isotropically within poloidal planes of tokamaks.

The field line map approach is presented in section [\ref=sec_fieldlinemap]. Although field/flux-aligned coordinates may become singular, the operators appearing in plasma models are still well defined, of course. The idea behind the approach is that the flute mode property can also be exploited at the discretisation step without any need for construction of a field/flux-aligned coordinate system. The approach consists of a cylindrical or Cartesian grid with a field line following discretisation for parallel operators. A separatrix can be treated as well as a magnetic axis, where X/O-points are treated like any other grid point and no resolution imbalance arises. Ultimately, the result is similar to the flux-coordinate independent (FCI) [\cite=ottaviani:coord11] [\cite=hariri:fenicia13] [\cite=hariri:xcoord14] approach. However, as the motivation for the FCI approach was initially still based on field-aligned coordinate systems, the derivation is here performed completely without any reference to field- or flux-aligned coordinate systems.

As the discretisation of perpendicular operators in the field line map approach is straight forward, the main emphasis in this paper is on the discretisation of parallel operators, especially the parallel diffusion operator in section [\ref=sec_pardiff]. Since an interpolation or integration is involved at the discretisation, parallel operators exhibit also numerical perpendicular 'diffusion'. Motivated by previous work from [\cite=guenter:numpoll05] [\cite=guenter:numpoll07], a numerical scheme is developed which exhibits very low numerical diffusion. The discussion extends previous work from [\cite=stegmeir:cpp14]. Several model problems are also discussed in [\ref=appendix]

The developed numerical methods are implemented in the new code GRILLIX. In section [\ref=sec_benchmarks] extensive benchmarks performed with GRILLIX are presented, which show the validity of the field line map approach in general and GRILLIX in particular.

The paper is concluded with a summary and final remarks in section [\ref=sec_summary].

Field line map approach

Overview

The field line map approach is described in the following for the case of a toroidal configuration [formula], but it can be applied also to axial periodic configurations [formula], where z is the axial coordinate. The transition should be trivial.

For a tokamak a cylindrical coordinate system is well defined everywhere, except for the toroidal symmetry axis which is outside the domain of interest. We span the simulation domain with a cylindrical grid Ri,Zj,φk (For axial configurations a Cartesian grid xi,yj,zk is used). Within each poloidal plane k the grid [formula] is Cartesian and bounded by extreme flux surfaces, which is the only dependence on flux surfaces of the approach. Based on the assumption of a strong toroidal field [formula], any perpendicular operator is approximated by derivatives with respect to only R and Z, but not φ. In order to exploit the flute mode property [formula], a dense resolution is chosen within poloidal planes, whereas the grid is sparsified along the φ direction. The low resolution in φ requires a field line following discretisation for parallel operators to achieve a sufficient directional accuracy for parallel operators.

It is noted that the assumption of a strong toroidal field is not a strictly necessary condition. If this assumption breaks down, a dense resolution also in φ would have to be retained, and the perpendicular operators would have to be adjusted to take into account also derivatives with respect to φ. Ultimately, the field line map approach would go over into a discretisation on a dense cylindrical grid, where the flute mode property would not be exploited any more. However, the method would still retain its validity.

Perpendicular operators

Under the assumption of a strong toroidal field, any perpendicular operator can be approximated with derivatives with respect to only R and Z, e.g. the perpendicular Laplace operator becomes:

[formula]

where gnm the inverse metric of the cylindrical coordinate system and bn the contravariant components of the unit vector of the magnetic field. Hence, the Stencil of any perpendicular operator remains within the Cartesian poloidal planes. Standard finite difference methods can be used for their discretisation (e.g. [\cite=ames:nummethpde92]), e.g. a second order finite difference method yields for the discrete perpendicular Laplace operator [formula]:

[formula]

where h denotes the Cartesian grid spacing. Bold face is used on the discrete level for vectors and matrices, i.e. [formula], and the subscript i,j,k denotes the corresponding grid point.

Parallel gradient

The parallel gradient is:

[formula]

where ε is the arc length along a magnetic field line and:

[formula]

This motivates the discretisation of the parallel gradient via a finite difference along magnetic field lines. The Stencil will cover neighbouring poloidal planes, and since the grid is sparsified along the toroidal direction, a field line following discretisation has to be performed. Field lines are traced from each grid point towards the neighbouring poloidal planes according to:

[formula]

with BR,BZ,Bφ the contravariant components of the magnetic field. The integrations start from grid points [formula], and '  ±  ' denotes co/counter-direction with respect to magnetic field. For axisymmetric equilibria the penetration points [formula] are independent of the toroidal grid index k. Also the lengths along field lines are computed according to:

[formula]

where [formula] is the toroidal field strength.

A sketch of the discretisation of the parallel gradient is shown in fig. [\ref=fig_par_grad]a. The discrete parallel gradient is collocated at positions half way along the magnetic field line towards the neighbouring poloidal planes. This gives rise to two possible discretisations (' + ' and ' - '). Since the penetration points do not in general coincide with grid points, a 2D-interpolation has to be performed within the Cartesian grid, to obtain the values for some quantity u at the penetration points. The interpolated values are denoted with u±i,j,k. The discrete parallel gradient operators [formula] are defined as:

[formula]

The parallel gradient at the considered grid point itself could be obtained via a further linear interpolation of the discrete parallel gradient along the magnetic field line. However, since this work will concentrate on the discretisation of the parallel diffusion operator, this issue is left for future work. Results on the parallel gradient can also be found in [\cite=hariri:fenicia13].

Later on, especially for field lines which are strongly distorted, another discretisation of the parallel gradient is useful, which is based on integration:

[formula]

The surface integration can be mimicked on the discrete level. Flux boxes around magnetic field lines are taken as discrete finite volumes (see fig. [\ref=fig_par_grad]b), such that the only contributions to the surface integral come from the toroidal ends of the flux box:

[formula]

where ΔV±i,j are the discrete volumes, Vi,j is the magnetic field strength in the center of the flux box and ΔA±i,j,n,m is the surface overlap of grid point [formula] with the toroidal end of the flux box surface of grid point [formula] (Toroidal index k can be dropped in ΔA±i,j,n,m due to axisymmetry). Based on the fact [formula], the flux box volumes ΔV±i,j can be computed with high accuracy during the field line tracing process.

The introduction of discrete fluxes [formula] is useful for later purposes:

[formula]

where [formula] are matrices according to equation ([\ref=par_grad_interpolation]) or ([\ref=par_grad_coordfree]), which contain also the interpolating coefficients or the surface overlaps.

Parallel diffusion

In this section the discretisation of the parallel diffusion operator, defined as

[formula]

is discussed.

The interpolation or integration process at the discretisation of the parallel gradient introduces an erroneous numerical perpendicular coupling among distinct field lines. Therefore, the discrete parallel diffusion operator will exhibit a spurious numerical perpendicular 'diffusion', which depends in general on resolution and the applied interpolation/integration method. In a magnetised plasma the dynamics can be strongly anisotropic, i.e. very fast along magnetic field lines and very slow perpendicular. The numerical perpendicular diffusion arising from the discretisation error of the parallel diffusion operator might then compete or even overwhelm the real perpendicular diffusion or dynamics. Therefore, it is important to construct numerical schemes which exhibit only very low numerical perpendicular diffusion. In the following, two schemes for the discrete parallel diffusion operator are presented, a naive discretisation and a discretisation according to the support operator method [\cite=shashkov:support95] [\cite=shashkov:support96]. The support scheme was motivated from [\cite=guenter:numpoll05] [\cite=guenter:numpoll07], and it will turn out that it exhibits a much lower numerical diffusion. In many cases, where an increase of resolution might not be possible due to hardware constraints, the naive discretisation might fail, whereas the support schemes still work well.

Naive discretisation

Under the assumption [formula], the parallel diffusion operator can be approximated as:

[formula]

This motivates a discretisation via a further finite difference of the parallel gradient along magnetic field lines. The discrete parallel diffusion operator [formula] is proposed as:

[formula]

Support operator method

The naive scheme yields a consistent discretisation, but it does not conserve any 'good' property of the parallel diffusion operator. Based on the support operator method [\cite=shashkov:support95] [\cite=shashkov:support96] a scheme is derived which conserves the self-adjointness of the parallel diffusion operator on the discrete level.

Let u,v be two real valued arbitrary scalar fields, we define a scalar product via an integration over the whole domain:

[formula]

It holds that:

[formula]

If we further assume that the domain is periodic (φ-direction) and/or the quantities vanish at the boundaries, the following integral equality holds:

[formula]

It is immediately obvious that:

[formula]

The method of support operators gives a procedure for the construction of discrete second order operators which conserve certain integral equalities on the discrete level. Within the support operator method a first order operator, the prime operator, is discretised, and derived operators are constructed via a discrete analogue of certain integral equalities. In our case we will derive the discrete parallel diffusion operator with the parallel gradient as the prime operator and via conservation of integral equality ([\ref=integral_equality]) on the discrete level. We discuss the construction of the discrete parallel diffusion operator for the case of of the ' + ' discretisation in the following. The ' - ' discretisation follows analogously and a combination of both is given at the end of this section.

Let us start from the discrete parallel gradient according to equation ([\ref=par_grad_interpolation]) or ([\ref=par_grad_coordfree]), which can both be represented with a matrix [formula]. Scalar functions [formula] are collocated on the basic cylindrical grid. Gradients [formula] are collocated on points half way along magnetic field lines towards neighbouring poloidal planes (see again fig. [\ref=fig_par_grad]). The discrete parallel gradient maps from the cylindrical grid [formula] to that gradient's grid [formula]:

[formula]

In the next step we want to mimic the integral equality ([\ref=integral_equality]) on the discrete level. However, on the discrete level the left hand side of equation ([\ref=integral_equality]) denotes a scalar product on the space SG, whereas the right hand side on the space FG+. Therefore, we have to define two discrete scalar products, which both mimic an integration over the same whole domain:

[formula]

where Greek letters indicate summations over all grid points. The finite volumes are chosen as finite flux boxes around magnetic field lines as illustrated in fig. [\ref=fig_par_volumes]. The discrete parallel diffusion operator,

[formula]

can now be derived from the discrete parallel gradient, and by imposing the integral equality ([\ref=integral_equality]) on the discrete level. On the one hand:

[formula]

On the other hand:

[formula]

The conservation of integral equality ([\ref=integral_equality]) on the discrete level demands the equality of expressions ([\ref=pardiffsupp_lhs]) and ([\ref=pardiffsupp_rhs]) for arbitrary [formula]. Via relabelling of the indices ν  →  λ,  τ  →  σ the discrete parallel diffusion operator can finally be obtained:

[formula]

In axial geometry the volume factors vanish [formula] and the discrete parallel diffusion operator becomes:

[formula]

which expresses the self-adjointness property on the discrete level. For toroidal geometries, due to the general geometry and the 1 / R dependence of the toroidal field strength, the volume factors account for effects arising from [formula]. In addition the volume factors matter if the parallel distances Δs+i,j vary, i.e. if the grid is not equidistant in the parallel sense.

Finally, a small modification is applied to the scheme. A discrete parallel diffusion operator can also be derived analogously with the ' - ' discretisation of the parallel gradient. This will end up in a generally different but consistent scheme by itself. However, it is desirable that the final scheme is independent of this initial arbitrary choice. To achieve this, the average between both schemes is taken:

[formula]

This modification does not alter the self-adjointness property on the discrete level, since:

[formula]

A further remark concerns numerical stability. The support operator discretisation excludes possible numerical instabilities arising from the interpolation, since it guarantees a strict decrease of the L2 norm:

[formula]

which is in generally not fulfilled with the naive discretisation method.

A two-dimensional model problem

To illustrate the difference between the naive and the support scheme, and to enlighten the advantage of the support scheme a two-dimensional model problem is considered. The coordinate x plays the role of a coordinate within poloidal planes and z the role of a periodic toroidal/axial coordinate, and the domain is spanned by a regular grid xi,zk, with grid spacing h in the x-direction and grid spacing Δz in the z-direction. The magnetic field is uniform with an inclination with respect to the grid:

[formula]

The displacement of the penetration points with respect to the grid point can be expressed by a factor f:

[formula]

Without loss of generality only cases of slight inclination with respect to the grid are considered in the following, i.e. [formula]. Using a linear interpolation the values at the penetration points are determined as:

[formula]

The parallel distances are all equal [formula], as also the finite volumes ΔVλ  =  ΔVμ = hΔz. To illustrate also the construction of the scheme we give for this case also explicit expressions for the matrices Q± on a [formula] grid:

[formula]

The only inner grid point is i = 2,  k = 2, which corresponds to the fifth row of the matrices [formula]. The discrete parallel diffusion operator at the inner grid point is illustrated in fig. [\ref=fig_model_hom]a for the naive scheme according to equation ([\ref=naive_diffusion]) and in fig. [\ref=fig_model_hom]b for the support scheme according to equation ([\ref=supp_diffusion]). It is apparent that the Stencil of the support scheme is larger. In the limit that the penetration points coincide with grid points, i.e. f = 0,1, both schemes yield the standard second order finite difference expression.

Now we investigate the action of the discrete parallel diffusion operators on a Fourier mode [formula]. The analytic result is:

[formula]

Performing a Taylor expansion in [formula] yields:

[formula]

It is apparent that for finite displacement [formula] the leading error for the naive scheme scales like [formula]. This reflects the error of the linear interpolation, which scales also like [formula]. The error term represents a numerical perpendicular diffusion with diffusivity coefficient:

[formula]

For the support scheme an improved scaling of [formula] for the leading error is obtained. Therefore, the numerical diffusion becomes actually a hyperdiffusion.

The same analysis performed here for linear interpolation is repeated in [\ref=app_polint] with third order polynomial interpolation. Moreover, in [\ref=app_inhom] a model problem for the case of an inhomogeneous magnetic field is discussed, and in [\ref=app_integration] an example for the application of the integration method is given.

Map distortion

Especially close to the X-point field lines become strongly distorted. To illustrate this, we consider the lowest order expansion for the magnetic field around the X-point [\cite=farina:xgeom93]:

[formula]

Two generic field lines, which have initially a poloidal distance δ0, will exponentially diverge:

[formula]

We clarify now the effect of such a strong distortion on the numerical scheme.

We consider again a two-dimensional setup as illustrated in fig. [\ref=fig_wiggle2d]a. The penetration points of two neighbouring field lines separate exponentially according to expression ([\ref=ergodic_fieldlines]). Further on, we consider some blob with finite poloidal extent of order h at some plane. In reality the blob should diffuse along magnetic field lines and thus spread across many grid points of the neighbouring poloidal plane. For the naive scheme this does not cause any problems, since the discrete parallel diffusion operator is computed by just 'taking' values from neighbouring poloidal planes. However, in the support scheme a value is not only 'taken' but also 'sent' towards neighbouring poloidal planes. In other words, if the parallel gradient is computed via interpolation at the penetration points, grid points which lie in between might not be connected to the original points by the scheme. The blob does not spread properly across the grid points, but only diffuses to points which are connected by the scheme. Finally, erroneous wiggles arise in the neighbouring poloidal plane.

We define a criterion in order to exclude numerical artefacts arising from the map distortion: Starting with an initial square of lateral length h at some plane, the square encounters a distortion, as its edges are traced. Therefore, also the map of the square at the neighbouring poloidal plane is distorted (see fig. [\ref=fig_par_grad]b). Neglecting the weak variation of Btor, the area of the square is thereby conserved due to flux conservation. We can then distinguish two types of distortion [\cite=ribeiro:confmap10], a conformal where the square is stretched in one direction and squeezed in the other resulting in a quad with disparate lateral lengths, and an angular distortion where e.g. two angles become acute and the other two obtuse resulting in a parallelogram. We quantify the distortion by:

[formula]

The distortion decreases as the toroidal/axial resolution is increased, and a reasonable criterion is to require enough toroidal/axial resolution such that the mapped quad does not cover more than two squares in each direction within the neighbouring poloidal plane. Otherwise the map might jump across grid points. Applying this constraint, results in a threshold for the distortion (see fig. [\ref=fig_wiggle2d]b) of dc  ≤  4 and [formula], but we require for convenience the same threshold for both, i.e.:

[formula]

Another numerical artefact may arise, if for two neighbouring (perpendicular) points there is a jump in the points which are involved in the interpolation (see example in [\ref=app_inhom] around grid point i = I and equation ([\ref=model_dist_s1])). This may cause a small oscillation on the grid scale, which might be cured by adding a small amount of high order perpendicular diffusion.

Any problems related with a distortion of the map can be cured by using the integration method for the discrete parallel gradient (equation ([\ref=par_grad_coordfree])). With this scheme the information is spread properly across grid points in the neighbouring planes. In the illustration of fig. [\ref=fig_par_grad]b the mapped area is obtained by tracing only the four corners of the base square resulting in a quad as mapped area. However, if the map distortion becomes really strong even this might not suffice and a more detailed contour of the base square might have to be traced which would yield a polygon as mapped area. Problems related with a jump of the points which are involved in the interpolation are also resolved with the integration method (see [\ref=app_integration]). From a practical point of view the integration method might seem to be second choice compared to interpolation methods, since its implementation appears cumbersome though possible as will be shown with an example in section [\ref=sec_verifymapdistort] (figure [\ref=fig_wiggles]d). Nevertheless, it is presented here to show that even complicated cases with strong map distortion do not pose problems of principle to the support scheme. Moreover, there might be cases where its application might be necessary, if no sufficient toroidal resolution can be supplied to bring the distortion below the requested threshold given in ([\ref=map_distort_threshold]).

Benchmarks and examples

The numerical methods presented in section [\ref=sec_fieldlinemap] are implemented in the new code GRILLIX. In this section we present benchmarks, which shall show the validity of the field line map approach in general and GRILLIX in particular. As a model problem the parallel diffusion equation

[formula]

is considered. Space scales are normalised to R0 in toroidal geometries respectively Lax / 2π in axial geometries, where Lax is the axial periodicity length. Time is measured in [formula] respectively [formula].

Five possible discretisation schemes for the parallel diffusion operator are investigated:

N-1: Naive scheme with bilinear interpolation

N-3: Naive scheme with third order bipolynomial interpolation

S-3: Support scheme with bilinear interpolation

S-3: Support scheme with third order bipolynomial interpolation

S-C: Support scheme with integration method for parallel gradient

Each bilinear interpolation involves four grid points and each third order bipolynomial interpolation 16 grid points symmetrically arranged around the considered penetration point (see e.g. [\cite=press:numrec07]). For the S-C method the overlaps ΔA±i,j,n,m arising in the definition of the discrete parallel gradient (expression ([\ref=par_grad_coordfree])) are computed via the routine given in [\cite=zerzan:overlaproutine89].

Axial circular equilibria

For axial circular equilibria the problem ([\ref=pardiffeq]) can be solved analytically. We will consider in the following flux shells, i.e. radially bounded domains [formula], with [formula] a flux label. Without loss of generality, we consider only a single radial, poloidal and axial mode [formula] as initial state:

[formula]

with tan θ = y / x being the poloidal angle. The analytic solution is:

[formula]

with q(ρ) = Bz / Bθ the safety factor. A characteristic time for the decay of the mode is given by tm,n(ρ0) with [formula].

The benchmarks, presented in the following, were performed with ρmin = 0.1 and ρmax = 0.2. Since the goal is the investigation of the spatial discretisation error, time steps were chosen sufficiently small, such that the temporal discretisation error played always only a subdominant role. The numerical error will be quantified in the L2 norm:

[formula]

where the norm is computed on the discrete level as [formula] according to equation ([\ref=scalarprods]).

[formula] modes

Firstly, we consider modes which have a non-vanishing parallel wavevector [formula].

In the case of a pure axial magnetic field [formula] the penetration points coincide with grid points and the interpolation becomes exact. The discrete parallel diffusion operator reduces to the standard second order finite-difference expression for all schemes. Hence, this benchmark serves merely as a first basic test on the correctness of the implementation of the schemes in GRILLIX. Fig. [\ref=fig_qinfty] shows that the expected second order accuracy with axial (=parallel) resolution was obtained with GRILLIX.

If a finite safety factor q  ≠    ∞   is considered, the penetration points do in general not coincide with grid points any more, and the numerical error is dependent on the poloidal resolution h and the scheme. In fig. [\ref=fig_errsnaps] the difference between the numeric solution and the corresponding analytic solution is shown for various different schemes. The basic behaviour is consistent with the predictions from the two-dimensional model of section [\ref=sec_model2d] and [\ref=app_polint]. The overall error level is largest for the N-1 scheme of order [formula] (see equation ([\ref=taylor_naive_lin])), whereas the error level is lower of order [formula] for N-3 (see equation ([\ref=taylor_naive_pol])), S-1 (see equation ([\ref=taylor_supp_lin])) and S-3 (see equation ([\ref=taylor_supp_pol])). Significant errors arise at the radial boundaries of the domain. Though the parallel diffusion equation ([\ref=pardiffeq]) does not require radial boundary conditions, some assumption about the quantity must be made also outside the domain for the interpolation. Within GRILLIX it is implicitly assumed that u = 0 outside the domain. This results in radially discontinuous derivatives at the boundary, and therefore especially for higher order interpolations large errors arise close to it.

The numerical error in dependence on axial resolution for two fixed poloidal resolutions is shown in fig. [\ref=fig_numerr_npol]. For low axial resolutions the error follows a Δz2 law showing the second order accuracy of the schemes along magnetic field lines [formula]. For higher axial resolutions the error is dominated by the poloidal resolution h and deviates from the Δz2 line but increases. Again in agreement with the scaling derived from the two-dimensional model from section [\ref=sec_model2d] and [\ref=app_polint], the deviation occurs first for the N-1 scheme and occurs later for the other schemes. In fig. [\ref=fig_numerr_h] the error in dependence on the poloidal resolution for two fixed axial resolutions is shown. Again the convergence is slowest for the N-1 scheme, whereas the others exhibit similar convergence rates. Note that though the S-1 scheme is based only on bilinear interpolation, it seems to perform even slightly better than the N-3 scheme. All schemes converge to the same value of [formula] at Δz / 2π = 1 / 32 (fig. [\ref=fig_numerr_h]a) and [formula] at Δz / 2π = 1 / 64 (fig. [\ref=fig_numerr_h]b). These values are settled by axial resolution (see red stars in fig. [\ref=fig_numerr_npol]b).

[formula] structures

We consider an initial state which is Gaussian in the poloidal plane and a delta function in the axial direction, i.e.:

[formula]

where the delta function is modelled on the discrete level with a Kronecker delta [formula]. This structure diffuses along magnetic field lines until it has established a state with [formula], which should remain stable. In fig. [\ref=fig_blobdiff] the temporal evolution of such a Gaussian blob is shown computed with the N-1 and S-1 scheme. The example illustrates that after the structure has established a state in which [formula] at [formula], it remains stable for a long time with the support operator scheme, whereas it decays fast with the naive scheme due to numerical perpendicular diffusion.

Any decay of zonal modes [formula] arises from erroneous numerical perpendicular diffusion. The numerical diffusion can be quantified by estimating the decay rate of the L2-norm of zonal modes. In fig. [\ref=fig_numdecayperp]a the measured decay rate in dependence on the poloidal resolution of the zonal modes is plotted for fixed axial resolution. In fig. [\ref=fig_numdecayperp]b the numerical decay rate in dependence on the axial resolution for a fixed poloidal resolution of a zonal mode is plotted. Summarizing the numerical decay exponent scales like:

[formula]

These results confirm again the scalings of the two-dimensional model (see equations ([\ref=taylor_naive_lin]), ([\ref=taylor_supp_lin]), ([\ref=taylor_naive_pol]), ([\ref=taylor_supp_pol])). Only for the S-3 scheme a break in the scaling is observed, which arises from the boundaries, where the conditions for the interpolation become worse (It has also been observed that the numerical decay sets first in near the boundaries). The performed numerical measurements and the discussion of the two-dimensional model problem (see section [\ref=sec_model2d] and [\ref=app_polint]) may suggest the general rule that, if p is the order of the polynomial interpolation, the numerical decay exponent scales like:

[formula]

apart from effects introduced by the boundary, which introduce a break into the scaling at high poloidal resolutions. The investigation of numerical perpendicular diffusion for other interpolation techniques is left for future work.

Realistic toroidal geometry

We consider an equilibrium, which is an analytic solution to the Grad-Shafranov equation [\cite=mccarthy:equi99]. In order to prove the applicability of the scheme also to complicated and realistic tokamak geometries, we consider a flux shell in the edge (ρmin = 0.90, ρmax = 0.95, the normalized radial flux label is defined as [formula], where ψ0,  ψs the poloidal magnetic flux at the magnetic axis, respectively at the separatrix).

Verification of map distortion

To illustrate the effects of the map distortion on the schemes, we consider the diffusion of a Gaussian blob situated at the bottom of the flux shell in proximity to the X-point. In fig. [\ref=fig_wiggles]a,b snapshots are shown of solutions computed with the naive scheme N-3 and the support scheme S-3. The simulations were performed only with two poloidal planes Δφ / 2π = 1 / 2. On a coarse scale the blob appears at similar positions, but on a finer scale strong unphysical wiggles arise in the simulation performed with the support scheme. As discussed in section [\ref=sec_mapdistort], the erroneous wiggles are a result of the strong map distortion, which was dc = 44 and da = 138. These problems can be cured by requiring enough toroidal resolution, as shown in fig. [\ref=fig_wiggles]c where the simulation was repeated with a higher toroidal resolution of Δφ / 2π = 20. The distortion remained with values of dc = 1.7 and da = 1.9 well below the proposed threshold of 4 (see expressions ([\ref=map_distort_threshold])). The problems with the map distortion can also be cured via the integration method for the parallel gradient (equation ([\ref=par_grad_coordfree])). In fig. [\ref=fig_wiggles]d the same simulation was performed with again a low toroidal resolution of Δφ / 2π = 1 / 2, but with the S-C scheme. No erroneous wiggles but smooth structures arise.

The strongest map distortion occurs around the X-point. For the given equilibrium the mapped quads around the X-point for different toroidal resolutions are illustrated in fig. [\ref=fig_mapdistortx]a. For too low toroidal resolutions (blue) the mapped quads are strongly distorted and extend over many grid points. The quality of the grid would be much too poor for support schemes (interpolation based, i.e. S-1, S-3). At higher toroidal resolutions (green) the mapped quads are only weakly distorted and the support schemes would work well. In fig. [\ref=fig_mapdistortx]b the map distortion in dependence on toroidal resolution is plotted. A slightly higher toroidal resolution than Δφ / 2π = 1 / 16 would have to be used, to fulfil the proposed requirement ([\ref=map_distort_threshold]).

Convergence behaviour

For realistic geometry rigorous convergence checks -as it was done for axial circular geometry in section [\ref=sec_axialcircconverg]- are elaborate and computationally quite costly. Effects of a complex magnetic field structure on the schemes (map distortion) have been discussed in detail in section [\ref=sec_mapdistort] and have been verified in section [\ref=sec_verifymapdistort]. Therefore, only a rough convergence test for the schemes is presented here for realistic geometry.

For the diffusion of the Gaussian blob, which was presented in section [\ref=sec_verifymapdistort], a spatial resolution scan was performed. However, we only consider the obtained maximum value on plane φ  =  π at time t = 10.0, i.e.: [formula]. Effects of numerical diffusion will manifest themselves in a drop of this value. A reduction of the timestep below values where the temporal discretisation error would be negligible turned also out to be computationally to costly. Therefore, the timestep was held constant at [formula] regardless of spatial resolution, in order to obtain the behaviour of the spatial discretisation error.

In fig. [\ref=fig_blobconverg]a the convergence behaviour in dependence on toroidal resolution is shown. At low toroidal resolutions the support and the naive schemes yield different values, since the map distortion is above the requested threshold given in ([\ref=map_distort_threshold]) and unphysical wiggles arise with the S-1 and S-3 schemes. At higher toroidal resolutions [formula] the N-3, S-1 and S-3 schemes agree quite well, whereas the numerical perpendicular diffusion for the N-1 scheme is large which causes a decay of the blob. At the highest toroidal resolution Δφ / 2π = 1 / 64 the value drops slightly for the N-3 and S-1 schemes, which is an indication for numerical perpendicular diffusion. The convergence behaviour in dependence on poloidal resolution is shown in fig. [\ref=fig_blobconverg]b. It is apparent that the convergence for the N-1 scheme is slowest and could even not be achieved satisfactory with the available resolution, whereas N-3, S-1 and S-3 exhibit similar convergence rates. The naive scheme convergences against a slightly different value [formula] than the support schemes [formula]. The reason for this is that also slightly different operators are discretised with the naive scheme [formula] and the support schemes [formula].

Numerical diffusion

Performing a resolution scan of numerical decay rates for zonal modes is again computationally elaborate. Moreover, the points per radial wavelength of a zonal mode varies within the poloidal planes due to flux expansion. Therefore, we consider only a single example and investigate if the numerical decay rates for realistic geometry correspond with the results from section [\ref=sec_axialcircnumdiff] obtained in axial circular geometry.

We consider a zonal mode r = 2,  m = 0,  n = 0 and choose a resolution of [formula] and Δφ / 2π = 1 / 20. The poloidal resolution of the mode varies between [formula] at outboard midplane and [formula] at the bottom. From the scaling ([\ref=scaling_numdecay]) and the numerical measurement given in fig. [\ref=fig_numdecayperp]a we may expect decay exponents of:

[formula]

We measured in the realistic geometry numerical decay rates of around:

[formula]

which agrees with the estimates.

Conclusion and final remarks

In the field line map approach field/flux-aligned coordinates, which become singular on the separatrix/X-point, are avoided. The concept is based on a cylindrical grid, which is sparse in the toroidal direction, and a field line following discretisation for parallel operators to exploit the characteristic flute mode property of the solutions. The discretisation of perpendicular operators is straight forward and simple, whereas in the discretisation of parallel operators an interpolation (see equation ([\ref=par_grad_interpolation])) or integration (see equation ([\ref=par_grad_coordfree])) is involved. Although it is not discussed here, there is no obvious reason, why the developed methods could not easily be generalized also to three-dimensional equilibria, i.e. stellerators.

Two discretisation schemes for the parallel diffusion operator have been presented: A naive scheme, and a discretisation according to the support operator method, which conserves the self-adjointness property of the parallel diffusion operator on the discrete level. It has been shown in section [\ref=sec_model2d] with a two-dimensional model problem that the support schemes exhibit a lower (better scaling) numerical 'diffusion' (see equations ([\ref=taylor_naive_lin]) and ([\ref=taylor_supp_lin])). The effects of a strongly distorted map on the support scheme have been identified and verified. For interpolation based schemes (S-1 and S-3) a minimum toroidal resolution has to be supplied, to reduce the map distortion below the threshold given in expression ([\ref=map_distort_threshold]). The problems with distorted maps can also be cured via the integration method for the parallel gradient (S-C).

The numerical methods are implemented in the new code GRILLIX and extensive benchmarks, which show the validity of the field line map approach in general and GRILLIX in particular, were presented in section [\ref=sec_benchmarks]. Investigated were mainly the support and naive scheme each with a bilinear and a third order bipolynomial interpolation (N-1, N-3, S-1, S-3). Due to the interpolation, the convergence behaviour depends in general on the toroidal resolution Δφ and also the poloidal resolution h. In agreement with the two-dimensional model (see section [\ref=sec_model2d] and [\ref=app_polint]), the convergence rate with respect to the poloidal resolution is slowest for the N-1 scheme, whereas it is similar for the N-3, S-1 and S-3 scheme. Considering structures with [formula], a general scaling for their numerical decay rate is suggested in equation ([\ref=numdecay_general]). However, the presence of radial boundaries may introduce at high resolutions a break of this scaling for higher order interpolation methods.

The scalings were derived only from a two-dimensional model and rigorous benchmarks have only been performed for axial circular geometry. However, the suggested results and scalings seem to be applicable also to realistic geometry, as long as the map distortion is below the proposed threshold ([\ref=map_distort_threshold]), i.e. a sufficient toroidal resolution has to be supplied. As shown for example in section [\ref=sec_shapenumdiff], numerical decay rates can be estimated also for general geometry from the scalings ([\ref=numdecay_general]) and the numerical measurement shown in fig. [\ref=fig_numdecayperp].

From a practical point of view the S-3 scheme might be preferable, since it exhibits the lowest numerical diffusion among the presented methods. Even higher order interpolation methods (e.g. fifth order bipolynomial interpolation S-5) may be problematic, since their stencil can become large and they could cause unphysical oscillatory structures (Runge's phenomenon) especially near the radial boundaries. Although the implementation of the S-C scheme might seem cumbersome, its advantage is that any spurious effects arising from map distortion are absent. Future work might therefore address a combination of interpolation and integration, where the surface integral in equation ([\ref=coordfree_continuouslevel]) is executed by assuming interpolated polynomials as basis functions.

In future work an application of the developed methods to a simple plasma turbulence model will be presented.

Acknowledgements

The authors want to thank Markus Held and Matthias Wiesenberger from University of Innsbruck for contributing to this work with fruitful comments.

The research leading to these results has received funding from the European Research Council under the European Union’s Seventh Framework Programme (FP7/2007-2013)/ERC Grant Agreement No. 277870.

A part of this work was carried out using the HELIOS supercomputer system at Computational Simulation Centre of International Fusion Energy Research Centre (IFERC-CSC), Aomori, Japan, under the Broader Approach collaboration between Euratom and Japan, implemented by Fusion for Energy and JAEA.

Additional model problems

In this appendix additional two-dimensional model problems are discussed, where explicit expressions for the parallel diffusion operator are given.

As in the model problem of section [\ref=sec_model2d] x plays the role of a coordinate within poloidal planes and z the role of a periodic toroidal/axial coordinate. However, the magnetic field is assumed to be more general now:

[formula]

with Bx  ≪  B0. Again the domain is spanned by a regular grid xi,zk, with grid spacing h in the x-direction and grid spacing Δz in the z-direction. From each grid point xi,zk the penetration points at the planes [formula] are expressed via:

[formula]

where [formula], and 0  ≤  f±i < 1 a dimensionless quantity which expresses the displacement of the penetration points with respect to the grid. For simplicity, we assume in the following that the lengths along field lines and the flux box volumes are all equal, i.e. Δsi  =  Δs and ΔVi  =  ΔVi = hΔz.

Inhomogeneous magnetic field (Interpolation)

In section [\ref=sec_model2d] the case for constant displacement has been discussed, i.e. f±i = f = const.. We consider here the more general case where the displacement factors f±i vary. A linear interpolation is applied for the computation of the discrete parallel gradient.

[formula]

The expression for the discrete parallel diffusion according to the naive scheme is given in fig. [\ref=fig_model_inhom]a. The ' + ' and the ' - ' discretisation for the support scheme yield in general different expressions. In fig. [\ref=fig_model_inhom]b the expression for [formula] is given and in fig. [\ref=fig_model_inhom]c for [formula]. The given expressions are valid only for n±i = const. The final operator [formula] can be easily obtained as the average between both.

An interesting case to consider is Bx  =  αx (This mimics the situation at the X-point, where a convergent magnetic field in a third dimension By =  - αy would ensure [formula]). In the limit ε: = αΔz / B0  ≪  1 the penetration points are [formula], and the displacement factors can be obtained as (see fig. [\ref=fig_model_interpolchange]):

[formula]

where xI =  - h / 2. Note that there is a jump present in n±i at i = I. One may easily work out the expression for the discrete parallel diffusion operator. However, we give here only the result for a structure, which varies slowly in the x-direction, i.e. ui,k  =  ũk. The result for the naive scheme is:

[formula]

and for the support scheme:

[formula]

The first term represents the discrete analogue of [formula] and the second term [formula], since [formula]. Note that for i = I,I + 1 a small erroneous oscillation of size ε / 4 arises due to the jump in n±i. With the integration method for the discrete parallel gradient according to equation ([\ref=par_grad_coordfree]) this oscillation does not arise (see section [\ref=app_integration], equation ([\ref=model_dist_sc])).

Such an oscillation is also observed with GRILLIX (S-1 and S-3). In practice, as this oscillation remains on the grid scale as long as [formula], it can also be cured by applying additionally a small perpendicular high order diffusion.

Example for integration method

We use the integration method (equation ([\ref=par_grad_coordfree])) for the discretisation of the parallel gradient:

[formula]

We consider the same example as described in [\ref=app_inhom]. The surface overlaps are (see fig. [\ref=fig_model_coordfree]):

[formula]

One may again easily work out the expression for the discrete parallel diffusion operator, and we give again only the result for a structure which varies slowly in the x-direction i.e. ui,k  =  ũk.

[formula]

In contrast to expression ([\ref=model_dist_s1]) no oscillation around i = I is present.

Third order polynomial interpolation

We consider again a homogeneous magnetic field, i.e. n±i = 0,  f±i = f = const. but apply a third order polynomial interpolation for the computation of the quantity at the penetration points. The problem, which contains at least one inner grid point is a [formula] grid. The parallel gradient matrices are:

[formula]

with:

[formula]

The only inner point is i = 4, k = 2, which corresponds to the 11th row of the matrices [formula]. The discrete parallel diffusion operator for the naive scheme is shown in fig. [\ref=fig_modelpol]a and for the support scheme in fig. [\ref=fig_modelpol]b. Again, the stencil for the support scheme is bigger and if the penetration points coincide with grid points (f = 0,1) both schemes yield again the standard second order finite difference expression.

The action of the parallel gradient on a mode [formula] yields:

[formula]

[formula]

The error term [formula] arises in both schemes and represents the discretisation error in the parallel direction. This error could be eliminated by using a fourth order finite difference expression along magnetic field lines, where the stencil would cover also planes [formula]. Although expression ([\ref=taylor_supp_pol]) might suggest that the error for the support scheme scales with respect to poloidal resolution like [formula], it actually scales as the naive scheme also only like [formula], since the parallel discretisation error is also dependent on [formula], i.e.:

[formula]

which contains also terms [formula]. Therefore, for [formula] modes the schemes S-1, N-3 and S-3 exhibit the same scaling for the error with respect to poloidal resolution. However, only those terms where [formula] can not be factored out, represent a directional error and are responsible for numerical perpendicular 'diffusion'. Therefore, for the naive scheme the numerical perpendicular diffusion scales like [formula], whereas for the support scheme like [formula].