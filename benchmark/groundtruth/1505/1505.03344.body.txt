A Framework for Fast Face and Eye Detection

Introduction

Object detection such as face and eye detection is an important step in many vision based applications which may include video surveillance, tracking, medical analysis, facial expression analysis etc. Many researchers [\cite=viola2001rapid] [\cite=rowley1998neural] [\cite=yang1994human] [\cite=yang1996real] [\cite=yang2000face] [\cite=yow1997feature] [\cite=zhu2000fast] [\cite=jones2001rapid] [\cite=rowley1998neural] [\cite=ben2006fuzzy] [\cite=han2000fast] [\cite=hjelmaas2001face] [\cite=kong2007multi] [\cite=hsu2002face] have proposed different methods for detection of face. Among these methods, the use of Haar-like features [\cite=viola2001rapid] [\cite=jones2001rapid] [\cite=hjelmaas2001face] [\cite=kong2007multi] [\cite=hsu2002face] is found to be quite robust. However, the processing rate is found to be slow for applications requiring high frame rates of processing. The classifier based on Haar like features detects frontal faces accurately. Some applications require detection of faces even with small tilts. Several approaches [\cite=kong2007multi] [\cite=hsu2002face] [\cite=lienhart2002extended] [\cite=huang2007high] [\cite=mohanty2005designing] have been made to detect tilted faces. This paper discusses the improvements on the Haar-like features based method and their analysis. There are three basic contributions in this paper. Firstly, it analyses the change of processing speed with the down sampling scale factors (SF). Secondly, it analyses the change of accuracy of detection with different SF’s. Finally, an improvement of the algorithm is done by performing an affine transformation [\cite=mohanty2005designing] on the input image to detect tilted faces. The combined algorithm is implemented in a single board computer. This paper is organized as follow: Section 2 gives an introduction to face detection using Haar-like features and its modifications done to improve the robustness of the algorithm. Section 3 analyses the speed versus scale factor. In section 4, the accuracy versus scale factor is analysed. Section 5 discusses the results obtained in sections 3 and 4. Section 6 deals with the detection of tilted face using an affine transformation. Section 7 concludes the paper.

The Algorithm

Haar-like Features

Haar-like features [\cite=viola2001rapid] [\cite=jones2001rapid] are certain features in a digital image which are used in object detection. They are named so on account of their similarity with Haar wavelets. The Haar-like features are used in real-time object detection. The algorithm was first developed by Viola et. al. [\cite=viola2001rapid] [\cite=jones2001rapid] and was later extended by Lienhart et. al.[\cite=lienhart2002extended]. The algorithm [\cite=viola2001rapid] was found to achieve a 95% accuracy rate for the detection of a human face using only 200 simple features.

Speeding up Operation

In the original algorithm, the full resolution picture is examined to detect the face. Integral images [\cite=viola2001rapid] are used to calculate features rapidly in multi-resolutions. Once the integral images are computed, any one of these Haar-like features can be obtained at any scale or location in constant time. From this, it is obvious that after the integral image has been calculated, the time needed for Haar-like feature based detection is constant. So in order to speed up the detection time, the time taken for the calculation of the integral images must be minimized. The time taken, to calculate the integral image, increases with the size of the image. The image is down sampled to decrease the time taken. The number of pixels in the new image is now reduced. This improves the speed of detection of face. In order to detect the eyes, a region of interest (ROI) is selected from the face region detected in the down sampled image. The ROI must be at the same resolution as the image captured from camera to detect the eyes with maximum accuracy. This is achieved by remapping ROI co-ordinates to original image.

Remapping ROI Co-ordinates to Original Image

The original image is stored before it is down sampled. The coordinates of the ROI in the down sampled images are obtained, once the face detection is over. These are remapped on to the original image to obtain the ROI to detection of eyes. This method neither alters the detection rate of eyes nor the accuracy as compared to the original algorithm and at the same time, improves the processing speed up to 10 fps from 3 fps. Fig. [\ref=fig:roi_remap] describes the scheme of remapping of ROI.

Speed and Scale Factor Analysis

Experiment Design

We define the SF as follows:

[formula]

or

[formula]

For the analysis of speed versus SF, an experiment is conducted. Six subjects are chosen and videos of facial and non facial images are recorded under laboratory conditions and stored at 30 fps at a resolution of 640 x 480 pixels in .avi format. The incoming frame is down sampled by SF’s of 2, 4, 6, 8 and 10. The processing speed for each video is noted down. The processing is done in a computer having specifications of Intel dual core processor, of speed 2.00 GHz, 2 GB of DDR2 RAM. Fig. [\ref=fig:sample_image] shows some sample images extracted from the videos.

Results

Face and eyes are detected as the algorithm is run on the videos. Fig. [\ref=fig:detection_image] shows some face detection results. The average speed of all the subjects for each SF is plotted in Matlab against the different SF’s. Table [\ref=table:speed_sf] shows the readings of speed data obtained for each subject at different SF’s. Fig. [\ref=fig:speed_sf] shows the plot of average speed versus SF.

Accuracy and Scale Factor Analysis

Experiment Design

The accuracy of detection is analyzed by plotting ROC curves and then calculating the area under the curve (AUC). The same videos which were used for speed analysis are used for the analysis of accuracy vs. SF. First of all the frames are extracted as jpg image file using Free Video to JPEG Converter. Then, the images are manually marked to take into account the presence of face and eyes. A Matlab Graphical User Interface (GUI) is made to store the ground truth. Then the program for face and eye detection is run and the detection results are stored in another Excel sheet. The detection results are then compared with the ground truth to obtain the number of true positives (tp), false positives (fp), true negatives (tn) and false negatives (fn). The true positive rate (tpr) is calculated using

[formula]

The false positive rate (fpr) is calculated using

[formula]

Results

The plot of tpr vs fpr is called the ROC curve [\cite=fawcett2004roc]. The ROC curve for each SF is obtained. After obtaining the following observations, the graph of AUC versus SF is plotted using in Matlab. The accuracy [\cite=fawcett2004roc] of the classifier can be calculated as in equation [\ref=eq:accuracy]

[formula]

Where p is the number of positive images and n the number of negative images.

Discussions

The speed versus SF analysis reveals the fact that the speed of operation increases non-linearly with SF. This observation can be explained as follows. With down sampling of images, the number of pixels to be operated on reduces by a factor which is equal to the SF. This reduces the time needed to calculate the integral images. Once the integral images are computed, the time needed for Haar-like feature based detection at any scale and location is constant. Further, the number of sub windows to be searched is also reducing which in turn improves the speed even more. Hence, such an increase in speed is observed with increase in down sampling SF. The accuracy versus SF shows that the accuracy and AUC remains almost constant upto SF of 6 and then droops down up to an SF of 10 and saturates henceforth.

Tilted face detection using an affine tranformation

The original Haar cascade technique applied for face detection detects frontal faces only. If there is a moderate amount of tilt of face, it will not be detected. Consequently eyes will also be not detected in such frames. In some applications, tilted face detection is a desired condition and hence an approach for tilted face detection is a must. Several approaches [\cite=kong2007multi] [\cite=hsu2002face] [\cite=lienhart2002extended] [\cite=huang2007high] were made for such a purpose. We have adopted an affine transformation based method for the detection of tilted (in plane rotated) images. The rotation matrix can be found for an “n” dimensional image once its size, center and angle of rotation needed are known. This is appended along with down sampling to make a robust face detection algorithm. Fig. [\ref=fig:tilted_face] shows tilted face detection using an affine transformation. A detailed description of this algorithm can be found in our earlier works [\cite=dasgupta2013board] [\cite=dasgupta2013vision]. The algorithms hasbeen tested in KGP-NIR fac database [\cite=happy2012video].

Conclusion

This paper gives an analysis of the speed versus SF and accuracy versus SF. It is observed from the experiment and results that by down sampling up to an SF of 6, there is appreciable amount of increase in speed without much loss of accuracy which improves its real time performance. The method described in this paper can be used in applications to detect eyes along with face. By combining the use of affine transformation to detect tilted faces, the algorithm is made more robust with excellent real-time performance.

Acknowledgements

The authors would like to thank Mr. S. L. Happy who manually marked the image to find out the ground truth.